$(document).ready(function(){function fix_height(){var heightWithoutNavbar=$("body > #wrapper").height()-61;$(".sidebard-panel").css("min-height",heightWithoutNavbar+"px");var navbarHeigh=$("nav.navbar-default").height(),wrapperHeigh=$("#page-wrapper").height();navbarHeigh>wrapperHeigh&&$("#page-wrapper").css("min-height",navbarHeigh+"px"),navbarHeigh<wrapperHeigh&&$("#page-wrapper").css("min-height",$(window).height()+"px"),$("body").hasClass("fixed-nav")&&$("#page-wrapper").css("min-height",$(window).height()-60+"px")}$(window).bind("load resize scroll",function(){$("body").hasClass("body-small")||fix_height()}),setTimeout(function(){fix_height()})}),$(function(){$(window).bind("load resize",function(){$(this).width()<769?$("body").addClass("body-small"):$("body").removeClass("body-small")})}),function(angular){"use strict";angular.module("qsHub",["ui.router","ui.bootstrap","ngStorage","ngTable","ngResource","ui.gravatar","angular.filter","ngAnimate","toaster","daterangepicker","ngSanitize","ui.select","ngDropzone","ui.event","ui.map","summernote","ui.sortable","focus-if","bootstrapLightbox","ui.grid","ui.grid.pagination","ui.grid.selection","ui.grid.resizeColumns","ui.grid.draggable-rows","ui.grid.autoResize","ui.grid.exporter","ngTouch","qsHubTemplates","xdLocalStorage"])}(window.angular),function(angular){"use strict";var env="local",shared={globalAdminRole:"global_admin.global_admin",gridNameSpaces:{qsUserGridFilters:"qsUserGridFilters",schoolUserGridFilters:"schoolUserGridFilters",institutionsGridFilters:"institutionsGridFilters",tmDirectoryGridFilters:"tmDirectoryGridFilters",departmentsGridFilters:"departmentsGridFilters",departmentsOvGridFilters:"departmentsOvGridFilters",programsGridFilters:"programsGridFilters",programsOvGridFilters:"programsOvGridFilters",programsTmGridFilters:"programsTmGridFilters",contactsGridFilters:"contactsGridFilters",qsUserGridVisibility:"qsUserGridVisibility",schoolUserGridVisibility:"schoolUserGridVisibility",institutionsGridVisibility:"institutionsGridVisibility",departmentsGridVisibility:"departmentsGridVisibility",departmentsOvGridVisibility:"departmentsOvGridVisibility",programsGridVisibility:"programsGridVisibility",programsOvGridVisibility:"programsOvGridVisibility",programsTmGridVisibility:"programsTmGridVisibility",tmDirectoryGridVisibility:"tmDirectoryGridVisibility",contactsGridVisibility:"contactsGridVisibility"},coreFlag:{value:"session?url="},drupal:{tu:{url:"http://qs-hub-topu.pantheonsite.io"},tm:{url:"http://test-qs-platform.pantheonsite.io"}},customRole:"custom",events:{institutionTuProfileChanges:"institutionTuProfileChanges",institutionSharedProfileChanges:"institutionSharedProfileChanges",loadMoreHistoryLogs:"loadMoreHistoryLogs",logout:"logout",closingInstitutionsUsers:"closingInstitutionsUsers",institutionsUserPrimaryInstitutionChanges:"institutionsUserPrimaryInstitutionChanges"},publicPages:["/","/logout","/forgot-password"],profileTypes:{ug:"ug",pg:"pg",master:"master"},typeId:{topLevelInstitutionId:2,clientDepartmentId:3,simpleDepartmentId:5,advancedProgramId:7,internalId:1},airbrake:{enabled:!0,projectId:131822,key:"79104b307bdc43c018168ad3d715f57f"},urls:{core:"http://core.qs.com"},datagrid:{contacts:{defaultRowsNumber:25}},defaultClientPage:"/profiles/institution-details",noTuSubtypes:!1,support:{tu:"tusupport@qs.com",tm:"tmsupport@qs.com"},xStorage:{activeSource:"hub",allowedSources:["core"],keys:{source:"x-source",data:"x-currentUser",logout:"x-logout",sendToSession:"x-sendToSession"}},publishStatus:{pending:"pending",progress:"progress",success:"success",failure:"failure"}},constants={local:{api:{usersPermissions:{url:"http://users.qs-hub.local:8087"},institutions:{url:"http://institutions.qs-hub.local:8086"}},dev:!1,emails:{upgradeTu:"core.it@qs.com",upgradeTm:"core.it@qs.com"},webSockets:{host:"http://websocket",port:3e3},airbrake:{enabled:!1},urls:{core:"http://local.core.qs.com:8081"}},dev:{drupal:{tu:{url:"https://dev-topu.pantheonsite.io"},tm:{url:"https://test-qs-platform.pantheonsite.io"}},api:{usersPermissions:{url:"http://users.qs-hub.dev.qs.com"},institutions:{url:"http://institutions.qs-hub.dev.qs.com"}},dev:!1,emails:{upgradeTu:"tusupport@qs.com",upgradeTm:"tmsupport@qs.com"},webSockets:{host:"http://qs-hub-docker-dev.qs-aim.com",port:3e3},urls:{core:"http://staging.core.qs.com"}},dev2:{drupal:{tu:{url:"https://sprint-72-topu.pantheonsite.io"},tm:{url:"https://test-qs-platform.pantheonsite.io"}},api:{usersPermissions:{url:"http://users.qs-hub.dev2.qs.com"},institutions:{url:"http://institutions.qs-hub.dev2.qs.com"}},dev:!1,emails:{upgradeTu:"tusupport@qs.com",upgradeTm:"tmsupport@qs.com"},webSockets:{host:"http://qs-hub-docker-dev2.qs-aim.com",port:3e3},urls:{core:"http://staging.core.qs.com"}},qa_test:{drupal:{tu:{url:"https://qs-hub-topu.pantheonsite.io"},tm:{url:"https://test-qs-platform.pantheonsite.io"}},api:{usersPermissions:{url:"http://users.qs-hub.qa-test.qs.com"},institutions:{url:"http://institutions.qs-hub.qa-test.qs.com"}},dev:!1,emails:{upgradeTu:"tusupport@qs.com",upgradeTm:"tmsupport@qs.com"},webSockets:{host:"http://qs-hub-docker-qa-test.qs-aim.com",port:3e3},urls:{core:"http://qa-testing.core.qs.com"}},qa_prod:{drupal:{tu:{url:"https://sprint-73-topu.pantheonsite.io"},tm:{url:"https://dev-qs-platform.pantheonsite.io"}},api:{usersPermissions:{url:"https://users-qs-hub-qa-prod.qs.com"},institutions:{url:"https://institutions-qs-hub-qa-prod.qs.com"}},dev:!1,emails:{upgradeTu:"tusupport@qs.com",upgradeTm:"tmsupport@qs.com"},webSockets:{host:"https://websocket-qa-prod.qs.com",port:null},urls:{core:"http://qa-prod.core.qs.com"}},staging:{drupal:{tu:{url:"https://cf-test.topuniversities.com"},tm:{url:"https://test-qs-platform.pantheonsite.io"}},api:{usersPermissions:{url:"https://users-qs-hub-staging.qs.com"},institutions:{url:"https://institutions-qs-hub-staging.qs.com"}},dev:!1,emails:{upgradeTu:"tusupport@qs.com",upgradeTm:"tmsupport@qs.com"},webSockets:{host:"https://websocket-staging.qs.com",port:null},urls:{core:"http://qa-prod.core.qs.com"}},live:{drupal:{tu:{url:"https://www.topuniversities.com"},tm:{url:"https://www.topmba.com"}},api:{usersPermissions:{url:"https://users-qs-hub.qs.com"},institutions:{url:"https://institutions-qs-hub.qs.com"}},dev:!1,emails:{upgradeTu:"tusupport@qs.com",upgradeTm:"tmsupport@qs.com"},webSockets:{host:"https://websocket-qs-hub.qs.com",port:null},urls:{core:"http://core.qs.com"}}};if(window&&window.location&&window.location.hostname)switch(window.location.hostname){case"qs-hub.dev.qs.com":case"qs-hub-dev.qs.com":env="dev";break;case"qs-hub.dev2.qs.com":case"qs-hub-dev2.qs.com":env="dev2";break;case"qs-hub.qa-test.qs.com":case"qs-hub-qa-test.qs.com":env="qa_test";break;case"qs-hub.qa-prod.qs.com":case"qs-hub-qa-prod.qs.com":env="qa_prod";break;case"qs-hub.staging.qs.com":case"qs-hub-staging.qs.com":env="staging";break;case"qs-hub.qs.com":env="live"}shared.env=env,angular.module("qsHub").constant("constants",angular.extend(shared,constants[env]))}(window.angular),function(angular,Pace){"use strict";var App=App||{cancelMessage:"cancel",errors:{401:"Unauthorized",403:"Forbidden"},organisationId:0,services:{}};App.services.authInterceptor=function($q,$location,$localStorage){var service=this,url="";return service.lastError=null,service.request=function(config){return config.timeout||(config.cancel=$q.defer(),config.timeout=config.cancel.promise),config},service.resetUrl=function(){url="",service.lastError=null},service.hasErrors=function(){return!!service.lastError},service.getOrganisationId=function(){return App.organisationId},service.setOrganisationId=function(organisationId){(organisationId=parseInt(organisationId,10))&&!angular.equals(App.organisationId,organisationId)&&(App.organisationId=organisationId)},service.responseError=function(rejection){if(rejection.config.timeout.$$state.value!==App.cancelMessage&&401===rejection.status&&(!service.lastError||401!==service.lastError.status)){delete $localStorage.currentUser;var redirectUrl=decodeURIComponent($location.url()).replace("/?url=","");App.services.authInterceptor().setOrganisationId($location.search().coreId),url.length||(url=redirectUrl),$location.path("/").search({url:url}),$location.replace()}return void 0!==rejection.status&&-1===rejection.status||(service.lastError=rejection),$q.reject(rejection)},service},App.config=function($stateProvider,$urlRouterProvider,$httpProvider,ngTableFilterConfigProvider,gravatarServiceProvider,LightboxProvider){Pace&&(Pace.options.ajax.trackWebSockets=!1),$httpProvider.defaults.useXDomain=!0,$httpProvider.interceptors.push("authInterceptor"),$urlRouterProvider.otherwise("/dashboard"),$stateProvider.state("logout",{url:"/",templateUrl:"/scripts/layouts/login.html",data:{login:!0,page:"login"}}).state("forgot-password",{url:"/forgot-password",templateUrl:"/scripts/layouts/login.html",data:{login:!0,page:"forgot-password"}}).state("reset-password",{url:"/reset-password?id",templateUrl:"/scripts/layouts/login.html",data:{login:!0,page:"reset-password"},controller:function($scope,$stateParams){$scope.requestId=$stateParams.id}}).state("user",{url:"/profiles",abstract:!0,templateUrl:"scripts/layouts/main.html"}).state("user.my-profile",{url:"/profile",templateUrl:"scripts/components/profile/profileView.html",data:{pageTitle:"My Profile",label:"My Profile"}}).state("clients",{abstract:!0,templateUrl:"/scripts/layouts/main.html",data:{label:"Institutions"}}).state("clients.profiles",{url:"/profiles",abstract:!0,template:"<div ui-view></div>",data:{label:"Profiles"}}).state("clients.profiles.shared",{url:"/institution-details",templateUrl:"/scripts/components/profiles/shared/sharedProfileView.html",data:{pageTitle:"Institution Details",label:"Institution Details",name:"Profiles"}}).state("clients.profiles.tu",{url:"/topuniversities",templateUrl:"/scripts/components/profiles/tu/tuProfileView.html",data:{pageTitle:"Undergraduate / Postgraduate",label:"Undergraduate / Postgraduate",name:"TopUniversities"},resolve:{security:["TuProfileFactory",function(TuProfileFactory){TuProfileFactory.setIsDepartmentOverview(!1),TuProfileFactory.setIsProgramOverview(!1)}]}}).state("clients.profiles.tm",{url:"/topmba",templateUrl:"/scripts/components/profiles/tm/tmProfileView.html",data:{pageTitle:"MBA",label:"MBA",name:"TopMba"}}).state("clients.contacts",{url:"/contacts",templateUrl:"/scripts/components/contacts/contactsView.html",data:{pageTitle:"Contacts",label:"Contacts",name:"Contacts"},resolve:{security:["$q","UserFactory","AuthenticationService",function($q,UserFactory,AuthenticationService){return UserFactory.setData(AuthenticationService.getUserData()),UserFactory.hasData()?UserFactory.hasContactsAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}}).state("staff",{abstract:!0,templateUrl:"/scripts/layouts/main.html",data:{label:"QS Staff"}}).state("staff.dashboard",{url:"/dashboard",templateUrl:"/scripts/components/dashboard/admin/dashboardAdminView.html",data:{pageTitle:"QS Staff Dashboard",label:"QS Staff Dashboard"}}).state("staff.users",{url:"/users",abstract:!0,template:"<div ui-view></div>",data:{label:"Users & Permissions"}}).state("staff.users.qs",{url:"/qs",templateUrl:"/scripts/components/users/list/qs/qsUsersListView.html",data:{pageTitle:"QS Users List",label:"QS Users List",name:"QS Users"},resolve:{security:["$q","UserFactory","AuthenticationService",function($q,UserFactory,AuthenticationService){return UserFactory.setData(AuthenticationService.getUserData()),UserFactory.hasData()?UserFactory.hasQsUsersAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}}).state("staff.users.institutions",{url:"/institutions",templateUrl:"/scripts/components/users/list/institutions/institutionsUsersView.html",data:{pageTitle:"Institutions Users List",label:"Institutions Users List",name:"Institutions Users"},resolve:{security:["$q","UserFactory","AuthenticationService",function($q,UserFactory,AuthenticationService){return UserFactory.setData(AuthenticationService.getUserData()),UserFactory.hasData()?UserFactory.hasInstitutionsUsersAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}}).state("staff.institutions",{url:"/institutions",template:"<div ui-view></div>",data:{label:"Institutions"}}).state("staff.institutions.list",{url:"/institutions/list",templateUrl:"/scripts/components/institutions/list/institutionsListView.html",data:{pageTitle:"Institutions List",label:"Institutions List"},params:{coreId:null},resolve:{security:["$q","UserFactory","AuthenticationService",function($q,UserFactory,AuthenticationService){return UserFactory.setData(AuthenticationService.getUserData()),UserFactory.hasData()?UserFactory.hasInstitutionsListAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}}).state("staff.institutions.department",{url:"/department/overview",templateUrl:"/scripts/components/institutions/department/departmentOverview.html",data:{pageTitle:"Department Overview",label:"Department Overview"},params:{coreId:null,name:null},resolve:{security:["$q","UserFactory","AuthenticationService","TuProfileFactory",function($q,UserFactory,AuthenticationService,TuProfileFactory){return UserFactory.setData(AuthenticationService.getUserData()),TuProfileFactory.setIsDepartmentOverview(!0),UserFactory.hasDepartmentsOverviewAccess()?UserFactory.hasDepartmentsOverviewAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}}).state("staff.institutions.tu-programs",{url:"/institutions/tu-programs/overview",templateUrl:"scripts/components/institutions/tu-programs/institutionsTuProgramsView.html",data:{pageTitle:"TU Programs Overview",label:"TU Programs Overview"},resolve:{security:["$q","UserFactory","AuthenticationService","TuProfileFactory",function($q,UserFactory,AuthenticationService,TuProfileFactory){return UserFactory.setData(AuthenticationService.getUserData()),TuProfileFactory.setIsProgramOverview(!0),UserFactory.hasTuProgramsOverviewAccess()?UserFactory.hasTuProgramsOverviewAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}}).state("staff.tm-directory",{url:"/tm-directory",templateUrl:"/scripts/components/tmDirectory/tmDirectoryView.html",data:{pageTitle:"TM Directory",label:"TM Directory"},resolve:{security:["$q","UserFactory","AuthenticationService",function($q,UserFactory,AuthenticationService){return UserFactory.setData(AuthenticationService.getUserData()),UserFactory.hasData()?UserFactory.hasTmDirectoryAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}}).state("staff.master-password",{url:"/master-password",templateUrl:"/scripts/components/master-password/masterPasswordView.html",data:{pageTitle:"Master Password",label:"Master Password",name:"Master Password"},resolve:{security:["$q","UserFactory","AuthenticationService",function($q,UserFactory,AuthenticationService){return UserFactory.setData(AuthenticationService.getUserData()),UserFactory.hasData()?UserFactory.hasMasterPasswordAccess()?void 0:$q.reject(App.errors[403]):$q.reject(App.errors[401])}]}});var filterAliasUrls={"date-range-picker":"/scripts/shared/ng-table/filters/dateRangeFilter.html"};ngTableFilterConfigProvider.setConfig({aliasUrls:filterAliasUrls}),gravatarServiceProvider.protocol="https",gravatarServiceProvider.defaults={default:"mm"},LightboxProvider.templateUrl="/scripts/shared/modal/modalTemplate.html"},App.run=function($rootScope,$state,$http,$location,$localStorage,$window,constants,AuthenticationService,$timeout){var dataLayer=$window.dataLayer=$window.dataLayer||[];$rootScope.$state=$state,$localStorage.currentUser&&AuthenticationService.setAuthorizationHeader($localStorage.currentUser.token),$rootScope.$on("$stateChangeStart",function(event){if($window.localStorage[constants.xStorage.keys.logout]&&-1!==constants.xStorage.allowedSources.indexOf($window.localStorage[constants.xStorage.keys.logout]))return event.preventDefault(),AuthenticationService.logout(),$state.go("logout"),!1;if($window.localStorage[constants.xStorage.keys.data]&&$window.localStorage[constants.xStorage.keys.source]&&-1!==constants.xStorage.allowedSources.indexOf($window.localStorage[constants.xStorage.keys.source])&&!AuthenticationService.hasUserData()){var userData;try{userData=angular.fromJson($window.localStorage[constants.xStorage.keys.data])}catch(e){return AuthenticationService.logout(),!1}AuthenticationService.setUserData(userData.userData),AuthenticationService.setData(userData)}$window.localStorage[constants.xStorage.keys.sendToSession]&&"true"===$window.localStorage[constants.xStorage.keys.sendToSession]&&($window.localStorage[constants.xStorage.keys.sendToSession]="false")}),$rootScope.$on("$stateChangeSuccess",function(){dataLayer.push({event:"ngRouteChange",attributes:{route:$location.path()}});var restrictedPage=-1===AuthenticationService.getPublicPages().indexOf($location.path()),isClientPage=$state.includes("clients")||$state.includes("user");if(App.services.authInterceptor().setOrganisationId($location.search().coreId),restrictedPage&&!$localStorage.currentUser){var redirectUrl=$location.url();$location.path("/").search({url:redirectUrl}),$location.replace(),$http.pendingRequests.forEach(function(pendingRequest){pendingRequest.cancel&&pendingRequest.cancel.resolve(App.cancelMessage)})}else if(!isClientPage&&$localStorage.currentUser&&$localStorage.currentUser.info.isClient&&"/"!==$location.path())$location.path(constants.defaultClientPage).search({coreId:App.services.authInterceptor().getOrganisationId()?App.services.authInterceptor().getOrganisationId():$localStorage.currentUser.info.primaryInstitution}),$location.replace();else if($localStorage.currentUser&&$localStorage.currentUser.info.isClient){var hasAccessTo=$localStorage.currentUser.info.institutions;if($localStorage.currentUser.info.primaryInstitution&&-1===hasAccessTo.indexOf(parseInt($localStorage.currentUser.info.primaryInstitution,10))&&hasAccessTo.push(parseInt($localStorage.currentUser.info.primaryInstitution,10)),-1===hasAccessTo.indexOf(parseInt($localStorage.currentInstitutionId,10))&&!$localStorage.currentUser.info.passwordReset){var userHasAccessTo=!1;"/"!==$location.path()&&(userHasAccessTo=-1!==$localStorage.currentUser.info.accessTo.indexOf($state.current.name.replace("clients.","")));var path=userHasAccessTo?$location.path():constants.defaultClientPage;$location.path(path).search({coreId:$localStorage.currentUser.info.primaryInstitution}),$location.replace()}}}),$rootScope.$on("$stateChangeError",function(e,toState,toParams,fromState,fromParams,error){error===App.errors[401]&&(AuthenticationService.logout(),$state.go("logout")),error===App.errors[403]&&$state.go("staff.dashboard")})},angular.module("qsHub").service("authInterceptor",["$q","$location","$localStorage",App.services.authInterceptor]).config(App.config).run(App.run,["$rootScope","$state","$http","$location","$localStorage","$window","constants","AuthenticationService","$timeout"])}(window.angular,window.Pace),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.pageTitle=function($rootScope,$timeout){return{restrict:"A",link:function(scope,element){var listener=function(event,toState,toParams,fromState,fromParams){var title="QS Hub";toState.data&&toState.data.pageTitle&&(title+=" | "+toState.data.pageTitle),$timeout(function(){element.text(title)})};$rootScope.$on("$stateChangeStart",listener)}}},App.directives.iCheckbox=function($parse){return{restrict:"A",require:"ngModel",link:function($scope,element,$attrs,ngModel){var value=$attrs.value;return $scope.$watch($attrs.ngModel,function(){$(element).iCheck("update")}),$(element).iCheck({checkboxClass:"icheckbox_square-green",radioClass:"iradio_square-green"}).on("ifChanged",function(event){if("checkbox"===$(element).attr("type")&&$attrs.ngModel&&$scope.$apply(function(){return ngModel.$setViewValue(event.target.checked)}),"radio"===$(element).attr("type")&&$attrs.ngModel)return $scope.$apply(function(){return ngModel.$setViewValue(value)})})}}},App.directives.touchSpin=function(){return{restrict:"A",scope:{spinOptions:"="},link:function(scope,element,attrs){scope.$watch(scope.spinOptions,function(){render()});var render=function(){$(element).TouchSpin(scope.spinOptions)}}}},App.directives.iboxTools=function($timeout){return{restrict:"C",scope:!0,link:function($scope,$element,$attrs){var show=[],id=$attrs.id||null;$scope.$watch($attrs.expand,function(expand){id&&(show[id]=expand,expand&&$scope.showHide())}),$scope.showHide=function(){var ibox=$element.closest("div.ibox"),icon=$element.find("i:first"),content=ibox.find("div.ibox-content");$attrs.expand&&show[id]?(content.slideDown(200),icon.addClass("fa-chevron-up").removeClass("fa-chevron-down"),ibox.toggleClass("").addClass("border-bottom")):(content.slideToggle(200),icon.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),ibox.toggleClass("").toggleClass("border-bottom")),$timeout(function(){ibox.resize(),ibox.find("[id^=map-]").resize()},50)},$scope.closebox=function(){$element.closest("div.ibox").remove()}}}},App.directives.toggleClassOnClick=function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(){element.toggleClass(attrs.toggleClassOnClick)})}}},App.directives.sparkline=function(){return{restrict:"A",scope:{sparkData:"=",sparkOptions:"="},link:function(scope,element,attrs){scope.$watch(scope.sparkData,function(){render()}),scope.$watch(scope.sparkOptions,function(){render()});var render=function(){$(element).sparkline(scope.sparkData,scope.sparkOptions)}}}},App.directives.currentDate=function($filter){return{restrict:"A",link:function($scope,$element,$attrs){$element.text($filter("date")(new Date,$attrs.currentDate))}}},App.directives.fixedElementWhileScrolling=function(){return{restrict:"A",link:function($scope,$element,$attrs){function handleVisibiliyChanges(elementHeight){$(window).scroll(handleWindowScroll),centerElement()}function handleWindowScroll(){centerElement()}function centerElement(){var targetHeight=angular.element(document.querySelector($attrs.fixedElementWhileScrolling)).height(),elementHeight=$element.height(),windowScroll=$(window).scrollTop(),windowHeight=$(window).height(),targetElementTopOffset=$($attrs.fixedElementWhileScrolling).offset()?$($attrs.fixedElementWhileScrolling).offset().top:0,marginTop=windowScroll>windowHeight?(windowHeight-elementHeight)/2+windowScroll-targetElementTopOffset:(windowHeight-targetElementTopOffset-elementHeight)/2+windowScroll;$(window).width()<768?(marginTop<0||targetHeight===elementHeight||targetHeight<elementHeight+marginTop)&&(marginTop=0):(targetHeight<elementHeight+marginTop&&(marginTop=targetHeight-elementHeight),(marginTop<0||targetHeight===elementHeight)&&(marginTop=0)),$($element).stop().animate({top:marginTop+"px"},"slow")}$scope.$watchCollection(function(){return $element.height()},handleVisibiliyChanges)}}},App.directives.convertToNumber=function(){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$parsers.push(function(val){return parseInt(val,10)}),ngModel.$formatters.push(function(val){return""+val})}}},App.directives.waveSpinner=function(){return{restrict:"A",template:' <div class="sk-spinner sk-spinner-wave"><div class="sk-rect1"></div>&nbsp;<div class="sk-rect2"></div>&nbsp;<div class="sk-rect3"></div>&nbsp;<div class="sk-rect4"></div>&nbsp;<div class="sk-rect5"></div></div>'}},App.directives.customPopover=function($animateCss){return{restrict:"A",link:function(scope,el,attrs){$(el).popover({trigger:attrs.popoverTrigger||"hover focus",html:!0,content:attrs.popoverHtml,container:attrs.popoverContainer||"",placement:attrs.popoverPlacement}),scope.$watch(function(){return attrs.popoverVisibility},function(newValue,oldValue){newValue!==oldValue&&("true"===newValue?($(el).popover("show"),el.next("div").addClass("animated fadeInDown"),el.next("div").css("top","0px")):$(el).popover("hide"))})}}},App.directives.switch=function(){return{restrict:"AE",replace:!0,transclude:!0,template:function(element,attrs){var html="";return html+="<span",html+=' class="switch'+(attrs.class?" "+attrs.class:"")+'"',html+=attrs.ngModel?' ng-click="'+attrs.ngDisabled+" ? "+attrs.ngModel+" : "+attrs.ngModel+"=!"+attrs.ngModel+(attrs.ngChange?"; "+attrs.ngChange+'()"':'"'):"",html+=' ng-class="{checked:'+attrs.ngModel+", disabled:"+attrs.ngDisabled+' }"',html+=">",html+="<small></small>",html+='<input type="checkbox"',html+=attrs.id?' id="'+attrs.id+'"':"",html+=attrs.name?' name="'+attrs.name+'"':"",html+=attrs.ngModel?' ng-model="'+attrs.ngModel+'"':"",html+=attrs.ngModel?' ng-change="'+attrs.ngChange+'"':"",html+=attrs.ngDisabled?' ng-disabled="'+attrs.ngDisabled+'"':"",html+=' style="display:none" />',html+='<span class="switch-text">',html+=attrs.on?'<span class="on">'+attrs.on+"</span>":"",html+=attrs.off?'<span class="off">'+attrs.off+"</span>":" ",html+="</span>"}}},App.directives.includeReplace=function(){return{require:"ngInclude",restrict:"A",link:function(scope,el,attrs){el.replaceWith(el.children())}}},App.directives.upgradeBanner=function(){return{restrict:"A",scope:{upgradeEmail:"@",basicProfile:"&",upgradeClick:"&",infoBlockClass:"=",buttonsBlockClass:"="},template:'<div class="alert alert-success" ng-if="basicProfile()"><div class="row"><div ng-class="getInfoBlockClass()" ><span class="block m-t-xs"><i class="fa fa-star"></i><span>To edit the information below, please upgrade to an Advanced </span><span>profile by contacting: <strong>{{upgradeEmail}}</strong></span></span></div><div ng-class="getButtonsBlockClass()"><a class="btn btn-primary btn-sm btn-block" ng-click="upgradeClick()"><i class="fa fa-star"></i><span>Upgrade now</span></a></div></div></div>',link:function(scope){scope.getInfoBlockClass=function(){if(scope.infoBlockClass)return scope.infoBlockClass},scope.getButtonsBlockClass=function(){if(scope.buttonsBlockClass)return scope.buttonsBlockClass}}}},App.directives.datagridTotals=function(){return{restrict:"A",scope:{tableParams:"=datagridTotals"},template:"{{ tableParams.count() > tableParams.total() ? tableParams.total() : tableParams.count() }} of {{ tableParams.total() }} entries"}},App.directives.verifyPassword=function(){return{require:"ngModel",link:function(scope,elem,attrs,ctrl){var password="#"+attrs.verifyPassword;elem.add(password).on("keyup",function(){scope.$apply(function(){var isEmpty=""===$(password).val(),invalidLen=!isEmpty&&($(password).val().length<8||$(password).val().length>20);ctrl.$setValidity("isEmpty",!isEmpty),ctrl.$setValidity("invalidLen",!invalidLen),ctrl.$setValidity("pwmatch",elem.val()===$(password).val())})})}}},angular.module("qsHub").directive("pageTitle",App.directives.pageTitle).directive("toggleClassOnClick",App.directives.toggleClassOnClick).directive("iCheckbox",App.directives.iCheckbox).directive("sparkline",App.directives.sparkline).directive("fixedElementWhileScrolling",App.directives.fixedElementWhileScrolling).directive("currentDate",App.directives.currentDate).directive("iboxTools",App.directives.iboxTools).directive("convertToNumber",App.directives.convertToNumber).directive("touchSpin",App.directives.touchSpin).directive("waveSpinner",App.directives.waveSpinner).directive("switch",App.directives.switch).directive("includeReplace",App.directives.includeReplace).directive("customPopover",App.directives.customPopover).directive("datagridTotals",App.directives.datagridTotals).directive("verifyPassword",App.directives.verifyPassword).directive("upgradeBanner",App.directives.upgradeBanner)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{filters:{}})).filters.htmlToPlaintext=function(){return function(text){return text=text&&text.length?String(text).replace(/(\r)?\n/g,"").replace(/<[^>]+>/gm,""):""}},App.filters.boolToText=function(){return function(text,options){for(var option in options)if(options[option].value===text)return options[option].label}},App.filters.campusArrayToText=function(){return function(campusArray,options){var campuses=[];if(campusArray.length)for(var key in options)-1===campusArray.indexOf(options[key].value)||campuses.push(options[key].label);return campuses.join(", ")}},App.filters.dotToDash=function(){return function(input){return input.toString().split(".").join("-")}},angular.module("qsHub").filter("htmlToPlaintext",App.filters.htmlToPlaintext).filter("boolToText",App.filters.boolToText).filter("campusArrayToText",App.filters.campusArrayToText).filter("dotToDash",App.filters.dotToDash)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.Notifier=function(toaster){return{show:function(type,body,title,sticky,id){var notification={type:type,body:body,showCloseButton:!0};title&&(notification.title=title),id&&(notification.id=id),sticky&&(notification.timeout=0,notification.extendedTimeOut=0),toaster.pop(notification)}}},App.factories.TuProfile=function(){var data={},program={},profileTabs={overview:0,subjects:1,programs:2,media:3,publish:4,departments:5},programBeforeChanges={},departments={},videos=null,upgradeFormVisible=!1,historyLogVisible=!1,programAddFormVisible=!1,programEditFormVisible=!1,departmentAddFormVisible=!1,departmentEditFormVisible=!1,newProgram=!1,triggerResetProgramForm=!1,department={},departmentBeforeChanges={},isDepartmentNameUpdated=!1,newDepartment=!1,selectedMediaTabId=null,selectedTabId=null,availableSubjects={},isProgramUpdated=!1,updateDepartmentsGrid=!1,rowSelected=!1,activeOverviewSubTabs={master:!0,ug:!1,pg:!1},clientDepartmentUpgradeFormVisible=!1,isDepartmentOverview=!1,isProgramOverview=!1,closeSidebars=function(){upgradeFormVisible=!1,historyLogVisible=!1,programAddFormVisible=!1,programEditFormVisible=!1,departmentAddFormVisible=!1,departmentEditFormVisible=!1,clientDepartmentUpgradeFormVisible=!1,newProgram=null,newDepartment=null,resetProgramForm()},resetProgramForm=function(){triggerResetProgramForm=!triggerResetProgramForm};return{closeSidebars:closeSidebars,resetProgramForm:resetProgramForm,getProfileTabs:function(){return profileTabs},getData:function(){return data},setData:function(newData){data=newData},reset:function(){data={},department={},program={},availableSubjects={},newDepartment=!1,newProgram=!1,selectedMediaTabId=null,selectedTabId=null,closeSidebars()},getId:function(){return null!==data&&data.id||""},getProgram:function(){return program},setProgram:function(selectedProgram){program=selectedProgram},getIsDepartmentOverview:function(){return isDepartmentOverview},setIsDepartmentOverview:function(newValue){isDepartmentOverview=newValue},getIsProgramOverview:function(){return isProgramOverview},setIsProgramOverview:function(newValue){isProgramOverview=newValue},getProgramId:function(){return program&&program.id?program.id:null},IsResetProgramForm:function(){return triggerResetProgramForm},isHistoryLogVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.overview&&historyLogVisible)},setHistoryLogVisibility:function(visibility){void 0===visibility&&(visibility=!historyLogVisible),historyLogVisible=visibility,upgradeFormVisible=!1,programEditFormVisible=!1,programAddFormVisible=!1,departmentEditFormVisible=!1,departmentAddFormVisible=!1,clientDepartmentUpgradeFormVisible=!1},isUpgradeFormVisible:function(activeTab){return void 0!==activeTab&&((activeTab===profileTabs.overview||activeTab===profileTabs.programs||activeTab===profileTabs.media||activeTab===profileTabs.departments)&&upgradeFormVisible)},setUpgradeFormVisibility:function(visibility){void 0===visibility&&(visibility=!upgradeFormVisible),upgradeFormVisible=visibility,historyLogVisible=!1,programEditFormVisible=!1,programAddFormVisible=!1,departmentEditFormVisible=!1,departmentAddFormVisible=!1,clientDepartmentUpgradeFormVisible=!1},isProgramAddFormVisible:function(activeTab){return void 0!==activeTab&&(resetProgramForm(),activeTab===profileTabs.programs&&programAddFormVisible)},setProgramAddFormVisibility:function(visibility){void 0===visibility&&(visibility=!programAddFormVisible),programAddFormVisible=visibility,historyLogVisible=!1,programEditFormVisible=!1,upgradeFormVisible=!1,departmentEditFormVisible=!1,departmentAddFormVisible=!1,clientDepartmentUpgradeFormVisible=!1},isProgramEditFormVisible:function(activeTab){return void 0!==activeTab&&(resetProgramForm(),activeTab===profileTabs.programs&&programEditFormVisible)},setProgramEditFormVisibility:function(visibility){void 0===visibility&&(visibility=!programEditFormVisible),programEditFormVisible=visibility,historyLogVisible=!1,programAddFormVisible=!1,upgradeFormVisible=!1,departmentEditFormVisible=!1,departmentAddFormVisible=!1,clientDepartmentUpgradeFormVisible=!1},isClientDepartmentUpgradeFormVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.departments&&clientDepartmentUpgradeFormVisible)},setClientDepartmentUpgradeFormVisibility:function(visibility){void 0===visibility&&(visibility=!clientDepartmentUpgradeFormVisible),clientDepartmentUpgradeFormVisible=visibility,historyLogVisible=!1,programAddFormVisible=!1,upgradeFormVisible=!1,departmentEditFormVisible=!1,departmentAddFormVisible=!1,programEditFormVisible=!1},isDepartmentAddFormVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.departments&&departmentAddFormVisible)},setDepartmentAddFormVisibility:function(visibility){void 0===visibility&&(visibility=!departmentAddFormVisible),departmentAddFormVisible=visibility,upgradeFormVisible=!1,historyLogVisible=!1,programEditFormVisible=!1,programAddFormVisible=!1,departmentEditFormVisible=!1,clientDepartmentUpgradeFormVisible=!1},isDepartmentEditFormVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.departments&&departmentEditFormVisible)},setDepartmentEditFormVisibility:function(visibility){void 0===visibility&&(visibility=!departmentEditFormVisible),departmentEditFormVisible=visibility,upgradeFormVisible=!1,historyLogVisible=!1,programEditFormVisible=!1,programAddFormVisible=!1,departmentAddFormVisible=!1,clientDepartmentUpgradeFormVisible=!1},setIsDepartmentRowSelected:function(value){rowSelected=value},getIsDepartmentRowSelected:function(){return rowSelected},announceNewProgram:function(newProgramId){newProgram=newProgramId},hasNewProgram:function(){return newProgram},setProgramBeforeChanges:function(programInstance){programBeforeChanges=programInstance},getProgramBeforeChanges:function(){return programBeforeChanges},getDepartment:function(){return department},setDepartment:function(selectedDepartment){department=selectedDepartment},getDepartmentId:function(){return department&&department.id?department.id:null},setIsDepartmentUpdated:function(newValue){isDepartmentNameUpdated=newValue},getIsDepartmentUpdated:function(){return isDepartmentNameUpdated},announceNewDepartment:function(newDepartmentId){newDepartment=newDepartmentId},hasNewDepartment:function(){return newDepartment},setDepartmentBeforeChanges:function(departmentInstance){departmentBeforeChanges=departmentInstance},getDepartmentBeforeChanges:function(){return departmentBeforeChanges},getDepartments:function(){return departments},setDepartments:function(departmentsList){departments=departmentsList},getSelectedMediaTabId:function(){return selectedMediaTabId},setSelectedMediaTabId:function(newSelectedMediaTabId){selectedMediaTabId=newSelectedMediaTabId},setSelectedTabId:function(newSelectedTabId){selectedTabId=newSelectedTabId},getSelectedTabId:function(){return selectedTabId},isOverviewTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.overview},isDepartmentsTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.departments},isSubjectsTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.subjects},isProgramsTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.programs},isMediaTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.media},setMediaVideos:function(NewVideos){videos=NewVideos},getMediaVideos:function(){return videos},isPublishTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.publish},setAvailableSubjects:function(newSubjects){availableSubjects=newSubjects},getAvailableSubjects:function(){return availableSubjects},setActiveOverviewSubTabs:function(newSubTabs){angular.isDefined(newSubTabs)&&(angular.equals(0,newSubTabs)&&(activeOverviewSubTabs.master=!0,activeOverviewSubTabs.ug=!1,activeOverviewSubTabs.pg=!1),angular.equals(1,newSubTabs)&&(activeOverviewSubTabs.master=!1,activeOverviewSubTabs.ug=!0,activeOverviewSubTabs.pg=!1),angular.equals(2,newSubTabs)&&(activeOverviewSubTabs.master=!1,activeOverviewSubTabs.ug=!1,activeOverviewSubTabs.pg=!0))},getActiveOverviewSubTabs:function(){return activeOverviewSubTabs},setUpdateProgramGrid:function(newValue){isProgramUpdated=newValue},getUpdateProgramGrid:function(){return isProgramUpdated},setUpdateDepartmentsGrid:function(newValue){updateDepartmentsGrid=newValue},getUpdateDepartmentsGrid:function(){return updateDepartmentsGrid},isProgramsAlphabeticalOrder:function(){return data&&data.programsAlphabeticalOrder}}},App.factories.SharedProfile=function(){var data={},SharedProfileTabs={general:0,campuses:1},loadInProgress=!1,hasCampusesChanges=!1,campusFormVisible=!1,campusAddFormVisible=!1,campusEditFormVisible=!1,editMode=null,selectedTabId=null,campus={},rootShowCampusInfoBlock=null,columns={},mapUpdateRequest=null,loadMoreInProgress=!1,limit=1;return{getData:function(){return data},setData:function(newData){data=newData},getActiveTabs:function(){return SharedProfileTabs},closeSidebars:function(){campusFormVisible=!1,campusAddFormVisible=!1,campusEditFormVisible=!1},isCampusFormVisible:function(){return campusFormVisible},isCampusEditForm:function(){return editMode},setCampusFormVisibility:function(visibility){campusFormVisible=visibility&&!campusFormVisible},setCampusAddFormVisibility:function(visibility){editMode=!1,campusEditFormVisible&&(campusEditFormVisible=!1,visibility=!0),campusAddFormVisible=visibility||!campusAddFormVisible,campusFormVisible=visibility||!campusFormVisible},setCampusEditFormVisibility:function(visibility){editMode=!0,campusAddFormVisible&&(campusAddFormVisible=!1,visibility=!0),campusEditFormVisible=visibility||!campusAddFormVisible,campusAddFormVisible=!1,campusFormVisible=visibility||!campusFormVisible},getCampus:function(){return campus},setCampus:function(newData){campus=newData},getInstitutionListShowCampusInfoBlock:function(){return rootShowCampusInfoBlock},setInstitutionListShowCampusInfoBlock:function(showCampusInfoBlock){rootShowCampusInfoBlock=showCampusInfoBlock},setColumns:function(setColumns){columns=setColumns},getColumns:function(){return columns},announceCampusesChanges:function(campusId){hasCampusesChanges=campusId=campusId||!0},hasCampusesChanges:function(){var hasChanges=angular.copy(hasCampusesChanges);return hasCampusesChanges&&(hasCampusesChanges=!1),hasChanges},loadInProgress:function(){return loadInProgress},setLoadInProgress:function(status){loadInProgress=status},getId:function(){return data.id||""},setSelectedTabId:function(newSelectedTabId){selectedTabId=newSelectedTabId},hasSelectedTab:function(){return null!==selectedTabId},isCampusesTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===SharedProfileTabs.campuses},isGeneralTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===SharedProfileTabs.general},mapUpdateRequest:function(){return mapUpdateRequest},setMapUpdateRequest:function(value){mapUpdateRequest=value},setLogLimit:function(logLimit){(!logLimit||logLimit<1||void 0===logLimit)&&(logLimit=1),limit=logLimit},getLogLimit:function(){return limit},isLoadMoreInProgress:function(){return loadMoreInProgress},setLoadMoreInProgress:function(status){loadMoreInProgress=status}}},App.factories.Institution=function(TimeService){var defaultData={},departmentOverview={institutionId:null,data:{}},data=defaultData,isSubscriptionTabActive=!1,tuProgramsOverview={institutionId:null},isProfileAdvanced=function(subscriptions,profile){var isAdvanced=!1,subsProfile="tu"===profile?subscriptions.tu:subscriptions.tm;if(subsProfile&&!(isAdvanced=subsProfile.advanced&&subsProfile.active)){var today=TimeService.getMiliSeconds(TimeService.now()),weekLater=TimeService.getMiliSeconds(TimeService.add(7,"days"));if(subsProfile.startDate>today&&subsProfile.endDate>subsProfile.startDate){var result=weekLater-subsProfile.startDate,range=weekLater-today;result>=0&&result<=range&&(isAdvanced=!0)}}return isAdvanced};return{getData:function(){return data},isDepartmentsAlphabeticalOrder:function(){return data&&data.departmentsAlphabeticalOrder},isEmpty:function(){return!data||angular.equals(data,defaultData)},setCampuses:function(campuses){data.campus=campuses},addCampus:function(campus){data||(data=angular.copy(defaultData)),data.campus||(data.campus=[]),data.campus.push(campus)},getCampusData:function(){return data&&data.campus||[]},setData:function(newData){data=newData},setSubscriptions:function(newData){data.subscriptions=newData},getSubscriptions:function(){return data&&data.hasOwnProperty("subscriptions")?data.subscriptions:null},getCoreId:function(){return data&&data.coreId?parseInt(data.coreId,10):null},getDisplayName:function(){return data&&data.name?data.name:""},getId:function(){return data&&data.id?data.id:""},getParentCoreId:function(){return data&&data.parentCoreId?parseInt(data.parentCoreId,10):null},getDefaultCoreId:function(){return 700},isTuAdvanced:function(){return data&&data.subscriptions?isProfileAdvanced(data.subscriptions,"tu"):null},isTmAdvanced:function(){return data&&data.subscriptions?isProfileAdvanced(data.subscriptions,"tm"):null},isTuSubscribed:function(){return data&&data.subscriptions&&data.subscriptions.tu&&data.subscriptions.tu.subscribed},isTuEnabled:function(){return data&&data.enabled?data.enabled.tu:null},isUgEnabled:function(){return data&&data.enabled?data.enabled.ug:null},isPgEnabled:function(){return data&&data.enabled?data.enabled.pg:null},isTmSubscribed:function(){return data&&data.subscriptions&&data.subscriptions.tm&&data.subscriptions.tm.subscribed},isTmEnabled:function(){return data&&data.enabled?data.enabled.tm:null},isClientDepartment:function(){return data&&3===parseInt(data.typeId,10)},isAdvancedProgram:function(){return data&&7===parseInt(data.typeId,10)},hasNoDepartments:function(){return!(!data||!data.hasNoDepartments)&&data.hasNoDepartments},getCampuses:function(){return data&&data.campus?data.campus:[]},isActive:function(){return data?data.active&&("undefined"===data.deleted||!data.deleted):null},getInstitutionIdTuProgramsOverview:function(){return tuProgramsOverview.institutionId},setInstitutionIdTuProgramsOverview:function(institutionId){tuProgramsOverview.institutionId=institutionId||null},setDataDepartmentOverview:function(data){departmentOverview.data=data},getDataDepartmentOverview:function(){return departmentOverview.data},getCampusDataDepartmentOverview:function(){return departmentOverview.data&&departmentOverview.data.campus||[]},getInstitutionIdDepartmentOverview:function(){return departmentOverview.institutionId},setInstitutionIdDepartmentOverview:function(institutionId){departmentOverview.institutionId=institutionId||null},resetDepartmentOverview:function(){departmentOverview={institutionId:null,data:{}}},setActiveTab:function(active){isSubscriptionTabActive=active},getActiveTab:function(){return isSubscriptionTabActive}}},App.factories.User=function(DataHandlerFactory){var data={},handles={"clients.profiles.shared":"profiles.institution_details","clients.profiles.tu":"profiles.tu","clients.profiles.tm":"profiles.tm","clients.statistics":"statistics.statistics","staff.users.qs":"users.qs_users","staff.users.institutions":"users.schools_users","staff.institutions.list":"institutions.list","staff.master-password":"master_password.master_password","staff.tm-directory":"tm_directory.tm_directory"},defaultPages=["user.my-profile"];return{getData:function(){return data},setData:function(newData){data=newData},isClient:function(){return!(!data||!data.isClient)},hasData:function(){return!(angular.equals(data,{})||angular.equals(data,null))},getFullName:function(){return data&&data.fullName?data.fullName:null},getFirstName:function(){return data&&data.firstName?data.firstName:null},getLastName:function(){return data&&data.lastName?data.lastName:null},setFullName:function(fullName){data.fullName=fullName},setFirstName:function(firstName){data.firstName=firstName},setLastName:function(lastName){data.lastName=lastName},setTitle:function(title){data.title=title},setPhone:function(phone){data.phone=phone},setPosition:function(position){data.position=position},getUserName:function(){return data&&data.userName?data.userName:null},getProfileLogo:function(){return data&&data.profileLogo?data.profileLogo:""},setProfileLogo:function(profileLogo){data.profileLogo=profileLogo},getPrimaryInstitutionCoreId:function(){return data&&data.primaryInstitution?data.primaryInstitution:0},getPosition:function(){return data&&data.position?data.position:null},isTuEnabled:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("profiles.tu")},hasTuProgramsOverviewAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("institutions.tu_programs_overview")},hasDepartmentsOverviewAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("institutions.department_overview")},hasTmDirectoryAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("tm_directory.tm_directory")},hasMasterPasswordAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("master_password.master_password")},hasContactsAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("contacts.contacts")},hasInstitutionsListAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("institutions.list")},hasQsUsersAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("users.qs_users")},hasInstitutionsUsersAccess:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("users.schools_users")},isTmEnabled:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("profiles.tm")},getAllowedInstitutions:function(){return data&&data.institutions?data.institutions:[]},isAllowedToLogin:function(institutionCoreId){var allowed=this.getAllowedInstitutions();return this.getPrimaryInstitutionCoreId()&&-1===allowed.indexOf(parseInt(institutionCoreId,10))&&allowed.push(parseInt(this.getPrimaryInstitutionCoreId(),10)),-1!==allowed.indexOf(parseInt(institutionCoreId,10))},hasAccess:function(){return data&&data.accessTo&&angular.isObject(data.accessTo)&&!angular.equals({},data.accessTo)&&!angular.equals([],data.accessTo)},userHasAccessToPage:function(page){return data.accessTo&&-1!==data.accessTo.indexOf(page)},noAccess:function(page){return this.isClient()&&-1===defaultPages.indexOf(page)&&!this.userHasAccessToPage(this.getHandles()[page])},hasAccessToInstitutionDetails:function(){return data&&data.accessTo&&-1!==data.accessTo.indexOf("profiles.institution_details")},getFirstAllowedState:function(subscriptionsPrimaryInstitution){var firstAllowedState="/";if(this.hasAccess()){var notImplementedAccessTo=["dashboard.dashboard","contact_us.contact_us","faq.faq","messages.messages"],result=DataHandlerFactory.getDiffArray(data.accessTo,notImplementedAccessTo).sort(),bestStateForUser=this.getBestStateForUser(subscriptionsPrimaryInstitution,result);angular.forEach(handles,function(value,key){angular.equals(bestStateForUser,value)&&(firstAllowedState=key)})}return firstAllowedState},getBestStateForUser:function(subscriptions,states){for(var hasTu=angular.isDefined(subscriptions.tu)&&subscriptions.tu.active,hasTm=angular.isDefined(subscriptions.tm)&&subscriptions.tm.active,i=0;i<states.length;i++){if(-1!==states[i].indexOf("tu")&&hasTu)return states[i];if(-1!==states[i].indexOf("tm")&&hasTm)return states[i]}return states[0]},getHandles:function(){return handles},isPasswordReset:function(){return!(!data||!data.passwordReset)},clearPasswordReset:function(){data.passwordReset=!1}}},App.factories.TuProfileHistoryLog=function(){var data={},limit=1,profileType=null,inProgress=!1,loadMoreInProgress=!1,reload=!1,isAdvanced=!1,triggeredBy=null;return{getData:function(){return data},setData:function(newData){data=newData},setLogLimit:function(logLimit){(!logLimit||logLimit<1||void 0===logLimit)&&(logLimit=1),limit=logLimit},getLogLimit:function(){return limit},setProfileType:function(newProfileType){profileType=newProfileType},getProfileType:function(){return profileType},isInProgress:function(){return inProgress},setInProgress:function(status){inProgress=status},isLoadMoreInProgress:function(){return loadMoreInProgress},setLoadMoreInProgress:function(status){loadMoreInProgress=status},isVisible:function(){return!1},setTriggeredBy:function(trigger){triggeredBy=trigger},shouldBeVisible:function(trigger){return triggeredBy!==trigger||(triggeredBy=null,!1)},resetTriggeredBy:function(){triggeredBy=""},setAdvanced:function(advanced){isAdvanced=advanced},isAdvanced:function(){return isAdvanced},setReload:function(triggerReload){reload=triggerReload},isReloadRequired:function(){return reload}}},App.factories.MapInitializer=function($window,$q){var loaded=!1,mapsDefer=$q.defer(),asyncLoad=function(asyncUrl,callbackName){if(!loaded){var script=document.createElement("script");script.src=asyncUrl+callbackName,document.body.appendChild(script)}};return $window.googleMapsInitialized=function(){mapsDefer.resolve(),loaded=!0},{initStart:function(){asyncLoad("https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyDN-E7GkRH050mItjaG6s2XIsDmi1OUsYg&callback=","googleMapsInitialized")},mapsInitialized:mapsDefer.promise}},App.factories.DataHandler=function(){return{objectToArray:function(obj){var result=obj;return angular.isArray(obj)||(result=[],angular.forEach(obj,function(val){result.push(val)})),result},getDiffArray:function(array1,array2){return array1.filter(function(value){for(var i=0;i<=array2.length;i++)if(value===array2[i])return!1;return!0})}}},angular.module("qsHub").factory("NotifierFactory",["toaster",App.factories.Notifier]).factory("InstitutionFactory",["TimeService",App.factories.Institution]).factory("UserFactory",["DataHandlerFactory",App.factories.User]).factory("TuProfileFactory",[App.factories.TuProfile]).factory("SharedProfileFactory",[App.factories.SharedProfile]).factory("TuProfileHistoryLogFactory",[App.factories.TuProfileHistoryLog]).factory("MapInitializerFactory",["$window","$q",App.factories.MapInitializer]).factory("DataHandlerFactory",[App.factories.DataHandler])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.InstitutionsService=function($resource,$log,constants,RequestsQueueService){var service={};return service.getInstitutionListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/all/:id",null,{get:{isArray:!1,cancellable:!0}})},service.getInstitutionData=function(coreId,columnsToFetch){if(!coreId)return!1;var queueName="getInstitutionData",filters={"filter[coreId]":coreId=parseInt(coreId,10),limit:1};columnsToFetch&&columnsToFetch.length&&(filters["columns[]"]=columnsToFetch),queueName+=angular.toJson(filters),RequestsQueueService.cancelAll(queueName);var Api=service.getInstitutionListModel().get(filters);return RequestsQueueService.add(Api,queueName),Api.$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service},App.services.RequestsQueue=function(){var queue=[];this.add=function(request,queueName){queue[queueName=queueName||"default"]||(queue[queueName]=[]),queue[queueName].push(request)},this.cancelAll=function(queueName){if(queueName=queueName||"default",!queue[queueName])return!1;queue[queueName].forEach(function(request){request.$cancelRequest()}),delete queue[queueName]}},angular.module("qsHub").service("InstitutionsService",["$resource","$log","constants","RequestsQueueService",App.services.InstitutionsService]).service("RequestsQueueService",[App.services.RequestsQueue])}(window.angular),function(angular){"use strict";angular.module("qsHub").constant("version",.32)}(window.angular),function(angular){"use strict";angular.module("qsHub").constant("CROSS_DOMAIN_IFRAME_URL","/bower_components/xdLocalStorage/app/views/cross-domain-local-storage.html")}(window.angular),function(angular){"use strict";angular.module("qsHubTemplates",[]).run(["$templateCache",function($templateCache){$templateCache.put("/scripts/components/contacts/contactsView.html",'<div class="page-contacts" ng-controller="ContactsListController as ContactsListController">\n    <div ng-include src="\'/scripts/components/contacts/institutionsUsersListCloneView.html\'"></div>\n</div>'),$templateCache.put("/scripts/components/contacts/institutionsUsersListCloneView.html",'<div class="wrapper wrapper-content animated fadeInRight page-institutions-users-list" ng-controller="InstitutionsUsersListCloneController as UsersList">\n    <div class="alert alert-info">\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>QS Staff have access to this section only</span>\n            <span ng-if="!UsersList.hasWriteAccess">. You don\'t have permissions to make changes.</span>\n        </p>\n    </div>\n    <p>\n        <button type="button" class="btn btn-primary"\n                ng-click="UsersList.handleAddInstitutionsUserClick()"\n                ng-disabled="!UsersList.hasWriteAccess">\n            <i class="fa fa-user-plus"></i>\n            Add User\n        </button>\n    </p>\n    <div class="row">\n        <div id="schoolUsersTable" ng-class="showInfoBlock ? \'col-sm-3 hide-ng-table-pager\' : \'col-sm-12\'">\n            <div class="ibox float-e-margins">\n                <div class="ibox-content table-responsive">\n                    <div wave-spinner class="wave-spinner" ng-show="UsersList.isDatagridReloading || !UsersList.isDatagridRendered"></div>\n\n                    <div class="full-width scroll-horizontal hide-vertical-overflow" mouse-scroll-horizontal>\n                        <div ng-if="UsersList.showDatagrid" ng-class="{\'modal-overlay-35\': UsersList.isDatagridReloading}">\n                            <ui-grid-info ng-if="!showInfoBlock"></ui-grid-info>\n                            <div class="grid"\n                                 ui-grid="UsersList.grid.options"\n                                 ui-grid-pagination\n                                 ui-grid-selection\n                                 ui-grid-resize-columns\n                                 ui-grid-auto-resize></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div fixed-element-while-scrolling="#schoolUsersTable" ng-show="showInfoBlock" class="col-sm-9 scroll-floating-element">\n            <div class="ibox block-user">\n                <div class="ibox-content">\n                    <div class="ibox-tools">\n                        <a class="close-link" ng-click="UsersList.handleEditCloseClick()">\n                            <i class="fa fa-times"></i>\n                        </a>\n                    </div>\n\n                    <div class="tab-content">\n                        <div class="tab-pane active">\n\n                            <div class="row m-b-lg" ng-show="user.id">\n                                <div class="col-lg-4 text-center">\n                                    <div class="m-b-sm">\n                                        <img alt="image" class="img-circle" gravatar-src="user.email" gravatar-size="100">\n                                    </div>\n                                    <div class="m-b-sm">\n                                    </div>\n                                </div>\n                                <div class="col-lg-8">\n                                    <h2>\n                                        {{user.fullname}}\n                                    </h2>\n                                    <a href="mailto:{{user.email}}" class="btn btn-primary btn-sm" ng-class="{disabled: !UsersList.hasWriteAccess}">\n                                        <i class="fa fa-envelope"></i> Send Email\n                                    </a>\n                                    <a class="btn btn-warning btn-sm"\n                                       ng-show="!user.active"\n                                       ng-click="handleActivateClick(user)"\n                                       ng-class="{\'disabled\':activateInProgress || !UsersList.hasWriteAccess}">\n                                        <i class="fa fa-undo"></i> Activate\n                                    </a>\n                                    <a class="btn btn-danger btn-sm"\n                                       ng-show="user.active"\n                                       ng-click="handleDeactivateClick(user)"\n                                       ng-class="{\'disabled\':deactivateInProgress || !UsersList.hasWriteAccess}">\n                                        <i class="fa fa-ban"></i> Deactivate\n                                    </a>\n                                </div>\n                            </div>\n\n                            <div class="client-detail">\n                                <div class="full-height-scroll">\n                                    <div class="row">\n                                        <div class="col-lg-12">\n                                            <div class="tabs-container">\n                                                <uib-tabset active="activeTab">\n                                                    <uib-tab heading="Personal details" disable="disabledInstitutionsUserListSubTabs[\'personalDetails\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/institutions/personal-details/institutionsUsersListPersonalDetailsView.html\'"></div>\n                                                    </uib-tab>\n                                                    <uib-tab heading="Permissions" disable="disabledInstitutionsUserListSubTabs[\'permissions\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/institutions/permissions/institutionsUsersListPermissionsView.html\'"></div>\n                                                    </uib-tab>\n                                                    <uib-tab heading="Institutions" disable="disabledInstitutionsUserListSubTabs[\'institutions\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/institutions/institutions/institutionsUsersListInstitutionsView.html\'"></div>\n                                                    </uib-tab>\n                                                </uib-tabset>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <pre ng-show="UsersList.devMode">{{user|json}}</pre>\n</div>\n'),$templateCache.put("/scripts/components/dashboard/admin/dashboardAdminView.html",'<div class="admin-dashboard wrapper wrapper-content" ng-controller="AdminDashboardController as AdminDashboard">\n    <div class="row">\n        <div class="col-lg-6">\n            <div class="ibox">\n                <div class="ibox-title">\n                    <h5>You have access to the following institutions</h5>\n                    <div class="ibox-tools">\n                        <a ng-click="showHide()" class="collapse-link">\n                            <i class="fa fa-chevron-up"></i>\n                        </a>\n                    </div>\n                </div>\n                <div class="ibox-content">\n                    <ul class="list-group clear-list m-t">\n                        <li class="list-group-item fist-item">\n                            All institutions\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div class="col-lg-6">\n            <div class="ibox">\n                <div class="ibox-title">\n                    <h5>Your roles are</h5>\n                    <div class="ibox-tools">\n                        <a ng-click="showHide()" class="collapse-link">\n                            <i class="fa fa-chevron-up"></i>\n                        </a>\n                    </div>\n                </div>\n                <div class="ibox-content">\n                    <ul class="list-group clear-list m-t">\n                        <li ng-if="!userRoles.length" class="list-group-item fist-item">\n                            None\n                        </li>\n                        <li ng-if="userRoles.length" class="list-group-item" ng-class="{\'fist-item\': key === 0}" ng-repeat="(key,role) in userRoles">\n                            {{role}}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n'),$templateCache.put("/scripts/components/institutions/department/departmentOverview.html",'<div  class="wrapper wrapper-content animated fadeInRight page-institution" ng-controller="DepartmentOverviewController as DepartmentOverviewController">\n    <div class="row">\n        <div id="departmentOverview" ng-class="DepartmentOverviewController.isRightSidePanelActive() ? \'col-sm-8\' : \'col-sm-12\'">\n            \x3c!-- SECTION --\x3e\n            <div class="section">\n              \x3c!-- SECTION HEADER --\x3e\n              <div class="section-header">\n                \x3c!-- Institution switch for QS users --\x3e\n                <div class="search-dropdown pull-left">\n                    <ui-select\n                        ng-model="DepartmentOverviewController.institution.selected"\n                        theme="bootstrap"\n                        ng-change="DepartmentOverviewController.handleSearchInstitutionClick(DepartmentOverviewController.institution.selected)">\n                        <ui-select-match placeholder="Institution search...">\n                            <i class="fa fa-building"></i>\n                            <span>{{$select.selected.name}}</span>\n                        </ui-select-match>\n                        <ui-select-choices\n                          refresh-delay="500"\n                          refresh="DepartmentOverviewController.searchInstitution($select.search)"\n                          position="down"\n                          repeat="option in DepartmentOverviewController.institutionsList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                    </ui-select>\n                    <div class="spinner" ng-show="DepartmentOverviewController.searchInProgress" wave-spinner></div>\n                </div>\n\n                <button class="btn btn-primary pull-right"\n                        ng-disabled="DepartmentOverviewController.isAddButtonDisabled()"\n                        ng-click="handleAddDepartmentClick()">\n                    <i class="fa fa-plus"></i>\n                    <span>Add Department</span>\n                </button>\n              </div>\x3c!-- /SECTION HEADER --\x3e\n\n              \x3c!-- SECTION BODY --\x3e\n              <div class="section-body">\n                <div id="departmentsTable" ng-class="{\'locked\': !DepartmentOverviewController.isInstitutionSelected()}">\n                    <div wave-spinner class="wave-spinner" ng-show="DepartmentOverviewController.isDatagridReloading || !isDatagridRendered"></div>\n\n                    <div ng-if="!DepartmentOverviewController.isDatagridReloading && gridOptions">\n                        <ui-grid-info ng-if="!DepartmentOverviewController.isRightSidePanelActive()"></ui-grid-info>\n                        <div class="grid"\n                           ui-grid="gridOptions"\n                           ui-grid-draggable-rows\n                           ui-grid-selection\n                           ui-grid-resize-columns\n                           ui-grid-auto-resize>\n                        </div>\n                    </div>\n                </div>\n              </div>\x3c!-- /SECTION BODY --\x3e\n            </div>\x3c!-- /SECTION --\x3e\n        </div>\n\n        <div id="departmentOverviewForm">\n          <div ng-show="showDepartmentEditForm || showDepartmentAddForm"\n            id="departmentBlockPanel"\n            fixed-element-while-scrolling="#departmentsTable"\n            class="col-sm-4"\n            ng-controller="DepartmentOverviewFormController as DepartmentFormController">\n            <div class="department-form" ng-show="showDepartmentEditForm" ng-include src="\'/scripts/components/profiles/tu/departments/tuProfileEditDepartmentFormView.html\'"></div>\n            <div class="department-form" ng-show="showDepartmentAddForm" ng-include src="\'/scripts/components/profiles/tu/departments/tuProfileAddDepartmentFormView.html\'"></div>\n          </div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/institutions/list/datagrid/rowTemplate.html",'<div grid="grid">\n    <div class="ui-grid-cell pointer"\n        ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name"\n        ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader, \'active\': row.entity.id == grid.appScope.selectedInstitutionId }"\n        role="{{col.isRowHeader ? \'rowheader\' : \'gridcell\'}}"\n        ui-grid-cell>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/institutions/list/datagrid/selectCellTemplate.html",'<div class="ui-grid-cell-contents">{{COL_FIELD CUSTOM_FILTERS | boolToText:col.filter.selectOptions}}</div>\n'),$templateCache.put("/scripts/components/institutions/list/institutionsListView.html",'<div class="wrapper wrapper-content animated fadeInRight page-institution-list" ng-controller="InstitutionsListController as InstitutionsController">\n\n    <p>\n        <button type="button" class="btn btn-primary"\n                ng-click="InstitutionsController.handleAddInstitutionClick()"\n                ng-class="{\'modal-overlay-35\': !isDatagridRendered}">\n            <i class="fa fa-building-o"></i>\n            Add Institution\n        </button>\n    </p>\n\n    <div class="row">\n        <div id="institutionsTable" ng-class="showInfoBlock ? \'col-sm-3 col-xs-4 hide-ng-table-pager\' : \'col-sm-12\'">\n            <div class="ibox float-e-margins">\n                <div class="ibox-content">\n                    <div wave-spinner class="wave-spinner" ng-show="isDatagridReloading || !isDatagridRendered"></div>\n\n                    <div ng-if="!isDatagridReloading && gridOptions">\n                        <ui-grid-info ng-if="!showInfoBlock"></ui-grid-info>\n                        <div class="grid"\n                             ui-grid="gridOptions"\n                             ui-grid-selection\n                             ui-grid-resize-columns\n                             ui-grid-auto-resize\n                             ui-grid-cellnav\n                             ui-grid-pagination></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div fixed-element-while-scrolling="#institutionsTable" ng-show="showInfoBlock" class="col-sm-9 col-xs-8">\n            <div class="ibox block-institution">\n                <div class="ibox-content">\n                    <div class="ibox-tools">\n                        <a class="close-link" ng-click="InstitutionsController.handleEditCloseClick()">\n                            <i class="fa fa-times"></i>\n                        </a>\n                    </div>\n                    <div class="tab-content">\n                        <div class="tab-pane active">\n                            <div class="row m-b-lg" ng-show="institution.id">\n                                <div class="col-lg-12">\n                                    <h2>\n                                        {{institutionBeforeChanges.name}}\n                                    </h2>\n\n                                    <a ng-show="!institution.active" ng-click="handleActivateClick(institution)" class="btn btn-warning btn-sm pull-left m-b-xs" ng-class="{\'disabled\':activateInProgress}">\n                                        <i class="fa fa-undo"></i> Activate\n                                    </a>\n\n                                    <a ng-show="institution.active" ng-click="handleDeactivateClick(institution)" class="btn btn-danger btn-sm pull-left m-b-xs" ng-class="{\'disabled\':deactivateInProgress}">\n                                        <i class="fa fa-ban"></i> Deactivate\n                                    </a>\n\n                                    <a class="btn btn-default btn-sm pull-left m-b-xs" ng-click="handleResetClick(institution)">\n                                        <i class="fa fa-refresh"></i> Reset unsaved changes\n                                    </a>\n\n                                    <a ng-if="allowLoginAs()" class="btn btn-default btn-sm pull-left m-b-xs" ng-click="handleLoginAsClick()">\n                                        <i class="fa fa-sign-in"></i> Login as institution\n                                    </a>\n\n                                    <a class="btn btn-default btn-sm pull-left m-b-xs"\n                                       uib-popover="{{InstitutionsController.downgradeProgramTooltipText()}}"\n                                       popover-placement="bottom"\n                                       popover-enable="isProgramDowngradeDisabled"\n                                       popover-trigger="\'mouseenter\'"\n                                       ng-if="InstitutionsController.allowProgramDowngrade()"\n                                       ng-click="!isProgramDowngradeDisabled && InstitutionsController.handleProgramDowngradeClick($event)"\n                                       ng-disabled="isProgramDowngradeDisabled">\n                                        <i class="fa fa-arrow-circle-o-down"></i> Downgrade to Basic Program\n                                    </a>\n\n                                    <a class="btn btn-default btn-sm pull-left m-b-xs"\n                                       ng-if="InstitutionsController.isSimple"\n                                       ng-disabled="InstitutionsController.isUpgradeButtonDisabled()"\n                                       ng-click="!InstitutionsController.isUpgradeButtonDisabled() &&InstitutionsController.handleUpgradeClick()"\n\n                                       uib-popover="Mandatory fields must be entered first to upgrade."\n                                       popover-placement="bottom"\n                                       popover-enable="InstitutionsController.isUpgradeButtonDisabled()"\n                                       popover-trigger="\'mouseenter\'">\n                                        <i class="fa fa-arrow-circle-o-up"></i> Upgrade to Client Department\n                                    </a>\n\n                                    <a class="btn btn-default btn-sm pull-left m-b-xs"\n                                       ng-if="InstitutionsController.isClient"\n                                       ng-disabled="InstitutionsController.isClientDepartmentDowngradeDisabled()"\n                                       ng-click="!InstitutionsController.isClientDepartmentDowngradeDisabled() && InstitutionsController.handleDowngradeClick()"\n\n                                       uib-popover="Unable to downgrade due to current TU/TM subscription."\n                                       popover-placement="bottom"\n                                       popover-enable="InstitutionsController.isClientDepartmentDowngradeDisabled()"\n                                       popover-trigger="\'mouseenter\'">\n                                        <i class="fa fa-arrow-circle-o-down"></i> Downgrade to Simple Department\n                                    </a>\n\n\n                                    <a class="btn pull-left btn-default btn-sm m-b-xs" target="_blank"\n                                       ng-href="{{InstitutionsController.isViewTuSiteEnabled() ? InstitutionsController.urls.tu + institution.nids.master : \'\'}}"\n                                       ng-if="InstitutionsController.allowViewTuSite()"\n                                       ng-disabled="!InstitutionsController.isViewTuSiteEnabled()"\n\n                                       uib-popover="{{institution.nids.master ? \'Display on topuniversities.com is disabled under Subscriptions tab.\' : \'Please publish TU profiles first\'}}"\n                                       popover-placement="bottom"\n                                       popover-enable="!InstitutionsController.isViewTuSiteEnabled()"\n                                       popover-trigger="\'mouseenter\'">\n                                        <i class="fa fa-share"></i> View TU Site\n                                    </a>\n\n                                    <a class="btn pull-left btn-default btn-sm m-b-xs" target="_blank"\n                                       ng-if="InstitutionsController.allowViewTmSite()"\n                                       ng-href="{{InstitutionsController.allowViewTmSiteButtonEnabled() ? InstitutionsController.urls.tm + institution.nids.tm : \'\'}}"\n                                       ng-disabled="!InstitutionsController.allowViewTmSiteButtonEnabled()"\n\n                                       uib-popover="{{institution.nids.master ? \'Display on topmba.com  is disabled under Subscriptions tab.\' : \'Please publish TM profile first\'}}"\n                                       popover-placement="bottom"\n                                       popover-enable="!InstitutionsController.allowViewTmSiteButtonEnabled()"\n                                       popover-trigger="\'mouseenter\'">\n                                        <i class="fa fa-share"></i> View TM Site\n                                    </a>\n                                    \n                                    <button ng-if="InstitutionsController.isAdvancedProgram || InstitutionsController.isTopLevelInstitution(institution.typeId)"\n                                       class="btn btn-default btn-sm"\n                                       ui-sref="staff.institutions.department({coreId: institution.coreId, name: institution.name})"\n                                       ng-disabled="!InstitutionsController.isDisplayDepartmentEnabled">Display Departments\n                                    </button>\n                                </div>\n                            </div>\n                            <div class="institution-detail">\n                                <div class="full-height-scroll">\n                                    <div class="row">\n                                        <div class="col-lg-12">\n                                            <div class="tabs-container">\n                                                <uib-tabset active="activeTab">\n                                                    <uib-tab heading="Basic Details" disable="disabledInstitutionListTabs[\'basicDetails\']">\n                                                        <div ng-include src="\'/scripts/components/institutions/list/partial/basicDetails.html\'"></div>\n                                                    </uib-tab>\n\n                                                    <uib-tab heading="Subscriptions" disable="disabledInstitutionListTabs[\'subscriptions\']">\n                                                        <div ng-include src="\'/scripts/components/institutions/list/subscriptions/institutionsListSubscriptionsView.html\'"></div>\n                                                    </uib-tab>\n\n                                                    <uib-tab heading="Campuses" disable="disabledInstitutionListTabs[\'campuses\']">\n                                                        <div ng-include src="\'/scripts/components/institutions/list/partial/campuses.html\'"></div>\n                                                    </uib-tab>\n\n                                                    <uib-tab heading="Group Institutions" disable="disabledInstitutionListTabs[\'institutionGroups\']">\n                                                        <div ng-include src="\'/scripts/components/institutions/list/partial/groupInstitutions.html\'"></div>\n                                                    </uib-tab>\n\n                                                    <uib-tab heading="Drupal" disable="disabledInstitutionListTabs[\'drupal\']">\n                                                        <div ng-include src="\'/scripts/components/institutions/list/partial/drupal.html\'"></div>\n                                                    </uib-tab>\n                                                    \n                                                    <uib-tab disable="disabledInstitutionListTabs[\'status\']">\n                                                        <uib-tab-heading>\n                                                            <span ng-class="{\'text-danger\': InstitutionsController.hasMissingFields()}">Status</span>\n                                                        </uib-tab-heading>\n                                                        <div ng-include src="\'/scripts/components/institutions/list/status/institutionsListStatusView.html\'"></div>\n                                                    </uib-tab>\n                                                </uib-tabset>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <pre ng-show="InstitutionsController.devMode">{{institution|json}}</pre>\n</div>\n'),$templateCache.put("/scripts/components/institutions/list/partial/basicDetails.html",'<div class="panel-body">\n    <div class="row">\n        <form name="forms.basicDetailsForm" class="clearfix" novalidate>\n            <div class="col-lg-6 block-basic-details">\n                <div class="form-group" ng-class="{\'has-errors\': InstitutionsController.isInvalidNewSchoolName}">\n                    <label>Name *</label>\n\n                    <div ng-if="institution.id">\n                        <input type="text" class="form-control"\n                            name="name"\n                            ng-model="institution.name"\n                            ng-required="true"\n                            custom-popover\n                            popover-html="Add institution name"\n                            popover-placement="left"\n                            popover-trigger="manual"\n                            popover-visibility="{{InstitutionsController.isInvalidNewSchoolName}}"\n                            ng-focus="InstitutionsController.setIsInvalidNewSchoolName(false)">\n                    </div>\n                    <div ng-if="!institution.id">\n                        <input type="text" class="form-control"\n                            name="name"\n                            ng-model="institution.name"\n                            ng-required="true"\n                            ng-change="InstitutionsController.findSimilar(institution)"\n                            ng-model-options="{ debounce: 750 }"\n                            custom-popover\n                            popover-html="Add institution name"\n                            popover-placement="left"\n                            popover-trigger="manual"\n                            popover-visibility="{{InstitutionsController.isInvalidNewSchoolName}}"\n                            ng-focus="InstitutionsController.setIsInvalidNewSchoolName(false)">\n                        <div wave-spinner class="wave-spinner" ng-show="InstitutionsController.similarNames.loading"></div>\n\n                        <div class="similar-names" ng-show="!institution.id && InstitutionsController.similarNames.display">\n                            <small class="m-b block">\n                                <span class="text-muted">Similarly named existing institutions:</span>\n                                <span class="text-navy" ng-show="!InstitutionsController.similarNames.results.length">no results</span>\n                            </small>\n                            <div ng-show="!InstitutionsController.similarNames.loading" class="text-center">\n                                <div ng-repeat="similarInstitution in InstitutionsController.similarNames.results">\n                                    <div><a target="_blank" ng-href="/#/profiles/institution-details?coreId={{similarInstitution.coreId}}">{{similarInstitution.name}} {{similarInstitution.active ? \'\' : \'[inactive]\'}}</a></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': InstitutionsController.isInvalidType}">\n                    <label>Type * </label>\n                    <ui-select\n                        name="typeId"\n                        ng-required="true"\n                        ng-disabled="institution.id"\n                        ng-model="selectedItem.selectedOptionType"\n                        on-select="InstitutionsController.setSelectedOptionType(selectedItem.selectedOptionType)"\n                        theme="bootstrap"\n                        custom-popover\n                        popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{InstitutionsController.isInvalidType ? true : false}}"\n                        >\n                        <ui-select-match placeholder="Select an option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices\n                            position="down"\n                            ui-disable-choice="option.disabled"\n                            repeat="option in InstitutionsController.typesList | filter:$select.search track by option.uniqueId">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n\n                <div class="form-group" ng-show="InstitutionsController.isClientDepartment(institution.typeId)" ng-class="{\'has-errors\': InstitutionsController.isInvalidBelongsTo}">\n                    <label>\n                        Belongs to *\n                    </label>\n                    <ui-select\n                        name="belongsTo"\n                        ng-required="InstitutionsController.isClientDepartment(institution.typeId)"\n                        ng-model="institution.belongsTo"\n                        on-select="InstitutionsController.setIsInvalidBelongsTo(false)"\n                        theme="bootstrap"\n                        reset-search-input="true"\n                        custom-popover\n                        popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{InstitutionsController.isInvalidBelongsTo ? true : false}}"\n                        >\n                        <ui-select-match placeholder="Select an option">{{$select.selected.title}}</ui-select-match>\n                        <ui-select-choices\n                            position="down"\n                            repeat="option.id as option in InstitutionsController.belongsToList | filter:$select.search">\n                            <div ng-bind-html="option.title | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n\n                <div class="form-group">\n                    <switch class="green"\n                            ng-model="institution.businessSchool"\n                            ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"></switch>\n                    Business School\n                </div>\n\n                <div class="form-group">\n                    <switch class="green" name="hasNoDepartments"\n                            ng-model="institution.hasNoDepartments"\n                            ng-disabled="InstitutionsController.isClientDepartment(institution.typeId) || InstitutionsController.isSimpleDepartment(institution.typeId)"></switch> Has No Departments\n                </div>\n            </div>\n\n            <div class="col-lg-6 block-contact-types">\n                <div class="form-group">\n                    <label>Local Name</label>\n                    <input type="text" class="form-control" ng-model="institution.localName" name="localName">\n                </div>\n\n                <div class="form-group force-width-100"\n                     ng-show="InstitutionsController.showParentInstitution(institution.typeId)"\n                     ng-class="{\'has-errors\': InstitutionsController.isInvalidParentInstitution}">\n                    <label>Parent institution *</label>\n                    <input type="text" class="form-control" ng-model="institution.parentName" ng-show="institution.id" disabled/>\n                    <div class="search-institutions" ng-show="!institution.id">\n                        <ui-select\n                            close-on-select="true"\n                            ng-model="institution.parent"\n                            on-select="InstitutionsController.handleSearchInstitutionClick($item)"\n                            theme="bootstrap"\n                            name="parentInstitution"\n                            reset-search-input="true"\n                            custom-popover\n                            popover-html="Type parent institution name"\n                            popover-placement="left"\n                            popover-trigger="manual"\n                            popover-visibility="{{InstitutionsController.isInvalidParentInstitution}}"\n                            ng-click="InstitutionsController.setIsInvalidParentInstitution(false)"\n                            >\n                            <ui-select-match placeholder="Type parent institution name...">{{$select.selected.name}}</ui-select-match>\n                            <ui-select-choices\n                                refresh-delay="1000"\n                                refresh="searchTopLevelInstitutions($select.search)"\n                                position="down"\n                                repeat="option in parentInstitutionSearchResults | filter:$select.search">\n                                <div ng-bind-html="option.name | highlight: $select.search"></div>\n                            </ui-select-choices>\n                            <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                        </ui-select>\n\n                        <div class="show-departments mt-5px" ng-show="institution.parentCoreId">\n                            <div class="row">\n                                <div class="col-lg-12">\n                                    <div class="ibox-tools">\n                                        <button class="btn btn-default btn-xs"\n                                                ng-show="!InstitutionsController.showDepartments.display"\n                                                ng-click="InstitutionsController.showDepartments()">Show All Departments</button>\n                                        <a class="close-link"\n                                           ng-show="InstitutionsController.showDepartments.display"\n                                           ng-click="InstitutionsController.handleDepartmentsListCloseClick()">\n                                            <i class="fa fa-times"></i>\n                                        </a>\n\n                                        <div class="pull-left" ng-show="!InstitutionsController.showDepartments.loading && InstitutionsController.showDepartments.display">\n                                            <small class="m-b block">\n                                                <span class="text-muted">Current Client departments:</span>\n                                                <span class="text-navy" ng-show="!InstitutionsController.showDepartments.results.length">no results</span>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-lg-12 text-center">\n                                    <div wave-spinner class="wave-spinner" ng-show="InstitutionsController.showDepartments.loading"></div>\n                                    <div ng-show="InstitutionsController.showDepartments.display && InstitutionsController.showDepartments.results.length">\n                                        <div ng-repeat="clientDeparmtent in InstitutionsController.showDepartments.results">\n                                            <div>\n                                                <a target="_blank" ng-href="/#/profiles/institution-details?coreId={{clientDeparmtent.coreId}}">{{clientDeparmtent.name}}</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label>FileMaker ID</label>\n                    <input type="text" class="form-control" ng-model="institution.filemakerId" name="filemakerId">\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': InstitutionsController.isInvalidCountry}">\n                    <label>Country *</label>\n                    <ui-select\n                        id="campusCountry"\n                        name="countryCode"\n                        ng-model="institution.countryCode"\n                        on-select="updateCountryName()"\n                        ng-required="true"\n                        theme="bootstrap"\n                        custom-popover\n                        popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{InstitutionsController.isInvalidCountry ? true : false}}"\n                        >\n                        <ui-select-match placeholder="Select an option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices\n                            position="auto"\n                            ui-disable-choice="option.disabled"\n                            repeat="option.countryCode as option in InstitutionsController.countriesList | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n\n                <button class="btn btn-primary btn-sm btn-block"\n                        ng-disabled="basicDetailsSubmitInProgress"\n                        ng-click="handleBasicDetailsSubmit()">{{institution.id ? \'Update\' : \'Save\'}}</button>\n            </div>\n\n\n        </form>\n    </div>\n\n</div>'),$templateCache.put("/scripts/components/institutions/list/partial/campuses.html",'<script id="ng-table/templates/campus/delete-header.html" type="text/ng-template">\n    <th class="header" ng-if="$column.show(this)">\n        <button type="button" class="btn btn-danger btn-sm" ng-class="{\'disabled\': isDeleteButtonDisabled()}" ng-click="handleDeleteClick()">\n            <span class="glyphicon glyphicon-trash"></span> {{$column.title(this)}}\n        </button>\n    </th>\n<\/script>\n<div class="panel-body">\n    <div class="row" ng-controller="CampusesListController as CampusesController">\n        <div class="form-group">\n            <button type="button" class="btn btn-primary" ng-click="handleAddClick()" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)">\n                <i class="fa fa-globe"></i>\n                Add Campus\n            </button>\n        </div>\n        <div class="row">\n            <div id="campusesTable" ng-class="showCampusInfoBlock ? \'col-sm-3\' : \'col-sm-12\'">\n                <div class="ibox float-e-margins">\n                    <display-filtering class="pull-right" columns="hiddenColumns" active="filterActive"></display-filtering>\n\n                    <table class="table table-striped table-bordered table-hover"\n                           ng-show="institution.campus.length"\n                           ng-table-dynamic="tableParams with columns"\n                           show-filter="false">\n                        <tbody ui-sortable="sortableOptions" ng-model="institution.campus">\n\n                        <tr ng-repeat="campus in $data" ng-class="{\'active\': campus.id == selectedCampusId}">\n                            <td ng-click="col.field === \'delete\'? \'\' : handleDataGridRowClickCampus(campus, false)" ng-repeat="col in $columns">\n                                <input ng-if="col.field === \'delete\'" ng-model="campusesToDelete[campus.id]" i-checkbox type="checkbox">\n                                <p ng-if="col.field !== \'delete\'">\n                                    {{ campus[col.field] }}\n                                </p>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <p ng-show="!institution.campus.length && !showCampusInfoBlock" class="text-center text-muted">\n                        List is empty\n                    </p>\n                </div>\n            </div>\n            <div ng-show="showCampusInfoBlock" class="col-sm-9 valuesTable">\n                <div class="ibox block-campus">\n                    <div class="tab-content">\n                        <div class="tab-pane active">\n                            <div class="client-detail">\n                                <div class="full-height-scroll scroll-floating-element" full-scroll>\n                                    <div class="row">\n                                        <form name="forms.campusDetailsForm" class="clearfix" ng-class="{submitted:submitted}" novalidate>\n                                            <div class="col-lg-6">\n\n                                                <div class="form-group">\n                                                    <label for="campusName">Campus Name *</label>\n                                                    <input id="campusName" type="text" class="form-control" ng-model="campus.name" ng-required="true" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label for="campusAddressLine1">Address Line 1 *</label>\n                                                    <input id="campusAddressLine1" type="text" class="form-control" ng-model="campus.addressLine1" ng-required="true" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label for="campusCity">Town / City *</label>\n                                                    <input id="campusCity" type="text" class="form-control" ng-model="campus.city" ng-required="true" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label for="campusPostCode">Postcode</label>\n                                                    <input id="campusPostCode" type="text" class="form-control" ng-model="campus.postcode" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label for="campusLatitude">Latitude</label>\n                                                    <input id="campusLatitude" type="text" class="form-control" ng-model="campus.latitude" ng-change="coordinatesChanged()" ng-readonly="campus.autoGenerate || InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label class="full-width">Auto Generate</label>\n                                                    <switch ng-model="campus.autoGenerate" class="green" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"></switch>\n                                                    <span>Use the address to auto generate latitude & longitude values.</span>\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label class="full-width">Display In Frontend</label>\n                                                    <switch ng-model="campus.displayInFrontEnd" ng-change="CampusesController.displayOnFrontEndClick()" class="green" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"></switch>\n                                                    <span>If selected, campus will be sent to profile. (Latitude and longitude is required)</span>\n                                                </div>\n\n                                            </div>\n\n                                            <div class="col-lg-6">\n\n                                                <div class="form-group">\n                                                    <label>Country *</label>\n                                                    <ui-select\n                                                        name="country"\n                                                        ng-model="campus.country"\n                                                        ng-required="true"\n                                                        ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"\n                                                        theme="bootstrap">\n                                                        <ui-select-match placeholder="Select an Option">{{$select.selected.name}}</ui-select-match>\n                                                        <ui-select-choices \n                                                            position=\'down\'\n                                                            refresh-delay="1000"\n                                                            repeat="option.countryCode as option in CampusesController.countriesList | filter:$select.search">\n                                                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                                                        </ui-select-choices>\n                                                        <ui-select-no-choice>\n                                                            Not found\n                                                        </ui-select-no-choice>\n                                                    </ui-select>\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label for="campusAddressLine2">Address Line 2</label>\n                                                    <input id="campusAddressLine2" type="text" class="form-control" ng-model="campus.addressLine2" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label for="campusState">State / Province</label>\n                                                    <input id="campusState" type="text" class="form-control" ng-model="campus.state" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <label for="campusLongitude">Longitude</label>\n                                                    <input id="campusLongitude" type="text" class="form-control" ng-model="campus.longitude" ng-change="coordinatesChanged()" ng-readonly="campus.autoGenerate || InstitutionsController.isSimpleDepartment(institution.typeId)">\n                                                </div>\n\n                                                 <div class="form-group">\n                                                    <label class="full-width">Primary Campus</label>\n                                                    <switch id="campusPrimary" ng-model="campus.primary" class="green" ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"></switch>\n                                                </div>\n\n                                                <div class="form-group">\n                                                    <a class="btn btn-primary btn-sm btn-block" ng-class="{\'disabled\':campusSubmitInProgress || InstitutionsController.isSimpleDepartment(institution.typeId)}" ng-click="handleCampusSubmit()">{{getMode() ? \'Update\' : \'Save\'}}</a>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-lg-12">\n                                            <section id="map" ng-controller="CampusesListController" class="form-group">\n                                                <div id="campusMap" class="h-166"></div>\n                                            </section>\n                                            <p class="text-center">\n                                                <button type="button" class="btn btn-default btn-xs"\n                                                        ng-click="CampusesController.refreshMap()"\n                                                        ng-disabled="refreshMapInProgress">Refresh Map</button>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/institutions/list/partial/drupal.html",'<div class="panel-body">\n    <div class="row">\n        <form name="forms.drupalForm" class="clearfix" novalidate>\n\n            <div class="col-lg-6">\n                <div class="form-group">\n                    <label>Overview node ID</label>\n                    <input type="text" class="form-control" ng-model="institution.nids.master" disabled="disabled">\n                </div>\n                <div class="form-group">\n                    <label>UG node ID</label>\n                    <input type="text" class="form-control" ng-model="institution.nids.ug" disabled="disabled">\n                </div>\n                <div class="form-group">\n                    <label>PG node ID</label>\n                    <input type="text" class="form-control" ng-model="institution.nids.pg" disabled="disabled">\n                </div>\n                <div class="form-group">\n                    <label>TM node ID</label>\n                    <input type="text" class="form-control" ng-model="institution.nids.tm" disabled="disabled">\n                </div>\n            </div>\n\n            <div class="col-lg-6">\n                <div class="form-group" ng-class="{\'has-errors\': InstitutionsController.isInvalidTuRegion}" ng-if="!InstitutionsController.isAdvancedProgram">\n                    <label>TU Region *</label>\n                    <ui-select\n                        name="tuRegion"\n                        ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"\n                        ng-model="institution.drupalTuRegionId"\n                        ng-required="true"\n                        ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"\n                        on-select="InstitutionsController.setIsInvalidTuRegion(false)"\n                        ng-required="true"\n                        theme="bootstrap"\n                        custom-popover\n                        popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{InstitutionsController.isInvalidTuRegion}}"\n                        >\n                        <ui-select-match placeholder="Select an option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices\n                            position="down"\n                            ui-disable-choice="option.disabled"\n                            repeat="option.tid as option in InstitutionsController.tuRegionsList">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': InstitutionsController.isInvalidTmRegion}">\n                    <label>TM Region *</label>\n                    <ui-select\n                        name="tmRegion"\n                        ng-model="institution.drupalTmRegionId"\n                        ng-required="true"\n                        ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"\n                        on-select="InstitutionsController.setIsInvalidTmRegion(false)"\n                        ng-required="true"\n                        theme="bootstrap"\n                        custom-popover\n                        popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{InstitutionsController.isInvalidTmRegion}}"\n                        >\n                        <ui-select-match placeholder="Select an option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices\n                            position="down"\n                            ui-disable-choice="option.disabled"\n                            repeat="option.tid as option in InstitutionsController.tmRegionsList">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n\n                <button class="btn btn-primary btn-sm btn-block"\n                   ng-disabled="drupalSubmitInProgress || InstitutionsController.isSimpleDepartment(institution.typeId)"\n                   ng-click="handleDrupalSubmit()">Update</button>\n\n            </div>\n\n        </form>\n    </div>\n</div>'),$templateCache.put("/scripts/components/institutions/list/partial/groupInstitutions.html",'<div class="panel-body">\n    <div class="row">\n        <div wave-spinner class="wave-spinner" ng-show="isSelectReloading"></div>\n\n        <div class="col-lg-12 block-group-institutions-search">\n         <label>Access to Outreach for C121 and CM only</label>\n            <ui-select\n                      ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"\n                      multiple\n                       close-on-select="false"\n                       ng-model="institution.groupMembers"\n                       theme="bootstrap"\n                       reset-search-input="true">\n                <ui-select-match placeholder="Type institution name...">{{$item.name}}</ui-select-match>\n                <ui-select-choices refresh-delay="1000"\n                                   refresh="searchInstitutionsWithoutGroup($select.search)"\n                                   repeat="option in institutionsWithoutGroup | filter:$select.search">\n                    <div ng-bind-html="option.name | highlight: $select.search"></div>\n                </ui-select-choices>\n            </ui-select>\n        </div>\n    </div>\n    <br>\n    <div class="row">\n        <div class="col-lg-6 block-group-institutions-warning">\n            <i>Institution "{{institution.name}}" will be included by default</i>\n        </div>\n\n        <div class="col-lg-6 block-group-institutions-update">\n            <a class="btn btn-primary btn-sm btn-block" ng-class="{\'disabled\': disallowGroupsSubmit() || InstitutionsController.isSimpleDepartment(institution.typeId)}" ng-click="handleInstitutionGroupSubmit()">Update</a>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/institutions/list/status/institutionsListStatusView.html",'<div class="panel-body" ng-controller="InstitutionsListStatusController as InstitutionsListStatusController">\n    <div class="row">\n\n        <div class="col-lg-4">\n            <div class="ibox float-e-margins">\n                <div class="ibox-title">\n                    <h5>Basic details</h5>\n                </div>\n                <div class="ibox-content no-padding">\n                    <ul class="list-group">\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.name ? \'fa-check text-navy\' : \'fa-times text-danger\'" class="fa"></i>\n                            <span class="m-l-xs">Name</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.name"> - {{InstitutionsListStatusController.institution.name}}</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Name is a compulsory field."></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.type ? \'fa-check text-navy\' : \'fa-times text-danger\'" class="fa"></i>\n                            <span class="m-l-xs">Type</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.type"> - {{InstitutionsListStatusController.institution.type}}</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Type is a a compulsory field."></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.country ? \'fa-check text-navy\' : \'fa-times text-danger\'" class="fa"></i>\n                            <span class="m-l-xs">Country</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.country"> - {{InstitutionsListStatusController.institution.country}}</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Country is a compulsory field."></i>\n                        </li>\n                        <li class="list-group-item"\n                            ng-show="InstitutionsController.isClientDepartment(InstitutionsListStatusController.institution.typeId)">\n                            <i ng-class="InstitutionsListStatusController.institution.belongsToName ? \'fa-check text-navy\' : \'fa-times text-danger\'" class="fa"></i>\n                            <span class="m-l-xs">Belongs to</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.belongsToName"> - {{InstitutionsListStatusController.institution.belongsToName}}</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Belongs to is a compulsory field."></i>\n                        </li>\n                        <li class="list-group-item"\n                            ng-show="InstitutionsController.showParentInstitution(InstitutionsListStatusController.institution.typeId)">\n                            <i ng-class="InstitutionsListStatusController.institution.parentName ? \'fa-check text-navy\' : \'fa-times text-danger\'" class="fa"></i>\n                            <span class="m-l-xs">Parent institution</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.parentName"> - {{InstitutionsListStatusController.institution.parentName}}</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Parent Institution is a compulsory field."></i>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div class="col-lg-4">\n            <div class="ibox float-e-margins">\n                <div class="ibox-title">\n                    <h5>Subscriptions</h5>\n                </div>\n                <div class="ibox-content no-padding">\n                    <div class="ibox-title" ng-if="!InstitutionsListStatusController.isAdvancedProgram">\n                        <h5>TU</h5>\n                    </div>\n                    <ul class="list-group" ng-if="!InstitutionsListStatusController.isAdvancedProgram">\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.subscriptions.tu.subscribed ? \'fa-check text-navy\' : \'fa-times\'" class="fa"></i>\n                            <span class="m-l-xs">UG / PG enabled</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="This enable the institution to have UG/PG profile in hub"></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.subscriptions.tu.advanced ? \'fa-check text-navy\' : \'fa-times\'" class="fa"></i>\n                            <span class="m-l-xs">TU advanced</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.subscriptions.tu.advanced">\n                                {{InstitutionsListStatusController.institution.subscriptions.tu.startDate| date:\'mediumDate\'}} - {{InstitutionsListStatusController.institution.subscriptions.tu.endDate| date:\'mediumDate\'}}\n                            </span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Subscription date is compulsory if the UG/PG profile is advanced"></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.enabled.ug ? \'fa-check text-navy\' : \'fa-times\'" class="fa"></i>\n                            <span class="m-l-xs">Display UG on TopUniversities.com</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Enable to display UG profile on frontend site"></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.enabled.pg ? \'fa-check text-navy\' : \'fa-times\'" class="fa"></i>\n                            <span class="m-l-xs">Display PG on TopUniversities.com</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Enable to display PG profile on frontend site"></i>\n                        </li>\n                    </ul>\n                    <div class="ibox-title">\n                        <h5>TM</h5>\n                    </div>\n                    <ul class="list-group">\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.subscriptions.tm.subscribed ? \'fa-check text-navy\' : \'fa-times\'" class="fa"></i>\n                            <span class="m-l-xs">MBA enabled</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="This enable the institution to have MBA profile in hub"></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.subscriptions.tm.advanced ? \'fa-check text-navy\' : \'fa-times\'" class="fa"></i>\n                            <span class="m-l-xs">MBA advanced</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.subscriptions.tm.advanced">\n                                {{InstitutionsListStatusController.institution.subscriptions.tm.startDate| date:\'mediumDate\'}} - {{InstitutionsListStatusController.institution.subscriptions.tm.endDate| date:\'mediumDate\'}}\n                            </span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Subscription date is compulsory if the MBA profile is advanced"></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.enabled.tm ? \'fa-check text-navy\' : \'fa-times\'" class="fa"></i>\n                            <span class="m-l-xs">Display on TopMba.com</span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="Enable to display MBA profile on frontend site"></i>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div class="col-lg-4" ng-class="{\'modal-overlay\':InstitutionsController.isSimpleDepartment(institution.typeId)}">\n            <div class="ibox float-e-margins">\n                <div class="ibox-title">\n                    <h5>Drupal</h5>\n                </div>\n                <div class="ibox-content no-padding">\n                    <ul class="list-group">\n                        <li class="list-group-item" ng-if="!InstitutionsListStatusController.isAdvancedProgram">\n                            <i ng-class="InstitutionsListStatusController.institution.tuRegion ? \'fa-check text-navy\' : \'fa-times text-danger\'" class="fa"></i>\n                            <span class="m-l-xs">TU Region</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.tuRegion">\n                                - {{InstitutionsListStatusController.institution.tuRegion}}\n                            </span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="TU region is compulsory if profile has UG/PG subscription"></i>\n                        </li>\n                        <li class="list-group-item">\n                            <i ng-class="InstitutionsListStatusController.institution.tmRegion ? \'fa-check text-navy\' : \'fa-times text-danger\'" class="fa"></i>\n                            <span class="m-l-xs">TM Region</span>\n                            <span class="m-l-xs text-muted"\n                                  ng-show="InstitutionsListStatusController.institution.tmRegion">\n                                - {{InstitutionsListStatusController.institution.tmRegion}}\n                            </span>\n                            <i class="fa fa-info-circle pull-right m-t-xs" tooltip-placement="top" uib-tooltip="TM region is compulsory if profile has MBA subscription"></i>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/institutions/list/subscriptions/institutionsListSubscriptionsView.html",'<div class="panel-body" ng-controller="InstitutionsSubscriptionsController as InstitutionsSubscriptionsController">\n    <div class="row">\n        <form name="forms.subscriptionForm">\n            <div class="col-lg-6">\n                <div wave-spinner class="wave-spinner" ng-show="InstitutionsSubscriptionsController.isProfilesLoading()"></div>\n                <div class="ibox float-e-margins" ng-show="!InstitutionsSubscriptionsController.isProfilesLoading()">\n                    <div class="ibox-title">\n                        <h5>Profiles</h5>\n                        <div class="ibox-tools">\n                            <a ng-click="showHide()" class="collapse-link">\n                                <i class="fa fa-chevron-up"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class="ibox-content">\n                        <div class="subscription-tu" ng-if="InstitutionsSubscriptionsController.allowTu()">\n                            <label class="m-t-none m-b">QS Hub</label>\n\n                            <div class="form-group subscriptions">\n                                <switch\n                                    class="green"\n                                    ng-model="institution.subscriptions.tu.subscribed"\n                                    ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId) || !InstitutionsSubscriptionsController.isDowngradeAllowedTu(institution.subscriptions.tu.subscribed)"\n                                    uib-popover="Disabled due to associated child institutions. Child institutions must be switched off first."\n                                    popover-placement="bottom"\n                                    popover-enable="!InstitutionsSubscriptionsController.isDowngradeAllowedTu(institution.subscriptions.tu.subscribed)"\n                                    popover-trigger="\'mouseenter\'">\n                                </switch> Enable UG / PG\n                                <a class="btn btn-default btn-xs"\n                                   ng-click="InstitutionsSubscriptionsController.handleHistoryLogClick(\'tu\')">\n                                    <i class="fa fa-clock-o"></i>\n                                </a>\n                            </div>\n\n                            <div class="form-inline" ng-class="{\'modal-overlay-35\': !institution.subscriptions.tu.subscribed}">\n                                <div class="form-group col-md-offset-1">\n                                    <switch\n                                        class="green"\n                                        ng-model="institution.subscriptions.tu.advanced"\n                                        ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"></switch> Advanced\n                                    <span ng-if="institution.subscriptions.tu.startDate > InstitutionsSubscriptionsController.getCurrentDate() && !institution.subscriptions.tu.advanced">\n                                        <small class="badge badge-info">\n                                            {{institution.subscriptions.tu.startDate | mDate}} - {{institution.subscriptions.tu.endDate| mDate}}\n                                        </small>\n                                        <small>\n                                            <p>Profile will become advanced 1 week prior to the subscription date for editing and publishing purposes.</p>\n                                        </small>\n                                    </span>\n                                    <span ng-if="!InstitutionsController.isSimpleDepartment(institution.typeId)"\n                                          class="date-picker form-control btn" type="text"\n                                          date-range-picker\n                                          options="datePickerTu.options"\n                                          ng-model="datePickerTu.date"\n                                          ng-style="{\'display\': institution.subscriptions.tu.advanced ? \'block\' : \'none\'}">\n                                        {{institution.subscriptions.tu.startDate| mDate}} - {{institution.subscriptions.tu.endDate| mDate}}\n                                    </span>\n                                    <span ng-if="InstitutionsController.isSimpleDepartment(institution.typeId)" class="form-control" disabled="disabled">\n                                        {{institution.subscriptions.tu.startDate| mDate}} - {{institution.subscriptions.tu.endDate| mDate}}\n                                    </span>\n                                    <p>\n                                        <i class="text-red" ng-show="InstitutionsController.isTuSubscriptionDatesInvalid()">\n                                            Add the date before you save\n                                        </i>\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class="form-group" ng-show="InstitutionsSubscriptionsController.isHistoryLogVisible(\'tu\')">\n                                <div wave-spinner class="wave-spinner" ng-show="InstitutionsSubscriptionsController.isSubscriptionsLogLoading(\'tu\')"></div>\n                                <div class="history-log tu col-md-offset-1 text-muted">\n                                    <div class="history-log-content" ng-show="!InstitutionsSubscriptionsController.isSubscriptionsLogLoading(\'tu\')">\n                                        <label class="m-t-none m-b">Subscription History</label>\n                                        <div class="history-items"\n                                             ng-show="InstitutionsSubscriptionsController.getSubscriptionsLog(\'tu\').length"\n                                             ng-repeat="item in InstitutionsSubscriptionsController.getSubscriptionsLog(\'tu\')">\n                                            <i class="fa fa-bell" aria-hidden="true" ng-if="item.future"></i> {{item.startDate | mDate}} - {{item.endDate | mDate}} <span class="subscription-log-submitted-by" ng-if="item.createdByFullName">Submitted by: {{item.createdByFullName}}</span>\n                                        </div>\n                                        <div class="history-items-empty" ng-show="!InstitutionsSubscriptionsController.getSubscriptionsLog(\'tu\').length">\n                                            Log is empty\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <label class="m-t-none m-b">Display on topuniversities.com</label>\n\n                            <div class="form-group">\n                                <switch ng-model="institution.enabled.ug" ng-disabled="!institution.subscriptions.tu.subscribed || InstitutionsController.isSimpleDepartment(institution.typeId)" class="green"></switch> Undergraduate\n                            </div>\n\n                            <div class="form-group">\n                                <switch ng-model="institution.enabled.pg" ng-disabled="!institution.subscriptions.tu.subscribed || InstitutionsController.isSimpleDepartment(institution.typeId)" class="green"></switch> Postgraduate\n                            </div>\n\n                            <div class="alert alert-warning" ng-show="InstitutionsController.hasTuWarning()">\n                                {{InstitutionsController.getTuWarningMessage()}}\n                            </div>\n                        </div>\n\n                        <div class="hr-line-dashed"></div>\n\n                        <div class="subscription-tm">\n                            <label class="m-t-none m-b">QS Hub</label>\n\n                            <div class="form-group subscriptions">\n                                <switch class="green"\n                                        ng-model="institution.subscriptions.tm.subscribed"\n                                        ng-change="InstitutionsController.handleTmSubscribed()"\n                                        ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId) || !InstitutionsSubscriptionsController.isDowngradeAllowedTm(institution.subscriptions.tm.subscribed)"\n                                        uib-popover="Disabled due to associated child institutions. Child institutions must be switched off first."\n                                        popover-placement="bottom"\n                                        popover-enable="!InstitutionsSubscriptionsController.isDowngradeAllowedTm(institution.subscriptions.tm.subscribed)"\n                                        popover-trigger="\'mouseenter\'">\n                                </switch> Enable MBA\n                                <a class="btn btn-default btn-xs"\n                                   ng-click="InstitutionsSubscriptionsController.handleHistoryLogClick(\'tm\')">\n                                    <i class="fa fa-clock-o"></i>\n                                </a>\n                            </div>\n\n                            <div class="form-inline">\n                                <div class="form-group col-md-offset-1" ng-class="{\'modal-overlay-35\': !institution.subscriptions.tm.subscribed}">\n                                    <switch class="green"\n                                            ng-model="institution.subscriptions.tm.advanced"\n                                            ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId)"></switch> Advanced\n                                    <span ng-if="institution.subscriptions.tm.startDate > InstitutionsSubscriptionsController.getCurrentDate() && !institution.subscriptions.tm.advanced">\n                                        <small class="badge badge-info">\n                                            {{institution.subscriptions.tm.startDate | mDate}} - {{institution.subscriptions.tm.endDate| mDate}}\n                                        </small>\n                                        <small>\n                                            <p>Profile will become advanced 1 week prior to the subscription date for editing and publishing purposes.</p>\n                                        </small>\n                                    </span>\n                                    <span class="date-picker form-control btn" type="text"\n                                          ng-if="!InstitutionsController.isSimpleDepartment(institution.typeId)"\n                                          date-range-picker\n                                          options="datePickerTm.options"\n                                          ng-model="datePickerTm.date"\n                                          ng-style="{\'display\': institution.subscriptions.tm.advanced  ? \'block\' : \'none\'}">\n                                        {{institution.subscriptions.tm.startDate| mDate}} - {{institution.subscriptions.tm.endDate| mDate}}\n                                    </span>\n                                    <span ng-if="InstitutionsController.isSimpleDepartment(institution.typeId)" class="form-control" disabled="disabled">\n                                        {{institution.subscriptions.tm.startDate| mDate}} - {{institution.subscriptions.tm.endDate| mDate}}\n                                    </span>\n                                    <p>\n                                        <i class="text-red" ng-show="InstitutionsController.isTmSubscriptionDatesInvalid()">\n                                            Add the date before you save\n                                        </i>\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class="form-group" ng-show="InstitutionsSubscriptionsController.isHistoryLogVisible(\'tm\')">\n                                <div wave-spinner class="wave-spinner" ng-show="InstitutionsSubscriptionsController.isSubscriptionsLogLoading(\'tm\')"></div>\n                                <div class="history-log tm col-md-offset-1 text-muted">\n                                    <div class="history-log-content" ng-show="!InstitutionsSubscriptionsController.isSubscriptionsLogLoading(\'tm\')">\n                                        <label class="m-t-none m-b">Subscription History</label>\n                                        <div class="history-items"\n                                             ng-show="InstitutionsSubscriptionsController.getSubscriptionsLog(\'tm\').length"\n                                             ng-repeat="item in InstitutionsSubscriptionsController.getSubscriptionsLog(\'tm\')">\n                                            <i class="fa fa-bell" aria-hidden="true" ng-if="item.future"></i> {{item.startDate | mDate}} - {{item.endDate | mDate}} <span class="subscription-log-submitted-by" ng-if="item.createdByFullName">Submitted by: {{item.createdByFullName}}</span>\n                                        </div>\n                                        <div class="history-items-empty" ng-show="!InstitutionsSubscriptionsController.getSubscriptionsLog(\'tm\').length">\n                                            Log is empty\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div ng-show="InstitutionsController.isTopLevelInstitution(institution.typeId) || InstitutionsController.isClientDepartment(institution.typeId)">\n                                <div class="form-group">\n                                    <switch class="green"\n                                            ng-model="institution.linkedWithAdvancedPrograms"\n                                            ng-disabled="!institution.subscriptions.tm.subscribed"></switch>\n                                    Link with advanced programs subscriptions\n                                </div>\n                            </div>\n\n                            <label class="m-t-none m-b">Display on topmba.com</label>\n\n                            <div class="form-group">\n                                <switch ng-model="institution.enabled.tm" ng-disabled="!institution.subscriptions.tm.subscribed || InstitutionsController.isSimpleDepartment(institution.typeId)" class="green"></switch> MBA\n                            </div>\n\n                            <div class="alert alert-warning" ng-show="InstitutionsController.hasTmWarning()">\n                                {{InstitutionsController.getTmWarningMessage()}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="col-lg-6">\n                <div class="ibox float-e-margins">\n                    <div class="ibox-title">\n                        <h5>Statistics</h5>\n                        <div class="ibox-tools">\n                            <a ng-click="showHide()">\n                                <i class="fa fa-chevron-up"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class="ibox-content">\n                        <div ng-repeat="(key, value) in InstitutionsController.subscriptionsList">\n                            <div class="form-group">\n                                <switch\n                                    ng-model="institution.subscriptions[value.handle].subscribed"\n                                    class="green"\n                                    ng-disabled="InstitutionsController.isSimpleDepartment(institution.typeId) ||\n                                    InstitutionsController.isAllStatistic(value.handle)">\n                                </switch> {{value.name}}\n                            </div>\n                        </div>\n                    </div>\n                    <a class="btn btn-primary btn-sm btn-block"\n                           ng-class="{\'disabled\': disabledSubmit() || InstitutionsController.isSimpleDepartment(institution.typeId)}"\n                           ng-click="handleSubscriptionSubmit()">Update</a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/institutions/tu-programs/institutionsTuProgramsView.html",'<div class="wrapper wrapper-content animated fadeInRight page-institution" ng-controller="InstitutionsTuProgramsController as ProgramsController">\n    <div class="row">\n        <div ng-class="isRightSidePanelActive() ? \'col-sm-8\' : \'col-sm-12\'">\n            \x3c!-- SECTION --\x3e\n            <div class="section">\n                \x3c!-- SECTION HEADER --\x3e\n                <div class="section-header">\n                    \x3c!-- Institution switch for QS users --\x3e\n                    <div class="search-dropdown pull-left">\n                        <ui-select\n                            class="search-dropdown"\n                            ng-model="selectedInstitution.selected"\n                            theme="bootstrap"\n                            ng-change="handleSearchInstitutionClick(selectedInstitution.selected)">\n                            <ui-select-match placeholder="Institution search...">\n                                <i class="fa fa-building"></i>\n                                <span>{{$select.selected.name}}</span>\n                            </ui-select-match>\n                            <ui-select-choices\n                                refresh-delay="500"\n                                refresh="ProgramsController.searchInstitution($select.search)"\n                                position="down"\n                                repeat="option in ProgramsController.institutionsDropdownList | filter: $select.search">\n                                <div class="test" ng-bind-html="option.name | highlight: $select.search"></div>\n                            </ui-select-choices>\n                        </ui-select>\n                        <div class="spinner" ng-show="ProgramsController.searchInProgress" wave-spinner></div>\n                    </div>\n\n                    <button class="btn btn-primary pull-right"\n                        type="button"\n                        ng-click="handleAddProgramClick()"\n                        ng-disabled="programsTabSubmitInProgress || !isInstitutionSelected() || isRightSidePanelActive()">\n                        <i class="fa fa-plus"></i>\n                        <span>Add Program</span>\n                    </button>\n\n                </div>\x3c!-- /SECTION HEADER --\x3e\n\n                \x3c!-- SECTION BODY --\x3e\n                <div class="section-body">\n                    <div id="programsTable" ng-class="{\'locked\': !isInstitutionSelected()}">\n                        <div wave-spinner class="wave-spinner" ng-show="isDatagridReloading || !isDatagridRendered"></div>\n\n                        <div ng-if="!isDatagridReloading && gridOptions">\n                            <ui-grid-info ng-if="!isRightSidePanelActive()"></ui-grid-info>\n                            <div class="grid"\n                                ui-grid="gridOptions"\n                                ui-grid-draggable-rows\n                                ui-grid-selection\n                                ui-grid-resize-columns\n                                ui-grid-auto-resize>\n                            </div>\n                        </div>\n                    </div>\n              </div>\x3c!-- /SECTION BODY --\x3e\n            </div>\x3c!-- /SECTION --\x3e\n        </div>\n\n        <div class="col-sm-4"\n            ng-show="showProgramEditForm || showProgramAddForm"\n            fixed-element-while-scrolling="#programsTable"\n            ng-controller="InstitutionsTuProgramsFormController as ProgramFormController">\n            <div ng-show="showProgramEditForm" ng-include src="\'/scripts/components/profiles/tu/programs/tuProfileEditProgramFormView.html\'"></div>\n            <div ng-show="showProgramAddForm" ng-include src="\'/scripts/components/profiles/tu/programs/tuProfileAddProgramFormView.html\'"></div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/login/loginFormView.html",'<div class="animated fadeInDown w-300 box-middle">\n    <form class="m-t" name="forms.loginForm" ng-submit="handleLogin()" novalidate autocomplete="off">\n        <div class="form-group">\n            <input name="email" type="email" class="form-control" ng-class="{\'border-red\': error}" placeholder="Username" ng-model="credentials.username" ng-focus="resetErrors()" ng-required="true">\n        </div>\n        <div class="form-group">\n            <input name="password" type="password" class="form-control" ng-class="{\'border-red\': error}" placeholder="Password" ng-model="credentials.password" ng-focus="resetErrors()" ng-required="true">\n        </div>\n        <div class="form-group">\n            <button ng-disabled="loginInProgress" class="btn btn-primary block full-width m-b">Login</button>\n            <div ng-show="error" class="alert alert-danger" ng-class="{\'animated shake\': animate}">{{error}}</div>\n            <div ng-show="loginInProgress" wave-spinner class="text-right"></div>\n        </div>\n\n        <a ng-click="toggleForgottenPasswordForm()"><small>Forgot password?</small></a>\n    </form>\n</div>\n'),$templateCache.put("/scripts/components/login/passwordForgotView.html",'<div class="password-box animated fadeInDown w-300 box-middle">\n    <h2 class="font-bold">Forgot password</h2>\n    <div ng-show="!showResetPasswordConfirmation">\n        <p>\n            Enter your email address and your password will be reset and emailed to you.\n        </p>\n        <form name="forms.forgotPasswordForm" class="m-t clearfix" novalidate role="form" autocomplete="off">\n            <div class="form-group">\n                <input type="email" name="email"\n                       class="form-control"\n                       ng-class="{\'red-border\': forms.forgotPasswordForm.$submitted && forms.forgotPasswordForm.$invalid}"\n                       placeholder="Email address"\n                       ng-required="true"\n                       ng-model="forgottenPassword.email">\n            </div>\n            <div class="form-group">\n                <button type="submit" class="btn btn-primary btn-block full-width m-b" ng-class="{\'disabled\':resetSubmitInProgress}" ng-click="handleResetPasswordSubmitClick()"><i class="fa fa-envelope"></i> Send new password</button>\n                <div ng-show="forgottenPasswordError" class="alert alert-danger" ng-class="animate ? \'animated shake\' : \'\'">{{forgottenPasswordErrorMessage}}</div>\n            </div>\n        </form>\n    </div>\n    <div ng-show="showResetPasswordConfirmation">\n        <p>Thank you. An email with instructions to reset your password has been sent to you.</p>\n    </div>\n    <a ng-click="toggleForgottenPasswordForm()">\n        <small>Go back</small>\n    </a>\n</div>\n'),$templateCache.put("/scripts/components/login/passwordResetView.html",'<div class="password-box animated fadeInDown">\n    <div class="row">\n        <div class="col-md-12">\n\n                <div class="row">\n                    <div class="col-lg-12"><h2 class="font-bold">Reset password</h2></div>\n                    <div class="col-lg-7 col-md-7 col-sm-6 col-xs-6">\n                        <form name="forms.resetPasswordForm" class="m-t clearfix" novalidate role="form" autocomplete="off">\n                            <div class="form-group">\n                                <input ng-class="LoginController.isPasswordValid() ? \'valid\' : \'invalid\'" type="password" name="password" class="form-control" placeholder="New password" required="" ng-model="password" ng-change="validatePassword()" autocomplete="off">\n                            </div>\n                            <div class="form-group">\n                                <input ng-class="LoginController.isPasswordValid() ? \'valid\' : \'invalid\'" type="password" name="repeatPassword" class="form-control" placeholder="Repeat password" required="" ng-model="repeatPassword" ng-change="validatePassword()" autocomplete="off">\n                            </div>\n                            <div class="form-group">\n                                <input type="text" ng-model="requestId" required class="hidden">\n                                <div class="text-red" ng-hide="requestId.length > 1">\n                                    <p>Invalid Link, please try to request a new reset link</p>\n                                </div>\n                            </div>\n                            <button type="submit" class="btn btn-primary btn-block full-width m-b" ng-class="{\'disabled\':resetSubmitInProgress}" ng-click="handleResetSubmitPasswordSubmitClick()">Reset</button>\n                            <a ng-click="handleForgotPasswordClick()" ng-hide="requestId.length > 1">\n                                <small>Go back</small>\n                            </a>\n                        </form>\n                    </div>\n                    <div class="col-lg-5 col-md-5 col-sm-6 col-xs-6 text-left">\n                        <div class="form-group m-t">\n                            <div class="validation-items">\n                                <div class="validation-item" ng-repeat="item in validationItems"><i class="fa fa-circle" ng-class="item.status ? \'text-navy\' : \'text-danger\'"></i> {{item.name}}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/master-password/masterPasswordView.html",'<div class="wrapper wrapper-content animated fadeInRight page-master-password" ng-controller="MasterPasswordController as MasterPasswordController">\n    <div class="section" ng-show="MasterPasswordController.masterPassword.loaded">\n        <div class="row">\n            <div class="col-md-4" ng-show="!MasterPasswordController.masterPassword.enabled">\n                <div class="content-box">\n                    <h5 class="m-b-md">Master password</h5>\n                    <h2 class="text-danger">\n                        <i class="fa fa-play fa-rotate-90"></i>\n                        <span ng-if="!MasterPasswordController.masterPassword.success">Not available</span>\n                    </h2>\n                </div>\n            </div>\n\n            <div ng-show="MasterPasswordController.masterPassword.enabled">\n                <div class="col-md-3 b-r">\n                    <div class="content-box">\n                        <h3>Password expires in</h3>\n                        <h1 class="text-navy">\n                            {{MasterPasswordController.isExpired() ? \'Password expired\' : MasterPasswordController.secondsLeft() | date:\'HH:mm:ss\'}}\n                        </h1>\n                        <div class="progress progress-mini">\n                            <div class="progress-bar" style="width: {{ MasterPasswordController.timeLeftPercentage() }}%;"></div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="col-md-9">\n                    <div class="row">\n                        <div class="col-md-6 b-r" ng-show="!MasterPasswordController.isExpired()">\n                            <div class="content-box">\n                                <h3>Password valid for 24 hours</h3>\n                                <ul class="list-group clear-list m-t">\n                                    <li class="list-group-item fist-item">\n                                        <strong>From:</strong>\n                                        <span class="pull-right">{{MasterPasswordController.masterPassword.from | date:\'HH:mm:ss, dd MMMM, yyyy\':\'UTC\'}} UK/GMT </span>\n                                    </li>\n                                    <li class="list-group-item">\n                                        <strong>To:</strong>\n                                        <span class="pull-right">{{MasterPasswordController.masterPassword.to | date:\'HH:mm:ss, dd MMMM, yyyy\':\'UTC\'}} UK/GMT </span>\n                                    </li>\n                                    <li class="list-group-item">\n                                        <strong>Current time:</strong>\n                                        <span class="pull-right">{{MasterPasswordController.getTime() | date:\'HH:mm:ss, dd MMMM, yyyy\':\'UTC\'}} UK/GMT </span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div class="col-md-6" ng-show="!MasterPasswordController.isExpired()">\n                            <div class="content-box">\n                                <h3>Master password</h3>\n                                <p class="text-navy">\n                                    <input class="no-borders" \n                                        ng-show="!showPassword"\n                                        type="password"\n                                        value="{{MasterPasswordController.masterPassword.password}}"\n                                        select-on-click readonly />\n                                    <input class="no-borders" \n                                        ng-show="showPassword"\n                                        type="text"\n                                        value="{{MasterPasswordController.masterPassword.password}}"\n                                        select-on-click readonly />\n                                </p>\n                                <small>\n                                    <switch class="green" ng-model="showPassword"></switch>\n                                    <span>Show Password</span>\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div ng-show="!MasterPasswordController.masterPassword.loaded">\n            <div wave-spinner class="text-right"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/modal/helpModal.html",'<div class="modal-header">\n    <h3>{{modalOptions.headerText}}</h3>\n</div>\n<div class="modal-body">\n    <h4>While we work on help section, please use the instructions below:</h4>\n    <p>\n        <p>For help with TopUniversities profiles, please email\n            <a href="mailto:tusupport@qs.com">tusupport@qs.com</a>\n        </p>\n        <p>\n            For help with TopMBA profiles, please email \n            <a href="mailto:tmsupport@qs.com">tmsupport@qs.com</a>\n        </p>\n        <p>For all other queries, please email \n            <a href="mailto:websupport@qs.com">websupport@qs.com</a>\n        </p>\n    </p>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-primary" data-ng-click="modalOptions.close()">{{modalOptions.closeButtonText}}</button>\n</div>\n'),$templateCache.put("/scripts/components/profile/logo/profileLogoView.html",'<div ng-controller="ProfileLogoController as ProfileLogoController">\n    <div class="col-lg-12 block-spinner">\n        <div wave-spinner class="text-right" ng-show="displaySpinner"></div>\n    </div>\n    <div class="row">\n        <div class="col-sm-2">\n            <div class="img-list">\n                <form name="forms.imageForm"\n                      class="clearfix dropzone image-form no-background"\n                      enctype="multipart/form-data"\n                      ng-dropzone\n                      dropzone="ProfileLogoController.dropZoneImageInstance"\n                      dropzone-config="ProfileLogoController.imageConfig.dropzone"\n                      event-handlers="ProfileLogoController.imageConfig.eventHandlers"\n                      novalidate>\n                    <div class="fallback">\n                        <input name="file" type="file" />\n                    </div>\n\n                    <span class="dz-message" ng-show="uploadEnabled"></span>\n\n                    <div ng-show="displayRemoveLink" class="dropzone-previews" ng-class="{dzPreview: displayRemoveLink}"></div>\n                </form>\n            </div>\n            <div class="default-image" ng-show="!displayRemoveLink">\n                <img alt="image" ng-show="gravatar" class="img-circle" gravatar-src="user.email" gravatar-size="100">\n                <img alt="image" ng-show="!gravatar" class="img-circle" ng-src="{{user.profileLogo}}" width="100px" height="100px">\n            </div>\n        </div>\n\n        <div class="profile-info-header col-sm-8">\n            <h3>{{user.fullName}}</h3>\n            <p>{{user.position}}</p>\n            <a class="btn btn-primary btn-sm upload-button" ng-show="!displayRemoveLink" ng-class="{\'disabled\': generalSubmitDisabled}">\n                <i class="fa fa-undo"></i> Upload Image\n            </a>\n            <a class="btn btn-warning btn-sm" ng-click="removeUploaderImage()" ng-show="displayRemoveLink">\n                <i class="fa fa-times"></i>\n                <span>Click here to remove uploaded logo</span>\n            </a>\n            <a class="btn btn-primary btn-sm" ng-click="handleGeneralSubmit()" ng-show="displayRemoveLink" ng-class="{\'disabled\': generalSubmitDisabled}">\n                <i class="fa fa-check-circle"></i> Save\n            </a>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profile/password/profilePasswordView.html",'<div class="password" ng-controller="ProfilePasswordController as ProfilePasswordController">\n    <div class="ibox">\n        <div class="ibox-title">\n            <h5>{{isPasswordReset ? \'Password reset is required\' : \'Password\'}}</h5>\n        </div>\n        <div class="ibox-content">\n            <form name="ProfilePasswordController.forms.password" class="clearfix form-horizontal" novalidate autocomplete="off">\n                <div class="form-group" ng-show="!ProfilePasswordController.isPasswordFieldsVisible() && !isPasswordReset">\n                    <label class="control-label col-sm-5 col-md-4">Password *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input name="password" type="text" class="form-control" value="**********"\n                               ng-focus="ProfilePasswordController.togglePasswordFields()">\n                    </div>\n                </div>\n\n                <div ng-show="ProfilePasswordController.isPasswordFieldsVisible() || isPasswordReset">\n                    <user-password user="user"\n                                   reset-validators="!ProfilePasswordController.isPasswordFieldsVisible() && !isPasswordReset"\n                                   config="{resetOnLogin: false, label: \'New Password\', labelClass: \'control-label col-sm-12\', blockClass: null}"></user-password>\n\n                    <div class="form-group">\n                        <div class="col-sm-12">\n                            <a class="btn btn-primary pull-right"\n                               ng-class="{\'disabled\': ProfilePasswordController.isDisabled()}"\n                               ng-click="ProfilePasswordController.update()">\n                                <i class="fa fa-check-circle"></i>\n                                <span>Update</span>\n                            </a>\n                            <a class="btn btn-default pull-right"\n                               ng-if="!isPasswordReset"\n                               ng-class="{\'disabled\': ProfilePasswordController.isDisabled()}"\n                               ng-click="ProfilePasswordController.togglePasswordFields()">\n                                <i class="fa fa-ban"></i>\n                                <span>Cancel</span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profile/personalDetails/profilePersonalDetailsView.html",'<div class="personal-details" ng-controller="ProfilePersonalDetailsController as ProfilePersonalDetailsController">\n    <div class="ibox">\n        <div class="ibox-title">\n            <h5>Personal Details</h5>\n        </div>\n        <div class="ibox-content">\n            <form name="ProfilePersonalDetailsController.forms.personalDetails" class="clearfix form-horizontal" novalidate autocomplete="off">\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Title</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input name="title" type="text" class="form-control" ng-model="ProfilePersonalDetailsController.user.title">\n                    </div>\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': !ProfilePersonalDetailsController.isValidFirstName()}">\n                    <label class="control-label col-sm-5 col-md-4">First (Given) Name *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input type="text"\n                               class="form-control"\n                               name="firstName"\n                               ng-model="ProfilePersonalDetailsController.user.firstName"\n                               ng-required="true"\n                               ng-focus="ProfilePersonalDetailsController.setValid(\'firstName\')"\n                               focus-delay="250"\n                               custom-popover popover-html="Add a first (given) name"\n                               popover-placement="left"\n                               popover-trigger="manual"\n                               popover-visibility="{{!ProfilePersonalDetailsController.isValidFirstName()}}">\n                    </div>\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': !ProfilePersonalDetailsController.isValidLastName()}">\n                    <label class="control-label col-sm-5 col-md-4">Last (Family) Name *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input type="text"\n                               class="form-control"\n                               name="lastName"\n                               ng-model="ProfilePersonalDetailsController.user.lastName"\n                               ng-required="true"\n\n                               focus-delay="250"\n                               custom-popover\n                               popover-html="Add a last (family) name"\n                               popover-placement="left"\n                               popover-trigger="manual"\n                               popover-visibility="{{!ProfilePersonalDetailsController.isValidLastName()}}"\n                               ng-focus="ProfilePersonalDetailsController.setValid(\'lastName\')">\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Position</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input name="position" type="text" class="form-control" ng-model="ProfilePersonalDetailsController.user.position">\n                    </div>\n                </div>\n\n                <div ng-if="ProfilePersonalDetailsController.user.isClient" class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Phone</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input name="phone" type="text" class="form-control" ng-model="ProfilePersonalDetailsController.user.phone">\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Email *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input type="email"\n                               class="form-control"\n                               name="email"\n                               ng-model="ProfilePersonalDetailsController.user.email"\n                               ng-required="true"\n                               ng-disabled="true">\n                    </div>\n                </div>\n                <div ng-if="ProfilePersonalDetailsController.user.isClient" class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Primary Institution *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input type="email"\n                               class="form-control"\n                               name="email"\n                               ng-model="ProfilePersonalDetailsController.user.primaryInstitutionName"\n                               ng-required="true"\n                               ng-disabled="true">\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <div class="col-sm-12">\n                        <a class="btn btn-primary pull-right"\n                           ng-class="{\'disabled\': ProfilePersonalDetailsController.isDisabled()}"\n                           ng-click="ProfilePersonalDetailsController.update()">\n                            <i class="fa fa-check-circle"></i>\n                            <span>Update</span>\n                        </a>\n                        <a class="btn btn-default pull-right"\n                           ng-class="{\'disabled\': ProfilePasswordController.isDisabled()}"\n                           ng-click="ProfilePersonalDetailsController.cancel()">\n                            <i class="fa fa-ban"></i>\n                            <span>Cancel</span>\n                        </a>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profile/profileView.html",'<div class="wrapper wrapper-content animated fadeInRight page-profile" ng-controller="ProfileController as ProfileController">\n    <div class="row profile-logo" ng-class="{\'modal-overlay-35\': isPasswordReset}">\n        <div class="col-sm-6">\n            <div class="panel-body" ng-include src="\'/scripts/components/profile/logo/profileLogoView.html\'"></div>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-sm-6" ng-class="{\'modal-overlay-35\': isPasswordReset}">\n            <div class="panel-body profile-personal-details">\n                <div ng-include src="\'/scripts/components/profile/personalDetails/profilePersonalDetailsView.html\'"></div>\n            </div>\n        </div>\n        <div class="col-sm-6">\n            <div class="panel-body profile-password">\n                <div ng-include src="\'/scripts/components/profile/password/profilePasswordView.html\'"></div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/shared/campuses/sharedProfileCampusFormButtonsView.html",'<div class="col-sm-12">\n    <a class="btn btn-primary pull-right btn-float-fix" ng-if="editMode" ng-class="{\'disabled\':campusSubmitInProgress}" ng-click="handleUpdateClick()">\n        <i class="fa fa-check-circle"></i>\n        <span>Update</span>\n    </a>\n    \n    <div class="pull-right m-lr-sm btn-float-fix" ng-show="displayDelete">\n        <a class="btn btn-danger btn-float-fix" ng-class="{\'disabled\':campusSubmitInProgress}" ng-click="handleDeleteClick()">\n            <i class="fa fa-trash"></i>\n            <span>Delete</span>\n        </a>\n    </div>\n\n    <a class="btn btn-primary pull-right btn-float-fix" ng-if="!editMode" ng-class="{\'disabled\':campusSubmitInProgress}" ng-click="handleCreateClick()">\n        <i class="fa fa-check-circle"></i>\n        <span>Save</span>\n    </a>\n\n    <a class="btn btn-default pull-right btn-float-fix" ng-class="{\'disabled\':campusSubmitInProgress}" ng-click="handleCancelClick()">\n        <i class="fa fa-ban"></i>\n        <span>Cancel</span>\n    </a>\n</div>'),$templateCache.put("/scripts/components/profiles/shared/campuses/sharedProfileCampusFormView.html",'<div class="ibox" ng-controller="SharedProfileCampusFormController as SharedProfileCampusFormController">\n    <div class="">\n    <div class="ibox-title m-t-xl">\n        <h5>{{editMode ? \'Edit\' : \'Add\'}} Campus</h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="handleCancelClick()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner ng-show="isFetchInProgress()"></div>\n\n        <form class="form-horizontal add-campus" name="forms.campusForm" ng-class="{submitted:submitted}" novalidate autocomplete="off">\n\n            <div class="form-group" ng-class="{\'has-errors\': !SharedProfileCampusFormController.isValidName()}">\n                <label class="control-label col-sm-5 col-md-4">Campus Name *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control" name="name"\n                           ng-model="campus.name"\n                           ng-required="true"\n                           ng-focus="SharedProfileCampusFormController.setValid(\'name\')"\n                           focus-delay="250"\n\n                           custom-popover\n                           popover-html="Add a campus name"\n                           popover-placement="left"\n                           popover-trigger="manual"\n                           popover-visibility="{{!SharedProfileCampusFormController.isValidName()}}"/>\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\': !SharedProfileCampusFormController.isValidCountry()}">\n                <label class="control-label col-sm-5 col-md-4">Country *</label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        name="country"\n                        ng-model="campus.country"\n                        ng-required="true"\n                        theme="bootstrap"\n                        on-select="SharedProfileCampusFormController.setValid(\'country\')"\n                        focus-delay="250"\n                        custom-popover\n                        popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!SharedProfileCampusFormController.isValidCountry()}}"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.countryCode as option in countriesList | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\': !SharedProfileCampusFormController.isValidAddress()}">\n                <label class="control-label col-sm-5 col-md-4">Address *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control" name="addressLine1"\n                           ng-model="campus.addressLine1"\n                           ng-required="true"\n                           ng-focus="SharedProfileCampusFormController.setValid(\'addressLine1\')"\n                           focus-delay="250"\n\n                           custom-popover\n                           popover-html="Add an address"\n                           popover-placement="left"\n                           popover-trigger="manual"\n                           popover-visibility="{{!SharedProfileCampusFormController.isValidAddress()}}"/>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">&nbsp;</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control" ng-model="campus.addressLine2">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\': !SharedProfileCampusFormController.isValidCity()}">\n                <label class="control-label col-sm-5 col-md-4">Town / City *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control" name="city"\n                           ng-model="campus.city"\n                           ng-required="true"\n                           focus-delay="250"\n\n                           custom-popover\n                           popover-html="Add a town/city"\n                           popover-placement="left"\n                           popover-trigger="manual"\n                           popover-visibility="{{!SharedProfileCampusFormController.isValidCity()}}"/>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4" for="campusState">State / Province</label>\n                <div class="col-sm-7 col-md-8">\n                    <input id="campusState" type="text" class="form-control" ng-model="campus.state">\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4" for="campusPostCode">Postcode</label>\n                <div class="col-sm-7 col-md-8">\n                    <input id="campusPostCode" type="text" class="form-control" ng-model="campus.postcode">\n                </div>\n            </div>\n\n            <div class="separator"></div>\n\n            <div class="row">\n                <div class="col-md-12 col-lg-6">\n                    <div class="form-group">\n                        <label class="control-label col-sm-5" for="campusLatitude">Latitude</label>\n                        <div class="col-sm-7">\n                            <input id="campusLatitude" type="text" class="form-control" ng-model="campus.latitude" ng-readonly="campus.autoGenerate">\n                        </div>\n                    </div>\n                </div>\n                <div class="col-md-12 col-lg-6">\n                    <div class="form-group">\n                        <label class="control-label col-sm-5" for="campusLongitude">Longitude</label>\n                        <div class="col-sm-7">\n                            <input id="campusLongitude" type="text" class="form-control" ng-model="campus.longitude" ng-readonly="campus.autoGenerate">\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="separator dashed text-center">\n                <span class="text">or</span>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Auto Generate</label>\n                <div class="col-sm-7 col-md-8">\n                    <div class="btn-toggle">\n                        <switch ng-model="campus.autoGenerate" class="green"></switch>\n                        <span class="switch-text">Use address to auto generate latitude and longitude.</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4"></label>\n                <div class="col-sm-7 col-md-8">\n                    <button type="button" class="btn btn-default btn-xs pull-right"\n                        ng-click="SharedProfileCampusFormController.refreshMap()"\n                        ng-disabled="refreshMapInProgress || !campus.autoGenerate">\n                        <i class="fa fa-refresh"></i>\n                        <span>Refresh Map</span>\n                    </button>\n                </div>\n            </div>\n\n            <div class="separator"></div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Display In Frontend</label>\n                <div class="col-sm-7 col-md-8">\n                    <div class="btn-toggle">\n                        <switch ng-model="campus.displayInFrontEnd" ng-change="SharedProfileCampusFormController.displayOnFrontEndClick()" class="green"></switch>\n                        <span class="switch-text">If selected, campus will be sent to profile. (Latitude and longitude is required)</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Primary Campus</label>\n                <div class="col-sm-7 col-md-8">\n                    <div class="btn-toggle">\n                        <switch id="campusPrimary" ng-model="campus.primary" class="green"></switch>\n                        <span class="switch-text">Please only check if it\'s the main campus</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class="white-space"></div>\n\n            <div class="form-group" ng-include="\'/scripts/components/profiles/shared/campuses/sharedProfileCampusFormButtonsView.html\'"></div>\n        </form>\n    </div>\n\n    <pre ng-if="SharedProfileCampusFormController.devMode">{{campus|json}}</pre>\n</div>\n'),$templateCache.put("/scripts/components/profiles/shared/campuses/sharedProfileCampusesView.html",'<script id="ng-table/templates/campus/delete-header.html" type="text/ng-template">\n    <th class="header" ng-if="$column.show(this)">\n        <button type="button" class="btn btn-danger btn-sm" ng-class="{\'disabled\': isDeleteButtonDisabled()}" ng-click="handleDeleteClick()">\n            <span class="glyphicon glyphicon-trash"></span> {{$column.title(this)}}\n        </button>\n    </th>\n<\/script>\n<div ng-controller="SharedProfileCampusesController as ProfileCampusesController">\n    \x3c!-- START CAMPUS TAB SECTION --\x3e\n    <div class="campus-tab">\n        <div class="tab-header">\n            <div class="btn-toggle" ng-show="isQsUser">\n                <switch class="green"\n                    ng-disabled="campusesInEventsInclusionDisbaled"\n                    ng-model="sharedProfile.campusesOnEvents"\n                    ng-change="!campusesInEventsInclusionDisbaled ? handleIncludeInEventsClick() : null">\n                </switch>\n                <span class="switch-text">Include all campuses in events page</span>\n            </div>\n            <button class="btn btn-primary pull-right" type="button" ng-click="handleAddClick()">\n                <i class="fa fa-plus"></i>\n                <span>Add Campus</span>\n            </button>\n        </div>\n        <div class="tab-body">\n            <div id="campusesTable">\n                <div class="ibox float-e-margins scroll-horizontal hide-vertical-overflow">\n                    <table ng-table-dynamic="tableParams with columns" show-filter="false" class="table table-striped table-bordered table-hover pointer">\n                        <tbody ui-sortable="sortableOptions" ng-model="$data">\n                            <tr ng-repeat="campus in $data track by $index" ng-class="{\'active\': campus.id == selectedCampusId}">\n                                <td ng-click="col.field === \'delete\'? \'\' : handleDatagridRowClick(campus)" ng-repeat="col in $columns">\n                                    <input ng-if="col.field === \'delete\'" ng-model="campusesToDelete[campus.id]" i-checkbox type="checkbox">\n                                    <p ng-if="col.field !== \'delete\'">\n                                        {{ col.field === \'createdAt\' && campus[col.field] ? (campus[col.field] | date:\'medium\') : campus[col.field] }}\n                                    </p>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    showing {{ tableParams.total() }} entries out of {{  tableParams.totalEntries }}\n                </div>\n                <div id="mapContainer" class="visibility" ng-class="displayMapBlock ? \'visibility-visible\' : \'visibility-hidden\'">\n                    <h1>Locations</h1>\n                    <div id="map">\n                        <div id="campusMap"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n    </div>\x3c!-- END CAMPUS TAB SECTION --\x3e\n</div>\n\n'),$templateCache.put("/scripts/components/profiles/shared/general/sharedProfileGeneralHistoryView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>History Log <small>showing last {{SharedProfileController.historyLog.totalReturned}} records of {{SharedProfileController.historyLog.total}}</small></h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="handleGeneralHistoryCloseClick()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox block-institution">\n        <div class="ibox-content">\n            <div wave-spinner class="text-right" ng-show="fetchingHistory"></div>\n            <div ng-repeat="log in generalHistoryLog">\n                <ul class="list-unstyled list-history break-word">\n                    <li>\n                        <span class="bold">Modified on:</span>\n                        <span>{{log.modifiedAt| date:\'medium\'}}</span>\n                    </li>\n                    <li>\n                        <span class="bold">Submitted by:</span>\n                        <span>{{log.modifiedByFullName}}</span>\n                    </li>\n                    <li>\n                        <span class="bold">Institution Profile Name Display:</span>\n                        <span>{{log.fullName}}</span>\n                    </li>\n                    <li>\n                        <span class="bold">Foundation Year:</span>\n                        <span>{{log.foundationYear}}</span>\n                    </li>\n                    <li>\n                        <span class="bold">Logo:</span>\n                        <span>{{log.smallLogo.path && log.mediumLogo.path && log.largeLogo.path ? \'Yes\' : \'No\'}}</span>\n                    </li>\n                </ul>\n                <div class="hr-line-dashed"></div>\n            </div>\n\n            <div class="row" ng-show="SharedProfileController.handleHistoryLogVisibility()">\n                <div wave-spinner class="text-right" ng-show="SharedProfileController.fetchingMoreHistoryLog()"></div>\n                <div class="col-sm-8 col-sm-offset-2">\n                    <a class="btn btn-primary btn-block" ng-click="SharedProfileController.handleLoadMoreHistoryLog()" ng-disabled="SharedProfileController.fetchingMoreHistoryLog()">Load more</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/shared/general/sharedProfileGeneralView.html",'<div ng-controller="SharedProfileGeneralController as SharedProfileGeneralController">\n    <div class="general-tab">\n        <form class="form-horizontal" name="forms.generalForm" novalidate="">\n\n            <a class="btn btn-warning btn-history" ng-class="{\'disabled\':generalHistoryDisabled}" ng-click="handleHistoryLogClick()">\n                <i class="fa fa-clock-o"></i>\n            </a>\n\n            <div class="form-group">\n                <label class="control-label col-sm-3 col-md-2">\n                    {{SharedProfileGeneralController.logoDropzoneInstance.files[0].status === \'success\' ? \'Preview Logo\' : \'Upload Logo\'}}\n                </label>\n                <div class="col-sm-4 col-md-10">\n                    <div class="upload">\n                        <div class="dropzone"\n                             name="forms.logosForm"\n                             enctype="multipart/form-data"\n                             ng-dropzone\n                             dropzone="SharedProfileGeneralController.logoDropzoneInstance"\n                             dropzone-config="SharedProfileGeneralController.logoConfig.dropzone"\n                             event-handlers="SharedProfileGeneralController.logoConfig.eventHandlers"\n                             novalidate >\n                            <div class="fallback">\n                                <input name="file" type="file" />\n                            </div>\n                            <div class="dz-message" ng-show="uploadEnabled">\n                                <i class="fa fa-upload"></i>\n                            </div>\n                            <div class="dropzone-previews"></div>\n                        </div>\n                    </div>\n                    <div class="note">\n                        <div class="note-header">\n                            <span class="bold">Note:</span>\n                        </div>\n                        <div class="note-body">\n                            <p>\n                                <span class="bold">File types:</span>\n                                <small>.jpeg &nbsp; .jpg</small>\n                            </p>\n                            <p>\n                                <span class="bold">Image dimensions:</span>\n                                <small>200px x 200px</small>\n                            </p>\n                            <p>\n                                <span class="bold">Maximum size:</span>\n                                <small>400 KB</small>\n                            </p>\n                        </div>\n                        <div class="note-footer" ng-show="displayRemoveLink">\n                            <p>\n                                <span> Press "Update" to apply changes.</span>\n                                <span class="or bold">OR</span>\n                            </p>\n                            <a class="btn btn-warning btn-sm" ng-click="removeUploaderImage()">\n                                <i class="fa fa-times"></i>\n                                <span>Click here to remove uploaded logo.</span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-3 col-md-2">Current Logo</label>\n                <div class="col-sm-4 col-md-10">\n                    <div class="preview-group">\n                        <div class="logo-preview">\n                            <div class="logo-img">\n                                <span\n                                    class="info"\n                                    uib-tooltip=\'Used in profile pages\'\n                                    tooltip-placement="top">\n                                    <i class="fa fa-info-circle"></i>\n                                </span>\n                                <img class="large-logo img-responsive" alt="Large Logo" ng-src="{{profile.largeLogoPath ? profile.largeLogoPath : \'/images/profile/logo-large.jpg\'}}" ng-class="{\'shadow-1px\': !profile.largeLogoPath}" />\n                            </div>\n                        </div>\n                        <div class="logo-preview">\n                            <div class="logo-img">\n                                <span\n                                    class="info"\n                                    uib-tooltip=\'Used in ranking widget, search results page, featured profile widget\'\n                                    tooltip-placement="top">\n                                    <i class="fa fa-info-circle"></i>\n                                </span>\n                                <img class="medium-logo img-responsive" alt="Medium Logo" ng-src="{{profile.mediumLogoPath ? profile.mediumLogoPath : \'/images/profile/logo-medium.jpg\'}}" ng-class="{\'shadow-1px\': !profile.mediumLogoPath}" />\n                            </div>\n                        </div>\n                        <div class="logo-preview">\n                            <div class="logo-img">\n                                <span\n                                    class="info"\n                                    uib-tooltip=\'Used in ranking tables\'\n                                    tooltip-placement="top">\n                                    <i class="fa fa-info-circle"></i>\n                                </span>\n                                <img class="small-logo img-responsive" alt="Small Logo" ng-src="{{profile.smallLogoPath ? profile.smallLogoPath : \'/images/profile/logo-small.jpg\'}}" ng-class="{\'shadow-1px\': !profile.smallLogoPath}" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-3 col-md-2">\n                    <span>Institution Profile Name Display</span>\n                    <i class="fa fa-info-circle"\n                        uib-tooltip=\'This will change the display on your institution profile only. For other changes contact tusupport@qs.com (TopUniversities) or tmsupport@qs.com (TopMBA)\'\n                        tooltip-placement="top"></i>\n                </label>\n                <div class="col-sm-9 col-md-10">\n                    <input type="text" class="form-control" ng-model="profile.fullName" />\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="control-label col-sm-3 col-md-2">Foundation Year</label>\n                <div class="col-sm-4 col-md-2">\n                    <input type="text" class="form-control" touch-spin="" spin-options="foundationYearSpinOptions" ng-model="profile.foundationYear" />\n                </div>\n            </div>\n\n            <div wave-spinner ng-show="generalSubmitDisabled && displaySpinner"></div>\n\n            <div class="clearfix">\n                <a class="btn btn-primary pull-right" ng-class="{\'disabled\':generalSubmitDisabled}" ng-click="handleGeneralSubmit()">\n                    <i class="fa fa-check-circle" aria-hidden="true"></i>\n                    <span>Update</span>\n                </a>\n                <a class="btn btn-danger pull-right" ng-class="{\'disabled\':SharedProfileGeneralController.isRemoveLogosDisabled()}" ng-click="handleClearLogosClick()">\n                    <i class="fa fa-times"></i>\n                    <span>Remove logos</span>\n                </a>\n            </div>\n\n        </form>\n    </div>\n\n    <p><pre ng-show="SharedProfileGeneralController.devMode">{{profile|json}}</pre></p>\n</div>'),$templateCache.put("/scripts/components/profiles/shared/sharedProfileView.html",'<div class="wrapper wrapper-content animated fadeInDown" ng-controller="SharedProfileController as SharedProfileController">\n    <div class="row">\n        <div ng-class="isRightSidePanelActive() ? \'col-sm-8\' : \'col-sm-12\'">\n            <div class="tabs-container" ng-class="{\'modal-overlay\': loadInProgress}">\n                <uib-tabset active="activeTab">\n                    <uib-tab heading="General">\n                        <div class="panel-body">\n                            <div ng-include="\'/scripts/components/profiles/shared/general/sharedProfileGeneralView.html\'"></div>\n                        </div>\n                    </uib-tab>\n\n                    <uib-tab heading="Campuses">\n                        <div class="panel-body">\n                            <div ng-include="\'/scripts/components/profiles/shared/campuses/sharedProfileCampusesView.html\'"></div>\n                        </div>\n                    </uib-tab>\n                </uib-tabset>\n            </div>\n        </div>\n\n        <div ng-show="isGeneralTabActive() && showGeneralHistoryBlock" class="col-sm-4">\n            <div ng-include="\'/scripts/components/profiles/shared/general/sharedProfileGeneralHistoryView.html\'"></div>\n        </div>\n\n        <div ng-show="isCampusesTabActive() && showCampusForm" class="col-sm-4" fixed-element-while-scrolling="#campusesTable">\n            <div ng-include="\'/scripts/components/profiles/shared/campuses/sharedProfileCampusFormView.html\'"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresSidebarView.html",'<div class="ibox" ng-class="getSelected() === 4 ? \'selected\' : \'collapsed\'"  ng-controller="TmMediaBrochuresSidebarController as TmMediaBrochuresSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(4)">\n        <h5>Brochures ({{getBrochureItems().length}})</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <div class="addForm">\n            <form class="form-horizontal" name="forms.formBrochure" id="form-brochure" novalidate>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please add your brochure title and link.</span><br />\n                        <span>Drag and drop brochures from left to right to change the order.</span>\n                    </p>\n                </div>\n\n                <div>\n                    <div class="form-group" ng-class="{\'has-errors\': isInvalidTitle}">\n                        <label class="control-label col-sm-3 col-md-2">\n                            <span>Title *</span>\n                            <small>110 characters</small>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input class="form-control"\n                                   name="brochure-title"\n                                   maxlength="110"\n                                   ng-required="required"\n                                   type="text"\n                                   focus-if="isHighlighted"\n                                   focus-delay="250"\n                                   ng-focus="setIsInvalidTitle(false)"\n                                   ng-model="selectedBrochure.name"\n\n                                   custom-popover\n                                   popover-html="Add a brochure title"\n                                   popover-placement="left"\n                                   popover-trigger="manual"\n                                   popover-visibility="{{isInvalidTitle ? true : false}}"/>\n                        </div>\n                    </div>\n\n                    <div class="form-group" ng-class="{\'has-errors\': isInvalidUrl}">\n                        <label class="control-label col-sm-3 col-md-2">\n                            <span>URL *</span>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input class="form-control"\n                                   name="url"\n                                   type="url"\n                                   placeholder="http://"\n                                   ng-required="required"\n                                   ng-model="selectedBrochure.url"\n                                   ng-pattern="TmMediaBrochuresSidebarController.urlPattern"\n                                   ng-focus="setIsInvalidUrl(false)"\n                                   ng-keyup="TmMediaBrochuresSidebarController.onKeyUp($event)"\n\n                                   custom-popover\n                                   popover-html="Add a valid brochure link"\n                                   popover-placement="left"\n                                   popover-trigger="manual"\n                                   popover-visibility="{{isInvalidUrl ? true : false}}"/>\n                        </div>\n                    </div>\n                    <div class="form-group m-b-none">\n                        <div class="col-sm-12">\n                            <button class="btn btn-primary pull-right" ng-click="saveBrochureForm(selectedBrochure)">\n                                <i class="fa fa-check-circle"></i>\n                                <span>{{isEditMode() ? \'Update\' : \'Save\'}}</span>\n                            </button>\n                            <button class="btn btn-default pull-right" ng-click="clearBrochureForm(selectedBrochure)">\n                                <i class="fa fa-ban"></i>\n                                <span>Clear</span>\n                            </button>\n                            \n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresView.html",'<div ng-controller="TmMediaBrochuresController">\n    <h3 class="heading">Brochures ({{brochureItems.length}})</h3>\n    <div class="tab-body">\n        <div class="gallery">\n            <div class="grid-view upload" ng-class="selectedItem().id === \'\' ? \'selected\' : \'unselected\'" ng-click="selectBrochure()" ng-click="selectBrochure()">\n                <div class="source-link">\n                    <i class="fa fa-plus"></i>\n                </div>\n            </div>\n\n            <div ui-sortable="sortableOptions" ng-model="filteredBrochureItems">\n                <div class="grid-view" ng-class="selectedItem().id === item.id ? \'selected\' : \'unselected\'"\n                     ng-click="selectBrochure(item)" ng-repeat="item in filteredBrochureItems">\n                    \n                    <div class="preview" ng-class="item.imageUrl ? \'\' : \'overlay\' ">\n                        <img ng-src="{{item.imageUrl || \'/images/media/pdf-thumbnail.jpg\'}}"/>\n                    </div>\n                    \n                    <div class="info">\n                        <div class="title" item-order="{{item[\'orderType\'][type]}}">{{item.name}}</div>\n                        <div class="types">\n                            <i class="fa fa-book" ng-show="item.master"></i>\n                        </div>\n                        <div class="actions">\n                            <a href="{{item.url}}" target="_blank" title="View {{item.name}}">\n                                <i class="fa fa-search"></i>\n                            </a>\n                            <a ng-click="deleteBrochure(item)" title="Delete {{item.name}}">\n                                <i class="fa fa-times-circle"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesSidebarView.html",'<div class="ibox" ng-class="getSelected() === 1 ? \'selected\' : \'collapsed\'" ng-controller="TmMediaImagesSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(1)">\n        <h5>Images ({{getImageItems().length}})</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <div class="addForm" ng-class="getImageUploadingInProgress() ? \'modal-overlay\' : \'\' ">\n            <form class="form-horizontal" name="forms.formImage" id="form-image" novalidate>\n                <div class="alert alert-info" ng-hide="selectedImage.id.length > 0">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please click on the upload sign to upload an image or drag and drop image into it.</span>\n                    </p>\n                </div>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>File must be: Less than 400KB / in jpg, jpeg format.</span><br />\n                        <span>Images are scaled to 703 x 398 on front-end site.</span><br />\n                        <span>Drag and drop images from left to right to change the order.</span>\n                    </p>\n                </div>\n\n                <div ng-show="selectedImage.id.length > 0">\n                    <div class="form-group">\n                        <label class="control-label col-sm-3 col-md-2" for="title">\n                            <span>Title</span>\n                            <small>110 characters</small>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input class="form-control" name="title" id="title" placeHolder="Add title" maxlength="110" type="text" ng-model="selectedImage.name" focus-if="isHighlighted" focus-delay="250" />\n                        </div> \n                    </div>\n\n                    <div class="form-group">\n                        <label class="control-label col-sm-3 col-md-2" for="description">\n                            <span>Description</span>\n                            <small>160 characters</small>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <textarea class="form-control" name="description" placeHolder="Add description" id="description" maxlength="160" ng-model="selectedImage.description"></textarea>\n                        </div>\n                    </div>\n\n                    <div class="form-group  m-b-none">\n                        <div class="col-sm-12">\n                            <button class="btn btn-primary pull-right" ng-class="{\'disabled\': submitInProgress()}" ng-click="saveImageForm(selectedImage)">\n                                <i class="fa fa-check-circle"></i>\n                                <span>Update</span>\n                            </button>\n                            <button class="btn btn-default pull-right" ng-class="{\'disabled\': submitInProgress()}" ng-click="clearImageForm(selectedImage)">\n                                <i class="fa fa-ban"></i>\n'+"                                <span>{{isEditMode() ? 'Clear' : 'Cancel'}}</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n"),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesView.html",'<div ng-controller="TmMediaImagesController as TmMediaImagesController">\n    <h3 class="heading">Images ({{imageItems.length}}/48)</h3>\n    <div class="tab-body">\n        <div class="gallery">\n            <div class="grid-view upload" ng-class="isSelected() ? \'selected\' : \'unselected\'" ng-click="selectImage()">\n                <div ng-show="!isTemporary()">\n                    <form name="forms.imageForm"\n                        class="clearfix dropzone image-form"\n                        enctype="multipart/form-data"\n                        ng-dropzone dropzone="TmMediaImagesController.dropZoneImageInstance"\n                        dropzone-config="imageConfig.dropzone"\n                        event-handlers="imageConfig.eventHandlers"\n                        novalidate >\n                        <div class="upload-image">\n                            <i class="fa fa-upload" aria-hidden="true"></i>\n                        </div>\n                        <div class="fallback">\n                            <input name="file" type="file" />\n                        </div>\n                        <div class="dz-message" ng-show="uploadEnabled">\n                            <i class="fa fa-upload"></i>\n                        </div>\n                        <div class="dropzone-previews"></div>\n                    </form>\n                </div>\n\n                <div class="preview" ng-show="isTemporary()">\n                    <img ng-src="{{item.thumbnailUrl || \'/images/media/media-image.png\'}}" />\n                </div>\n                \n                <div class="info" ng-show="isTemporary()" ng-class="getImageUploadingInProgress() ? \'modal-overlay\' : \'\' ">\n                    <div class="title" item-order="{{item[\'orderType\'][type]}}">\n                        {{item.name}}\n                    </div>\n                    <div class="types">\n                        <i class="fa fa-book" ng-show="item.master"></i>\n                    </div>\n                    <div class="actions">\n                        <a href="{{item.url}}" target="_blank" title="View {{item.name}}">\n                            <i class="fa fa-search"></i>\n                        </a>\n                        <a ng-click="deleteImage(item)" title="Delete {{item.name}}">\n                            <i class="fa fa-times-circle"></i>\n                        </a>\n                    </div>\n                </div>\n            </div>\n\n            <div ui-sortable="sortableOptions" ng-model="imageItems">\n                <div class="grid-view" ng-class="selectedItem().id === item.id ? \'selected\' : \'unselected\'" ng-click="selectImage(item)" ng-repeat="item in imageItems">\n                    <div class="preview">\n                        <img ng-src="{{item.thumbnailUrl || \'/images/media/media-image.png\'}}" />\n                    </div>\n                    <div class="info">\n                        <div class="title" item-order="{{item[\'orderType\']}}">\n                            {{item.name}}\n                        </div>\n                        <div class="types">\n                            <i class="fa fa-book"></i>\n                        </div>\n                        <div class="actions">\n                            <a ng-click="openLightboxModal($index, item)" title="View {{item.name}}">\n                                <i class="fa fa-search"></i>\n                            </a\n                            >\n                            <a ng-click="deleteImage(item)" title="Delete {{item.name}}">\n                                <i class="fa fa-times-circle"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaSidebarView.html",'<div class="ibox" ng-class="getSelected() === 3 ? \'selected\' : \'collapsed\'" ng-controller="TmMediaSocialMediasSidebar as TmMediaSocialMediasSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(3)">\n        <h5>Social Media</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <p class="bold text-capitalize">{{type()}}</p>\n\n        <div class="addForm social-media-form">\n            <form class="form-horizontal" name="forms.formSocialMedia" id="form-social-media" novalidate>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please add your</span>\n                        <span class="text-capitalize">{{type() === "other" ? "Website" : type()}}</span>\n                        <span>link, e.g.</span>\n                        <span class="text-nowrap">{{TmMediaSocialMediasSidebarController.selectedSocialMediaUrl}}</span>\n                    </p>\n                </div>\n\n                <div ng-repeat="selectedSocialMedia in selectedSocialMedia[type()]">\n                    <div ng-show="selectedSocialMedia.display">\n                        \n                        <div class="form-group" ng-class="{\'has-errors\': invalidFields[$index]}">\n                            <label class="control-label col-sm-3 col-md-2">\n                                <span>URL</span>\n                            </label>\n                            <div class="col-sm-9 col-md-10">\n                                <input class="form-control"\n                                       name="url{{$index}}"\n                                       type="url"\n                                       focus-if="(isHighlighted && $index === 0) ? true : false"\n                                       focus-delay="250"\n                                       placeholder="http://"\n                                       ng-pattern="TmMediaSocialMediasSidebarController.urlPattern"\n                                       ng-focus="resetInvalidField($index)"\n                                       ng-model="selectedSocialMedia.url"\n                                       ng-keyup="TmMediaSocialMediasSidebarController.onKeyUp($event, type(), $index)"\n\n                                       custom-popover\n                                       popover-trigger="manual"\n                                       popover-visibility="{{invalidFields[$index]}}"\n                                       popover-html="Add a valid <span class=\'text-capitalize\'>{{type() === \'other\' ? \'Website\' : type()}}</span> link"\n                                       popover-placement="left"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group m-b-none">\n                    <div class="col-sm-12">\n                        <button class="btn btn-primary pull-right" ng-click="saveSocialMediaForm()">\n                            <i class="fa fa-check-circle"></i>\n                            <span>{{isEditMode(type()) ? \'Update\' : \'Save\'}}</span>\n                        </button>\n                        <button class="btn btn-default pull-right" ng-click="clearSocialMediaForm()">\n                            <i class="fa fa-ban"></i>\n                            <span>Clear</span>\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaView.html",'<div ng-controller="TmMediaSocialMediasController">\n    <h3 class="heading">Social Media</h3>\n\n    <div class="tab-body">\n        <div class="gallery">\n            <div class="grid-view" ng-repeat="(key, item) in socialMediaItems" ng-class="type === key ? \'selected\' : \'unselected\'" ng-click="selectSocialMedia(key)">\n                <div class="add-link" ng-class="item.master ? \'hidden\' : \'visible\'">\n                    <i class="fa fa-plus"></i>\n                </div>\n\n                <div class="preview" ng-class="item.master ? \'\' : \'overlay\'">\n                    <img ng-src="/images/media/{{key}}-thumbnail.jpg"/>\n                </div>\n\n                <div class="info">\n                    <div class="title text-capitalize">{{key}}</div>\n                    <div class="types">\n                        <i class="fa fa-book" ng-show="item.master"></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosSidebarView.html",'<div class="ibox" ng-class="getSelected() === 2 ? \'selected\' : \'collapsed\'" ng-controller="TmMediaVideosSidebarController as TmMediaVideosSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(2)">\n        <h5>Videos ({{getVideoItems().length}})</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <div class="addForm">\n            <form class="form-horizontal" name="forms.formVideo" id="form-video" novalidate>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please add a YouTube link. Shortened video links with .be extension are not allowed.</span><br />\n                        <span>Video title & description will be retrieved from YouTube.</span><br />\n                        <span>Drag and drop videos from left to right to change the order.</span>\n                    </p>\n                </div>\n                <div>\n                    <div class="form-group" ng-class="{\'has-errors\': getHasErrors()}">\n                        <label class="control-label col-sm-3 col-md-2" for="url">\n                            <span>URL *</span>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input name="url" id="url" class="form-control"\n                                   ng-required="required"\n                                   focus-if="isHighlighted"\n                                   focus-delay="250"\n                                   type="url"\n                                   placeholder="http://"\n                                   ng-model="selectedVideo.url"\n                                   ng-pattern="youtubeUrlPattern"\n                                   ng-keyup="TmMediaVideosSidebarController.onKeyUp($event)"\n\n                                   custom-popover\n                                   popover-html="Add a valid YouTube link"\n                                   popover-placement="left"\n                                   popover-trigger="manual"\n                                   popover-visibility="{{getHasErrors() ? true : false}}"\n                                   ng-focus="setHasErrors(false)" />\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <div class="col-sm-12">\n                            <button class="btn btn-primary pull-right" ng-click="saveVideoForm(selectedVideo)">\n                                <i class="fa fa-check-circle"></i>\n                                <span>{{isEditMode() ? \'Update\' : \'Save\'}}</span>\n                            </button>\n                            <button class="btn btn-default pull-right" ng-click="clearVideoForm(selectedVideo)">\n                                <i class="fa fa-ban"></i>\n                                <span>Clear</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosView.html",'<div ng-controller="TmMediaVideosController">\n    <h3 class="heading">Videos ({{videoItems.length}})</h3>\n    <div class="tab-body">\n        <div class="gallery">\n            <div class="grid-view upload" ng-class="selectedItem().id === \'\' ? \'selected\' : \'unselected\'" ng-click="selectVideo()" ng-click="selectVideo()">\n                <div class="source-link">\n                    <i class="fa fa-plus"></i>\n                </div>\n            </div>\n\n            <div ui-sortable="sortableOptions" ng-model="filteredVideoItems">\n                <div class="grid-view" ng-class="selectedItem().id === item.id ? \'selected\' : \'unselected\'" ng-click="selectVideo(item)" ng-repeat="item in filteredVideoItems">\n                    <div class="preview" ng-class="item.imageUrl ? \'\' : \'overlay\' ">\n                        <img ng-src="{{item.imageUrl || \'/images/media/youtube-thumbnail.jpg\'}}" />\n                    </div>\n\n                    <div class="info">\n                        <div class="title" item-order="{{item[\'orderType\'][type]}}">\n                            {{item.name || \'Retrieving title...\' }}\n                        </div>\n                        <div class="types">\n                            <i class="fa fa-book" ng-show="item.master"></i>\n                        </div>\n                        <div class="actions">\n                            <a href="{{item.url}}" target="_blank" title="View {{item.name}}">\n                                <i class="fa fa-search"></i>\n                            </a>\n                            <a ng-click="deleteVideo(item)" title="Delete {{item.name}}">\n                                <i class="fa fa-times-circle"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/tmProfileMediaLinkManagerView.html",'<div class="nested-ibox" ng-hide="showUpgradeForm" ng-controller="TmMediaCommonSidebarController">\n    <div class="ibox-title m-t-xl">\n        <h4>Media Manager ({{getGeneralCounter()}})</h4>\n    </div>\n    <div class="ibox">\n        <div class="ibox-content">\n            <div include-replace ng-include src="\'/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesSidebarView.html\'"></div>\n            <div include-replace ng-include src="\'/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosSidebarView.html\'"></div>\n            <div include-replace ng-include src="\'/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaSidebarView.html\'"></div>\n            <div include-replace ng-include src="\'/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresSidebarView.html\'"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/media/tmProfileMediaView.html",'<div ng-controller="TmProfileMediaController as TmProfileMediaController">\n    <div upgrade-banner\n         info-block-class="TmProfileMediaController.isRightSidePanelActive() ? \'col-lg-9\' : \'col-lg-10\'"\n         buttons-block-class="TmProfileMediaController.isRightSidePanelActive() ? \'col-lg-3\' : \'col-lg-2\'"\n         basic-profile="!tmIsAdvanced ? true : false"\n         upgrade-email="{{upgradeEmailsTo}}"\n         upgrade-click="TmProfileController.toggleUpgradeForm()"></div>\n\n    <div ng-class="tmIsAdvanced ? \'\': \'modal-overlay-35\'">\n        <div wave-spinner class="wave-spinner" ng-show="isMediaReloading"></div>\n        <div ng-if="!isMediaReloading">\n            <div ng-show="TmProfileMediaController.isImagesTabActive()" ng-include src="\'/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesView.html\'"></div>\n            <div ng-show="TmProfileMediaController.isVideosTabActive()" ng-include src="\'/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosView.html\'"></div>\n            <div ng-show="TmProfileMediaController.isSocialMediaTabActive()" ng-include src="\'/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaView.html\'"></div>\n            <div ng-show="TmProfileMediaController.isBrochuresTabActive()" ng-include src="\'/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresView.html\'"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqHistoryLogView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>History Log <small>showing last {{TmProfileController.overviewLog.totalFiltered}} records of {{TmProfileController.overviewLog.totalMatching}}</small></h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="TmProfileController.closeHistoryLogs()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner ng-show="TmProfileController.fetchingHistoryLogsInProgress"></div>\n\n        <p class="text-muted text-center" ng-show="!TmProfileController.fetchingHistoryLogsInProgress && !TmProfileController.overviewLog.total">\n            History log is empty\n        </p>\n\n        <div ng-show="!TmProfileController.fetchingHistoryLogsInProgress" ng-repeat="logs in TmProfileController.overviewLog.results">\n            <ul class="list-unstyled list-history break-word">\n                <li ng-if="logs.modifiedAt">\n                    <span class="bold">Modified on:</span>\n                    <span>{{logs.modifiedAt| date:\'medium\'}}</span>\n                </li>\n                <li ng-if="logs.modifiedByFullName">\n                    <span class="bold">Submitted by:</span>\n                    <span>{{logs.modifiedByFullName}}</span>\n                </li>\n                <li ng-repeat="log in logs.faq">\n                    <div>\n                        <span class="bold">Question {{$index + 1}}/{{TmProfileController.maxFaqItems}}:</span>\n                        <span>{{log.question | htmlToPlaintext}}</span>\n                    </div>\n                    <div>\n                        <span class="bold">Answer {{$index + 1}}/{{TmProfileController.maxFaqItems}}:</span>\n                        <span>{{log.answer | htmlToPlaintext}}</span>\n                    </div>\n                </li>\n            </ul>\n            \n            <div class="separator dashed"></div>\n\n        </div>\n\n        <div class="row" ng-show="TmProfileController.isMoreLogsAvailable()">\n            <div wave-spinner class="text-right" ng-show="TmProfileController.isLoadMoreHistoryLogsInProgress"></div>\n            <div class=" col-lg-8 col-lg-offset-2">\n                <a class="btn btn-primary btn-block" ng-click="TmProfileController.handleLoadMoreHistoryLogs()" ng-disabled="TmProfileController.isLoadMoreHistoryLogsInProgress">\n                   Load more\n                </a>\n            </div>\n        </div>\n    </div>\n\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqView.html",'<div class="alert alert-info">\n    <p>\n        <i class="fa fa-info-circle"></i>\n        <span>You can add up to five FAQs. These will display in the order they are added below.</span>\n    </p>\n</div>\n<div class="tab-header">\n    <div wave-spinner ng-show="historyDisabled"></div>\n    <h3 class="heading"><span class="sr-only">FAQ</span></h3>\n    <a class="btn btn-warning btn-history" ng-show="!historyDisabled" ng-click="TmProfileOverviewController.handleTmFaqHistoryLogClick()">\n        <i class="fa fa-clock-o"></i>\n    </a>\n</div>\n<div class="tab-body">\n    <div ng-controller="TmProfileOverviewFaqController as TmProfileOverviewFaqController">\n        <form enctype="multipart/form-data">\n            <div ng-repeat="item in TmProfileOverviewFaqController.items track by $index">\n                <div ng-if="TmProfileOverviewFaqController.isItemVisible($index)">\n                    <div class="form-group">\n                        <label>Question {{$index + 1}}/{{TmProfileOverviewFaqController.maxItems}}</label>\n                        <input type="text" class="form-control" placeholder="e.g. How do I apply for the X program at X Business School?" ng-model="faq[$index].question" />\n                    </div>\n                    <div class="form-group">\n                        <label>Answer</label>\n                        <summernote\n                            config="TmProfileOverviewFaqController.textEditorAdvancedOptions"\n                            ng-model="faq[$index].answer"\n                            on-init="TmProfileOverviewFaqController.handleTextEditorChanges($index, faq[$index].answer)"\n                            on-change="TmProfileOverviewFaqController.handleTextEditorChanges($index, contents)"\n                            count-word="controller.wordsCounters[$index]">\n                        </summernote>\n                    </div>\n                    <div class="editor-note form-group">\n                        <span ng-class="{\'text-red\': TmProfileOverviewFaqController.isInvalidAnswer($index, faq[$index].answer)}">\n                            <span class="bold">\n                                <ng-pluralize count="TmProfileOverviewFaqController.wordsCounters[$index] || 0" when="{\'one\': \'1 word inserted\',\'other\': \'{} words inserted\'}"></ng-pluralize>\n                            </span>\n                        </span>\n                        <span class="pull-right">Maximum {{TmProfileOverviewFaqController.wordsLimit}} words</span>\n                    </div>\n                    <div class="actions m-b-md">\n                        <a class="btn btn-danger"\n                           ng-class="{\'disabled\': TmProfileOverviewFaqController.isRemoveDisabled($index)}"\n                           ng-click="TmProfileOverviewFaqController.handleRemoveClick($index)">\n                            <i class="fa fa-ban"></i>\n                            <span>Delete FAQ</span>\n                        </a>\n                        <a class="btn btn-primary"\n                           ng-show="TmProfileOverviewFaqController.showAddFaq($index)"\n                           ng-class="{\'disabled\': programsTabSubmitInProgress || faq.length === 5}"\n                           ng-click="TmProfileOverviewFaqController.handleAddClick()">\n                            <i class="fa fa-plus"></i>\n                            <span>Add FAQ</span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class="tab-footer">\n                <a class="btn btn-primary pull-right" ng-click="TmProfileOverviewFaqController.handleUpdateClick()">\n                    <i class="fa fa-check-circle"></i>\n                    <span>Update</span>\n                </a>\n            </div>\n        </form>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/overview/overview/tmProfileOverviewAdvancedOverviewView.html",'<form name="forms.overviewAdvancedForm" enctype="multipart/form-data">\n    <div class="tab-header">\n        <div wave-spinner ng-show="historyDisabled"></div>\n        <h3 class="heading">Advanced Description *</h3>\n        <a class="btn btn-warning btn-history" ng-show="!historyDisabled" ng-click="TmProfileOverviewController.handleTmOverviewHistoryLogClick(true)">\n            <i class="fa fa-clock-o"></i>\n        </a>\n    </div>\n\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': TmProfileOverviewController.isOverviewInvalid()}">\n            <summernote\n                config="TmProfileOverviewController.textEditorAdvancedOptions"\n                ng-model="tmProfile.advancedOverview"\n                on-focus="TmProfileOverviewController.setOverviewInvalid(\'advancedTmOverview\')"\n                on-change="TmProfileOverviewController.advancedOverviewWords = countWords(contents)"\n                on-init="TmProfileOverviewController.advancedOverviewWords = countWords(tmProfile.advancedOverview)"\n                count-word="TmProfileOverviewController.advancedOverviewWords">\n            </summernote>\n        </div>\n\n        <div class="editor-note form-group">\n            <span ng-class="{\'text-red\': TmProfileOverviewController.isAdvancedOverviewInvalid(TmProfileOverviewController.advancedOverviewWords)}">\n                <span class="bold">{{TmProfileOverviewController.advancedOverviewWords}}</span>\n                <span>words inserted</span>\n            </span>\n            <span class="pull-right">Maximum {{TmProfileOverviewController.advancedDescriptionWordLimit}} words</span>\n\n            <div\n                focus-delay="250"\n                custom-popover\n                popover-html="Add a general description about your business school"\n                popover-placement="left"\n                popover-trigger="manual"\n                popover-visibility="{{isAdvancedTmOverviewEmpty ? true : false}}">\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class="separator"></div>\n\n<div  class="row">\n    <div class="col-lg-6 form-group">\n        <div>\n            <h3>University Website</h3>\n        </div>\n        <input type="text"\n           placeholder="http://"\n           ng-model="tmProfile.websiteUrl"\n           ng-keyup="TmProfileOverviewController.onKeyUp($event)"\n           class="form-control" />\n    </div>\n    <div class="col-lg-6 form-group">\n        <div class="display-inline-request-info margin-right-30">\n            <h3 class="inline">Request info - Email</h3>\n        </div>\n\n        <div class="form-group">\n            <input type="email" placeholder="Email" ng-model="tmProfile.requestInfoEmail" class="form-control" >\n        </div>\n    </div>\n</div>\n\n<div class="tab-footer">\n    <a class="btn btn-primary pull-right"\n       ng-class="{\'disabled\': overviewAdvancedFormSubmitInProgress}"\n       ng-click="handleOverviewAdvancedDataSubmit()">\n       <i class="fa fa-check-circle"></i>\n       <span>Update</span>\n    </a>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/overview/overview/tmProfileOverviewBasicOverviewView.html",'<form name="forms.overviewBasicForm" enctype="multipart/form-data">\n    <div class="tab-header">\n      <div wave-spinner ng-show="historyDisabled"></div>\n      <h3 class="heading">Basic Description *</h3>\n      <a class="btn btn-warning btn-history" ng-show="!historyDisabled" ng-click="TmProfileOverviewController.handleTmOverviewHistoryLogClick()">\n        <i class="fa fa-clock-o"></i>\n      </a>\n    </div>\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': TmProfileOverviewController.isOverviewInvalid()}">\n            <summernote\n                config="TmProfileOverviewController.textEditorBasicOptions"\n                ng-model="tmProfile.basicOverview"\n                on-focus="TmProfileOverviewController.setOverviewInvalid(\'basicTmOverview\')"\n                on-change="TmProfileOverviewController.basicOverviewWords = countWords(contents)"\n                on-init="TmProfileOverviewController.basicOverviewWords = countWords(tmProfile.basicOverview)"\n                count-word="TmProfileOverviewController.basicOverviewWords">\n            </summernote>\n        </div>\n\n      <div class="editor-note form-group">\n        <span ng-class="{\'text-red\': TmProfileOverviewController.isBasicOverviewInvalid(TmProfileOverviewController.basicOverviewWords)}">\n          <span class="bold">{{TmProfileOverviewController.basicOverviewWords}}</span>\n          <span>words inserted</span>\n        </span>\n        <span class="pull-right">Maximum {{TmProfileOverviewController.basicDescriptionWordLimit}} words</span>\n        \n        <div\n            focus-delay="250"\n            custom-popover\n            popover-html="Add a general description about your business school"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{isBasicTmOverviewEmpty ? true : false}}">\n        </div>\n      </div>\n\n      <div class="tab-footer">\n        <a class="btn btn-primary pull-right"\n          ng-class="{\'disabled\': overviewBasicFormSubmitInProgress}"\n          ng-click="handleOverviewBasicDataSubmit()">\n          <i class="fa fa-check-circle"></i>\n          <span>Update</span>\n        </a>\n      </div>\n    </div>\n\n</form>\n\n<div upgrade-banner\n     info-block-class="isRightSidePanelActive() ? \'col-lg-9\' : \'col-lg-10\'"\n     buttons-block-class="isRightSidePanelActive() ? \'col-lg-3\' : \'col-lg-2\'"\n     basic-profile="true"\n     upgrade-email="{{upgradeEmailsTo}}"\n     upgrade-click="TmProfileController.toggleUpgradeForm()"></div>\n\n<div class="separator"></div>\n\n<div class="locked">\n    <div  class="row">\n        <div class="col-lg-6 form-group">\n            <div>\n                <h3>University Website</h3>\n            </div>\n            <input type="text"\n               disabled\n               placeholder="http://"\n               ng-model="tmProfile.websiteUrl"\n               class="form-control" />\n        </div>\n        <div class="col-lg-6 form-group">\n            <div class="display-inline-request-info margin-right-30">\n                <h3 class="inline">Request info - Email</h3>\n            </div>\n\n            <div class="form-group">\n                <input type="email"\n                   disabled\n                   placeholder="Email"\n                   ng-model="tmProfile.requestInfoEmail"\n                   class="form-control">\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/overview/overview/tmProfileOverviewHistoryLogView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>History Log <small>showing last {{TmProfileController.overviewLog.totalFiltered}} records of {{TmProfileController.overviewLog.totalMatching}}</small></h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="TmProfileController.closeHistoryLogs()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner ng-show="TmProfileController.fetchingHistoryLogsInProgress"></div>\n\n        <p class="text-muted text-center" ng-show="!TmProfileController.fetchingHistoryLogsInProgress && !TmProfileController.overviewLog.total">\n            History log is empty\n        </p>\n\n        <div ng-show="!TmProfileController.fetchingHistoryLogsInProgress" ng-repeat="log in TmProfileController.overviewLog.results">\n            <ul class="list-unstyled list-history break-word">\n                <li ng-if="log.modifiedAt">\n                    <span class="bold">Modified on:</span>\n                    <span>{{log.modifiedAt| date:\'medium\'}}</span>\n                </li>\n                <li ng-if="log.modifiedByFullName">\n                    <span class="bold">Submitted by:</span>\n                    <span>{{log.modifiedByFullName}}</span>\n                </li>\n                <li ng-show="!log.advanced">\n                    <span class="bold">Basic Description:</span>\n                    <span>{{log.basicOverview | htmlToPlaintext}}</span>\n                </li>\n                <li ng-show="log.advanced">\n                    <span class="bold">Advanced Description:</span>\n                    <span>{{log.advancedOverview | htmlToPlaintext}}</span>\n                </li>\n                <li ng-show="log.advanced">\n                    <span class="bold">University Website:</span>\n                    <a ng-show="log.websiteUrl" href="{{log.websiteUrl}}" target="_blank">{{log.websiteUrl}}</a>\n                </li>\n                <li ng-show="log.advanced">\n                    <span class="bold">Request info - Email:</span>\n                    <span>{{log.requestInfoEmail}}</span>\n                </li>\n            </ul>\n\n            <div class="separator dashed"></div>\n\n        </div>\n\n        <div class="row" ng-show="TmProfileController.isMoreLogsAvailable()">\n            <div wave-spinner ng-show="TmProfileController.isLoadMoreHistoryLogsInProgress"></div>\n            <div class=" col-lg-8 col-lg-offset-2">\n                <a class="btn btn-primary btn-block" ng-click="TmProfileController.handleLoadMoreHistoryLogs()" ng-disabled="TmProfileController.isLoadMoreHistoryLogsInProgress">\n                   Load more\n                </a>\n            </div>\n        </div>\n    </div>\n\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/overview/tmProfileOverviewView.html",'<div ng-controller="TmProfileOverviewController as TmProfileOverviewController">\n    <div class="tabs-container">\n        <uib-tabset active="activeOverviewSubTab">\n            <uib-tab heading="Overview">\n                <div class="panel-body">\n                    <div ng-if="tmIsAdvanced" ng-include src="\'/scripts/components/profiles/tm/overview/overview/tmProfileOverviewAdvancedOverviewView.html\'"></div>\n                    <div ng-if="!tmIsAdvanced" ng-include src="\'/scripts/components/profiles/tm/overview/overview/tmProfileOverviewBasicOverviewView.html\'"></div>\n                </div>\n            </uib-tab>\n            <uib-tab heading="FAQ">\n                <div class="panel-body">\n                    <div ng-if="!tmIsAdvanced"\n                         upgrade-banner\n                         info-block-class="isRightSidePanelActive() ? \'col-lg-9\' : \'col-lg-10\'"\n                         buttons-block-class="isRightSidePanelActive() ? \'col-lg-3\' : \'col-lg-2\'"\n                         basic-profile="true"\n                         upgrade-email="{{upgradeEmailsTo}}"\n                         upgrade-click="TmProfileController.toggleUpgradeForm()"></div>\n\n                    <div ng-class="{\'modal-overlay-35\': !tmIsAdvanced}"\n                         ng-include src="\'/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqView.html\'"></div>\n                </div>\n            </uib-tab>\n        </uib-tabset>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/program-stats/tmProfileProgramStatsView.html",'<div class="ibox m-b-none" ng-controller="TmProfileProgramStatsController as TmProfileProgramStatsController">\n    <div class="ibox-content">\n        <ng-form name="TmProfileProgramStatsController.forms.addProgramStatsForm" class="clearfix" novalidate autocomplete="off">\n\n            <div class="form-group row" ng-if="!TmProfileProgramStatsController.isSchoolUser">\n                <div class="col-md-3"><label>Program ID</label>  {{programId}}</div>\n                <div class="col-md-2"><label>Node ID</label>  {{program.nodeId}}</div>\n                <div class="col-md-2"><label>Core ID</label>  {{program.coreId}}</div>\n                <div class="col-md-2"><label>Institution Core ID</label>  {{program.institutionCoreId}}</div>\n                <div class="col-md-3"><label>Status</label>  {{program.status}}</div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n            <div class="form-group row">\n                <label class="col-sm-2">Specialisation/s</label>\n                <div class="col-sm-10">\n                    <ui-select\n                        multiple\n                        close-on-select="false"\n                        ng-model="specialisations"\n                        theme="bootstrap"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$item.name}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.handle as option in TmProfileProgramStatsController.specialisationsList | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n\n            <div class="form-group row">\n                <label class="col-sm-2">Average GMAT score for your cohort</label>\n                <div class="col-sm-4">\n                    <input type="text" class="form-control" name="avgGmat"\n                           ng-model="stats.avgGmat"\n                           ng-class="{\'border-red\': !TmProfileProgramStatsController.isValidAverageGmat()}"\n                           ng-focus="TmProfileProgramStatsController.setValid(\'avgGmat\', true)"\n                           custom-popover\n                           popover-html="Enter values between 400-800"\n                           popover-placement="bottom"\n                           popover-trigger="manual"\n                           popover-visibility="{{!TmProfileProgramStatsController.isValidAverageGmat()}}"\n                    >\n                </div>\n                <label class="col-sm-2">Tuition fee range for the full MBA course (USD)</label>\n                <div class="col-sm-4">\n                    <ui-select\n                        ng-model="stats.tuitionRange"\n                        theme="bootstrap"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.feesRangesList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n            <div class="form-group row">\n                <label class="col-sm-2">Start month/s</label>\n                <div class="col-sm-4">\n                    <ui-select\n                        multiple\n                        limit="4"\n                        close-on-select="false"\n                        ng-model="stats.startDates"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$item.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.monthsList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n                <label class="col-sm-2">Length of your program in months</label>\n                <div class="col-sm-4">\n                    <ui-select\n                        ng-model="stats.programLength"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.lengthList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n\n            <div class="form-group row">\n                <label class="col-sm-2">Accreditation/s</label>\n                <div class="col-sm-4">\n                    <ui-select\n                        multiple\n                        limit="3"\n                        close-on-select="false"\n                        ng-model="stats.accreditations"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$item.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.accreditationsList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n                <label class="col-sm-2">\n                    Number of students on your program (Class size)\n                </label>\n                <div class="col-sm-4">\n                    <input type="text" class="form-control" name="classSize"\n                       ng-model="stats.classSize"\n                       ng-class="{\'border-red\': !TmProfileProgramStatsController.isValidClassSize()}"\n                       ng-focus="TmProfileProgramStatsController.setValid(\'classSize\', true)"\n                       custom-popover\n                       popover-html="Enter values between 1-2000"\n                       popover-placement="bottom"\n                       popover-trigger="manual"\n                       popover-visibility="{{!TmProfileProgramStatsController.isValidClassSize()}}"\n                    >\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n\n            <div class="form-group row">\n                <label class="col-sm-2">\n                    % of International students\n                </label>\n                <div class="col-sm-4">\n                    <ui-select\n                        ng-model="stats.percentInternationalStudents"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.percentList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n                <label class="col-sm-2">\n                    Average age of students in your cohort\n                </label>\n                <div class="col-sm-4">\n                    <ui-select\n                        ng-model="stats.avgStudentAge"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.yearList1850 | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n\n            <div class="form-group row">\n                <label class="col-sm-2">\n                    % of women in your cohort\n                </label>\n                <div class="col-sm-4">\n                    <ui-select\n                        ng-model="stats.percentWomenStudents"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.percentList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n\n                <label class="col-sm-2">\n                    Average years of work experience\n                </label>\n                <div class="col-sm-4">\n                    <ui-select\n                        ng-model="stats.avgWorkExperience"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.yearList020 | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n\n            <div class="form-group row">\n                <label class="col-sm-2">\n                    Average salary 3 months post study (USD)\n                </label>\n                <div class="col-sm-4">\n                    <input type="text" class="form-control" name="avgSalaryAfterGraduation"\n                       ng-model="stats.avgSalaryAfterGraduation"\n                       ng-class="{\'border-red\': !TmProfileProgramStatsController.isValidAverageSalaryAfterGraduation()}"\n                       ng-focus="TmProfileProgramStatsController.setValid(\'avgSalaryAfterGraduation\', true)"\n\n                       custom-popover\n                       popover-html="Enter values between 0-200000"\n                       popover-placement="bottom"\n                       popover-trigger="manual"\n                       popover-visibility="{{!TmProfileProgramStatsController.isValidAverageSalaryAfterGraduation()}}"\n                    >\n                </div>\n\n                <label class="col-sm-2">\n                    % employed 3 months post study\n                </label>\n                <div class="col-sm-4">\n                    <ui-select\n                        ng-model="stats.percentEmploymentAfterGraduation"\n                        theme="bootstrap"\n                        search-enabled="true"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.percentList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n\n            <div class="form-group row">\n                <label class="col-sm-2">\n                    Do you offer a scholarship/s?\n                </label>\n                <div class="col-sm-4">\n                    <ui-select\n                        name="scholorship"\n                        ng-model="stats.offerScholarships"\n                        theme="bootstrap"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.label}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.value as option in TmProfileProgramStatsController.offerScholarshipsList | filter:$select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n\n            <div class="row" ng-class="{\'modal-overlay\': TmProfileProgramStatsController.editInProgress}">\n                <div class="col-sm-12 text-right">\n                    <a ng-click="TmProfileProgramStatsController.handleUpdateClick()" class="btn btn-sm btn-primary">\n                        <i class="fa fa-check-circle"></i> {{TmProfileProgramStatsController.getEditButtonTitle()}}\n                    </a>\n                </div>\n            </div>\n        </ng-form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/programs/datagrid/advancedCellTemplate.html",'<div class="ui-grid-cell-contents no-select text-center" ng-click="$event.stopPropagation()">\n    <i ng-if="row.entity.advanced" class="fa fa-star-o"></i>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/programs/datagrid/rowTemplate.html",'<div grid="grid">\n    <div class="ui-grid-cell pointer"\n        ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name"\n        ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader, \'active\': row.entity.id == grid.appScope.selectedProgramId }"\n        role="{{col.isRowHeader ? \'rowheader\' : \'gridcell\'}}"\n        ui-grid-cell>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/programs/modalDowngradeProgramView.html",'<div class="modal-header">\n    <h3>{{modalOptions.headerText}}</h3>\n</div>\n<div class="modal-body">\n    <div ng-show="modalOptions.showContent()">\n        <p>\n            The advance program currently has an active subscription. The subscription will need to be turned off in order to downgrade.\n            If you wish to continue, press the downgrade button and you will be navigated to the backend of the advance profile\n        </p>\n        <hr>\n        <p>\n            Advanced TM : from <strong>{{modalOptions.tmSubscription.startDate | date:\'short\'}}</strong> to <strong>{{modalOptions.tmSubscription.endDate | date:\'short\'}}</strong>\n        </p>\n    </div>\n\n    <div ng-show="!modalOptions.showContent()">\n        <p>\n            Advanced program does not have an active subscription. Press the downgrade button to downgrade to basic now.\n        </p>\n    </div>\n\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="modalOptions.close()">\n        {{modalOptions.closeButtonText}}\n    </button>\n    <button class="btn btn-primary" ng-click="modalOptions.completeDowngradeClick()">\n'+"        {{modalOptions.showContent() ? 'Downgrade from Backend' : 'Downgrade now'}}\n    </button>\n</div>\n"),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileAddProgramFormCampusView.html",'<div class="ibox">\n    <div class="ibox-title">\n        <h5>Campuses</h5>\n        <div id="program-campuses" class="ibox-tools" expand="TmProfileProgramFormController.showCampus()">\n            <a ng-click="showHide()" class="collapse-link">\n                <i class="fa fa-chevron-down"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content pace-inactive p-b-none">\n        <p ng-class="{\'text-danger\': !TmProfileProgramFormController.isValidCampusAssigned()}">\n            <i class="fa fa-info-circle"></i>\n            <span>Add at least one campus to this program. Editing a Campus does not require Admin permissions and will also edit the Institution campus.</span>\n        </p>\n\n        <div class="form-group">\n            <div class="col-sm-12">\n                <p ng-show="TmProfileProgramFormController.programCampuses.length">\n                    <strong>Campuses currently added to the program:</strong>\n                </p>\n                <ul class="list-unstyled list-campus">\n                    <li class="clearfix"\n                        ng-repeat="campus in TmProfileProgramFormController.programCampuses"\n                        ng-class="{\'locked\': TmProfileProgramFormController.isReadOnly}">\n                        <span>\n                            {{campus.name}}\n                            <i class="fa fa-star"\n                               uib-tooltip=\'Program primary campus\'\n                               tooltip-placement="top"\n                               ng-show="campus.id === TmProfileProgramFormController.program.primaryCampusId">\n                            </i>\n                        </span>\n                        <a class="btn btn-sm btn-outline btn-default pull-right"\n                            ng-click="TmProfileProgramFormController.editCampus($index)">\n                            <span>Edit</span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <div class="col-sm-12">\n                <ui-select\n                    name="campus"\n                    multiple\n                    close-on-select="false"\n                    ng-required="true"\n                    ng-model="TmProfileProgramFormController.newProgram.campus"\n                    theme="bootstrap"\n                    search-enabled="true"\n                    >\n                    <ui-select-match placeholder="Select an Option">{{$item.label}}</ui-select-match>\n                    <ui-select-choices \n                        refresh-delay="1000"\n                        repeat="option.value as option in TmProfileProgramFormController.campusesList | filter:$select.search">\n                        <div ng-bind-html="option.label | highlight: $select.search"></div>\n                    </ui-select-choices>\n                    <ui-select-no-choice>\n                        Not found\n                    </ui-select-no-choice>\n                </ui-select>\n            </div>\n        </div>\n\n        <div class="separator dashed text-center">\n            <span class="text">OR</span>\n        </div>\n\n        <div class="form-group">\n            <div class="col-sm-12">\n                <a class="btn btn-default btn-block"\n                    ng-class="{\'locked\': TmProfileProgramFormController.campusSubmitInProgress}"\n                    ng-click="TmProfileProgramFormController.handleAddCampusClick()">\n                    <i class="fa fa-plus"></i>\n                    <span>Create new campus</span>\n                </a>\n            </div>\n        </div>\n\n        <div ng-show="TmProfileProgramFormController.isCampusFormVisible()">\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileProgramsAddCampusFormView.html\'"></div>\n        </div>\n\n        <div ng-show="TmProfileProgramFormController.isEditCampusFormVisible()">\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileProgramsEditCampusFormView.html\'"></div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileAddProgramFormDetailsView.html",'<div class="ibox">\n    <div class="ibox-title">\n        <h5>Program Details</h5>\n        <div id="program-details" class="ibox-tools" expand="TmProfileProgramFormController.showDetails()">\n            <a ng-click="showHide()" class="collapse-link">\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <ng-form name="TmProfileProgramFormController.forms.addProgramDetailsForm" novalidate autocomplete="off">\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidName()}">\n                 <label class="control-label col-sm-5 col-md-4">\n                  <span>Program Name *</span>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text"\n                      name="name"\n                      placeholder="e.g. ESSEC Mannheim Executive MBA"\n                      ng-model="TmProfileProgramFormController.newProgram.name"\n                      class="form-control"\n                      ng-required="true"\n                      ng-class="isInvalidName ? \'border-red\' : \'\'"\n                      ng-focus="TmProfileProgramFormController.setValid(\'name\')"\n                      focus-delay="250"\n                      custom-popover popover-html="Add a program title"\n                      popover-placement="left"\n                      popover-trigger="manual"\n                      popover-visibility="{{!TmProfileProgramFormController.isValidName()}}">\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidType()}">\n                <label class="control-label col-sm-5 col-md-4">\n                  <span>Program Type *</span>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        name="type"\n                        ng-model="TmProfileProgramFormController.newProgram.type"\n                        theme="bootstrap"\n                        focus-delay="250"\n                        ng-required="true"\n                        custom-popover popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidType()}}"\n                        on-select="TmProfileProgramFormController.setValid(\'type\')">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.typesList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group row" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidDescription()}">\n                <label class="control-label col-sm-5 col-md-4">\n                  <span>Program Description *</span>\n                  <small class="pull-left">Max {{TmProfileProgramFormController.programDescriptionWordLimit}} words</small>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                  <textarea class="form-control no-resize" rows="7" cols="50"\n                        name="description"\n                        ng-required="true"\n                        placeholder="e.g. The program X provides a unique opportunity to study and live in…"\n                        ng-model="TmProfileProgramFormController.newProgram.description"\n                        ng-focus="TmProfileProgramFormController.setValid(\'description\')"\n                        custom-popover popover-html="Add a program description"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidDescription()}}">\n                    </textarea>\n                    <p class="text-right" ng-show="newProgram.description.length >= programDescriptionWordLimit">\n                        <span class="text-danger">Reached maximum words limit</span>\n                    </p>\n                </div>\n            </div>\n\n            <div class="form-group" ng-show="TmProfileProgramFormController.isSchoolUser">\n                <label class="control-label col-sm-5 col-md-4">\n                  <span>Comments</span>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                  <textarea class="form-control no-resize" rows="4" cols="50"\n                    name="comments"\n                    placeholder="Please add comments supporting your request"\n                    ng-model="TmProfileProgramFormController.newProgram.comments">\n                  </textarea>\n                </div>\n            </div>\n        </ng-form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileAddProgramFormStatisticsView.html",'<div class="ibox">\n    <div class="ibox-title">\n        <h5>Program Statistics</h5>\n        <div id="program-stats" class="ibox-tools" expand="TmProfileProgramFormController.showStatistics()">\n            <a ng-click="showHide()" class="collapse-link">\n                <i class="fa fa-chevron-down"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content pace-inactive">\n        <ng-form name="TmProfileProgramFormController.forms.addProgramStatsForm" novalidate autocomplete="off">\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Specialisation/s</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                            multiple\n                            close-on-select="false"\n                            ng-model="TmProfileProgramFormController.newProgram.specialisations"\n                            theme="bootstrap"\n                            >\n                        <ui-select-match placeholder="Select an Option">{{$item.name}}</ui-select-match>\n                        <ui-select-choices refresh-delay="1000"\n                            repeat="option.handle as option in TmProfileProgramFormController.specialisationsList | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidAverageGmat()}">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Average GMAT score for your cohort</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <input type="text"\n                        class="form-control"\n                        name="avgGmat"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.avgGmat"\n\n                        ng-focus="TmProfileProgramFormController.setValid(\'avgGmat\', true)"\n                        custom-popover\n                        popover-html="Enter values between 400-800"\n                        popover-placement="bottom"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidAverageGmat()}}">\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Tuition fee range for the full MBA course (USD)</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        placeholder="Select an option"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.tuitionRange"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option">\n                            <span>{{$select.selected.label}}</span>\n                        </ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.feesRangesList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Start month/s</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        multiple\n                        close-on-select="false"\n                        limit= "4"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.startDates"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$item.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.monthsList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Length of your program in months</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        placeholder="Select an option"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.programLength"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.lengthList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Accreditation/s</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        multiple\n                        close-on-select="false"\n                        limit= "3",\n                        ng-model="TmProfileProgramFormController.newProgram.stats.accreditations"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$item.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.accreditationsList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidClassSize()}">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Number of students on your program (Class size)</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <input type="text"\n                        class="form-control"\n                        name="classSize"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.classSize"\n                        ng-focus="TmProfileProgramFormController.setValid(\'classSize\', true)"\n                        custom-popover\n                        popover-html="Enter values between 1-2000"\n                        popover-placement="bottom"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidClassSize()}}">\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>% of International students</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-model="TmProfileProgramFormController.newProgram.stats.percentInternationalStudents"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.percentList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Average age of students in your cohort</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-model="TmProfileProgramFormController.newProgram.stats.avgStudentAge"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.yearList1850 | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>% of women in your cohort</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        placeholder="Select an option"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.percentWomenStudents"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.percentList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Average years of work experience</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-model="TmProfileProgramFormController.newProgram.stats.avgWorkExperience"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.yearList020 | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Do you offer a scholarship/s?</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        name="scholorship"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.offerScholarships"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.offerScholarshipsList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>Average salary 3 months post study (USD)</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <input type="number"\n                        class="form-control"\n                        name="avgSalaryAfterGraduation"\n                        ng-model="TmProfileProgramFormController.newProgram.stats.avgSalaryAfterGraduation"\n                        ng-focus="TmProfileProgramFormController.setValid(\'avgSalaryAfterGraduation\', true)"\n                        custom-popover\n                        popover-html="Enter values between 0-200000"\n                        popover-placement="bottom"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}}">\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <span>% employed 3 months post study</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-model="TmProfileProgramFormController.newProgram.stats.percentEmploymentAfterGraduation"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.percentList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n        </ng-form>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileAddProgramFormView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>{{TmProfileProgramFormController.isSchoolUser ? \'Request to Add a Program\' : \'Add Program\'}}</h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="TmProfileProgramFormController.closeAddProgramForm()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">        \n        <form class="form-horizontal" name="forms.addProgramForm" novalidate autocomplete="off">\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormDetailsView.html\'"></div>\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormStatisticsView.html\'"></div>\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormCampusView.html\'"></div>\n            <div class="hr-line-dashed"></div>\n            <div class="form-group" ng-class="{\'locked\': TmProfileProgramFormController.isProgramSubmitDisabled()}">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right"\n                       ng-click="TmProfileProgramFormController.handleProgramCreateClick()">\n                        <i class="fa fa-check-circle"></i>\n                        <span>{{TmProfileProgramFormController.isSchoolUser ? \'Send\' : \'Save\'}}</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="TmProfileProgramFormController.closeAddProgramForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Cancel</span>\n                    </a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileEditProgramFormCampusView.html",'<div class="ibox">\n    <div class="ibox-title">\n        <h5>Campuses</h5>\n        <div id="program-campuses" class="ibox-tools" expand="TmProfileProgramFormController.showCampus()">\n            <a ng-click="showHide()" class="collapse-link">\n                <i class="fa fa-chevron-down"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content pace-inactive p-b-none">\n        <p ng-class="{\'text-danger\': !TmProfileProgramFormController.isValidCampusAssigned()}">\n            <i class="fa fa-info-circle"></i>\n            <span>Add at least one campus to this program. Editing a Campus does not require Admin permissions and will also edit the Institution campus.</span>\n        </p>\n\n        <div ng-class="{\'modal-overlay-35\': TmProfileProgramFormController.campusSubmitInProgress || TmProfileProgramFormController.isReadOnly}">\n            <div class="form-group">\n                <div class="col-sm-12">\n                    <p ng-show="TmProfileProgramFormController.programCampuses.length">\n                        <strong>Campuses currently added to the program:</strong>\n                    </p>\n                    <ul class="list-unstyled list-campus">\n                        <li class="clearfix"\n                            ng-repeat="campus in TmProfileProgramFormController.programCampuses">\n                        <span>\n                            {{campus.name}}\n                            <i class="fa fa-star"\n                               uib-tooltip=\'Program primary campus\'\n                               tooltip-placement="top"\n                               ng-show="campus.id === TmProfileProgramFormController.program.primaryCampusId">\n                            </i>\n                        </span>\n                            <a class="btn btn-sm btn-outline btn-default pull-right"\n                               ng-click="TmProfileProgramFormController.editCampus($index)">\n                                <span>Edit</span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n\n                <div class="col-sm-12">\n                    <ui-select\n                        name="campus"\n                        multiple\n                        ng-required="true"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        close-on-select="false"\n                        ng-model="TmProfileProgramFormController.program.campus"\n                        focus-delay="250"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option">\n                            <span>{{$item.label}}</span>\n                        </ui-select-match>\n                        <ui-select-choices\n                            position="down"\n                            name="campus"\n                            repeat="option.value as option in TmProfileProgramFormController.campusesList | filter: $select.search">\n                            <div ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="separator dashed text-center">\n                <span class="text">OR</span>\n            </div>\n\n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-default btn-block"\n                       ng-click="TmProfileProgramFormController.handleAddCampusClick()">\n                        <i class="fa fa-plus"></i>\n                        <span>Create new campus</span>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n\n        <div ng-show="TmProfileProgramFormController.isCampusFormVisible()">\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileProgramsAddCampusFormView.html\'"></div>\n        </div>\n\n        <div ng-show="TmProfileProgramFormController.isEditCampusFormVisible()">\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileProgramsEditCampusFormView.html\'"></div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileEditProgramFormDetailsView.html",'<div class="ibox">\n    <div class="ibox-title">\n        <h5>Program Details</h5>\n        <div id="program-details" class="ibox-tools" expand="TmProfileProgramFormController.showDetails()">\n            <a ng-click="showHide()" class="collapse-link">\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <ng-form name="TmProfileProgramFormController.forms.editProgramDetailsForm" novalidate autocomplete="off">\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidName()}">\n                <label class="control-label col-sm-5  col-md-4">\n                    <i ng-if="TmProfileProgramFormController.programHistory.name"\n                       class="fa fa-info-circle cursor-default"\n                       uib-tooltip=\'{{TmProfileProgramFormController.programHistory.name}}\'\n                       tooltip-placement="left">\n                    </i>\n                    <span>Program Name *</span>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text"\n                       name="name"\n                       class="form-control"\n                       placeholder="e.g. ESSEC Mannheim Executive MBA"\n                       ng-model="TmProfileProgramFormController.program.name"\n                       ng-disabled="TmProfileProgramFormController.isReadOnly"\n                       ng-required="true"\n                       ng-class="isInvalidName ? \'border-red\' : \'\'"\n                       ng-focus="TmProfileProgramFormController.setValid(\'name\')"\n                       focus-delay="250"\n                       custom-popover popover-html="Add a program title"\n                       popover-placement="left"\n                       popover-trigger="manual"\n                       popover-visibility="{{!TmProfileProgramFormController.isValidName()}}">\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidType()}">\n                <label class="control-label col-sm-5 col-md-4">\n                    <i ng-if="TmProfileProgramFormController.programHistory.type"\n                       class="fa fa-info-circle cursor-default"\n                       uib-tooltip=\'{{TmProfileProgramFormController.programHistory.type}}\'\n                       tooltip-placement="left">\n                    </i>\n                    <span>Program Type *</span>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        name="type"\n                        ng-model="TmProfileProgramFormController.program.type"\n                        theme="bootstrap"\n                        focus-delay="250"\n                        custom-popover popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidType()}}">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.typesList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidDescription()}">\n                <label class="control-label col-sm-5 col-md-4">\n                    <i ng-if="TmProfileProgramFormController.programHistory.description"\n                       class="fa fa-info-circle cursor-default"\n                       uib-tooltip=\'{{TmProfileProgramFormController.programHistory.description}}\'\n                       tooltip-placement="left">\n                    </i>\n                    <span>Program Description *</span>\n                    <small>Max {{TmProfileProgramFormController.programDescriptionWordLimit}} words</small>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                  <textarea class="form-control no-resize" rows="7" cols="50"\n                        name="description"\n                        ng-required="true"\n                        placeholder="e.g. The program X provides a unique opportunity to study and live in…"\n                        ng-model="TmProfileProgramFormController.program.description"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        ng-focus="TmProfileProgramFormController.setValid(\'description\')"\n                        custom-popover popover-html="Add a program description"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidDescription()}}">\n                    </textarea>\n                  <p class="text-right" ng-show="program.description.length >= programDescriptionWordLimit">\n                    <span class="text-danger">Reached maximum words limit</span>\n                  </p>\n                </div>\n            </div>\n            <div class="form-group" ng-show="(TmProfileProgramFormController.isSchoolUser) || (TmProfileProgramFormController.isDirectory)">\n                <label class="control-label col-sm-5 col-md-4">\n                    <i class="fa fa-info-circle cursor-default"\n                      ng-if="TmProfileProgramFormController.programHistory.comments"\n                      uib-tooltip=\'{{TmProfileProgramFormController.programHistory.comments}}\'\n                      tooltip-placement="left">\n                    </i>\n                    <span>Comments</span>\n                </label>\n                <div class="col-sm-7 col-md-8">\n                  <textarea class="form-control no-resize" rows="4" cols="50"\n                        placeholder="Please add comments supporting your request"\n                        ng-model="TmProfileProgramFormController.program.comments"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly || TmProfileProgramFormController.isDirectory">\n                    </textarea>\n                </div>\n            </div>\n        </ng-form>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileEditProgramFormStatisticsView.html",'<div class="ibox">\n    <div class="ibox-title">\n        <h5>Program Statistics</h5>\n        <div id="program-stats" class="ibox-tools" expand="TmProfileProgramFormController.showStatistics()">\n            <a ng-click="showHide()" class="collapse-link">\n                <i class="fa fa-chevron-down"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content pace-inactive">\n        <ng-form name="TmProfileProgramFormController.forms.editProgramStatsForm" novalidate autocomplete="off">\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.specialisations"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.specialisations}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Specialisation/s</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                    ng-disabled="TmProfileProgramFormController.isReadOnly"\n                    multiple\n                    close-on-select="false"\n                    ng-model="TmProfileProgramFormController.program.specialisations"\n                    theme="bootstrap">\n                        <ui-select-match placeholder="Select an Option">{{$item.name}}</ui-select-match>\n                        <ui-select-choices refresh-delay="1000"\n                                        repeat="option.handle as option in TmProfileProgramFormController.specialisationsList | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidAverageGmat()}">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.avgGmat"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.avgGmat}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Average GMAT score for your cohort</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <input type="text"\n                        class="form-control"\n                        name="avgGmat"\n                        ng-model="TmProfileProgramFormController.program.stats.avgGmat"\n                        ng-focus="TmProfileProgramFormController.setValid(\'avgGmat\', true)"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        custom-popover\n                        popover-html="Enter values between 400-800"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidAverageGmat()}}">\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.tuitionRange"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.tuitionRange}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Tuition fee range for the full MBA course (USD)</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                    ng-disabled="TmProfileProgramFormController.isReadOnly"\n                    ng-model="TmProfileProgramFormController.program.stats.tuitionRange"\n                    theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.feesRangesList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.startDates"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.startDates}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Start month/s</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        multiple\n                        close-on-select="false"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        limit= "4",\n                        ng-model="TmProfileProgramFormController.program.stats.startDates"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$item.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.monthsList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.programLength"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.programLength}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Length of your program in months</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        ng-model="TmProfileProgramFormController.program.stats.programLength"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.lengthList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.accreditations"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.accreditations}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Accreditation/s</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        multiple\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        close-on-select="false"\n                        limit="3",\n                        ng-model="TmProfileProgramFormController.program.stats.accreditations"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$item.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.accreditationsList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidClassSize()}">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.classSize"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.classSize}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Number of students on your program (Class size)</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <input type="text"\n                        class="form-control"\n                        name="classSize"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        ng-model="TmProfileProgramFormController.program.stats.classSize"\n                        ng-focus="TmProfileProgramFormController.setValid(\'classSize\', true)"\n                        custom-popover\n                        popover-html="Enter values between 1-2000"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidClassSize()}}">\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.percentInternationalStudents"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.percentInternationalStudents}} %\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>% of International students</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                    ng-disabled="TmProfileProgramFormController.isReadOnly"\n                    ng-model="TmProfileProgramFormController.program.stats.percentInternationalStudents"\n                    theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.percentList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.avgStudentAge"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.avgStudentAge}} years\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Average age of students in your cohort</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        ng-model="TmProfileProgramFormController.program.stats.avgStudentAge"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.yearList1850 | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.percentWomenStudents"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.percentWomenStudents}} %\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>% of women in your cohort</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-model="TmProfileProgramFormController.program.stats.percentWomenStudents"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.percentList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.avgWorkExperience"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.avgWorkExperience}} years\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Average years of work experience</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        ng-model="TmProfileProgramFormController.program.stats.avgWorkExperience"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.yearList020 | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="!TmProfileProgramFormController.isUndefined(TmProfileProgramFormController.programHistory.stats.offerScholarships)"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.offerScholarships ? "Yes" : "No"}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Do you offer a scholarship/s?</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        ng-model="TmProfileProgramFormController.program.stats.offerScholarships"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.offerScholarshipsList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n            <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.avgSalaryAfterGraduation"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.avgSalaryAfterGraduation}}\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>Average salary 3 months post study (USD)</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <input type="number"\n                        class="form-control"\n                        name="avgSalaryAfterGraduation"\n                        ng-model="TmProfileProgramFormController.program.stats.avgSalaryAfterGraduation"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        ng-focus="TmProfileProgramFormController.setValid(\'avgSalaryAfterGraduation\', true)"\n                        custom-popover\n                        popover-html="Enter values between 0-200000"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}}">\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-5">\n                    <i class="fa fa-info-circle"\n                        ng-if="TmProfileProgramFormController.programHistory.stats.percentEmploymentAfterGraduation"\n                        uib-tooltip=\'{{TmProfileProgramFormController.programHistory.stats.percentEmploymentAfterGraduation}} %\'\n                        tooltip-placement="left">\n                    </i>\n                    <span>% employed 3 months post study</span>\n                </label>\n                <div class="col-sm-7 col-md-7">\n                    <ui-select\n                        ng-model="TmProfileProgramFormController.program.stats.percentEmploymentAfterGraduation"\n                        ng-disabled="TmProfileProgramFormController.isReadOnly"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an option"><span>{{$select.selected.label}}</span></ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.value as option in TmProfileProgramFormController.percentList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.label | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n        </ng-form>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileEditProgramFormView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5 ng-show="showEdiProgramForm">{{TmProfileProgramFormController.getEditTitle()}}</h5>\n        <h5 ng-show="showSubscriptionForm">{{TmProfileProgramFormController.getSubscriptionTitle()}}</h5>\n        <div class="ibox-tools">\n            <a ng-click="TmProfileProgramFormController.closeEditProgramForm()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div ng-show="showEdiProgramForm">\n            <form class="form-horizontal" name="forms.editProgramForm" novalidate autocomplete="off">\n                <div class="alert alert-info" ng-if="TmProfileProgramFormController.allowDowngrade()">\n                    <i class="fa fa-info-circle"></i>\n                    <span>Login as Program to edit Advanced Program</span>\n                </div>\n\n                <div class="form-group"\n                    ng-if="TmProfileProgramFormController.allowUpgrade()">\n                    <div class="col-sm-12">\n                        <a class="btn btn-warning btn-block"\n                            ng-click="TmProfileProgramFormController.handleUpgradeClick()">\n                            <i class="fa fa-star"></i>\n                            <span>{{TmProfileProgramFormController.getUpgradeButtonTitle()}}</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormDetailsView.html\'"></div>\n                <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormStatisticsView.html\'"></div>\n                <div ng-show="!TmProfileProgramFormController.isProgramAdvanced" ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormCampusView.html\'"></div>\n\n\n                <div class="separator"></div>\n\n                <div class="form-group" ng-class="{\'locked\': TmProfileProgramFormController.isProgramSubmitDisabled()}">\n                    <div class="col-sm-12">\n                        <a class="btn btn-primary pull-right" ng-if="TmProfileProgramFormController.allowUpdate()" ng-click="TmProfileProgramFormController.handleProgramEditClick()">\n                            <i class="fa fa-check-circle"></i>\n                            <span>{{TmProfileProgramFormController.getEditButtonTitle()}}</span>\n                        </a>\n\n                        <a class="btn btn-default pull-right" ng-click="TmProfileProgramFormController.closeEditProgramForm()">\n                            <i class="fa fa-ban"></i>\n                            <span>Cancel</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div class="separator"></div>\n\n                <div class="form-group" ng-if="TmProfileProgramFormController.allowLoginAs()">\n                    <div class="col-sm-12">\n                        <a class="btn btn-default btn-block"\n                            ng-class="{\'disabled\': !TmProfileProgramFormController.isAllowedToLogin()}"\n                            ng-click="TmProfileProgramFormController.isAllowedToLogin() && TmProfileProgramFormController.handleLoginAsClick()"\n\n                            uib-tooltip=\'Login has been disabled due to permission. Contact {{TmProfileProgramFormController.tmSupportEmail}}\'\n                            tooltip-enable="!TmProfileProgramFormController.isAllowedToLogin()"\n                            tooltip-placement="left">\n                            <i class="fa fa-sign-in"></i>\n                            <span>Login as Program</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div class="form-group"\n                   ng-if="TmProfileProgramFormController.allowDowngrade()"\n                    ng-class="{\'locked\': TmProfileProgramFormController.downgradeInProgress}">\n                    <div class="col-sm-12">\n                        <a class="btn btn-danger btn-block"\n                            ng-click="TmProfileProgramFormController.handleDowngradeClick()">\n                            <i class="fa fa-arrow-circle-o-down"></i>\n                            <span>Downgrade to simple program</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div class="form-group"\n                    ng-if="TmProfileProgramFormController.allowDelete()"\n                    ng-class="{\'locked\': TmProfileProgramFormController.deleteInProgress}">\n                        <div class="col-sm-12">\n                            <a class="btn btn-danger btn-block"\n                                ng-click="TmProfileProgramFormController.handleDeleteClick()">\n                                <i class="fa fa-arrow-circle-o-down"></i>\n                                <span>{{TmProfileProgramFormController.getDeleteButtonTitle()}}</span>\n                            </a>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n\n        <div ng-show="showSubscriptionForm">\n            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileProgramAddSubscriptionView.html\'"></div>\n        </div>\n\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileProgramAddSubscriptionView.html",'<form class="form-horizontal" name="TmProfileProgramFormController.forms.subscriptionForm">\n    <div class="form-group">\n        <div class="col-sm-12">\n            <span date-range-picker\n                class="btn btn-default btn-block"\n                type="text"\n                ng-model="datePickerTm.date"\n                options="datePickerTm.options">\n                {{(TmProfileProgramFormController.subscription.startDate| date:\'mediumDate\') || "Start Date"}} - {{(TmProfileProgramFormController.subscription.endDate| date:\'mediumDate\') || "End Date"}}\n            </span>\n        </div>\n    </div>\n\n    <div class="form-group">\n        <div class="col-sm-12">\n            <a class="btn btn-primary pull-right"\n               ng-class="{\'disabled\' : !TmProfileProgramFormController.subscription.startDate}"\n               ng-click="TmProfileProgramFormController.handleUpgradeSubmit()">\n                <i class="fa fa-check-circle"></i>\n                <span>Save</span>\n            </a>\n            <a class="btn btn-default pull-right"\n               ng-click="TmProfileProgramFormController.closeSubscribeProgramForm()">\n               <i class="fa fa-ban"></i>\n               <span>Cancel</span>\n            </a>\n        </div>\n    </div>\n</form>\n'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileProgramsAddCampusFormView.html",'<ng-form name="TmProfileProgramFormController.forms.addCampusForm" novalidate autocomplete="off">\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusName()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Campus Name *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text"\n            name="name"\n            class="form-control"\n            ng-required="true"\n            ng-model="TmProfileProgramFormController.newCampus.name"\n            ng-class="{\'border-red\': !TmProfileProgramFormController.isValidCampusName()}"\n            ng-focus="TmProfileProgramFormController.setValid(\'name\', false, true)"\n            focus-delay="250"\n            custom-popover\n            popover-html="Add a campus name"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{!TmProfileProgramFormController.isValidCampusName()}}">\n      </div>\n  </div>\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusCountry()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Country *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <ui-select\n           name="country"\n           ng-model="TmProfileProgramFormController.newCampus.country"\n           focus-delay="250"\n           custom-popover\n           popover-html="Select an option"\n           popover-placement="left"\n           popover-trigger="manual"\n           popover-visibility="{{!TmProfileProgramFormController.isValidCampusCountry()}}"\n           theme="bootstrap">\n            <ui-select-match placeholder="Select an option"><span>{{$select.selected.name}}</span></ui-select-match>\n            <ui-select-choices\n                position="down"\n                repeat="option.countryCode as option in TmProfileProgramFormController.countryList | filter: $select.search">\n                <div class="test" ng-bind-html="option.name | highlight: $select.search"></div>\n            </ui-select-choices>\n            <ui-select-no-choice>\n                Not found\n            </ui-select-no-choice>\n         </ui-select>\n      </div>\n  </div>\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusAddressLine1()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Address *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text"\n            class="form-control"\n            name="addressLine1"\n            ng-model="TmProfileProgramFormController.newCampus.addressLine1"\n            ng-required="true"\n            ng-class="{\'border-red\': !TmProfileProgramFormController.isValidCampusAddressLine1()}"\n            ng-focus="TmProfileProgramFormController.setValid(\'addressLine1\', false, true)"\n            focus-delay="250"\n            custom-popover\n            popover-html="Add an address"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{!TmProfileProgramFormController.isValidCampusAddressLine1()}}">\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">&nbsp;</label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text" class="form-control" ng-model="TmProfileProgramFormController.newCampus.addressLine2">\n      </div>\n  </div>\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusCity()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Town / City *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text"\n            class="form-control"\n            name="city"\n            ng-model="TmProfileProgramFormController.newCampus.city"\n            ng-required="true"\n            ng-class="{\'border-red\': !TmProfileProgramFormController.isValidCampusCity()}"\n            ng-focus="TmProfileProgramFormController.setValid(\'city\', false, true)"\n            focus-delay="250"\n            custom-popover\n            popover-html="Add a town/city"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{!TmProfileProgramFormController.isValidCampusCity()}}">\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>State / Province</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text" class="form-control" ng-model="TmProfileProgramFormController.newCampus.state">\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Postcode</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text" class="form-control" ng-model="TmProfileProgramFormController.newCampus.postcode">\n      </div>\n  </div>\n  <div class="form-group">\n    <label for="campusLatitude" class="control-label col-sm-5 col-md-4">\n      <span>Latitude</span>\n    </label>\n    <div class="control-label col-sm-7 col-md-8">\n      <input id="campusLatitude" type="text" class="form-control" ng-model="TmProfileProgramFormController.newCampus.latitude" ng-readonly="TmProfileProgramFormController.newCampus.autoGenerate">\n    </div>\n  </div>\n  <div class="form-group">\n    <label for="campusLongitude" class="control-label col-sm-5 col-md-4">\n      <span>Longitude</span>\n    </label>\n    <div class="control-label col-sm-7 col-md-8">\n      <input id="campusLongitude" type="text" class="form-control" ng-model="TmProfileProgramFormController.newCampus.longitude" ng-readonly="TmProfileProgramFormController.newCampus.autoGenerate">\n    </div>\n  </div>\n  <div class="form-group">\n    <label class="control-label col-sm-5 col-md-4" >Auto Generate</label>\n    <div class="col-sm-7 col-md-8">\n      <switch ng-model="TmProfileProgramFormController.newCampus.autoGenerate" class="green" ></switch>\n      <span>Use the address to auto generate latitude & longitude values.</span>\n    </div>\n  </div>\n  \n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Program Primary Campus</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <switch class="green" ng-model="TmProfileProgramFormController.newCampus.primary"></switch>\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Display In Frontend</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <switch class="green" ng-model="TmProfileProgramFormController.newCampus.displayInFrontEnd"></switch>\n      </div>\n  </div>\n\n  <div class="form-group"></div>\n\n  <div class="form-group" ng-class="{\'locked\': TmProfileProgramFormController.campusSubmitInProgress}">\n      <div class="col-sm-12">\n          <a class="btn btn-primary pull-right btn-float-fix" ng-click="TmProfileProgramFormController.handleNewCampusSubmit()">\n            <i class="fa fa-check-circle"></i>\n            <span>Add Campus to Program</span>\n          </a>\n          <a class="btn btn-default pull-right btn-float-fix" ng-click="TmProfileProgramFormController.handleAddCampusClick()">\n            <i class="fa fa-ban"></i>\n            <span>Cancel</span>\n          </a>\n      </div>\n  </div>\n</ng-form>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileProgramsEditCampusFormView.html",'<ng-form name="TmProfileProgramFormController.forms.editCampusForm" novalidate autocomplete="off">\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusName()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Campus Name *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text"\n            name="name"\n            class="form-control"\n            ng-required="true"\n            ng-model="TmProfileProgramFormController.oldCampus.name"\n            ng-focus="TmProfileProgramFormController.setValid(\'name\', false, true)"\n            custom-popover\n            popover-html="Add a campus name"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{!TmProfileProgramFormController.isValidCampusName()}}">\n      </div>\n  </div>\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusCountry()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Country *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <ui-select\n           name="country"\n           ng-model="TmProfileProgramFormController.oldCampus.country"\n           focus-delay="250"\n           custom-popover\n           popover-html="Select an option"\n           popover-placement="left"\n           popover-trigger="manual"\n           popover-visibility="{{!TmProfileProgramFormController.isValidCampusCountry()}}"\n           theme="bootstrap">\n            <ui-select-match placeholder="Select an option"><span>{{$select.selected.name}}</span></ui-select-match>\n            <ui-select-choices\n                position="down"\n                repeat="option.countryCode as option in TmProfileProgramFormController.countryList | filter: $select.search">\n                <div class="test" ng-bind-html="option.name | highlight: $select.search"></div>\n            </ui-select-choices>\n            <ui-select-no-choice>\n                Not found\n            </ui-select-no-choice>\n         </ui-select>\n      </div>\n  </div>\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusAddressLine1()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Address *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text"\n            name="addressLine1"\n            class="form-control"\n            ng-required="true"\n            ng-model="TmProfileProgramFormController.oldCampus.addressLine1"\n            custom-popover popover-html="Add an address"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{!TmProfileProgramFormController.isValidCampusAddressLine1()}}">\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">&nbsp;</label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text" class="form-control" ng-model="TmProfileProgramFormController.oldCampus.addressLine2">\n      </div>\n  </div>\n  <div class="form-group" ng-class="{\'has-errors\': !TmProfileProgramFormController.isValidCampusCity()}">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Town / City *</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text"\n            class="form-control"\n            name="city"\n            ng-required="true"\n            ng-model="TmProfileProgramFormController.oldCampus.city"\n            custom-popover popover-html="Add a town/city"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{!TmProfileProgramFormController.isValidCampusCity()}}">\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>State / Province</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text" class="form-control" ng-model="TmProfileProgramFormController.oldCampus.state">\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Postcode</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <input type="text" class="form-control" ng-model="TmProfileProgramFormController.oldCampus.postcode">\n      </div>\n  </div>\n  <div class="form-group">\n    <label for="campusLatitude" class="control-label col-sm-3 col-md-2"><span>Latitude</span></label>\n    <div class="col-sm-3 col-md-4">\n      <input id="campusLatitude" type="text" class="form-control" ng-model="TmProfileProgramFormController.oldCampus.latitude" ng-readonly="TmProfileProgramFormController.oldCampus.autoGenerate">\n    </div>\n    <label for="campusLongitude" class="control-label col-sm-3 col-md-2"><span>Longitude</span></label>\n      <div class="col-sm-3 col-md-4">\n        <input id="campusLongitude" type="text" class="form-control" ng-model="TmProfileProgramFormController.oldCampus.longitude" ng-readonly="TmProfileProgramFormController.oldCampus.autoGenerate">\n      </div>\n  </div>\n  <div class="form-group">\n    <label class="full-width" class="control-label col-sm-5 col-md-4" >Auto Generate</label>\n    <div class="col-sm-7 col-md-8">\n      <switch ng-model="TmProfileProgramFormController.oldCampus.autoGenerate" class="green" ></switch>\n      <span>Use the address to auto generate latitude & longitude values.</span>\n    </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Program Primary Campus</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <switch class="green" ng-model="TmProfileProgramFormController.oldCampus.primary"></switch>\n      </div>\n  </div>\n  <div class="form-group">\n      <label class="control-label col-sm-5 col-md-4">\n        <span>Display In Frontend</span>\n      </label>\n      <div class="col-sm-7 col-md-8">\n          <switch class="green" ng-model="TmProfileProgramFormController.oldCampus.displayInFrontEnd"></switch>\n      </div>\n  </div>\n  <div class="form-group" ng-class="{\'locked\': TmProfileProgramFormController.campusSubmitInProgress}">\n      <div class="col-sm-12">\n          <a class="btn btn-primary pull-right" ng-click="TmProfileProgramFormController.handleUpdateCampus()">\n            <i class="fa fa-check-circle"></i>\n            <span>Update</span>\n          </a>\n          <a class="btn btn-default pull-right" ng-click="TmProfileProgramFormController.handleCancelCampusClick()">\n            <i class="fa fa-ban"></i>\n            <span>Cancel</span>\n          </a>\n      </div>\n  </div>\n  <div class="separator dashed"></div>\n</ng-form>'),$templateCache.put("/scripts/components/profiles/tm/programs/tmProfileProgramsView.html",'<div ng-controller="TmProfileProgramsController as ProgramsController">\n    <div class="tab-header">\n        <a class="btn btn-primary pull-right"\n           ng-class="{\'disabled\': programsTabSubmitInProgress}"\n           ng-click="ProgramsController.handleAddProgramClick()">\n            <i class="fa fa-plus"></i>\n            <span>{{ProgramsController.isClient() ? \'Request to add Program\' : \'Add Program\'}}</span>\n        </a>\n    </div>\n\n    <div class="tab-body">\n        <div id="programsTable">\n            <div wave-spinner class="wave-spinner" ng-show="ProgramsController.isDatagridReloading || !ProgramsController.isDatagridRendered"></div>\n\n            <div ng-if="!ProgramsController.isDatagridReloading && gridOptions">\n                <ui-grid-info ng-if="!showProgramEditForm && !showProgramAddForm"></ui-grid-info>\n                <div class="grid"\n                     ui-grid="gridOptions"\n                     ui-grid-selection\n                     ui-grid-resize-columns\n                     ui-grid-auto-resize>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/publish/tmProfilePublishHistoryView.html",'<div class="ibox publish-logs" ng-controller="TmProfilePublishLogsController as PublishLogsController">\n    <div class="ibox-title m-t-xl">\n        <h5>Publish Logs</h5>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner ng-show="fetchingPublishLog()"></div>\n        <div ng-show="!fetchingPublishLog()" ng-repeat="logs in publishLogs">\n            <div ng-repeat="logsPerDay in logs">\n                <div class="panel panel-default">\n                    <div class="panel-heading">\n                        <span>{{logsPerDay.date | date:\'mediumDate\'}}</span>\n                    </div>\n                    <div class="panel-body">\n                        <ul class="list-unstyled">\n                            <li ng-repeat="log in logsPerDay.logs">\n                                <span class="status">\n                                    <span class="icon text-success" ng-if="log.status === \'success\'">\n                                        <i class="fa fa-check"></i>\n                                    </span>\n                                    <span class="icon text-danger" ng-if="log.status === \'failure\'">\n                                        <i class="fa fa-exclamation"></i>\n                                    </span>\n                                    <span class="icon text-info" ng-if="log.status === \'progress\'">\n                                        <i class="fa fa-spinner fa-spin"></i>\n                                    </span>\n                                    <span class="icon text-warning" ng-if="log.status === \'pending\'">\n                                        <i class="fa fa-clock-o"></i>\n                                    </span>\n                                </span>\n                                \n                                <span>{{log.status === \'failure\' ? \'Failed\' : \'Published\'}}:</span>\n                                <span class="bold">{{log.createdByFullName}}</span>\n                                <span class="time">{{log.createdAt | date:\'shortTime\'}}</span>\n                                \n                                <span class="program">\n                                    <span class="icon round bg-primary" ng-if="log.type === \'tm\'">\n                                        <i class="fa fa-book"></i>\n                                    </span>\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div ng-show="!publishLogs.results.length">No publish history</div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/publish/tmProfilePublishView.html",'<div ng-controller="TmProfilePublishController as PublishController">\n    <div class="alert alert-info">\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>Please be aware that published changes will not appear straight away and could take up to 6 hours to be visible on the frontend website.</span>\n        </p>\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>Whilst a publish is occurring, you may navigate away from this page and it will still progress in the background.</span>\n        </p>\n    </div>\n    <div id="publishContainer" class="tab-body">\n        <div class="row">\n            <div class="col-lg-4 meter" ng-repeat="section in sections">\n                <div class="panel panel-default">\n                    <div class="panel-heading">\n                        <h5 class="pull-left">\n                            <span class="icon round bg-primary" ng-if="isTm(section.type)">\n                                <i class="fa fa-book"></i>\n                            </span>\n                            <span>{{section.name}}</span>\n                        </h5>\n\n                        <a class="btn btn-primary btn-xs pull-right m-b-xs"\n                           ng-class="{\'disabled\': section.publishDisabled || PublishController.isProfileEnabled()}"\n                           ng-click="handlePublish(section, section.publishProgramsBasic, section.publishProgramsAdvanced)">\n                            <i class="fa fa-cloud-upload"></i>\n                            <span>Publish</span>\n                        </a>\n                        <div class="clearfix" ng-if="institutionHasAdvancedPrograms() && tmIsAdvanced">\n                            <input ng-model="section.publishProgramsAdvanced" i-checkbox type="checkbox">\n                            <span>Include all Advanced Programs</span>\n                        </div>\n                    </div>\n\n                    <div class="panel-body">\n                        <div class="clearfix m-b-md">\n                            <a class="btn btn-default btn-sm btn-block"\n                                target="_blank"\n                                ng-href="{{section.url}}"\n                                ng-class="{\'disabled\': section.viewDisabled}">\n                                <i class="fa fa-eye"></i>\n                                <span>View webpage</span>\n                            </a>\n                            <a class="btn btn-default btn-sm btn-block"\n                                ng-if="PublishController.devMode"\n                                target="_blank"\n                                ng-href="{{section.feedPreviewUrl}}"\n                                ng-class="{\'disabled\': section.viewDisabled}">\n                                <i class="fa fa-eye"></i>\n                                <span>Preview feed</span>\n                            </a>\n                        </div>\n                        <div class="response" ng-if="section.statusMessage">\n                            <p><strong>Reason for Failed Publish:</strong></p>\n                            <span class="truncate"><strong>{{section.statusMessage}}</strong></span>\n                        </div>\n                        <div progress-circle="section.status"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/publish/tmProfileResubscribeView.html",'<div class="resubscribe" ng-controller="TmProfileResubscribeController as TmResubscribeController">\n    <div class="ibox m-t-xl" ng-show="TmResubscribeController.isAdvanced">\n        <div class="panel panel-default">\n            <div class="panel-body">\n                <div class="subscribe">\n                    <div class="pull-left">\n                        <p>Your subscription expires:</p>\n                        <span class="bold">{{TmResubscribeController.expiresDate | date:\'dd MMMM yyyy\'}}</span>\n                    </div>\n                    <button class="btn btn-warning btn-lg pull-right"\n                            ng-click="TmResubscribeController.resubscribeClick()"\n                            ng-show="TmResubscribeController.showResubscribeButton()">\n                        <i class="fa fa-envelope-o"></i>\n                        <span>Resubscribe</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class="ibox m-t-xl" ng-show="TmResubscribeController.displayResubscribeForm">\n        <div class="ibox-title">\n            <h5>Resubscribe to Advance Profile</h5>\n        </div>\n        <div class="ibox-content">\n            <form class="form-horizontal preview" name="forms.resubscribeForm" novalidate>\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">To:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TmResubscribeController.formData.to}}</span>\n                    </div>\n                </div>\n                \n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Subject:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TmResubscribeController.formData.subject}}</span>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Name:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TmResubscribeController.formData.name}}</span>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Email:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TmResubscribeController.formData.email}}</span>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Comments:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <div class="textarea"><textarea class="form-control full-width" ng-model="TmResubscribeController.formData.comments" name="comments" ng-trim="true" rows="5"></textarea></div>\n                    </div>\n                </div>\n                \n                <div class="form-group">\n                    <div class="col-sm-12">\n                        <a class="btn btn-primary pull-right" ng-class="{\'disabled\': TmResubscribeController.inProgress}" ng-click="TmResubscribeController.submitClick()">\n                           <i class="fa fa-check-circle"></i>\n                           <span>Submit</span>\n                        </a>\n                        <a class="btn btn-default pull-right" ng-click="TmResubscribeController.cancelClick()">\n                            <i class="fa fa-ban"></i>\n                            <span>Cancel</span>\n                        </a>\n                    </div>\n                </div>\n            </form>\n        </div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tm/tmProfileDeleteFormView.html",'<div class="ibox-title m-t-xl">\n    <h5>Request to Delete Basic Program</h5>\n    <div class="ibox-tools">\n        <a class="close-link" ng-click="TmProfileController.handleCloseDeleteForm()">\n            <i class="fa fa-times"></i>\n        </a>\n    </div>\n</div>\n<div class="ibox">\n    <div class="ibox-content">\n        <form class="form-horizontal preview" name="forms.upgradeProfile" novalidate>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">To</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeEmailsTo}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Subject</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">I would like program <strong>{{deleteRequest.program.name}}</strong> to be deleted</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Name</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{deleteRequest.name}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Email</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{deleteRequest.email}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Comments</label>\n                <div class="col-sm-7 col-md-8">\n                    <div class="textarea"><textarea class="form-control no-resize" rows="7" cols="50" placeholder="Please add comments supporting your request" ng-model="deleteRequest.comments"></textarea></div>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right"\n                       ng-class="{\'disabled\': TmProfileController.deleteRequestInProgress}"\n                       ng-click="TmProfileController.handleSendDeleteRequestClick()">\n                       <i class="fa fa-check-circle"></i>\n                       <span>Send</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="TmProfileController.handleCloseDeleteForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Close</span>\n                    </a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/tmProfileProgramUpgradeFormView.html",'<div class="ibox-title m-t-xl">\n    <h5>Upgrade to Advanced Program</h5>\n    <div class="ibox-tools">\n        <a class="close-link" ng-click="TmProfileController.toggleUpgradeProgramForm()">\n            <i class="fa fa-times"></i>\n        </a>\n    </div>\n</div>\n<div class="ibox">\n    <div class="ibox-content">\n        <form class="form-horizontal preview" name="forms.upgradeProgramProfile" novalidate>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">To</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeEmailsTo}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Subject</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">I would like more information about Upgrading to an Advanced Program</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Name</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeRequest.name}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Email</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeRequest.email}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Comments</label>\n                <div class="col-sm-7 col-md-8">\n                    <div class="textarea"><textarea class="form-control no-resize" rows="7" cols="50" placeholder="Comments..." ng-model="upgradeRequest.comments"></textarea></div>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right"\n                       ng-class="{\'disabled\': TmProfileController.upgradeInProgress}"\n                       ng-click="TmProfileController.handleProgramUpgradeRequestClick()">\n                       <i class="fa fa-check-circle"></i>\n                       <span>Send</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="TmProfileController.toggleUpgradeProgramForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Close</span>\n                    </a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/tmProfileUpgradeFormView.html",'<div class="ibox-title m-t-xl">\n    <h5>Upgrade to Advanced Profile</h5>\n    <div class="ibox-tools">\n        <a class="close-link" ng-click="TmProfileController.toggleUpgradeForm()">\n            <i class="fa fa-times"></i>\n        </a>\n    </div>\n</div>\n<div class="ibox">\n    <div class="ibox-content">\n        <form class="form-horizontal preview" name="forms.upgradeProfile" novalidate>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">To</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeEmailsTo}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Subject</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">I would like more information about Upgrading to an Advanced Profile</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Name</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeRequest.name}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Email</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeRequest.email}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Comments</label>\n                <div class="col-sm-7 col-md-8">\n                    <div class="textarea"><textarea class="form-control no-resize" rows="7" cols="50" placeholder="Please add comments supporting your request" ng-model="upgradeRequest.comments"></textarea></div>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right"\n                       ng-class="{\'disabled\': TmProfileController.upgradeInProgress}"\n                       ng-click="TmProfileController.handleUpgradeClick()">\n                       <i class="fa fa-check-circle"></i>\n                       <span>Send</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="TmProfileController.toggleUpgradeForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Close</span>\n                    </a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tm/tmProfileView.html",'<div class="wrapper wrapper-content animated fadeInRight page-profiles-tm" ng-controller="TmProfileController as TmProfileController">\n    <div class="row">\n        <div ng-class="TmProfileController.isRightSidePanelActive() ? \'col-sm-8\' : \'col-sm-12\'">\n            <div class="tabs-container" ng-class="{\'modal-overlay\': TmProfileController.loadInProgress()}">\n                <uib-tabset active="activeTab">\n                    <uib-tab index="0" heading="Overview">\n                        <div class="panel-body overview">\n                            <div ng-include src="\'/scripts/components/profiles/tm/overview/tmProfileOverviewView.html\'"></div>\n                        </div>\n                    </uib-tab>\n                    <uib-tab index="1" heading="Programs" ng-if="!TmProfileController.showProgramStasTab">\n                        <div class="panel-body programs">\n                            <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileProgramsView.html\'"></div>\n                        </div>\n                    </uib-tab>\n                    <uib-tab index="4" heading="Program Statistics" ng-if="TmProfileController.showProgramStasTab">\n                        <div class="panel-body program-stats">\n                            <div ng-include src="\'/scripts/components/profiles/tm/program-stats/tmProfileProgramStatsView.html\'"></div>\n                        </div>\n                    </uib-tab>\n                    <uib-tab index="2" heading="Media">\n                        <div class="panel-body media">\n                            <div ng-include src="\'/scripts/components/profiles/tm/media/tmProfileMediaView.html\'" id="mediaTab"></div>\n                        </div>\n                    </uib-tab>\n                    <uib-tab index="3" heading="Publish">\n                        <div class="panel-body publish">\n                            <div ng-include src="\'/scripts/components/profiles/tm/publish/tmProfilePublishView.html\'"></div>\n                        </div>\n                    </uib-tab>\n                </uib-tabset>\n            </div>\n        </div>\n        <div ng-show="showUpgradeForm" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tm/tmProfileUpgradeFormView.html\'"></div>\n        </div>\n        <div ng-show="showUpgradeProgramRequest" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tm/tmProfileProgramUpgradeFormView.html\'"></div>\n        </div>\n        <div ng-show="showDeleteForm" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tm/tmProfileDeleteFormView.html\'"></div>\n        </div>\n\n        <div ng-show="TmProfileController.showOverviewHistory" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tm/overview/overview/tmProfileOverviewHistoryLogView.html\'"></div>\n        </div>\n\n        <div ng-show="TmProfileController.showFaqHistory" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqHistoryLogView.html\'"></div>\n        </div>\n\n        <div ng-show="showProgramEditForm || showProgramAddForm"\n             fixed-element-while-scrolling="#programsTable"\n             class="col-sm-4"\n             ng-controller="TmProfileProgramFormController as TmProfileProgramFormController">\n            <div class="nested-ibox" ng-show="showProgramAddForm" ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormView.html\'"></div>\n            <div class="nested-ibox" ng-show="showProgramEditForm" ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormView.html\'"></div>\n        </div>\n\n        <div ng-show="isMediaTabActive()" class="col-sm-4" ng-class="tmIsAdvanced ? \'\': \'modal-overlay-35\'" fixed-element-while-scrolling="#mediaTab">\n            <div id="mediaSidebar" ng-include src="\'/scripts/components/profiles/tm/media/tmProfileMediaLinkManagerView.html\'"></div>\n        </div>\n        <div ng-show="isPublishTabActive()" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tm/publish/tmProfileResubscribeView.html\'"></div>\n            <div ng-include src="\'/scripts/components/profiles/tm/publish/tmProfilePublishHistoryView.html\'"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/datagrid/createdAtFilterHeaderTemplate.html",'<div class="ui-grid-filter-container" ng-repeat="colFilter in col.filters" ng-if="colFilter.visible">\n    <input type="text" class="ui-grid-filter-input date-picker"\n           ng-model="grid.appScope.filters.createdAt"\n           date-range-picker=""\n           options="{eventHandlers: {\'apply.daterangepicker\': grid.appScope.handleCreatedAtDateRange}, opens: \'left\'}" />\n    <div class="ui-grid-filter-button" ng-click="grid.appScope.handleCreatedAtDateRange(); grid.appScope.filters.createdAt = {}">\n      \t<i class="ui-grid-icon-cancel" ng-if="grid.appScope.filters.createdAt && grid.appScope.filters.createdAt.startDate">&nbsp;</i> \n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/datagrid/deleteCellTemplate.html",'<div class="ui-grid-cell-contents no-select text-center" ng-click="$event.stopPropagation()">\n    <div class="inline" ng-if="row.entity.typeId === 3">\n        <span custom-popover\n              popover-html="{{grid.appScope.cutomCheckboxMessage()}}"\n              popover-placement="right"\n              popover-container="body"\n              popover-trigger="hover">\n            <input\n                disabled="disabled"\n                ng-model="grid.appScope.departmentsToDelete[row.entity.id]"\n                i-checkbox\n                type="checkbox">\n        </span>\n    </div>\n    <div class="inline" ng-if="row.entity.typeId !== 3">\n        <input\n            ng-model="grid.appScope.departmentsToDelete[row.entity.id]"\n            i-checkbox\n            type="checkbox">\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/datagrid/deleteHeaderCellTemplate.html",'<button type="button"\n        ng-disabled="grid.appScope.isDeleteButtonDisabled()"\n        class="btn btn-danger btn-sm"\n        ng-class="{\'disabled\': grid.appScope.isDeleteButtonDisabled()}"\n        ng-click="grid.appScope.handleDeleteClick()">\n    <span class="glyphicon glyphicon-trash"></span>\x3c!--  {{col.displayName}} --\x3e\n</button>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/datagrid/rowTemplate.html",'<div grid="grid" class="ui-grid-draggable-row" draggable="true">\n    <div class="ui-grid-cell pointer"\n        ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name"\n        ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader, \'active\': row.entity.id == grid.appScope.selectedDepartmentId }"\n        role="{{col.isRowHeader ? \'rowheader\' : \'gridcell\'}}"\n        ui-grid-cell>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/modalDowngradeDepartmentView.html",'<div class="modal-header">\n    <h3>{{modalOptions.headerText}}</h3>\n</div>\n<div class="modal-body">\n    <p ng-show="!modalOptions.subscriptions">\n        Client department has no active subscription. Press Downgrade Now to downgrade to simple department.\n    </p>\n    <div ng-show="modalOptions.subscriptions">\n        <p>This client department currently has an active subscription. The subscription will need to be turned off in order to downgrade and delete the profile. If you wish to downgrade the client department and delete the profile in Drupal (front end) please select accordingly and press update to continue.</p>\n        <hr>\n        <p>Enabled:\n            <code ng-if="modalOptions.department.enabled.pg">PG</code>\n            <code ng-if="modalOptions.department.enabled.ug">UG</code>\n            <code ng-if="modalOptions.department.enabled.tm">MBA</code>\n        </p>\n        <p ng-if="modalOptions.department.subscriptions.tu.advanced">\n            Advanced TU : <strong>From {{modalOptions.department.subscriptions.tu.startDate | date:\'short\'}}</strong> to <strong>{{modalOptions.department.subscriptions.tu.endDate | date:\'short\'}}</strong>\n        </p>\n        <p ng-if="modalOptions.department.subscriptions.tm.advanced">\n            Advanced TM : <strong>From {{modalOptions.department.subscriptions.tm.startDate | date:\'short\'}}</strong> to <strong>{{modalOptions.department.subscriptions.tm.endDate| date:\'short\'}}</strong>\n        </p>\n        <switch ng-model="modalOptions.downgradeAndDelete" class="green"></switch>\n        Downgrade the client department and delete the profile in Drupal (front end)\n    </div>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="modalOptions.close()">\n        {{modalOptions.closeButtonText}}\n    </button>\n    <button class="btn btn-primary" ng-click="modalOptions.completeDowngradeClick(modalOptions.downgradeAndDelete)">\n'+"        {{modalOptions.subscriptions ? (modalOptions.downgradeAndDelete ? 'Downgrade & Delete' : 'Downgrade in Backend') : 'Downgrade Now'}}\n    </button>\n</div>\n"),$templateCache.put("/scripts/components/profiles/tu/departments/modalUpgradeDepartmentView.html",'<div class="modal-header">\n    <button type="button" class="close" data-ng-click="modalOptions.close()">&times;</button>\n    <h3>{{modalOptions.headerText}}</h3>\n</div>\n<div class="modal-body">\n    <p>\n        To complete this department upgrade you must enter subscription dates, country, etc.\n    </p>\n    <p>\n        Click on the button below to navigate to Institution List backend to enter these details.\n    </p>\n    <p>\n        Please note that without these details, the upgrade will not be complete.\n    </p>\n</div>\n<div class="modal-footer">\n    <a class="btn btn-primary btn-sm"\n           ng-click="modalOptions.completeUpgradeClick()"\n           ui-sref="staff.institutions.list({coreId: modalOptions.institutionCoreId})">Complete upgrade now</a>\n    <button type="button" class="btn btn-sm"\n            ng-click="modalOptions.close()">{{modalOptions.closeButtonText}}</button>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/tuProfileAddDepartmentFormView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>Add Department</h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="toggleDepartmentAddForm()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner class="text-right" ng-show="fetchingHistoryLog()"></div>\n\n        <form class="form-horizontal add-department" name="forms.addDepartmentForm" novalidate>\n            <div class="form-group" ng-if="DepartmentOverviewController.isInstitutionSelected()">\n                <label class="control-label col-sm-5 col-md-4">Institution Name *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control"\n                           ng-model="DepartmentOverviewController.institution.selected.name"\n                           ng-disabled="true">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\': isInvalidNewDepartmentName}">\n                <label class="control-label col-sm-5 col-md-4">\n                    Department Name *\n                </label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text"\n                        placeholder="Add name"\n                        ng-model="newDepartment.name"\n                        class="form-control"\n                        ng-required="true"\n                        focus-delay="250"\n                        custom-popover\n                        popover-html="Add a department name"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidNewDepartmentName ? true : false}}"\n                        ng-focus="setIsInvalidNewDepartmentName(false)" />\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\': isInvalidNewBelongsTo}">\n                <label class="control-label col-sm-5 col-md-4">Belongs to *</label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        ng-model="newDepartment.belongsTo"\n                        theme="bootstrap"\n                        focus-delay="250"\n                        custom-popover popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidNewBelongsTo ? true : false}}"\n                        on-select="setIsInvalidNewBelongsTo(false)">\n                        <ui-select-match placeholder="Select an option">\n                            <i class="fa fa-building"></i>\n                            <span>{{$select.selected.title}}</span>\n                        </ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.id as option in belongsToList | filter: $select.search">\n                          <div class="test" ng-bind-html="option.title | highlight: $select.search"></div>\n                        </ui-select-choices>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="white-space"></div>\n\n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right" ng-class="{\'disabled\': addInProgress}" ng-click="handleDepartmentCreateClick()">\n                        <i class="fa fa-check-circle"></i>\n                        <span>Save</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="toggleDepartmentAddForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Cancel</span>\n                    </a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/tuProfileDepartmentsView.html",'<div ng-controller="TuProfileDepartmentsController as DepartmentsController">\n    <div class="alert alert-info">\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>Only the first top 50 departments will be published.</span>\n        </p>\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>Departments can be published only for advanced profiles.</span>\n        </p>\n    </div>\n\n    <div class="tab-header">\n        <div class="btn-toggle">\n            <switch class="green"\n                ng-disabled="alphabeticalOrderingInProgress"\n                ng-model="institutionData.departmentsAlphabeticalOrder"\n                ng-change="!alphabeticalOrderingInProgress ? handleAlphabeticalOrderClick(institutionData.departmentsAlphabeticalOrder) : null"></switch>\n            <span class="switch-text"> Display in alphabetical order?</span>\n        </div>\n\n        <button class="btn btn-primary pull-right" type="button" \n            ng-class="{\'disabled\': departmentsTabSubmitInProgress}"\n            ng-click="handleAddDepartmentClick()">\n            <i class="fa fa-plus"></i>\n            <span>Add Department</span>\n        </button>\n    </div>\n\n    <div class="tab-body">\n        <div wave-spinner class="wave-spinner" ng-show="isDatagridReloading || !isDatagridRendered"></div>\n\n        <div ng-if="!isDatagridReloading && gridOptions">\n            <ui-grid-info ng-if="!showDepartmentEditForm && !showDepartmentAddForm && !showClientUpgradeForm"></ui-grid-info>\n            <div class="grid"\n                ui-grid="gridOptions"\n                ui-grid-draggable-rows\n                ui-grid-selection\n                ui-grid-resize-columns\n                ui-grid-auto-resize></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/tuProfileEditDepartmentFormView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>Edit Department</h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="toggleDepartmentEditForm()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner class="text-right" ng-show="isFetchInProgress()"></div>\n        <div ng-show="!isFetchInProgress()" ng-class="{\'modal-overlay-35\': !allowEdit()}">\n            <form class="form-horizontal add-department" name="forms.editDepartmentForm" novalidate>\n                <div class="form-group" ng-if="DepartmentOverviewController.isInstitutionSelected()">\n                    <label class="control-label col-sm-5 col-md-4">Institution Name *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input type="text" class="form-control"\n                               ng-model="DepartmentOverviewController.institution.selected.name"\n                               ng-required="true"\n                               ng-disabled="true">\n                    </div>\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': isInvalidDepartmentNameUpdate}">\n                    <label class="control-label col-sm-5 col-md-4">Department Name *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input type="text"\n                            placeholder="Add name"\n                            ng-model="department.name"\n                            class="form-control"\n                            ng-required="true"\n                            focus-delay="250"\n                            custom-popover\n\n                            popover-html="Add a department name"\n                            popover-placement="left"\n                            popover-trigger="manual"\n                            popover-visibility="{{isInvalidDepartmentNameUpdate ? true : false}}"\n                            ng-focus="setIsInvalidDepartmentNameUpdate(false)" />\n                    </div>\n                </div>\n\n               <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Department Type *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <input type="text" class="form-control"\n                               ng-model="department.typeName"\n                               ng-required="true"\n                               ng-disabled="true">\n                    </div>\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': isInvalidBelongsToUpdate}">\n                    <label class="control-label col-sm-5 col-md-4">Belongs to *</label>\n                    <div class="col-sm-7 col-md-8">\n                        <ui-select\n                            ng-model="department.belongsTo"\n                            theme="bootstrap"\n                            focus-delay="250"\n                            custom-popover popover-html="Select an option"\n                            popover-placement="left"\n                            popover-trigger="manual"\n                            popover-visibility="{{isInvalidBelongsToUpdate ? true : false}}"\n                            ng-change="setIsInvalidBelongsToUpdate(false)">\n                            <ui-select-match placeholder="Select an option">\n                                <i class="fa fa-building"></i>\n                                <span>{{$select.selected.title}}</span>\n                            </ui-select-match>\n                            <ui-select-choices\n                            position="down"\n                            repeat="option.id as option in belongsToList | filter: $select.search">\n                            <div class="test" ng-bind-html="option.title | highlight: $select.search"></div>\n                            </ui-select-choices>\n                        </ui-select>\n                    </div>\n                </div>\n\n                <div class="white-space"></div>\n\n                <div class="form-group">\n                    <div class="col-sm-12">\n                        <a class="btn btn-primary pull-right"\n                           ng-class="{\'disabled\': editInProgress}"\n                           ng-click="handleDepartmentUpdateClick()">\n                            <i class="fa fa-check-circle"></i>\n                            <span>Update</span>\n                        </a>\n                        <a class="btn btn-default pull-right" ng-click="toggleDepartmentEditForm()">\n                            <i class="fa fa-ban"></i>\n                            <span>Cancel</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div class="separator dashed"></div>\n\n                <div class="btn-adjustment" ng-if="allowUpgrade()">\n                    <a class="btn btn-warning col-lg-10 col-lg-offset-1"\n                       ng-disabled="DepartmentFormController.isUpgradeDisabled()"\n                       ng-click="!DepartmentFormController.isUpgradeDisabled() && DepartmentFormController.handleUpgradeClick()"\n                       uib-popover="Mandatory fields must be entered first to upgrade"\n                       popover-placement="left"\n                       popover-enable="DepartmentFormController.isUpgradeDisabled()"\n                       popover-trigger="\'mouseenter\'">\n                        <i class="fa fa-star"></i>\n                        <span>Upgrade Department</span>\n                    </a>\n                </div>\n                \n                <div class="form-group" ng-if="allowDowngrade()">\n                    <a class="btn btn-danger col-lg-10 col-lg-offset-1"\n                       ng-click="handleDowngradeClick()">\n                        <i class="fa fa-arrow-circle-o-down"></i>\n                        <span>Downgrade to simple department</span>\n                    </a>\n                </div>\n                <div class="form-group" ng-if="allowLoginAs()">\n                    <a class="btn btn-info col-lg-10 col-lg-offset-1"\n                       ng-disabled="DepartmentFormController.isLoginRestricted()"\n                       ng-click="!DepartmentFormController.isLoginRestricted() && handleLoginAsClick()"\n\n                       uib-tooltip=\'Login has been disabled due to permission. Contact {{DepartmentFormController.tuSupportEmail}}\'\n                       tooltip-enable="DepartmentFormController.isLoginRestricted()"\n                       tooltip-placement="left">\n                        <i class="fa fa-sign-in"></i>\n                        <span>Login as Department</span>\n                    </a>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/departments/tuProfileUpgradeClientDepartmentFormView.html",'<div class="ibox-title">\n    <h5>Upgrade Department</h5>\n    <div class="ibox-tools">\n        <a class="close-link" ng-click="DepartmentFormController.toggleClientUpgradeForm()">\n            <i class="fa fa-times"></i>\n        </a>\n    </div>\n</div>\n<div class="ibox block-institution">\n    <div class="ibox-content">\n        <form name="forms.upgradeTuDepartment" class="clearfix form-horizontal" novalidate>\n            <div class="form-group">\n                <label class="col-sm-3">To</label>\n                <div class="col-sm-9">{{upgradeEmailsTo}}</div>\n            </div>\n\n            <div class="form-group">\n                <label class="col-sm-3">Subject</label>\n                <div class="col-sm-9">I would like more information about Upgrading the Department.</div>\n            </div>\n\n            <div class="form-group">\n                <label class="col-sm-3">Name</label>\n                <div class="col-sm-9">\n                    {{upgradeRequest.name}}\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="col-sm-3">Email</label>\n                <div class="col-sm-9">\n                    {{upgradeRequest.email}}\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label class="col-sm-3">Comments</label>\n                <div class="col-sm-9">\n                    <textarea rows="7" cols="50" placeholder="Comments..." ng-model="upgradeRequest.comments" class="form-control no-resize" ></textarea>\n                </div>\n            </div>\n\n            <div class="row">\n                <div class="col-lg-6 text-left">\n                    <a class="btn btn-default btn-sm btn-block" ng-click="DepartmentFormController.toggleClientUpgradeForm()">Close</a>\n                </div>\n                <div class="col-lg-6 text-right">\n                    <a class="btn btn-primary btn-sm btn-block" ng-class="{\'disabled\': TopUniversitiesController.upgradeInProgress}" ng-click="TopUniversitiesController.handleSendUpgradeRequestClick()">Send</a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresSidebarView.html",'<div class="ibox" ng-class="getSelected() === 4 ? \'selected\' : \'collapsed\'"  ng-controller="TuMediaBrochuresSidebarController as TuMediaBrochuresSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(4)">\n        <h5>Brochures ({{getBrochureItems().length}})</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <div class="addForm">\n            <form class="form-horizontal" name="forms.formBrochure" id="form-brochure" novalidate>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please add your brochure title and link.</span><br />\n                        <span>Drag and drop brochures from left to right to change the order.</span>\n                    </p>\n                </div>\n\n                <div>\n                    <div class="form-group" ng-class="{\'has-errors\': getHasErrors()}">\n                        <div class="col-sm-12" use-tu-subtypes>\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="brochure-overview">\n                                    <input i-checkbox type="checkbox" name="overview" id="brochure-overview" focus-if="getDisplayTypesValidation()" focus-delay="250" ng-model="selectedBrochure.master"  ng-change="selectedBrochure.master? setDisplayTypesValidation(false) : \'\'" />\n                                    <span>Overview</span>\n                                </label>\n                            </div>\n\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="brochure-undergraduate">\n                                    <input i-checkbox type="checkbox" name="undergraduate" id="brochure-undergraduate" ng-model="selectedBrochure.ug" ng-change="selectedBrochure.ug? setDisplayTypesValidation(false) : \'\'" />\n                                    <span>Undergraduate</span>\n                                </label>\n                            </div>\n\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="brochure-postgraduate">\n                                    <input i-checkbox type="checkbox" name="postgraduate" id="brochure-postgraduate" ng-model="selectedBrochure.pg" ng-change="selectedBrochure.pg? setDisplayTypesValidation(false) : \'\'" />\n                                    <span>Postgraduate</span>\n                                </label>\n                            </div>\n\n                            <div ng-class="getDisplayTypesValidation()? \'has-errors\' : \'\'" >\n                                <span\n                                    custom-popover popover-html="Assign brochure to at least one of the three profiles" \n                                    popover-placement="left"\n                                    popover-trigger="manual"\n                                    popover-visibility="{{getDisplayTypesValidation() ? true : false}}"></span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="form-group" ng-class="{\'has-errors\': isInvalidTitle}">\n                        <label class="control-label col-sm-3 col-md-2" for="brochure-title">\n                            <span>Title *</span>\n                            <small>110 characters</small>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input class="form-control"\n                                   name="brochure-title"\n                                   id="brochure-title"\n                                   maxlength="110"\n                                   ng-required="required"\n                                   type="text"\n                                   focus-if="isHighlighted"\n                                   focus-delay="250"\n\n                                   custom-popover\n                                   popover-html="Add a brochure title"\n                                   popover-placement="left"\n                                   popover-trigger="manual"\n                                   popover-visibility="{{isInvalidTitle ? true : false}}"\n                                   ng-focus="setIsInvalidTitle(false)"\n                                   ng-model="selectedBrochure.name" />\n                        </div>\n                    </div>\n\n                    <div class="form-group" ng-class="{\'has-errors\': isInvalidUrl}">\n                        <label class="control-label col-sm-3 col-md-2">\n                            <span>URL *</span>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input class="form-control"\n                                   name="url"\n                                   type="url"\n                                   placeholder="http://"\n                                   ng-required="required"\n                                   ng-model="selectedBrochure.url"\n                                   ng-pattern="TuMediaBrochuresSidebarController.urlPattern"\n                                   ng-keyup="TuMediaBrochuresSidebarController.onKeyUp($event)"\n                                   ng-focus="setIsInvalidUrl(false)"\n\n                                   custom-popover\n                                   popover-html="Add a valid brochure link"\n                                   popover-placement="left"\n                                   popover-trigger="manual"\n                                   popover-visibility="{{isInvalidUrl ? true : false}}"/>\n                        </div>\n                    </div>\n\n                    <div class="form-group m-b-none">\n                        <div class="col-sm-12">\n                            <button class="btn btn-primary pull-right" ng-click="saveBrochureForm(selectedBrochure)">\n                                <i class="fa fa-check-circle"></i>\n                                <span>{{isEditMode() ? \'Update\' : \'Save\'}}</span>\n                            </button>\n                            <button class="btn btn-warning pull-right" ng-click="clearBrochureForm(selectedBrochure)">\n                                <i class="fa fa-ban"></i>\n                                <span>Clear</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresView.html",'<div ng-controller="TuMediaBrochuresController">\n    <h3 class="heading">Brochures ({{brochureItems.length}})</h3>\n    <div class="tab-body">\n        <div class="sort-filter" use-tu-subtypes>\n            <a class="btn btn-link btn-overview" ng-click="filter(typeOverview())" ng-class="type === typeOverview() ? \'active\' : \'inactive\'">\n                <i class="fa fa-book"></i>\n                <span>Overview ({{(brochureItems | filter:{master:true}).length}})</span>\n            </a>\n            <a class="btn btn-link btn-university" ng-click="filter(typeUndergraduate())" ng-class="type === typeUndergraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-university"></i>\n                <span>Undergraduate ({{(brochureItems | filter:{ug:true}).length}})</span>\n            </a>\n            <a class="btn btn-link btn-graduation" ng-click="filter(typePostgraduate())" ng-class="type === typePostgraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-graduation-cap"></i>\n                <span>Postgraduate ({{(brochureItems | filter:{pg:true}).length}})</span>\n            </a>\n        </div>\n\n        <div class="gallery">\n            <div class="grid-view upload" ng-class="selectedItem().id === \'\' ? \'selected\' : \'unselected\'" ng-click="selectBrochure()" ng-click="selectBrochure()">\n                <div class="source-link">\n                    <i class="fa fa-plus"></i>\n                </div>\n            </div>\n            <div ui-sortable="sortableOptions" ng-model="filteredBrochureItems">\n                <div class="grid-view" ng-class="selectedItem().id === item.id ? \'selected\' : \'unselected\'" ng-click="selectBrochure(item)" ng-repeat="item in filteredBrochureItems">\n                    \n                    <div class="preview" ng-class="item.imageUrl ? \'\' : \'overlay\' ">\n                        <img ng-src="{{item.imageUrl || \'/images/media/pdf-thumbnail.jpg\'}}"/>\n                    </div>\n                    \n                    <div class="info">\n                        <div class="title" item-order="{{item[\'orderType\'][type]}}">{{item.name}}</div>\n                        <div class="types" use-tu-subtypes>\n                            <i class="fa fa-book" ng-show="item.master"></i>\n                            <i class="fa fa-university" ng-show="item.ug"></i>\n                            <i class="fa fa-graduation-cap" ng-show="item.pg"></i>\n                        </div>\n                        <div class="actions">\n                            <a href="{{item.url}}" target="_blank" title="View {{item.name}}">\n                                <i class="fa fa-search"></i>\n                            </a>\n                            <a ng-click="deleteBrochure(item)" title="Delete {{item.name}}">\n                                <i class="fa fa-times-circle"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesSidebarView.html",'<div class="ibox" ng-class="getSelected() === 1 ? \'selected\' : \'collapsed\'" ng-controller="TuMediaImagesSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(1)">\n        <h5>Images ({{getImageItems().length}})</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <div class="addForm" ng-class="getImageUploadingInProgress() ? \'modal-overlay\' : \'\' ">\n            <form class="form-horizontal" name="forms.formImage" id="form-image" novalidate>\n                <div class="alert alert-info" ng-hide="selectedImage.id.length > 0">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please click on the upload sign to upload an image or drag and drop image into it.</span>\n                    </p>\n                </div>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>File must be: Less than 400KB / in jpg, jpeg format.</span><br />\n                        <span>Images are scaled to 703 x 398 on front-end site.</span><br />\n                        <span>Drag and drop images from left to right to change the order.</span>\n                    </p>\n                </div>\n                \n                <div ng-show="selectedImage.id.length > 0">\n                    <div class="form-group">\n                        <div class="col-sm-12" use-tu-subtypes>\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="overview">\n                                    <input i-checkbox type="checkbox" name="overview" id="overview" ng-model="selectedImage.master" focus-if="getDisplayIsValidType()" focus-delay="250" ng-change="selectedImage.master? setDisplayIsValidType(false) : \'\'"/>\n                                    <span>Overview</span>\n                                </label>\n                            </div>\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="undergraduate">\n                                    <input i-checkbox type="checkbox" name="undergraduate" id="undergraduate" ng-model="selectedImage.ug" ng-change="selectedImage.ug? setDisplayIsValidType(false) : \'\'"/>\n                                    <span>Undergraduate</span>\n                                </label>\n                            </div>\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="postgraduate">\n                                    <input i-checkbox type="checkbox" name="postgraduate" id="postgraduate" ng-model="selectedImage.pg" ng-change="selectedImage.pg? setDisplayIsValidType(false) : \'\'"/>\n                                    <span>Postgraduate</span>\n                                </label>\n                            </div>\n                            <div ng-class="getDisplayIsValidType()? \'has-errors\' : \'\'" >\n                                <span \n                                    custom-popover popover-html="Assign image to at least one of the three profiles"\n                                    popover-placement="left"\n                                    popover-trigger="manual"\n                                    popover-visibility="{{getDisplayIsValidType() ? true : false}}"></span>   \n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="form-group">\n                        <label class="control-label col-sm-3 col-md-2" for="title">\n                            <span>Title</span>\n                            <small>110 characters</small>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input class="form-control" name="title" id="title" placeHolder="Add title" maxlength="110" type="text" ng-model="selectedImage.name" focus-if="isHighlighted" focus-delay="250"/>\n                        </div>\n                    </div>\n                    \n                    <div class="form-group">\n                        <label class="control-label col-sm-3 col-md-2" for="description">\n                            <span>Description</span>\n                            <small>160 characters</small>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <textarea id="description" class="form-control" name="description" placeHolder="Add description" maxlength="160" ng-model="selectedImage.description"></textarea>\n                        </div>\n                    </div>\n\n                    <div class="form-group m-b-none">\n                        <div class="col-sm-12">\n                            <button class="btn btn-primary pull-right" ng-class="{\'disabled\': submitInProgress}" ng-click="saveImageForm(selectedImage)">\n                                <i class="fa fa-check-circle"></i>\n                                <span>{{isEditMode() ? \'Update\' : \'Save\'}}</span>\n                            </button>\n                            <button class="btn btn-warning pull-right" ng-class="{\'disabled\': submitInProgress}" ng-click="clearImageForm(selectedImage)">\n                                <i class="fa fa-ban"></i>\n'+"                                <span>{{isEditMode() ? 'Clear' : 'Cancel'}}</span>\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    </div>\n\n</div>"),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesView.html",'<div ng-controller="TuMediaImagesController as TuMediaImagesController">\n    <h3 class="heading">Images ({{imageItems.length}})</h3>\n    <div class="tab-body">\n        <div class="sort-filter" use-tu-subtypes>\n            <a class="btn btn-link btn-overview" ng-click="filter(typeOverview(), true)" ng-class="type === typeOverview() ? \'active\' : \'inactive\'">\n                <i class="fa fa-book"></i>\n                <span>Overview ({{uploadedImagesCount[typeOverview()]}}/{{TuMediaImagesController.maxImages}})</span>\n            </a> | \n            <a class="btn btn-link btn-university" ng-click="filter(typeUndergraduate(), true)" ng-class="type === typeUndergraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-university"></i>\n                <span>Undergraduate ({{uploadedImagesCount[typeUndergraduate()]}}/{{TuMediaImagesController.maxImages}})</span>\n            </a> | \n            <a class="btn btn-link btn-graduation" ng-click="filter(typePostgraduate(), true)" ng-class="type === typePostgraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-graduation-cap"></i>\n                <span>Postgraduate ({{uploadedImagesCount[typePostgraduate()]}}/{{TuMediaImagesController.maxImages}})</span>\n            </a>\n        </div>\n\n        <div class="gallery">\n            <div class="grid-view upload" ng-class="isSelected() ? \'selected\' : \'unselected\'" ng-click="selectImage()">\n                <div ng-show="!isTemporary()">\n                    <form name="forms.imageForm"\n                          class="dropzone image-form"\n                          enctype="multipart/form-data"\n                          ng-dropzone\n                          dropzone="TuMediaImagesController.dropZoneImageInstance"\n                          dropzone-config="imageConfig.dropzone"\n                          event-handlers="imageConfig.eventHandlers"\n                          novalidate >\n                        <div class="upload-image">\n                            <i class="fa fa-upload"></i>\n                        </div>\n                        <div class="fallback">\n                            <input name="file" type="file" />\n                        </div>\n                        <div class="dz-message" ng-show="uploadEnabled">\n                            <i class="fa fa-upload"></i>\n                        </div>\n                        <div class="dropzone-previews"></div>\n                    </form>\n                </div>\n\n                <div class="preview" ng-show="isTemporary()">\n                    <img ng-src="{{item.thumbnailUrl || \'/images/media/media-image.png\'}}"/>\n                </div>\n                \n                <div class="info" ng-show="isTemporary()" ng-class="getImageUploadingInProgress() ? \'modal-overlay\' : \'\' ">\n                    <div class="title" item-order="{{item[\'orderType\'][type]}}">\n                        {{item.name}}\n                    </div>\n                    <div class="types">\n                        <i class="fa fa-book" ng-show="item.master"></i>\n                        <i class="fa fa-university" ng-show="item.ug"></i>\n                        <i class="fa fa-graduation-cap" ng-show="item.pg"></i>\n                    </div>\n                    <div class="actions">\n                        <a href="{{item.url}}" target="_blank" title="View {{item.name}}">\n                            <i class="fa fa-search"></i>\n                        </a>\n                        <a ng-click="deleteImage(item)" title="Delete {{item.name}}">\n                            <i class="fa fa-times-circle"></i>\n                        </a>\n                    </div>\n                </div>\n            </div>\n\n            <div ui-sortable="sortableOptions" ng-model="filteredImageItems">\n                <div class="grid-view" ng-class="selectedItem().id === item.id ? \'selected\' : \'unselected\'" ng-click="selectImage(item)" ng-repeat="item in filteredImageItems">\n                    <div class="preview">\n                        <img ng-src="{{item.thumbnailUrl || \'/images/media/media-image.png\'}}"/>\n                    </div>\n                    <div class="info">\n                        <div class="title" item-order="{{item[\'orderType\'][type]}}">\n                            {{item.name}}\n                        </div>\n                        <div class="types" use-tu-subtypes>\n                            <i class="fa fa-book" ng-show="item.master"></i>\n                            <i class="fa fa-university" ng-show="item.ug"></i>\n                            <i class="fa fa-graduation-cap" ng-show="item.pg"></i>\n                        </div>\n                        <div class="actions">\n                            <a ng-click="openLightboxModal($index, item)" title="View {{item.name}}">\n                                <i class="fa fa-search"></i>\n                            </a>\n                            <a ng-click="deleteImage(item)" title="Delete {{item.name}}">\n                                <i class="fa fa-times-circle"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <ul>\n                <li ng-repeat="image in images">\n                    <a ng-click="openLightboxModal($index)">\n                        <img ng-src="{{image.thumbUrl}}" class="img-thumbnail">\n                    </a>\n                </li>\n            </ul>\n        </div>\n\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaSidebarView.html",'<div class="ibox" ng-class="getSelected() === 3 ? \'selected\' : \'collapsed\'" ng-controller="TuMediaSocialMediasSidebarController as TuMediaSocialMediasSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(3)">\n        <h5>Social Media</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <p class="bold text-capitalize">{{type()}}</p>\n        \n        <div class="addForm">\n            <form class="form-horizontal" name="forms.formSocialMedia" id="form-social-media" novalidate>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please add your</span>\n                        <span class="text-capitalize">{{type() === "other" ? "Website" : type()}}</span>\n                        <span>link, e.g.</span>\n                        <span class="text-nowrap">{{TuMediaSocialMediasSidebarController.selectedSocialMediaUrl}}</span>\n                    </p>\n                </div>\n\n                <div ng-repeat="selectedSocialMedia in selectedSocialMedia[type()]">\n                    <div ng-show="selectedSocialMedia.display">\n                        <div class="form-group">\n                            <div class="col-sm-12">\n                                <div class="checkbox-inline i-checkbox">\n                                    <label>\n                                        <input i-checkbox type="checkbox" ng-change="checkboxChanged(selectedSocialMedia, $index, \'master\')" ng-click="resetInvalidCheckbox($index)" name="overview" id="social-media-overview-{{$index}}" focus-if="getDisplayTypesValidation()" ng-blur="setDisplayTypesValidation(false)" focus-delay="250" ng-model="selectedSocialMedia.master" />\n                                        <span>Overview</span>\n                                    </label>\n                                </div>\n\n                                <div class="checkbox-inline i-checkbox">\n                                    <label>\n                                        <input i-checkbox type="checkbox" ng-change="checkboxChanged(selectedSocialMedia, $index, \'ug\')" ng-click="resetInvalidCheckbox($index)"  name="undergraduate" id="social-media-undergraduate-{{$index}}" ng-model="selectedSocialMedia.ug" />\n                                        <span>Undergraduate</span>\n                                    </label>\n                                </div>\n\n                                <div class="checkbox-inline i-checkbox">\n                                    <label>\n                                        <input i-checkbox type="checkbox" ng-change="checkboxChanged(selectedSocialMedia, $index, \'pg\')" ng-click="resetInvalidCheckbox($index)"  name="postgraduate" id="social-media-postgraduate-{{$index}}" ng-model="selectedSocialMedia.pg" />\n                                        <span>Postgraduate</span>\n                                    </label>\n                                </div>\n\n                                <div ng-class="invalidCheckboxes[$index] ? \'has-errors\' : \'\'" >\n                                    <span \n                                        custom-popover popover-html="Assign social media to at least one of the three profiles" \n                                        popover-placement="left" \n                                        popover-trigger="manual" \n                                        popover-visibility="{{invalidCheckboxes[$index]}}"></span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="form-group" ng-class="invalidFields[$index] ? \'has-errors\' : \'\'">\n                            <label class="control-label col-sm-3 col-md-2">\n                                <span>URL *</span>\n                            </label>\n                            <div class="col-sm-9 col-md-10">\n                            <input class="form-control"\n                                   name="url{{$index}}"\n                                   type="url"\n                                   placeholder="http://"\n                                   focus-if="(isHighlighted && $index === 0) ? true : false"\n                                   focus-delay="250"\n                                   ng-pattern="TuMediaSocialMediasSidebarController.urlPattern"\n                                   ng-model="selectedSocialMedia.url"\n                                   ng-focus = "resetInvalidField($index)"\n                                   ng-keyup="TuMediaSocialMediasSidebarController.onKeyUp($event, type(), $index)"\n\n                                   custom-popover\n                                   popover-trigger = "manual"\n                                   popover-visibility = "{{invalidFields[$index]}}"\n                                   popover-html="Add a valid <span class=\'text-capitalize\'>{{type() === \'other\' ? \'Website\' : type()}}</span> link"\n                                   popover-placement="left"/>\n                            </div>\n                        </div>\n                        <div class="separator dashed"></div>\n                    </div>\n                </div>\n\n                <div class="form-group m-b-none">\n                    <div class="col-sm-12">\n                        <button class="btn btn-primary pull-right" ng-click="saveSocialMediaForm()">\n                            <i class="fa fa-check-circle"></i>\n                            <span>{{isEditMode(type()) ? \'Update\' : \'Save\'}}</span>\n                        </button>\n                        <button class="btn btn-warning pull-right" ng-click="clearSocialMediaForm()">\n                            <i class="fa fa-ban"></i>\n                            <span>Clear</span>\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaView.html",'<div ng-controller="TuMediaSocialMediasController">\n    <h3 class="heading">Social Media</h3>\n    <div class="tab-body">\n        <div class="sort-filter">\n            <a class="btn btn-link btn-overview" ng-click="filter(typeOverview())" ng-class="type === typeOverview() ? \'active\' : \'inactive\'">\n                <i class="fa fa-book"></i>\n                <span>Overview</span>\n            </a>\n            <a class="btn btn-link btn-university" ng-click="filter(typeUndergraduate())" ng-class="type === typeUndergraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-university"></i>\n                <span>Undergraduate</span>\n            </a>\n            <a class="btn btn-link btn-graduation" ng-click="filter(typePostgraduate())" ng-class="type === typePostgraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-graduation-cap"></i>\n                <span>Postgraduate</span>\n            </a>\n        </div>\n\n        <div class="gallery">\n            <div class="grid-view" ng-repeat="(key, item) in socialMediaItems" ng-class="type === key ? \'selected\' : \'unselected\'" ng-click="selectSocialMedia(key)">\n                \n                <div class="add-link" ng-class="item.master || item.ug || item.pg ? \'hidden\' : \'visible\'">\n                    <i class="fa fa-plus"></i>\n                </div>\n\n                <div class="preview" ng-class="item.master || item.ug || item.pg ? \'\' : \'overlay\'">\n                    <img ng-src="/images/media/{{key}}-thumbnail.jpg"/>\n                </div>\n\n                <div class="info">\n                    <div class="title text-capitalize">{{key}}</div>\n                    <div class="types">\n                        <i class="fa fa-book" ng-show="item.master"></i>\n                        <i class="fa fa-university" ng-show="item.ug"></i>\n                        <i class="fa fa-graduation-cap" ng-show="item.pg"></i>\n                    </div>\n                    <div class="actions hidden">\n                        <a href="{{item.url}}" target="_blank" title="View {{item.name}}">\n                            <i class="fa fa-search"></i>\n                        </a>\n                        <a ng-click="deleteVideo(item)" title="Delete {{item.name}}">\n                            <i class="fa fa-times-circle"></i>\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosSidebarView.html",'<div class="ibox" ng-class="getSelected() === 2 ? \'selected\' : \'collapsed\'" ng-controller="TuMediaVideosSidebarController as TuMediaVideosSidebarController">\n    <div class="ibox-title clickable" ng-click="setSelected(2)">\n        <h5>Videos ({{getVideoItems().length}})</h5>\n        <div class="ibox-tools">\n            <a>\n                <i class="fa fa-chevron-up"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <div class="addForm">\n            <form id="form-video" class="form-horizontal" name="forms.formVideo" novalidate>\n                <div class="alert alert-info">\n                    <p>\n                        <i class="fa fa-info-circle"></i>\n                        <span>Please add a YouTube link. Shortened video links with .be extension are not allowed.</span><br />\n                        <span>Video title & description will be retrieved from YouTube.</span><br />\n                        <span>Drag and drop videos from left to right to change the order.</span>\n                    </p>\n                </div>\n                <div ng-class="getHasErrors()? \'has-errors\' : \'\'">\n                    <div class="form-group">\n                        <div class="col-sm-12" use-tu-subtypes>\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="overview">\n                                    <input i-checkbox type="checkbox" name="overview" id="overview" focus-if="getDisplayTypesValidation()" focus-delay="250" ng-model="selectedVideo.master" ng-change="selectedVideo.master? setDisplayTypesValidation(false) : \'\'"/>\n                                    <span>Overview</span>\n                                </label>\n                            </div>\n\n                            <div class="checkbox-inline i-checkbox">\n                                <label for="undergraduate">\n                                    <input i-checkbox type="checkbox" name="undergraduate" id="undergraduate" ng-model="selectedVideo.ug" ng-change="selectedVideo.ug? setDisplayTypesValidation(false) : \'\'" />\n                                    <span>Undergraduate</span>\n                                </label>\n                            </div>\n                            \n                            <div class="checkbox-inline i-checkbox">\n                                <label for="postgraduate">\n                                    <input i-checkbox type="checkbox" name="postgraduate" id="postgraduate" ng-model="selectedVideo.pg" ng-change="selectedVideo.pg? setDisplayTypesValidation(false) : \'\'"/>\n                                    <span>Postgraduate</span>\n                                </label>\n                            </div>\n\n                            <div ng-class="getDisplayTypesValidation()? \'has-errors\' : \'\'" >\n                                <span \n                                    custom-popover popover-html="Assign video to at least one of the three profiles"\n                                    popover-placement="left"\n                                    popover-trigger="manual"\n                                    popover-visibility="{{getDisplayTypesValidation() ? true : false}}"></span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="form-group" ng-class="{\'has-errors\': getHasErrors()}">\n                        <label class="control-label col-sm-3 col-md-2">\n                            <span>URL *</span>\n                        </label>\n                        <div class="col-sm-9 col-md-10">\n                            <input class="form-control"\n                                   name="url"\n                                   type="url"\n                                   placeholder="http://"\n                                   ng-required="required"\n                                   focus-if="isHighlighted"\n                                   focus-delay="250"\n                                   ng-model="selectedVideo.url"\n                                   ng-pattern="youtubeUrlPattern"\n                                   ng-keyup="TuMediaVideosSidebarController.onKeyUp($event)"\n                                   ng-focus="setHasErrors(false)"\n\n                                   custom-popover\n                                   popover-html="Add a valid YouTube link"\n                                   popover-placement="left"\n                                   popover-trigger="manual"\n                                   popover-visibility="{{getHasErrors() ? true : false}}"/>\n                        </div>\n                    </div>\n                    \n                    <div class="form-group m-b-none">\n                        <div class="col-sm-12">\n                            <button class="btn btn-primary pull-right" ng-click="saveVideoForm(selectedVideo)">\n                                <i class="fa fa-check-circle"></i>\n                                <span>{{isEditMode() ? \'Update\' : \'Save\'}}</span>\n                            </button>\n                             <button class="btn btn-warning pull-right" ng-click="clearVideoForm(selectedVideo)">\n                                <i class="fa fa-ban"></i>\n                                <span>Clear</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosView.html",'<div ng-controller="TuMediaVideosController">\n    <h3 class="heading">Videos ({{videoItems.length}})</h3>\n    <div class="tab-body">\n        <div class="sort-filter" use-tu-subtypes>\n            <a class="btn btn-link btn-overview" ng-click="filter(typeOverview())" ng-class="type === typeOverview() ? \'active\' : \'inactive\'">\n                <i class="fa fa-book"></i>\n                <span>Overview ({{(videoItems | filter:{master:true}).length}})</span>\n            </a> |\n            <a class="btn btn-link btn-university" ng-click="filter(typeUndergraduate())" ng-class="type === typeUndergraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-university"></i>\n                <span>Undergraduate ({{(videoItems | filter:{ug:true}).length}})</span>\n            </a> |\n            <a class="btn btn-link btn-graduation" ng-click="filter(typePostgraduate())" ng-class="type === typePostgraduate() ? \'active\' : \'inactive\'">\n                <i class="fa fa-graduation-cap"></i>\n                <span>Postgraduate ({{(videoItems | filter:{pg:true}).length}})</span>\n            </a>\n        </div>\n\n        <div class="gallery">\n            <div class="grid-view upload" ng-class="selectedItem().id === \'\' ? \'selected\' : \'unselected\'" ng-click="selectVideo()" ng-click="selectVideo()">\n                <div class="source-link">\n                    <i class="fa fa-plus"></i>\n                </div>\n            </div>\n\n            <div ui-sortable="sortableOptions" ng-model="filteredVideoItems">\n                <div class="grid-view" ng-class="selectedItem().id === item.id ? \'selected\' : \'unselected\'" ng-click="selectVideo(item)" ng-repeat="item in filteredVideoItems">\n                    \n                    <div class="preview" ng-class="item.imageUrl ? \'\' : \'overlay\' ">\n                        <img ng-src="{{item.imageUrl || \'/images/media/youtube-thumbnail.jpg\'}}"/>\n                    </div>\n                    \n                    <div class="info">\n                        <div class="title" item-order="{{item[\'orderType\'][type]}}">\n                            {{item.name || \'Retrieving title...\' }}\n                        </div>\n                        <div class="types" use-tu-subtypes>\n                            <i class="fa fa-book" ng-show="item.master"></i>\n                            <i class="fa fa-university" ng-show="item.ug"></i>\n                            <i class="fa fa-graduation-cap" ng-show="item.pg"></i>\n                        </div>\n                        <div class="actions">\n                            <a href="{{item.url}}" target="_blank" title="View {{item.name}}">\n                                <i class="fa fa-search"></i>\n                            </a>\n                            <a ng-click="deleteVideo(item)" title="Delete {{item.name}}">\n                                <i class="fa fa-times-circle"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tu/media/tuProfileMediaLinkManagerView.html",'<div class="nested-ibox" ng-hide="showUpgradeForm" ng-controller="TuMediaCommonSidebarController">\n    <div class="ibox-title m-t-xl">\n        <h4>Media Manager ({{getGeneralCounter()}})</h4>\n    </div>\n    <div class="ibox">\n        <div class="ibox-content">\n            <div include-replace ng-include src="\'/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesSidebarView.html\'"></div>\n            <div include-replace ng-include src="\'/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosSidebarView.html\'"></div>\n            <div include-replace ng-include src="\'/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaSidebarView.html\'"></div>\n            <div include-replace ng-include src="\'/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresSidebarView.html\'"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/media/tuProfileMediaView.html",'<div ng-controller="TuProfileMediaController as TuProfileMediaController">\n    <div upgrade-banner\n         info-block-class="isRightSidePanelActive() ? \'col-lg-9\' : \'col-lg-10\'"\n         buttons-block-class="isRightSidePanelActive() ? \'col-lg-3\' : \'col-lg-2\'"\n         basic-profile="!tuIsAdvanced ? true : false"\n         upgrade-email="{{upgradeEmailsTo}}"\n         upgrade-click="toggleUpgradeForm()"></div>\n\n    <div ng-class="tuIsAdvanced ? \'\': \'modal-overlay-35\'">\n        <div wave-spinner class="wave-spinner" ng-show="isMediaReloading"></div>\n        <div ng-if="!isMediaReloading">\n            <div ng-show="TuProfileMediaController.isImagesTabActive()" ng-include src="\'/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesView.html\'"></div>\n            <div ng-show="TuProfileMediaController.isVideosTabActive()" ng-include src="\'/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosView.html\'"></div>\n            <div ng-show="TuProfileMediaController.isSocialMediaTabActive()" ng-include src="\'/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaView.html\'"></div>\n            <div ng-show="TuProfileMediaController.isBrochuresTabActive()" ng-include src="\'/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresView.html\'"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/overview/partial/advancedMasterSubTab.html",'<form name="forms.overviewAdvancedMasterForm" enctype="multipart/form-data">\n    <div class="tab-header">\n        <h3 class="heading">Advanced Description *</h3>\n        <a class="btn btn-warning btn-history" ng-show="!historyDisabled" ng-click="handleTuOverviewHistoryLogClick(\'master\', true)">\n            <i class="fa fa-clock-o"></i>\n        </a>\n        <div wave-spinner class="text-right" ng-show="historyDisabled"></div>\n    </div>\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': isAdvancedOverviewEmpty}">\n            <summernote\n                config="TuProfileOverviewController.textEditorAdvancedOptions"\n                ng-model="tuProfile.advancedMasterOverview"\n                on-focus="TuProfileOverviewController.setOverviewInvalid(\'advancedOverview\')"\n                on-change="TuProfileOverviewController.advancedMasterOverviewWords = countWords(contents)"\n                on-init="TuProfileOverviewController.advancedMasterOverviewWords = countWords(tuProfile.advancedMasterOverview)"\n                count-word="TuProfileOverviewController.advancedMasterOverviewWords">\n            </summernote>\n        </div>\n\n\n        <div class="editor-note form-group">\n            <span ng-class="{\'text-red\': TuProfileOverviewController.isAdvancedOverviewInvalid(TuProfileOverviewController.advancedMasterOverviewWords)}">\n                <span class="bold">{{TuProfileOverviewController.advancedMasterOverviewWords}}</span>\n                <span>words inserted</span>\n            </span>\n            <span class="pull-right">Maximum {{TuProfileOverviewController.advancedDescriptionWordLimit}} words</span>\n            \n            <div\n                focus-delay="250"\n                custom-popover\n                popover-html="Add a general description about your university"\n                popover-placement="left"\n                popover-trigger="manual"\n                popover-visibility="{{isAdvancedOverviewEmpty ? true : false}}">\n            </div>\n        </div>\n\n        <div class="separator"></div>\n\n        <div  class="row">\n            <div class="col-lg-6 form-group">\n                <div>\n                    <h3>University Website</h3>\n                </div>\n                <input type="text"\n                       placeholder="http://"\n                       ng-model="tuProfile.masterWebsiteUrl"\n                       ng-keyup="TuProfileOverviewController.onKeyUp($event)"\n                       class="form-control" />\n            </div>\n            <div class="col-lg-6 form-group">\n                <div class="display-inline-request-info margin-right-30">\n                    <h3 class="inline">Request info</h3>\n                    <span class="small dfn text-left text-nowrap"> (please select one) </span>\n                </div>\n                <div class="display-inline-request-info request-info-title">\n                    <div class="display-inline-request-info">\n                        <input i-checkbox type="radio" value="email" ng-model="tuProfile.requestInfoTypeMaster"> Email\n                    </div>\n                    <span class="or-checkboxes-request-info">OR</span>\n                    <div class="display-inline-request-info">\n                        <input i-checkbox type="radio" value="url" ng-model="tuProfile.requestInfoTypeMaster"> URL\n                    </div>\n                </div>\n                <div ng-show="tuProfile.requestInfoTypeMaster === \'url\'" class="url-option">\n                    <div class="form-group">\n                        <input type="text" placeholder="Title" ng-model="tuProfile.masterRequestInfoUrlTitle" class="form-control">\n                    </div>\n                    <div class="form-group">\n                        <input type="url"\n                            name="tuProfile.masterRequestInfoUrl"\n                            placeholder="URL"\n                            ng-model="tuProfile.masterRequestInfoUrl"\n                            ng-keyup="TuProfileOverviewController.onKeyUp($event)"\n                            class="form-control" />\n                    </div>\n                </div>\n                <div ng-show="tuProfile.requestInfoTypeMaster === \'email\'" class="email-option">\n                    <div class="form-group">\n                        <input type="email" placeholder="Email" ng-model="tuProfile.masterRequestInfoEmail" class="form-control" >\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="tab-footer">\n            <a class="btn btn-primary pull-right"\n                ng-class="{\'disabled\': overviewAdvancedMasterFormSubmitInProgress}"\n                ng-click="handleOverviewAdvancedMasterDataSubmit()">\n                <i class="fa fa-check-circle"></i>\n                <span>Update</span>\n            </a>\n        </div>\n    </div>\n</form>\n'),$templateCache.put("/scripts/components/profiles/tu/overview/partial/advancedPgSubTab.html",'<form name="forms.overviewAdvancedPgForm" enctype="multipart/form-data">\n    <div class="tab-header">\n        <h3 class="heading">Advanced Description *</h3>\n        <a class="btn btn-warning btn-history" ng-show="!historyDisabled" ng-click="handleTuOverviewHistoryLogClick(\'pg\', true)">\n            <i class="fa fa-clock-o"></i>\n        </a>\n        <div wave-spinner="" class="text-right" ng-show="historyDisabled"></div>\n    </div>\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': isAdvancedPgOverviewEmpty}">\n            <summernote\n                config="TuProfileOverviewController.textEditorAdvancedOptions"\n                ng-model="tuProfile.advancedPgOverview"\n                on-focus="TuProfileOverviewController.setOverviewInvalid(\'advancedPgOverview\')"\n                on-change="TuProfileOverviewController.advancedPgOverviewWords = countWords(contents)"\n                on-init="TuProfileOverviewController.advancedPgOverviewWords = countWords(tuProfile.advancedPgOverview)"\n                count-word="TuProfileOverviewController.advancedPgOverviewWords">\n            </summernote>\n        </div>\n\n        <div class="editor-note form-group">\n            <span ng-class="{\'text-red\': TuProfileOverviewController.isAdvancedOverviewInvalid(TuProfileOverviewController.advancedPgOverviewWords)}">\n                <span class="bold">{{TuProfileOverviewController.advancedPgOverviewWords}}</span>\n                <span>words inserted</span>\n            </span>\n            <span class="pull-right">Maximum {{TuProfileOverviewController.advancedDescriptionWordLimit}} words</span>\n            <div\n              focus-delay="250"\n              custom-popover\n              popover-html="Add a general description about the Postgraduate Courses you offer"\n              popover-placement="left"\n              popover-trigger="manual"\n              popover-visibility="{{isAdvancedPgOverviewEmpty ? true : false}}">\n            </div>\n        </div>\n\n        <div class="separator"></div>\n\n        <div class="row">\n            <div class="col-lg-6 form-group">\n                <div>\n                    <h3>University Website</h3>\n                </div>\n                <input type="text"\n                       placeholder="http://"\n                       ng-model="tuProfile.pgWebsiteUrl"\n                       ng-keyup="TuProfileOverviewController.onKeyUp($event)"\n                       class="form-control" />\n            </div>\n            <div class="col-lg-6 form-group">\n                <div class="display-inline-request-info margin-right-30">\n                    <h3 class="inline">Request info</h3>\n                    <span class="small dfn text-left text-nowrap"> (please select one) </span>\n                </div>\n                <div class="display-inline-request-info request-info-title">\n                    <div class="display-inline-request-info">\n                        <input i-checkbox type="radio" name="requestInfoOverview" value="email" ng-model="tuProfile.requestInfoTypePg"> Email\n                    </div>\n                    <span class="or-checkboxes-request-info">OR</span>\n                    <div class="display-inline-request-info">\n                        <input i-checkbox type="radio" name="requestInfoOverview" value="url" ng-model="tuProfile.requestInfoTypePg"> URL\n                    </div>\n                </div>\n\n                <div ng-show="tuProfile.requestInfoTypePg === \'url\'" class="url-option">\n                    <div class="form-group">\n                        <input type="text" placeholder="Title" ng-model="tuProfile.pgRequestInfoUrlTitle" class="form-control">\n                    </div>\n                    <div class="form-group">\n                        <input type="url"\n                            name="tuProfile.pgRequestInfoUrl"\n                            placeholder="URL"\n                            ng-model="tuProfile.pgRequestInfoUrl"\n                            ng-keyup="TuProfileOverviewController.onKeyUp($event)"\n                            class="form-control" />\n                    </div>\n                </div>\n                <div ng-show="tuProfile.requestInfoTypePg === \'email\'" class="email-option">\n                    <div class="form-group">\n                        <input type="email" placeholder="Email" ng-model="tuProfile.pgRequestInfoEmail" class="form-control">\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="tab-footer">  \n            <a class="btn btn-primary pull-right"\n                ng-class="{\'disabled\': overviewAdvancedPgFormSubmitInProgress}"\n                ng-click="handleOverviewAdvancedPgDataSubmit()">\n                <i class="fa fa-check-circle"></i>\n                <span>Update</span>\n            </a>\n        </div>\n    </div>\n</form>'),$templateCache.put("/scripts/components/profiles/tu/overview/partial/advancedUgSubTab.html",'<form name="forms.overviewAdvancedUgForm" enctype="multipart/form-data">    \n    <div class="tab-header">\n        <h3 class="heading">Advanced Description *</h3>\n        <a class="btn btn-warning btn-history" ng-show="!historyDisabled" ng-click="handleTuOverviewHistoryLogClick(\'ug\', true)">\n            <i class="fa fa-clock-o"></i>\n        </a>\n        <div wave-spinner class="text-right" ng-show="historyDisabled"></div>\n    </div>\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': isAdvancedUgOverviewEmpty}">\n            <summernote\n                config="TuProfileOverviewController.textEditorAdvancedOptions"\n                ng-model="tuProfile.advancedUgOverview"\n                on-focus="TuProfileOverviewController.setOverviewInvalid(\'advancedUgOverview\')"\n                on-change="TuProfileOverviewController.advancedUgOverviewWords = countWords(contents)"\n                on-init="TuProfileOverviewController.advancedUgOverviewWords = countWords(tuProfile.advancedUgOverview)"\n                count-word="TuProfileOverviewController.advancedUgOverviewWords">\n            </summernote>\n        </div>\n\n        <div class="editor-note form-group">\n            <span ng-class="{\'text-red\': TuProfileOverviewController.isAdvancedOverviewInvalid(TuProfileOverviewController.advancedUgOverviewWords)}">\n                <span class="bold">{{TuProfileOverviewController.advancedUgOverviewWords}}</span>\n                <span>words inserted</span>\n            </span>\n            <span class="pull-right">Maximum {{TuProfileOverviewController.advancedDescriptionWordLimit}} words</span>\n        \n            <div\n              focus-delay="250"\n              custom-popover\n              popover-html="Add a general description about the Undergraduate Courses you offer"\n              popover-placement="left"\n              popover-trigger="manual"\n              popover-visibility="{{isAdvancedUgOverviewEmpty ? true : false}}">\n            </div>\n        </div>\n\n        <div class="separator"></div>\n\n        <div  class="row">\n            <div class="col-lg-6 form-group">\n                <div>\n                    <h3>University Website</h3>\n                </div>\n                <input type="text"\n                       placeholder="http://"\n                       ng-model="tuProfile.ugWebsiteUrl"\n                       ng-keyup="TuProfileOverviewController.onKeyUp($event)"\n                       class="form-control" />\n            </div>\n            <div class="col-lg-6 form-group">\n                <div class="display-inline-request-info margin-right-30">\n                    <h3 class="inline">Request info</h3>\n                    <span class="small dfn text-left text-nowrap"> (please select one) </span>\n                </div>\n                <div class="display-inline-request-info request-info-title">\n                    <div class="display-inline-request-info">\n                        <input i-checkbox type="radio" name="requestInfoOverview" value="email" ng-model="tuProfile.requestInfoTypeUg"> Email\n                    </div>\n                    <span class="or-checkboxes-request-info">OR</span>\n                    <div class="display-inline-request-info">\n                        <input i-checkbox type="radio" name="requestInfoOverview" value="url" ng-model="tuProfile.requestInfoTypeUg"> URL\n                    </div>\n                </div>\n                <div ng-show="tuProfile.requestInfoTypeUg === \'url\'" class="url-option">\n                    <div class="form-group">\n                        <input type="text" placeholder="Title" ng-model="tuProfile.ugRequestInfoUrlTitle" class="form-control" >\n                    </div>\n                    <div class="form-group">\n                        <input type="url"\n                            name="tuProfile.ugRequestInfoUrl"\n                            placeholder="URL"\n                            ng-model="tuProfile.ugRequestInfoUrl"\n                            ng-keyup="TuProfileOverviewController.onKeyUp($event)"\n                            class="form-control" />\n                    </div>\n                </div>\n                <div ng-show="tuProfile.requestInfoTypeUg === \'email\'" class="email-option">\n                    <div class="form-group">\n                        <input type="email" placeholder="Email" ng-model="tuProfile.ugRequestInfoEmail" class="form-control" >\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class="tab-footer">\n            <a class="btn btn-primary pull-right"\n                ng-class="{\'disabled\': overviewBasicUgFormSubmitInProgress}"\n                ng-click="handleOverviewAdvancedUgDataSubmit()">\n                <i class="fa fa-check-circle"></i>\n                <span>Update</span>\n            </a>\n        </div>\n    </div>\n</form>'),$templateCache.put("/scripts/components/profiles/tu/overview/partial/basicMasterSubTab.html",'<form name="forms.overviewBasicMasterForm" enctype="multipart/form-data">\n    <div class="tab-header">\n      <h3 class="heading">Basic Description *</h3>\n      <a class="btn btn-warning btn-history" ng-show="!historyDisabled" ng-click="handleTuOverviewHistoryLogClick(\'master\')">\n          <i class="fa fa-clock-o"></i>\n      </a>\n      <div wave-spinner="" class="text-right" ng-show="historyDisabled"></div>\n    </div>\n\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': isBasicOverviewEmpty}">\n            <summernote\n                config="TuProfileOverviewController.textEditorBasicOptions"\n                ng-model="tuProfile.basicMasterOverview"\n                on-focus="TuProfileOverviewController.setOverviewInvalid(\'basicOverview\')"\n                on-change="TuProfileOverviewController.basicMasterOverviewWords = countWords(contents)"\n                on-init="TuProfileOverviewController.basicMasterOverviewWords = countWords(tuProfile.basicMasterOverview)"\n                count-word="TuProfileOverviewController.basicMasterOverviewWords">\n            </summernote>\n        </div>\n\n      <div class="editor-note form-group">\n        <span ng-class="{\'text-red\': TuProfileOverviewController.isBasicOverviewInvalid(TuProfileOverviewController.basicMasterOverviewWords)}">\n          <span class="bold">{{TuProfileOverviewController.basicMasterOverviewWords}}</span>\n          <span>words inserted</span>\n        </span>\n        <span class="pull-right">Maximum {{TuProfileOverviewController.basicDescriptionWordLimit}} words</span>\n        <div\n            focus-delay="250"\n            custom-popover\n            popover-html="Add a general description about your university"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{isBasicOverviewEmpty ? true : false}}">\n        </div>\n      </div>\n\n      <div class="tab-footer">\n          <a class="btn btn-primary pull-right"\n            ng-class="{\'disabled\': overviewBasicMasterFormSubmitInProgress}"\n            ng-click="handleOverviewBasicMasterDataSubmit()">\n            <i class="fa fa-check-circle"></i>\n            <span>Update</span>\n          </a>\n      </div>\n\n    </div>    \n</form>\n\n<div upgrade-banner\n     info-block-class="isRightSidePanelActive() ? \'col-lg-9\' : \'col-lg-10\'"\n     buttons-block-class="isRightSidePanelActive() ? \'col-lg-3\' : \'col-lg-2\'"\n     basic-profile="true"\n     upgrade-email="{{upgradeEmailsTo}}"\n     upgrade-click="toggleUpgradeForm()"></div>\n\n<div class="separator"></div>\n\n<div class="locked">\n    <div  class="row">\n        <div class="col-lg-6 form-group">\n            <div>\n                <h3>University Website</h3>\n            </div>\n            <input type="text"\n                   disabled\n                   placeholder="http://"\n                   ng-model="tuProfile.masterWebsiteUrl"\n                   class="form-control" />\n        </div>\n        <div class="col-lg-6 form-group">\n            <div class="display-inline-request-info margin-right-30">\n                <h3 class="inline">Request info</h3>\n                <span class="small dfn text-left text-nowrap"> (please select one) </span>\n            </div>\n            <div class="display-inline-request-info request-info-title">\n                <div class="display-inline-request-info">\n                    <input i-checkbox\n                       disabled\n                       type="radio"\n                       value="email"\n                       ng-model="tuProfile.requestInfoTypeMaster"> Email\n                </div>\n                <span class="or-checkboxes-request-info">OR</span>\n                <div class="display-inline-request-info">\n                    <input i-checkbox\n                       disabled\n                       type="radio"\n                       value="url"\n                       ng-model="tuProfile.requestInfoTypeMaster"> URL\n                </div>\n            </div>\n            <div ng-show="tuProfile.requestInfoTypeMaster === \'url\'" class="url-option">\n                <div class="form-group">\n                    <input type="text"\n                           disabled\n                           placeholder="Title"\n                           ng-model="tuProfile.masterRequestInfoUrlTitle"\n                           class="form-control">\n                </div>\n                <div class="form-group">\n                    <input type="url"\n                           disabled\n                           placeholder="URL"\n                           ng-model="tuProfile.masterRequestInfoUrl"\n                           class="form-control">\n                </div>\n            </div>\n            <div ng-show="tuProfile.requestInfoTypeMaster === \'email\'" class="email-option">\n                <div class="form-group">\n                    <input type="email"\n                           disabled\n                           placeholder="Email"\n                           ng-model="tuProfile.masterRequestInfoEmail"\n                           class="form-control">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/overview/partial/basicPgSubTab.html",'<form name="forms.overviewBasicPgForm" enctype="multipart/form-data">\n    <div class="tab-header">\n      <h3 class="heading">Basic Description *</h3>\n      <a class="btn btn-warning btn-history"\n        ng-class="{\'disabled\': historyDisabled}"\n        ng-click="handleTuOverviewHistoryLogClick(\'pg\')">\n        <i class="fa fa-clock-o"></i>\n      </a>\n    </div>\n\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': isBasicPgOverviewEmpty}">\n            <summernote\n                config="TuProfileOverviewController.textEditorBasicOptions"\n                ng-model="tuProfile.basicPgOverview"\n                on-focus="TuProfileOverviewController.setOverviewInvalid(\'basicPgOverview\')"\n                on-change="TuProfileOverviewController.basicPgOverviewWords = countWords(contents)"\n                on-init="TuProfileOverviewController.basicPgOverviewWords = countWords(tuProfile.basicPgOverview)"\n                count-word="TuProfileOverviewController.basicPgOverviewWords">\n            </summernote>\n        </div>\n\n      <div class="editor-note form-group">\n        <span ng-class="{\'text-red\': TuProfileOverviewController.isBasicOverviewInvalid(TuProfileOverviewController.basicPgOverviewWords)}">\n          <span class="bold">{{TuProfileOverviewController.basicPgOverviewWords}}</span>\n          <span>words inserted</span>\n        </span>\n        <span class="pull-right">Maximum {{TuProfileOverviewController.basicDescriptionWordLimit}} words</span>\n      \n        <div\n            focus-delay="250"\n            custom-popover\n            popover-html="Add a general description about the Postgraduate Courses you offer"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{isBasicPgOverviewEmpty ? true : false}}">\n        </div>\n      </div>\n\n      <div class="tab-footer">\n        <a class="btn btn-primary pull-right"\n          ng-class="{\'disabled\': overviewTabOverviewSubTabSubmitInProgress}"\n          ng-click="handleOverviewBasicPgDataSubmit()">\n          <i class="fa fa-check-circle"></i>\n          <span>Update</span>\n        </a>\n      </div>\n    </div>\n</form>\n\n<div upgrade-banner\n     info-block-class="isRightSidePanelActive() ? \'col-lg-9\' : \'col-lg-10\'"\n     buttons-block-class="isRightSidePanelActive() ? \'col-lg-3\' : \'col-lg-2\'"\n     basic-profile="true"\n     upgrade-email="{{upgradeEmailsTo}}"\n     upgrade-click="toggleUpgradeForm()"></div>\n\n<div class="separator"></div>\n\n<div class="locked">\n    <div  class="row">\n        <div class="col-lg-6 form-group">\n            <div>\n                <h3>University Website</h3>\n            </div>\n            <input type="text"\n                   disabled\n                   placeholder="http://"\n                   ng-model="tuProfile.pgWebsiteUrl"\n                   class="form-control" />\n        </div>\n        <div class="col-lg-6 form-group">\n            <div class="display-inline-request-info margin-right-30">\n                <h3 class="inline">Request info</h3>\n                <span class="small dfn text-left text-nowrap"> (please select one) </span>\n            </div>\n            <div class="display-inline-request-info request-info-title">\n                <div class="display-inline-request-info">\n                    <input i-checkbox\n                       disabled\n                       type="radio"\n                       value="email"\n                       ng-model="tuProfile.requestInfoTypePg"> Email\n                </div>\n                <span class="or-checkboxes-request-info">OR</span>\n                <div class="display-inline-request-info">\n                    <input i-checkbox\n                       disabled\n                       type="radio"\n                       value="url"\n                       ng-model="tuProfile.requestInfoTypePg"> URL\n                </div>\n            </div>\n            <div ng-show="tuProfile.requestInfoTypePg === \'url\'" class="url-option">\n                <div class="form-group">\n                    <input type="text"\n                           disabled\n                           placeholder="Title"\n                           ng-model="tuProfile.pgRequestInfoUrlTitle"\n                           class="form-control">\n                </div>\n                <div class="form-group">\n                    <input type="url"\n                           disabled\n                           placeholder="URL"\n                           ng-model="tuProfile.pgRequestInfoUrl"\n                           class="form-control">\n                </div>\n            </div>\n            <div ng-show="tuProfile.requestInfoTypePg === \'email\'" class="email-option">\n                <div class="form-group">\n                    <input type="email"\n                           disabled\n                           placeholder="Email"\n                           ng-model="tuProfile.pgRequestInfoEmail"\n                           class="form-control">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/overview/partial/basicUgSubTab.html",'<form name="forms.overviewBasicUgForm" enctype="multipart/form-data">\n    <div class="tab-header">\n      <h3 class="heading">Basic Description *</h3>\n      <a class="btn btn-warning btn-history" ng-class="{\'disabled\': historyDisabled}" ng-click="handleTuOverviewHistoryLogClick(\'ug\')">\n        <i class="fa fa-clock-o"></i>\n      </a>\n    </div>\n\n    <div class="tab-body">\n        <div class="summernote-container" ng-class="{\'has-errors\': isBasicUgOverviewEmpty}">\n            <summernote\n                config="TuProfileOverviewController.textEditorBasicOptions"\n                ng-model="tuProfile.basicUgOverview"\n                on-focus="TuProfileOverviewController.setOverviewInvalid(\'basicUgOverview\')"\n                on-change="TuProfileOverviewController.basicUgOverviewWords = countWords(contents)"\n                on-init="TuProfileOverviewController.basicUgOverviewWords = countWords(tuProfile.basicUgOverview)"\n                count-word="TuProfileOverviewController.basicUgOverviewWords">\n            </summernote>\n        </div>\n\n      <div class="editor-note form-group">\n        <span ng-class="{\'text-red\': TuProfileOverviewController.isBasicOverviewInvalid(TuProfileOverviewController.basicUgOverviewWords)}">\n          <span class="bold">{{TuProfileOverviewController.basicUgOverviewWords}}</span>\n          <span>words inserted</span>\n        </span>\n        <span class="pull-right">Maximum {{TuProfileOverviewController.basicDescriptionWordLimit}} words</span>\n        <div\n            focus-delay="250"\n            custom-popover\n            popover-html="Add a general description about the Undergraduate Courses you offer"\n            popover-placement="left"\n            popover-trigger="manual"\n            popover-visibility="{{isBasicUgOverviewEmpty ? true : false}}">\n        </div>\n      </div>\n\n      <div class="tab-footer">\n        <a class="btn btn-primary pull-right"\n          ng-class="{\'disabled\': overviewBasicUgFormSubmitInProgress}"\n          ng-click="handleOverviewBasicUgDataSubmit()">\n          <i class="fa fa-check-circle"></i>\n          <span>Update</span>\n        </a>\n      </div>\n    </div>\n</form>\n\n<div upgrade-banner\n     info-block-class="isRightSidePanelActive() ? \'col-lg-9\' : \'col-lg-10\'"\n     buttons-block-class="isRightSidePanelActive() ? \'col-lg-3\' : \'col-lg-2\'"\n     basic-profile="true"\n     upgrade-email="{{upgradeEmailsTo}}"\n     upgrade-click="toggleUpgradeForm()"></div>\n\n<div class="separator"></div>\n\n<div class="locked">\n    <div  class="row">\n        <div class="col-lg-6 form-group">\n            <div>\n                <h3>University Website</h3>\n            </div>\n            <input type="text"\n                   disabled\n                   placeholder="http://"\n                   ng-model="tuProfile.ugWebsiteUrl"\n                   class="form-control" />\n        </div>\n        <div class="col-lg-6 form-group">\n            <div class="display-inline-request-info margin-right-30">\n                <h3 class="inline">Request info</h3>\n                <span class="small dfn text-left text-nowrap"> (please select one) </span>\n            </div>\n            <div class="display-inline-request-info request-info-title">\n                <div class="display-inline-request-info">\n                    <input i-checkbox\n                       disabled\n                       type="radio"\n                       value="email"\n                       ng-model="tuProfile.requestInfoTypeUg"> Email\n                </div>\n                <span class="or-checkboxes-request-info">OR</span>\n                <div class="display-inline-request-info">\n                    <input i-checkbox\n                       disabled\n                       type="radio"\n                       value="url"\n                       ng-model="tuProfile.requestInfoTypeUg"> URL\n                </div>\n            </div>\n            <div ng-show="tuProfile.requestInfoTypeUg === \'url\'" class="url-option">\n                <div class="form-group">\n                    <input type="text"\n                           disabled\n                           placeholder="Title"\n                           ng-model="tuProfile.ugRequestInfoUrlTitle"\n                           class="form-control">\n                </div>\n                <div class="form-group">\n                    <input type="url"\n                           disabled\n                           placeholder="URL"\n                           ng-model="tuProfile.ugRequestInfoUrl"\n                           class="form-control">\n                </div>\n            </div>\n            <div ng-show="tuProfile.requestInfoTypeUg === \'email\'" class="email-option">\n                <div class="form-group">\n                    <input type="email"\n                           disabled\n                           placeholder="Email"\n                           ng-model="tuProfile.ugRequestInfoEmail"\n                           class="form-control">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/overview/tuProfileOverviewHistoryView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>History Log <small>showing last {{historyLog.totalReturned}} records of {{historyLog.total}}</small></h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="toggleHistory(false)">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner="" ng-show="fetchingHistoryLog()"></div>\n\n        <p class="text-muted text-center" ng-show="!fetchingHistoryLog() && !historyLog.total">\n            History log is empty\n        </p>\n\n        <div ng-show="!fetchingHistoryLog()" ng-repeat="log in historyLog.log">\n            <ul class="list-unstyled list-history break-word">\n                <li ng-if="log.modifiedAt">\n                    <span class="bold">Modified on:</span>\n                    <spna>{{log.modifiedAt| date:\'medium\'}}</spna>\n                </li>\n                <li ng-if="log.modifiedByFullName">\n                    <span class="bold">Submitted by:</span>\n                    <spna>{{log.modifiedByFullName}}</spna>\n                </li>\n                <li ng-show="!log.advanced">\n                    <span class="bold">Basic Description:</span>\n                    <spna>\n                        {{log.basicMasterOverview | htmlToPlaintext}}\n                        {{log.basicUgOverview | htmlToPlaintext}}\n                        {{log.basicPgOverview | htmlToPlaintext}}\n                    </spna>\n                </li>\n                <li ng-show="log.advanced">\n                    <span class="bold">Advanced Description:</span>\n                    <spna>\n                        {{log.advancedMasterOverview | htmlToPlaintext}}\n                        {{log.advancedUgOverview | htmlToPlaintext}}\n                        {{log.advancedPgOverview | htmlToPlaintext}}\n                    </spna>\n                </li>\n                <li ng-show="log.advanced">\n                    <span class="bold">University Website:</span>\n                    <spna>\n                        <a ng-show="log.masterWebsiteUrl" href="{{log.masterWebsiteUrl}}" target="_blank">{{log.masterWebsiteUrl}}</a>\n                        <a ng-show="log.ugWebsiteUrl" href="{{log.ugWebsiteUrl}}" target="_blank">{{log.ugWebsiteUrl}}</a>\n                        <a ng-show="log.pgWebsiteUrl" href="{{log.pgWebsiteUrl}}" target="_blank">{{log.pgWebsiteUrl}}</a>\n                    </spna>\n                </li>\n                <li ng-show="log.advanced">\n                    <div ng-show="!TopUniversitiesController.isRequestInfoTypeUrl(log)">\n                        <span class="bold">Request info - Email:</span>\n                        <span>\n                            {{log.masterRequestInfoEmail}}\n                            {{log.ugRequestInfoEmail}}\n                            {{log.pgRequestInfoEmail}}\n                        </span>\n                    </div>\n                    <div ng-show="TopUniversitiesController.isRequestInfoTypeUrl(log)">\n                        <span class="bold">Request info - Title:</span>\n                        <span>\n                            {{log.masterRequestInfoUrlTitle}}\n                            {{log.ugRequestInfoUrlTitle}}\n                            {{log.pgRequestInfoUrlTitle}}\n                        </span>\n                        \n                        <br>\n                        \n                        <span class="bold">Request info - URL:</span>\n                        <a ng-show="log.masterRequestInfoUrl" href="{{log.masterRequestInfoUrl}}" target="_blank">{{log.masterRequestInfoUrl}}</a>\n                        <a ng-show="log.ugRequestInfoUrl" href="{{log.ugRequestInfoUrl}}" target="_blank">{{log.ugRequestInfoUrl}}</a>\n                        <a ng-show="log.pgRequestInfoUrl" href="{{log.pgRequestInfoUrl}}" target="_blank">{{log.pgRequestInfoUrl}}</a>\n                    </div>\n                </li>\n            </ul>\n\n            <div class="separator dashed"></div>\n\n        </div>\n\n        <div class="row" ng-show="handleHistoryLogVisibility()">\n            <div wave-spinner="" ng-show="fetchingMoreHistoryLog()"></div>\n            <div class=" col-lg-8 col-lg-offset-2">\n                <a class="btn btn-primary btn-block" ng-click="handleLoadMoreHistoryLog()" ng-disabled="fetchingMoreHistoryLog()">\n                    Load more\n                </a>\n            </div>\n        </div>\n    </div>\n\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/overview/tuProfileOverviewView.html",'<div ng-controller="TuProfileOverviewController as TuProfileOverviewController">\n    <div class="tabs-container">\n        <uib-tabset active="activeOverviewSubTab">\n            <uib-tab heading="Overview">\n                <div class="panel-body">\n                    <div ng-if="tuIsAdvanced" ng-include src="\'/scripts/components/profiles/tu/overview/partial/advancedMasterSubTab.html\'"></div>\n                    <div ng-if="!tuIsAdvanced" ng-include src="\'/scripts/components/profiles/tu/overview/partial/basicMasterSubTab.html\'"></div>\n                </div>\n            </uib-tab>\n            <uib-tab heading="Undergraduate">\n                <div class="panel-body">\n                    <div ng-if="tuIsAdvanced" ng-include src="\'/scripts/components/profiles/tu/overview/partial/advancedUgSubTab.html\'"></div>\n                    <div ng-if="!tuIsAdvanced" ng-include src="\'/scripts/components/profiles/tu/overview/partial/basicUgSubTab.html\'"></div>\n                </div>\n            </uib-tab>\n            <uib-tab heading="Postgraduate">\n                <div class="panel-body">\n                    <div ng-if="tuIsAdvanced" ng-include src="\'/scripts/components/profiles/tu/overview/partial/advancedPgSubTab.html\'"></div>\n                    <div ng-if="!tuIsAdvanced" ng-include src="\'/scripts/components/profiles/tu/overview/partial/basicPgSubTab.html\'"></div>\n                </div>\n            </uib-tab>\n        </uib-tabset>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/programs/datagrid/deleteCellTemplate.html",'<div class="ui-grid-cell-contents no-select text-center" ng-click="$event.stopPropagation()">\n    <input ng-model="grid.appScope.programsToDelete[row.entity.id]" i-checkbox type="checkbox">\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/programs/datagrid/deleteHeaderCellTemplate.html",'<button type="button"\n        ng-disabled="grid.appScope.isDeleteButtonDisabled()"\n        class="btn btn-danger btn-sm"\n        ng-class="{\'disabled\': grid.appScope.isDeleteButtonDisabled()}"\n        ng-click="grid.appScope.handleDeleteClick()">\n    <span class="glyphicon glyphicon-trash"></span> \x3c!-- {{col.displayName}} --\x3e\n</button>\n'),$templateCache.put("/scripts/components/profiles/tu/programs/datagrid/rowTemplate.html",'<div grid="grid" class="ui-grid-draggable-row" draggable="true">\n    <div class="ui-grid-cell pointer"\n        ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name"\n        ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader, \'active\': row.entity.id == grid.appScope.selectedProgramId }"\n        role="{{col.isRowHeader ? \'rowheader\' : \'gridcell\'}}"\n        ui-grid-cell>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/programs/tuProfileAddProgramFormView.html",'<div class="ibox">\n    <div class="ibox-title m-t-xl">\n        <h5>Add Program</h5>\n        <div class="ibox-tools">\n            <a ng-click="toggleProgramAddForm()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner class="text-right" ng-show="fetchingHistoryLog()"></div>\n\n        <form class="form-horizontal add-program" name="forms.addProgramForm" novalidate autocomplete="off">\n            <div class="form-group" ng-if="InstitutionNameTuPrograms">\n                <label class="control-label col-sm-5 col-md-4">Institution Name *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control"\n                           ng-model="InstitutionNameTuPrograms"\n                           ng-disabled="true">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidName}">\n                <label class="control-label col-sm-5 col-md-4">Program Name *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" placeholder="Add name" class="form-control"\n                           ng-model="newProgram.name"\n                           ng-required="true"\n\n                           focus-delay="250"\n                           custom-popover popover-html="Add a Program name"\n                           popover-placement="left"\n                           popover-trigger="manual"\n                           popover-visibility="{{isInvalidName ? true : false}}"\n                           ng-focus="setIsInvalidName(false)">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidUrl}">\n                <label class="control-label col-sm-5 col-md-4">URL Landing Page *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control" placeholder="Add a Landing Page"\n                        ng-model="newProgram.url"\n                        ng-required="true"\n                        ng-maxlength="255"\n                        ng-keyup="ProgramFormController.onKeyUp($event)"\n                        focus-delay="250"\n                        custom-popover popover-html="Add a valid landing page link. Maximum 255 characters"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidUrl ? true : false}}"\n                        ng-focus="setIsInvalidUrl(false)">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidDepartment}">\n                <label class="control-label col-sm-5 col-md-4">Department *</label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        ng-model="newProgram.departmentCoreId"\n                        ng-required="true"\n                        theme="bootstrap"\n                        ng-disabled="isClientDepartment"\n                        on-select="ProgramFormController.handleDepartmentChanges(newProgram.departmentCoreId)"\n                        focus-delay="250"\n                        custom-popover popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidDepartment ? true : false}}"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.coreId as option in departmentsListArr | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidBelongsTo}">\n                <label class="control-label col-sm-5 col-md-4">Belongs to *</label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        placeholder="Select an option"\n                        ng-model="newProgram.belongsTo"\n                        ng-disabled="!newProgram.departmentCoreId"\n                        ng-required="true"\n                        theme="bootstrap"\n                        focus-delay="250"\n                        custom-popover popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidBelongsTo ? true : false}}"\n                        ng-change="setIsInvalidBelongsTo(false)">\n                        <ui-select-match placeholder="Select an option">\n                            <span>{{$select.selected.title}}</span>\n                        </ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.id as option in belongsToList | filter: $select.search"\n                          ui-disable-choice="option.disabled">\n                          <div class="test" ng-bind-html="option.title | highlight: $select.search"></div>\n                        </ui-select-choices>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right" ng-class="{\'disabled\': addInProgress}" ng-click="handleProgramCreateClick()">\n                        <i class="fa fa-check-circle"></i>\n                        <span>Save</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="toggleProgramAddForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Cancel</span>\n                    </a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/programs/tuProfileEditProgramFormView.html",'<div class="ibox">\n    <div class="ibox-title">\n        <h5>Edit Program</h5>\n        <div class="ibox-tools">\n            <a ng-click="toggleProgramEditForm()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner class="text-right" ng-show="isFetchInProgress()"></div>\n        <form class="form-horizontal add-program" ng-show="!isFetchInProgress()" name="forms.editProgramForm" novalidate>\n            <div class="form-group" ng-if="InstitutionNameTuPrograms">\n                <label class="control-label col-sm-5 col-md-4">Institution Name *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" ng-model="InstitutionNameTuPrograms" class="form-control" ng-required="true" ng-disabled="true">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidName}">\n                <label class="control-label col-sm-5 col-md-4">Program Name *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" placeholder="Add name" ng-model="program.name" class="form-control"\n                    ng-required="true"\n                    focus-delay="250"\n                    custom-popover popover-html="Add a Program name"\n                    popover-placement="left"\n                    popover-trigger="manual"\n                    popover-visibility="{{isInvalidName ? true : false}}"\n                    ng-focus="setIsInvalidName(false)">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidUrl}">\n                <label class="control-label col-sm-5 col-md-4">URL Landing Page *</label>\n                <div class="col-sm-7 col-md-8">\n                    <input type="text" class="form-control" placeholder="Add a Landing Page"\n                        ng-model="program.url"\n                        ng-keyup="ProgramFormController.onKeyUp($event)"\n                        ng-required="true"\n                        ng-maxlength="255"\n                        focus-delay="250"\n                        custom-popover popover-html="Add a valid landing page link. Maximum 255 characters"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidUrl ? true : false}}"\n                        ng-focus="setIsInvalidUrl(false)">\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidDepartment}">\n                <label class="control-label col-sm-5 col-md-4">Department *</label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        ng-required="true"\n                        ng-model="program.departmentCoreId"\n                        theme="bootstrap"\n                        ng-disabled="isClientDepartment"\n                        on-select="ProgramFormController.handleDepartmentChanges(newProgram.departmentCoreId)"\n                        focus-delay="250"\n                        custom-popover popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidDepartment ? true : false}}"\n                        >\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option.coreId as option in departmentsListArr | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="form-group" ng-class="{\'has-errors\' : isInvalidBelongsTo}">\n                <label class="control-label col-sm-5 col-md-4">Belongs to *</label>\n                <div class="col-sm-7 col-md-8">\n                    <ui-select\n                        placeholder="Select an option"\n                        ng-model="program.belongsTo"\n                        ng-required="true"\n                        theme="bootstrap"\n                        focus-delay="250"\n                        custom-popover popover-html="Select an option"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{isInvalidBelongsTo ? true : false}}"\n                        ng-change="setIsInvalidBelongsTo(false)">\n                        <ui-select-match placeholder="Select an option">\n                            <span>{{$select.selected.title}}</span>\n                        </ui-select-match>\n                        <ui-select-choices\n                          position="down"\n                          repeat="option.id as option in belongsToList | filter: $select.search"\n                          ui-disable-choice="option.disabled">\n                          <div class="test" ng-bind-html="option.title | highlight: $select.search"></div>\n                        </ui-select-choices>\n                    </ui-select>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right"\n                       ng-class="{\'disabled\': editInProgress}"\n                       ng-click="handleProgramUpdateClick()">\n                        <i class="fa fa-check-circle"></i>\n                        <span>Update</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="toggleProgramEditForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Cancel</span>\n                    </a>\n                </div>\n            </div>\n\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/programs/tuProfileProgramsView.html",'<div ng-controller="TuProfileProgramsController as ProgramsController">\n    <div upgrade-banner\n         info-block-class="isRightSidePanelActive() ? \'col-sm-9\' : \'col-sm-10\'"\n         buttons-block-class="isRightSidePanelActive() ? \'col-sm-3\' : \'col-sm-2\'"\n         basic-profile="!tuIsAdvanced ? true : false"\n         upgrade-email="{{upgradeEmailsTo}}"\n         upgrade-click="toggleUpgradeForm()">\n    </div>\n\n    <div class="alert alert-info">\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>Drag and Drop Rows to Order Program List or profiles.</span>\n        </p>\n    </div>\n\n    <div class="tab-header" ng-class="{\'locked\': !tuIsAdvanced}">\n        <div class="btn-toggle">\n            <switch class="green"\n                ng-disabled="alphabeticalOrderingInProgress"\n                ng-model="tuProfileData.programsAlphabeticalOrder"\n                ng-change="!alphabeticalOrderingInProgress ? handleAlphabeticalOrderClick(tuProfileData.programsAlphabeticalOrder) : null">\n            </switch>\n            <span> Display in alphabetical order?</span>\n        </div>\n        <a class="btn btn-primary pull-right"\n            ng-class="{\'disabled\': programsTabSubmitInProgress}"\n            ng-click="handleAddProgramClick()">\n            <i class="fa fa-plus"></i>\n            <span>Add Program</span>\n        </a>\n    </div>\n\n    <div class="tab-body" ng-class="{\'locked\': !tuIsAdvanced}">\n        <div wave-spinner class="wave-spinner" ng-show="isDatagridReloading || !isDatagridRendered"></div>\n\n        <div id="programsTable" \n            ng-class="{\'overlay-white\': alphabeticalOrderingInProgress}"\n            ng-if="!isDatagridReloading && gridOptions">\n            <ui-grid-info ng-if="!isRightSidePanelActive()"></ui-grid-info>\n            <div class="grid"\n                ui-grid="gridOptions"\n                ui-grid-draggable-rows\n                ui-grid-selection\n                ui-grid-resize-columns\n                ui-grid-auto-resize>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/publish/tuProfilePublishHistoryView.html",'<div class="ibox publish-logs" ng-controller="TuProfilePublishLogsController as PublishLogsController">\n    <div class="ibox-title m-t-xl">\n        <h5>Publish Logs</h5>\n    </div>\n\n    <div class="ibox-content">\n        <div wave-spinner ng-show="fetchingPublishLog()"></div>\n        <div ng-show="!fetchingPublishLog()" ng-repeat="logs in publishLogs">\n            <div class="panel panel-default" ng-repeat="logsPerDay in logs">\n                <div class="panel-heading">\n                    <span>{{logsPerDay.date | date:\'mediumDate\'}}</span>\n                </div>\n                <div class="panel-body">\n                    <ul class="list-unstyled">\n                        <li ng-repeat="log in logsPerDay.logs">\n                            <span class="status">\n                                <span class="icon text-success" ng-if="log.status === \'success\'">\n                                    <i class="fa fa-check"></i>\n                                </span>\n                                <span class="icon text-danger" ng-if="log.status === \'failure\'">\n                                    <i class="fa fa-exclamation"></i>\n                                </span>\n                                <span class="icon text-info" ng-if="log.status === \'progress\'">\n                                    <i class="fa fa-spinner fa-spin"></i>\n                                </span>\n                                <span class="icon text-warning" ng-if="log.status === \'pending\'">\n                                    <i class="fa fa-clock-o"></i>\n                                </span>\n                            </span>\n                            \n                            <span>{{PublishLogsController.getPublishStatusMapped(log.status)}}:</span>\n                            <span class="bold">{{log.createdByFullName}}</span>\n                            <span class="time">[{{log.createdAt | date:\'shortTime\'}}]</span>\n\n                            <span class="program">\n                                <span class="icon round bg-info" ng-if="log.type === \'ug\'">\n                                    <i class="fa fa-university"></i>\n                                </span>\n                                <span class="icon round bg-warning" ng-if="log.type === \'pg\'">\n                                    <i class="fa fa-graduation-cap"></i>\n                                </span>\n                                <span class="icon round bg-primary" ng-if="log.type === \'master\'">\n                                    <i class="fa fa-book"></i>\n                                </span>\n                                <span class="icon icon-star" ng-if="log.type === \'stars\'">\n                                    <i></i>\n                                </span>\n                            </span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div ng-show="!publishLogs.results.length">\n            No publish history\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/publish/tuProfilePublishView.html",'<div ng-controller="TuProfilePublishController as PublishController">\n    <div class="clearfix" ng-if="ugOrPgDisabled" ng-include="\'/scripts/shared/banners/ugPgProfileDisable.html\'"></div>\n    <div class="alert alert-info">\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>Please be aware that published changes will not appear straight away and could take up to 6 hours to be visible on the frontend website.</span>\n        </p>\n        <p>\n            <i class="fa fa-info-circle"></i>\n            <span>Whilst a publish is occurring, you may navigate away from this page and it will still progress in the background.</span>\n        </p>\n    </div>\n    <div id="publishContainer" class="tab-body">\n        <div class="row">\n            <div class="col-lg-4 meter" ng-repeat="section in sections"\n                 ng-class="{\'modal-overlay-35\': section.publishDisabled || isProfileEnabled(section.type)}">\n                <div class="panel panel-default">\n                    <div class="panel-heading">\n                        <h5 class="pull-left">\n                            <span class="icon round bg-info" ng-if="section.type == \'ug\'">\n                                <i class="fa fa-university"></i>\n                            </span>\n                            <span class="icon round bg-warning" ng-if="section.type == \'pg\'">\n                                <i class="fa fa-graduation-cap"></i>\n                            </span>\n                            <span class="icon round bg-primary" ng-if="section.type == \'master\'">\n                                <i class="fa fa-book"></i>\n                            </span>\n                            <span class="icon icon-star" ng-if="section.type == \'stars\'">\n                                <i></i>\n                            </span>\n                            <span>{{section.name}}</span>\n                        </h5>\n                        <a class="btn btn-primary btn-xs pull-right"\n                           ng-click="handlePublish(section)">\n                            <i class="fa fa-cloud-upload"></i>\n                            <span>Publish</span>\n                        </a>\n                    </div>\n\n                    <div class="panel-body">\n                        <div class="clearfix m-b-md">\n                            <a class="btn btn-default btn-sm btn-block"\n                                target="_blank"\n                                ng-href="{{section.url}}"\n                                ng-class="{\'disabled\': section.viewDisabled}">\n                                <i class="fa fa-eye"></i>\n                                <span>View webpage</span>\n                            </a>\n                            <a class="btn btn-default btn-sm btn-block"\n                                ng-if="PublishController.devMode"\n                                target="_blank"\n                                ng-href="{{section.feedPreviewUrl}}"\n                                ng-class="{\'disabled\': section.viewDisabled}">\n                                <i class="fa fa-eye"></i>\n                                <span>Preview feed</span>\n                            </a>\n                        </div>\n                        <div class="response" ng-if="section.statusMessage">\n                            <p><strong>Reason for Failed Publish:</strong></p>\n                            <span class="truncate"><strong>{{section.statusMessage}}</strong></span>\n                        </div>\n                        <div progress-circle="section.status"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/publish/tuProfileResubscribeView.html",'<div class="resubscribe" ng-controller="TuProfileResubscribeController as TuResubscribeController">\n    <div class="ibox m-t-xl" ng-show="TuResubscribeController.isAdvanced">\n        <div class="panel panel-default">\n            <div class="panel-body">\n                <div class="subscribe">\n                    <div class="pull-left">\n                        <p>Your subscription expires:</p>\n                        <span class="bold">{{TuResubscribeController.expiresDate | date:\'dd MMMM yyyy\'}}</span>\n                    </div>\n                    <button class="btn btn-warning btn-lg pull-right"\n                            ng-show="TuResubscribeController.showResubscribeButton()"\n                            ng-click="TuResubscribeController.resubscribeClick()">\n                        <i class="fa fa-envelope-o"></i>\n                        <span>Resubscribe</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="ibox m-t-xl" ng-show="TuResubscribeController.displayResubscribeForm">\n        <div class="ibox-title">\n            <h5>Resubscribe to Advance Profile</h5>\n        </div>\n        <div class="ibox-content">\n            <form class="form-horizontal preview" name="forms.resubscribeForm" novalidate>\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">To:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TuResubscribeController.formData.to}}</span>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Subject:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TuResubscribeController.formData.subject}}</span>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Name:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TuResubscribeController.formData.name}}</span>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Email:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <span class="text-label">{{TuResubscribeController.formData.email}}</span>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label col-sm-5 col-md-4">Comments:</label>\n                    <div class="col-sm-7 col-md-8">\n                        <div class="textarea"><textarea class="form-control full-width" ng-model="TuResubscribeController.formData.comments" name="comments" ng-trim="true" rows="5" ></textarea></div>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <div class="col-sm-12">\n                        <a class="btn btn-primary pull-right" ng-class="{\'disabled\': TuResubscribeController.inProgress}" ng-click="TuResubscribeController.submitClick()">\n                           <i class="fa fa-check-circle"></i>\n                           <span>Submit</span>\n                        </a>\n                        <a class="btn btn-default pull-right" ng-click="TuResubscribeController.cancelClick()">\n                            <i class="fa fa-ban"></i>\n                            <span>Cancel</span>\n                        </a>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tu/subjects/tuProfileSubjectsListsView.html",'<div class="ibox-title m-t-xl">\n    <h5>Selected Subjects</h5>\n</div>\n<div class="ibox block-institution">\n    <div class="ibox-content">\n        <div class="subject-selected" ng-repeat="(groupName, groupSubjects) in TopUniversitiesController.subjects">\n            <h5 class="title bold">\n                <div class="name">\n                    <span>{{groupName}}</span>\n                </div>\n                <div class="program">\n                    <span>\n                        UG\n                        <span> / </span>\n                        PG\n                    </span>\n                </div>\n            </h5>\n            \n            <div class="subject" ng-repeat="subject in groupSubjects | orderBy:\'name\'" ng-show="tuProfile.ugSubjects[subject.handle] || tuProfile.pgSubjects[subject.handle]">\n                <div class="name">\n                    <span>{{subject.name}}</span>\n                </div>\n                <div class="program">\n                    <span><i ng-show="tuProfile.ugSubjects[subject.handle]" class="fa fa-check-square-o"></i></span>\n                    <span><i ng-show="tuProfile.pgSubjects[subject.handle]" class="fa fa-check-square-o"></i></span>\n                </div>\n            </div>\n\n            <div class="hr-line-dashed"></div>\n        </div>\n    </div>\n</div>'),$templateCache.put("/scripts/components/profiles/tu/subjects/tuProfileSubjectsView.html",'<div class="subject-tab" ng-controller="TuProfileSubjectsController as SubjectsController">\n    <form name="forms.subjectsForm">\n        <div class="tab-header">\n            <div class="btn-toggle">\n                <switch class="green" ng-model="tuProfile.hasPhdSubjects"></switch>\n                <span>Do you do PhD for any of the subjects selected below?</span>\n            </div>\n            <a class="btn btn-primary pull-right" ng-class="{\'disabled\': subjectsTabSubmitInProgress}" ng-click="handleSubjectTabSubmit()">\n                <i class="fa fa-check-circle"></i>\n                <span>Update</span>\n            </a>\n        </div>\n        <div class="tab-body">\n            <div wave-spinner class="wave-spinner" ng-show="isDatagridReloading"></div>\n            <div class="col-wrap">\n                <div class="col" ng-repeat="(index, subjectsChunk) in SubjectsController.subjects">\n                    <div ng-repeat="(groupName, groupSubjects) in subjectsChunk">\n                        <h4 class="title">\n                            <div class="name">\n                                <span>{{groupName}}</span>\n                            </div>\n                            <div class="program">\n                                <span>\n                                    UG\n                                    <span>/</span>\n                                    PG\n                                </span>\n                            </div>\n                        </h4>\n\n                        <div class="subject" ng-repeat="subject in groupSubjects | orderBy:\'name\'">\n                            <div class="name">\n                                <span>{{subject.name}}</span>\n                            </div>\n                            <div class="program">\n                                <input i-checkbox type="checkbox" ng-model="tuProfile.ugSubjects[subject.handle]" />\n                                <input i-checkbox type="checkbox" ng-model="tuProfile.pgSubjects[subject.handle]" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="tab-footer">\n                <a class="btn btn-primary pull-right" ng-class="{\'disabled\': subjectsTabSubmitInProgress}" ng-click="handleSubjectTabSubmit()">\n                    <i class="fa fa-check-circle"></i>\n                    <span>Update</span>\n                </a>\n            </div>\n        </div>\n    </form>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/tuProfileUpgradeFormView.html",'<div class="ibox-title">\n    <h5>Upgrade to Advanced Profile</h5>\n    <div class="ibox-tools">\n        <a class="close-link" ng-click="toggleUpgradeForm()">\n            <i class="fa fa-times"></i>\n        </a>\n    </div>\n</div>\n<div class="ibox">\n    <div class="ibox-content">\n        <form class="form-horizontal preview" name="forms.upgradeProfile" novalidate>\n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">To</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeEmailsTo}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Subject</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">I would like more information about Upgrading to an Advanced Profile</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Name</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeRequest.name}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Email</label>\n                <div class="col-sm-7 col-md-8">\n                    <span class="text-label">{{upgradeRequest.email}}</span>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <label class="control-label col-sm-5 col-md-4">Comments</label>\n                <div class="col-sm-7 col-md-8">\n                    <div class="textarea"><textarea rows="7" cols="50" placeholder="Comments..." ng-model="upgradeRequest.comments" class="form-control no-resize" ></textarea></div>\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <div class="col-sm-12">\n                    <a class="btn btn-primary pull-right" ng-class="{\'disabled\': upgradeInProgress}" ng-click="handleUpgradeClick()">\n                        <i class="fa fa-check-circle"></i>\n                        <span>Send</span>\n                    </a>\n                    <a class="btn btn-default pull-right" ng-click="toggleUpgradeForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Close</span>\n                    </a>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/profiles/tu/tuProfileView.html",'<div class="wrapper wrapper-content animated fadeInRight page-profiles-tu" ng-controller="TuProfileController as TopUniversitiesController">\n    <div class="row">\n        <div ng-class="isRightSidePanelActive() ? \'col-sm-8\' : \'col-sm-12\'">\n            <div class="tabs-container" ng-class="{\'modal-overlay\': loadInProgress()}">\n                <uib-tabset active="activeTab">\n                    <uib-tab heading="Overview">\n                        <div class="panel-body overview">\n                            <div ng-include src="\'/scripts/components/profiles/tu/overview/tuProfileOverviewView.html\'"></div>\n                        </div>\n                    </uib-tab>\n\n                    <uib-tab heading="Departments" ng-if="showDepartmentsTab()">\n                          <div class="panel-body departments">\n                              <div ng-include src="\'/scripts/components/profiles/tu/departments/tuProfileDepartmentsView.html\'"></div>\n                          </div>\n                    </uib-tab>\n\n                    <uib-tab heading="Subjects">\n                        <div class="panel-body subjects">\n                            <div ng-include src="\'/scripts/components/profiles/tu/subjects/tuProfileSubjectsView.html\'"></div>\n                        </div>\n                    </uib-tab>\n\n                    <uib-tab heading="Programs">\n                        <div class="panel-body programs">\n                            <div ng-include src="\'/scripts/components/profiles/tu/programs/tuProfileProgramsView.html\'"></div>\n                        </div>\n                    </uib-tab>\n\n                     <uib-tab heading="Media">\n                         <div class="panel-body media">\n                             <div ng-include src="\'/scripts/components/profiles/tu/media/tuProfileMediaView.html\'" id="mediaTab"></div>\n                         </div>\n                     </uib-tab>\n\n                   <uib-tab heading="Publish">\n                       <div class="panel-body publish">\n                           <div ng-include src="\'/scripts/components/profiles/tu/publish/tuProfilePublishView.html\'"></div>\n                       </div>\n                   </uib-tab>\n\n                </uib-tabset>\n            </div>\n        </div>\n\n        <div ng-show="showUpgradeForm" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tu/tuProfileUpgradeFormView.html\'"></div>\n        </div>\n\n        <div ng-show="showHistory" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tu/overview/tuProfileOverviewHistoryView.html\'"></div>\n        </div>\n        <div ng-show="showDepartmentEditForm || showDepartmentAddForm || showClientUpgradeForm" id="departmentBlockPanel"\n             fixed-element-while-scrolling="#departmentsTable"\n             class="col-sm-4"\n             ng-controller="TuProfileDepartmentForm as DepartmentFormController">\n            <div class="department-form" ng-show="showDepartmentEditForm" ng-include src="\'/scripts/components/profiles/tu/departments/tuProfileEditDepartmentFormView.html\'"></div>\n            <div class="department-form" ng-show="showDepartmentAddForm" ng-include src="\'/scripts/components/profiles/tu/departments/tuProfileAddDepartmentFormView.html\'"></div>\n            <div class="department-form" ng-show="showClientUpgradeForm" ng-include src="\'/scripts/components/profiles/tu/departments/tuProfileUpgradeClientDepartmentFormView.html\'"></div>\n        </div>\n\n        <div ng-if="isSubjectsTabActive()" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tu/subjects/tuProfileSubjectsListsView.html\'"></div>\n        </div>\n\n        <div ng-show="showProgramEditForm || showProgramAddForm" id="programBlockPanel"\n             fixed-element-while-scrolling="#programsTable"\n             class="col-sm-4"\n             ng-controller="TuProfileProgramForm as ProgramFormController">\n            <div ng-show="showProgramAddForm" ng-include src="\'/scripts/components/profiles/tu/programs/tuProfileAddProgramFormView.html\'"></div>\n            <div ng-show="showProgramEditForm" ng-include src="\'/scripts/components/profiles/tu/programs/tuProfileEditProgramFormView.html\'"></div>\n        </div>\n\n        <div ng-show="isMediaTabActive()" class="col-sm-4" ng-class="tuIsAdvanced ? \'\': \'modal-overlay-35\'" fixed-element-while-scrolling="#mediaTab">\n            <div id="mediaSidebar" ng-include src="\'/scripts/components/profiles/tu/media/tuProfileMediaLinkManagerView.html\'"></div>\n        </div>\n\n        <div ng-show="isPublishTabActive()" class="col-sm-4">\n            <div ng-include src="\'/scripts/components/profiles/tu/publish/tuProfileResubscribeView.html\'"></div>\n            <div ng-include src="\'/scripts/components/profiles/tu/publish/tuProfilePublishHistoryView.html\'"></div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/tmDirectory/datagrid/campusCellTemplate.html",'<div class="ui-grid-cell-contents">{{COL_FIELD CUSTOM_FILTERS | campusArrayToText:col.filter.selectOptions}}</div>\n'),$templateCache.put("/scripts/components/tmDirectory/datagrid/selectCellTemplate.html",'<div class="ui-grid-cell-contents">{{COL_FIELD CUSTOM_FILTERS | boolToText:col.filter.selectOptions}}</div>\n'),$templateCache.put("/scripts/components/tmDirectory/edit/tmDirectoryEditProgramFormView.html",'<div class="ibox" ng-controller="TmProfileProgramFormController as TmProfileProgramFormController">\n    <div class="ibox-title">\n        <h5>{{ TmDirectoryController.getFormTitle() }}</h5>\n        <div class="ibox-tools">\n            <a class="close-link" ng-click="TmDirectoryController.closeEditForm()">\n                <i class="fa fa-times"></i>\n            </a>\n        </div>\n    </div>\n    <div class="ibox-content">\n        <div>\n            <form class="form-horizontal" name="forms.editProgramForm" novalidate autocomplete="off">\n                <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormDetailsView.html\'"></div>\n                <div ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormStatisticsView.html\'"></div>\n                <div ng-show="!TmDirectoryController.isProgramAdvanced" ng-include src="\'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormCampusView.html\'"></div>\n\n                <div class="separator dashed"></div>\n\n                <div class="form-group">\n                    <div class="col-sm-12">\n                        <switch value="yes"\n                            class="green"\n                            ng-model="TmDirectoryController.sendEmailToClient"\n                            ng-disabled="TmDirectoryController.approved"></switch>\n                            <span>Include program requester in status update email</span>\n                    </div>\n                </div>\n\n                <div class="form-group" ng-class="{\'modal-overlay\': TmProfileProgramFormController.editInProgress}">\n                    <div class="pull-right btn-float-fix" ng-if="!TmDirectoryController.pendingDeletion">\n                        <a class="btn btn-primary btn-float-fix"\n                           ng-click="TmDirectoryController.handleProgramApproveClick(TmProfileProgramFormController, false)">\n                            <i class="fa fa-check-circle"></i>\n                            <span>{{TmDirectoryController.approveButtonTitle}}</span>\n                        </a>\n                        <a class="btn btn-default btn-float-fix"\n                           ng-click="TmDirectoryController.handleProgramApproveClick(TmProfileProgramFormController, true)">\n                            <i class="fa fa-check-circle"></i>\n                            <span>{{TmDirectoryController.approveButtonTitle}} & Publish</span>\n                        </a>\n                    </div>\n\n                    <div class="pull-right btn-float-fix" ng-if="TmDirectoryController.pendingDeletion">\n                        <a class="btn btn-default btn-float-fix"\n                           ng-class="{\'disabled\': TmDirectoryController.isProgramAdvanced}"\n                           ng-click="TmDirectoryController.handleCancelDeletionClick()">\n                            <i class="fa fa-check-circle"></i>\n                            <span>Cancel Deletion</span>\n                        </a>\n                        <a class="btn btn-danger btn-float-fix"\n                           ng-class="{\'disabled\': TmDirectoryController.isProgramAdvanced}"\n                           ng-click="TmDirectoryController.handleDeleteAndPublishClick()">\n                            <i class="fa fa-check-circle"></i>\n                            <span>Delete & Publish</span>\n                        </a>\n                    </div>\n\n                    <a class="btn btn-default pull-right m-r-xs btn-float-fix" ng-click="TmDirectoryController.closeEditForm()">\n                        <i class="fa fa-ban"></i>\n                        <span>Cancel</span>\n                    </a>\n\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/tmDirectory/tmDirectoryView.html",'<div class="wrapper wrapper-content animated fadeInRight page-tm-directory" ng-controller="TmDirectoryController as TmDirectoryController">\n    <div class="row">\n        <div id="tmDirectoryTable" ng-class="TmDirectoryController.showInfoBlock ? \'col-sm-8 hide-ng-table-pager\' : \'col-sm-12\'">\n            <div class="section">\n                <div class="section-body">\n                    <div wave-spinner class="wave-spinner" ng-show="!TmDirectoryController.isDatagridRendered"></div>\n\n                    <div ng-if="gridOptions">\n                        <ui-grid-info ng-if="!TmDirectoryController.showInfoBlock"></ui-grid-info>\n                        <div class="grid"\n                             ui-grid="gridOptions"\n                             ui-grid-selection\n                             ui-grid-resize-columns\n                             ui-grid-auto-resize\n                             ui-grid-cellnav\n                             ui-grid-exporter\n                             ui-grid-pagination></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div ng-show="TmDirectoryController.showInfoBlock"\n             fixed-element-while-scrolling="#tmDirectoryTable"\n             class="col-sm-4">\n            <div class="nested-ibox" ng-show="TmDirectoryController.showProgramEditForm" ng-include src="\'/scripts/components/tmDirectory/edit/tmDirectoryEditProgramFormView.html\'"></div>\n        </div>\n\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html",'<div class="ui-grid-filter-container" ng-repeat="colFilter in col.filters" ng-if="colFilter.visible">\n    <input type="text" class="ui-grid-filter-input date-picker"\n           ng-model="grid.appScope.filters.lastLoginAtRange"\n           date-range-picker=""\n           options="{eventHandlers: {\'apply.daterangepicker\': grid.appScope.handleLastLoginAtDateRange}, opens: \'left\'}" />\n\n    <div role="button" class="ui-grid-filter-button-select"\n         ng-click="removeFilter(colFilter, $index)"\n         ng-if="!colFilter.disableCancelFilterButton"\n         ng-disabled="colFilter.term === undefined || colFilter.term === null || colFilter.term === \'\'"\n         ng-show="colFilter.term !== undefined && colFilter.term != null">\n        <i class="ui-grid-icon-cancel" ui-grid-one-bind-aria-label="aria.removeFilter">&nbsp;</i>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/users/list/institutions/datagrid/rowTemplate.html",'<div grid="grid" draggable="true">\n    <div class="ui-grid-cell pointer"\n         ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name"\n         ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader, \'active\': row.entity.id == grid.appScope.selectedUserId }"\n         role="{{col.isRowHeader ? \'rowheader\' : \'gridcell\'}}"\n         ui-grid-cell>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/users/list/institutions/institutions/institutionsUsersListInstitutionsView.html",'<div  class="panel-body institutions" ng-controller="InstitutionsUsersInstitutionsController as InstitutionsController">\n    <div class="row">\n        <div wave-spinner class="load-bar col-lg-12" ng-show="InstitutionsController.isProgressBarVisible()"></div>\n\n        <div class="col-lg-12" ng-show="selectedInstitutionsNamesLoaded">\n            <div class="row">\n                <div class="col-lg-12">\n                    <div class="form-group">\n                        <label>Access to Hub and Outreach *</label>\n                        <ui-select multiple\n                                   close-on-select="false"\n                                   ng-model="userInstitutions.assigned"\n                                   theme="bootstrap"\n                                   reset-search-input="true"\n                                   on-remove="InstitutionsController.handleItemRemove($item)"\n                                   on-select="InstitutionsController.handleItemSelect($item)"\n                                   ng-required="true">\n                            <ui-select-match placeholder="Type institution name...">{{$item.name}}</ui-select-match>\n                            <ui-select-choices refresh-delay="1000"\n                                               position="down"\n                                               refresh="InstitutionsController.searchInstitutions($select.search)"\n                                               repeat="option in institutionsSearchResults | filter:$select.search">\n                                <div ng-bind-html="option.name | highlight: $select.search"></div>\n                            </ui-select-choices>\n                        </ui-select>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row">\n                <div class="col-lg-12">\n                    <div class="form-group">\n                        <label>Primary Institution *</label>\n                        <ui-select\n                            id="primary-institution-dropdown"\n                            ng-model="user.primaryInstitutionCoreId"\n                            ng-required="true"\n                            on-select="InstitutionsController.handlePrimaryInstitutionChanges()"\n                            theme="bootstrap"\n                            >\n                            <ui-select-match placeholder="Select an Option">{{$select.selected.name}}</ui-select-match>\n                            <ui-select-choices \n                                refresh-delay="1000"\n                                repeat="option.coreId as option in userInstitutions.assigned | filter:$select.search">\n                                <div ng-bind-html="option.name | highlight: $select.search"></div>\n                            </ui-select-choices>\n                            <ui-select-no-choice>\n                                Not found\n                            </ui-select-no-choice>\n                        </ui-select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-lg-6"></div>\n        <div class="col-lg-6">\n            <a class="btn btn-primary btn-sm btn-block"\n               ng-class="{\'disabled\': InstitutionsController.disallowSubmit() || !UsersList.hasWriteAccess}"\n               ng-click="InstitutionsController.handleInstitutionSubmit()">Update</a>\n        </div>\n    </div>\n\n</div>\n'),$templateCache.put("/scripts/components/users/list/institutions/institutionsUsersListView.html",'<div class="wrapper wrapper-content animated fadeInRight page-institutions-users-list" ng-controller="InstitutionsUsersListController as UsersList">\n\n    <p>\n        <button type="button" class="btn btn-primary" ng-click="UsersList.handleAddInstitutionsUserClick()">\n            <i class="fa fa-user-plus"></i>\n            Add User\n        </button>\n    </p>\n    <div class="row">\n        <div id="schoolUsersTable" ng-class="showInfoBlock ? \'col-sm-3 hide-ng-table-pager\' : \'col-sm-12\'">\n            <div class="ibox float-e-margins">\n                <div class="ibox-content table-responsive">\n                    <div wave-spinner class="wave-spinner" ng-show="UsersList.isDatagridReloading || !UsersList.isDatagridRendered"></div>\n\n                    <div class="full-width scroll-horizontal hide-vertical-overflow" mouse-scroll-horizontal>\n                        <div ng-if="UsersList.showDatagrid" ng-class="{\'modal-overlay-35\': UsersList.isDatagridReloading}">\n                            <ui-grid-info ng-if="!showInfoBlock"></ui-grid-info>\n                            <div class="grid"\n                                 ui-grid="UsersList.grid.options"\n                                 ui-grid-pagination\n                                 ui-grid-selection\n                                 ui-grid-resize-columns\n                                 ui-grid-auto-resize></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div fixed-element-while-scrolling="#schoolUsersTable" ng-show="showInfoBlock" class="col-sm-9 scroll-floating-element">\n            <div class="ibox block-user">\n                <div class="ibox-content">\n                    <div class="ibox-tools">\n                        <a class="close-link" ng-click="UsersList.handleEditCloseClick()">\n                            <i class="fa fa-times"></i>\n                        </a>\n                    </div>\n\n                    <div class="tab-content">\n                        <div class="tab-pane active">\n\n                            <div class="row m-b-lg" ng-show="user.id">\n                                <div class="col-lg-4 text-center">\n                                    <div class="m-b-sm">\n                                        <img alt="image" class="img-circle" gravatar-src="user.email" gravatar-size="100">\n                                    </div>\n                                    <div class="m-b-sm">\n                                    </div>\n                                </div>\n                                <div class="col-lg-8">\n                                    <h2>\n                                        {{user.fullname}}\n                                    </h2>\n                                    <a href="mailto:{{user.email}}" class="btn btn-primary btn-sm">\n                                        <i class="fa fa-envelope"></i> Send Email\n                                    </a>\n                                    <a ng-show="!user.active" ng-click="handleActivateClick(user)" class="btn btn-warning btn-sm" ng-class="{\'disabled\':activateInProgress}">\n                                        <i class="fa fa-undo"></i> Activate\n                                    </a>\n                                    <a ng-show="user.active" ng-click="handleDeactivateClick(user)" class="btn btn-danger btn-sm" ng-class="{\'disabled\':deactivateInProgress}">\n                                        <i class="fa fa-ban"></i> Deactivate\n                                    </a>\n                                    \x3c!--\n                                    <a class="btn btn-default btn-sm" ng-click="handleResetClick(user)">\n                                        <i class="fa fa-refresh"></i> Reset unsaved changes\n                                    </a>--\x3e\n                                </div>\n                            </div>\n\n                            <div class="client-detail">\n                                <div class="full-height-scroll">\n                                    <div class="row">\n                                        <div class="col-lg-12">\n                                            <div class="tabs-container">\n                                                <uib-tabset active="activeTab">\n                                                    <uib-tab heading="Personal details" disable="disabledInstitutionsUserListSubTabs[\'personalDetails\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/institutions/personal-details/institutionsUsersListPersonalDetailsView.html\'"></div>\n                                                    </uib-tab>\n                                                    <uib-tab heading="Permissions" disable="disabledInstitutionsUserListSubTabs[\'permissions\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/institutions/permissions/institutionsUsersListPermissionsView.html\'"></div>\n                                                    </uib-tab>\n                                                    <uib-tab heading="Institutions" disable="disabledInstitutionsUserListSubTabs[\'institutions\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/institutions/institutions/institutionsUsersListInstitutionsView.html\'"></div>\n                                                    </uib-tab>\n                                                </uib-tabset>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <pre ng-show="UsersList.devMode">{{user|json}}</pre>\n</div>\n'),$templateCache.put("/scripts/components/users/list/institutions/institutionsUsersView.html",'<div class="page-contacts" ng-controller="InstitutionsUsersController as InstitutionsUsersController">\n    <div ng-include src="\'/scripts/components/users/list/institutions/institutionsUsersListView.html\'"></div>\n</div>'),$templateCache.put("/scripts/components/users/list/institutions/permissions/institutionsUsersListPermissionsView.html",'<div class="panel-body">\n    <div class="row">\n        <div class="col-lg-6 block-permissions">\n            <p>\n                <strong>Departments / Roles</strong>\n            </p>\n            <div ng-repeat="(groupName, roles) in UsersList.rolesList | groupBy: \'groupName\'">\n                <label>{{groupName}}</label>\n                <div ng-repeat="role in roles" class="permission-row">\n                    <switch ng-model="user.roles[role.roleHandle]"\n                            ng-disabled="role.roleHandle !== \'custom\' && user.roles.custom"\n                            name="{{role.roleHandle}}"\n                            class="{{role.roleHandle==\'custom\' ? \'red\': \'green\'}}"\n                            ng-change="handleRoleClick(role)"\n                    ></switch>{{role.roleName}}\n                </div>\n            </div>\n        </div>\n        <div class="col-lg-6">\n            <h3 ng-show="user.globalAdmin" class="btn-sm badge-info">\n                Full Access\n            </h3>\n            <div ng-class="{\'modal-overlay\': user.globalAdmin}">\n                <p>\n                    <strong>Assign Pages</strong>\n                </p>\n                <div class="table-responsive">\n                    <table class="table table-striped">\n                        <thead>\n                        <tr>\n                            <th>Section</th>\n                            <th>Page</th>\n                            <th>Assign</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr ng-repeat="(key, page) in UsersList.sectionsList">\n                            <td>{{page.sectionName}}</td>\n                            <td>{{page.pageName}}</td>\n                            <td>\n                                <input i-checkbox type="checkbox" name="{{page.pageHandle}}" ng-model="user.accessTo[page.pageHandle]" ng-change="activateCustomRole()"  />\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <a class="btn btn-primary btn-sm btn-block"\n                       ng-class="{\'disabled\':permissionsSubmitInProgress || !UsersList.hasWriteAccess}"\n                       ng-click="handlePermissionsSubmit()">Update</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/users/list/institutions/personal-details/institutionsUsersListPersonalDetailsView.html",'<div class="panel-body">\n    <div class="row">\n        <form name="forms.personalDetailsForm" class="clearfix" novalidate>\n            <div class="col-lg-6 block-personal-details">\n                <div class="form-group">\n                    <label>User type *</label>\n                    <ui-select\n                        name="typeId"\n                        ng-required="true"\n                        ng-disabled="true"\n                        ng-model="selectedItem.selectedOptionType"\n                        theme="bootstrap">\n                        <ui-select-match placeholder="Select an Option">{{$select.selected.name}}</ui-select-match>\n                        <ui-select-choices \n                            refresh-delay="1000"\n                            repeat="option in UsersList.userTypes | filter:$select.search">\n                            <div ng-bind-html="option.name | highlight: $select.search"></div>\n                        </ui-select-choices>\n                        <ui-select-no-choice>\n                            Not found\n                        </ui-select-no-choice>\n                    </ui-select>\n                </div>\n\n                <div class="form-group">\n                    <label>Title</label>\n                    <input type="text" class="form-control" ng-model="user.title">\n                </div>\n                <div class="form-group" ng-class="{\'has-errors\': !UsersList.isValidFirstName()}">\n                    <label>First (Given) Name *</label>\n                    <input name="firstname"\n                        type="text"\n                        class="form-control"\n                        ng-model="user.firstname"\n                        ng-required="true"\n                        ng-focus="UsersList.setValid(\'firstname\')"\n                        custom-popover\n                        popover-html="Add a first (given) name"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!UsersList.isValidFirstName()}}">\n                </div>\n                <div class="form-group" ng-class="{\'has-errors\': !UsersList.isValidLastName()}">\n                    <label>Last (Family Name) *</label>\n                    <input name="lastname"\n                        type="text"\n                        class="form-control"\n                        ng-model="user.lastname"\n                        ng-required="true"\n                        ng-focus="UsersList.setValid(\'lastname\')"\n                        custom-popover\n                        popover-html="Add a last (family) name"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!UsersList.isValidLastName()}}">\n                </div>\n                <div class="form-group" ng-class="{\'has-errors\': !UsersList.isValidEmail()}">\n                    <label>Email *</label>\n                    <input name="email"\n                        type="email"\n                        class="form-control"\n                        ng-model="user.email"\n                        ng-required="true"\n                        ng-focus="UsersList.setValid(\'email\')"\n                        custom-popover\n                        popover-html="Add an email"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!UsersList.isValidEmail()}}">\n                </div>\n\n                <user-password user="user"></user-password>\n\n                <div class="form-group">\n                    <label>Position</label>\n                    <input type="text" class="form-control" ng-model="user.position">\n                </div>\n                <div class="form-group">\n                    <label>Phone</label>\n                    <input type="text" class="form-control" ng-model="user.phone">\n                </div>\n                <div class="form-group">\n                    <label>Primary Institution</label>\n                    <input type="text" class="form-control" ng-model="user.primaryInstitutionName" disabled="disabled">\n                </div>\n            </div>\n            <div class="col-lg-6 block-contact-types">\n                <table class="table table-striped">\n                    <thead>\n                    <tr>\n                        <th>Contact Type</th>\n                        <th>Assign</th>\n                        <th>Primary</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr ng-repeat="types in UsersList.contactTypes">\n                        <td>\n                            {{types.name}}\n                        </td>\n                        <td>\n                            <input ng-model="user.contactTypes[types.handle].assigned" ng-change="handleContactTypeClick(types.handle)" i-checkbox="{{types.assign}}" type="checkbox" />\n                        </td>\n                        <td>\n                            <input ng-model="user.contactTypes[types.handle].primary" ng-change="handlePrimaryContactTypeClick(types.handle)" i-checkbox="{{types.primary}}" type="checkbox" />\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n\n                <a class="btn btn-primary btn-sm btn-block"\n                   ng-class="{\'disabled\':personalDetailsSubmitInProgress || !UsersList.hasWriteAccess}"\n                   ng-click="handlePersonalDetailsSubmit()">{{user.id ? \'Update\' : \'Save\'}}</a>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/users/list/qs/partial/permissions.html",'<div class="panel-body">\n    <div class="row">\n        <div class="col-lg-6 block-permissions">\n            <p>\n                <strong>Departments / Roles</strong>\n            </p>\n            <div ng-repeat="(groupName, roles) in UsersList.rolesList | groupBy: \'groupName\'">\n                <label>{{groupName}}</label>\n                <div ng-repeat="role in roles" class="permission-row">\n                    <switch ng-model="user.roles[role.roleHandle]"\n                            ng-disabled="role.roleHandle !== \'custom\' && user.roles.custom"\n                            name="{{role.roleHandle}}"\n                            class="{{role.roleHandle==\'custom\' ? \'red\': \'green\'}}"\n                            ng-change="handleRoleClick(role)"\n                    ></switch>{{role.roleName}}\n                </div>\n            </div>\n        </div>\n\n        <div class="col-lg-6">\n            <div>\n                <p>\n                    <strong>Assign Pages</strong>\n                </p>\n\n                <div class="table-responsive panel">\n                    <div class="clickable panel-heading panel-primary-light" ng-click="toggleClientSections()">\n                        Clients <i class="pull-right glyphicon" ng-class="{\'glyphicon-chevron-down\': showClientSections, \'glyphicon-chevron-right\': !showClientSections}"></i>\n                    </div>\n                    <table ng-show="showClientSections" class="table table-striped">\n                        <thead>\n                        <tr>\n                            <th>Section</th>\n                            <th>Page</th>\n                            <th>Assign</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr ng-repeat="(key, page) in UsersList.clientSectionsList">\n                            <td>{{page.sectionName}}</td>\n                            <td>{{page.pageName}}</td>\n                            <td>\n                                <input i-checkbox type="checkbox" name="{{page.pageHandle}}" ng-model="user.accessTo[page.pageHandle]" ng-change="activateCustomRole()" />\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n\n                    <div class="clickable panel-heading panel-primary-light" ng-click="toggleQsSections()">\n                        QS Staff <i class="pull-right glyphicon" ng-class="{\'glyphicon-chevron-down\': showQsSections, \'glyphicon-chevron-right\': !showQsSections}"></i>\n                    </div>\n                    <table ng-show="showQsSections" class="table table-striped">\n                        <thead>\n                        <tr>\n                            <th>Section</th>\n                            <th>Page</th>\n                            <th>Assign</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr ng-repeat="(key, page) in UsersList.qsSectionsList">\n                            <td>{{page.sectionName}}</td>\n                            <td>{{page.pageName}}</td>\n                            <td>\n                                <input i-checkbox type="checkbox" name="{{page.pageHandle}}"\n                                       ng-model="user.accessTo[page.pageHandle]"\n                                       ng-change="activateCustomRole()"\n                                       ng-disabled="{{page.disabled}}"/>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <a class="btn btn-primary btn-sm btn-block" ng-class="{\'disabled\':permissionsSubmitInProgress}" ng-click="handlePermissionsSubmit()">Update</a>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/users/list/qs/partial/personalDetails.html",'<div class="panel-body">\n    <div class="row">\n        <form name="forms.personalDetailsForm" class="form-horizontal clearfix" novalidate>\n            <div class="col-lg-6 block-personal-details">\n                <div class="form-group">\n                    <label>Title</label>\n                    <input type="text" class="form-control" ng-model="user.title">\n                </div>\n                <div class="form-group" ng-class="{\'has-errors\': !UsersList.isValidFirstName()}">\n                    <label>First (Given) Name *</label>\n                    <input name="firstname"\n                        type="text"\n                        class="form-control"\n                        ng-model="user.firstname"\n                        ng-required="true"\n                        ng-focus="UsersList.setValid(\'firstname\')"\n                        custom-popover\n                        popover-html="Add a first (given) name"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!UsersList.isValidFirstName()}}">\n                </div>\n\n                <div class="form-group" ng-class="{\'has-errors\': !UsersList.isValidLastName()}">\n                    <label>Last (Family Name) *</label>\n                    <input name="lastname"\n                        type="text"\n                        class="form-control"\n                        ng-model="user.lastname"\n                        ng-required="true"\n                        ng-focus="UsersList.setValid(\'lastname\')"\n                        custom-popover\n                        popover-html="Add a last (family) name"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!UsersList.isValidLastName()}}">\n                </div>\n                <div class="form-group">\n                    <label>Position</label>\n                    <input type="text" class="form-control" ng-model="user.position">\n                </div>\n                <div class="form-group" ng-class="{\'has-errors\': !UsersList.isValidEmail()}">\n                    <label>Email *</label>\n                    <input name="email"\n                        type="email"\n                        class="form-control"\n                        ng-model="user.email"\n                        ng-required="true"\n                        ng-focus="UsersList.setValid(\'email\')"\n                        custom-popover\n                        popover-html="Add an email"\n                        popover-placement="left"\n                        popover-trigger="manual"\n                        popover-visibility="{{!UsersList.isValidEmail()}}">\n                </div>\n\n                <user-password user="user"></user-password>\n            </div>\n            <div class="col-lg-6 block-contact-types">\n                <table class="table table-striped">\n                    <thead>\n                    <tr>\n                        <th>Contact Type</th>\n                        <th>Assign</th>\n                        <th>Primary</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr ng-repeat="types in UsersList.contactTypes">\n                        <td>\n                            {{types.name}}\n                        </td>\n                        <td>\n                            <input ng-model="user.contactTypes[types.handle].assigned" i-checkbox="{{types.assign}}" type="checkbox" />\n                        </td>\n                        <td>\n                            <input ng-model="user.contactTypes[types.handle].primary" ng-change="handlePrimaryContactTypeClick(types.handle)" i-checkbox="{{types.primary}}" type="checkbox" />\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <a class="btn btn-primary btn-sm btn-block" ng-class="{\'disabled\':personalDetailsSubmitInProgress}" ng-click="handlePersonalDetailsSubmit()">{{user.id ? \'Update\' : \'Save\'}}</a>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("/scripts/components/users/list/qs/qsUsersListView.html",'<div class="wrapper wrapper-content animated fadeInRight page-qs-users-list" ng-controller="QsUsersListController as UsersList">\n    <p>\n        <button type="button" class="btn btn-primary" ng-click="UsersList.handleAddQsUserClick()">\n            <i class="fa fa-user-plus"></i>\n            Add User\n        </button>\n    </p>\n\n    <div class="row">\n        <div id="usersTable" ng-class="showInfoBlock ? \'col-sm-3 hide-ng-table-pager\' : \'col-sm-12\'">\n            <div class="ibox float-e-margins">\n                <div class="ibox-content table-responsive">\n                    <div wave-spinner class="wave-spinner" ng-show="isDatagridReloading || !isDatagridRendered"></div>\n\n                    <div class="full-width scroll-horizontal hide-vertical-overflow" mouse-scroll-horizontal>\n                        <div ng-if="UsersList.grid.options" ng-class="{\'modal-overlay-35\': isDatagridReloading}">\n                            <ui-grid-info ng-if="!showInfoBlock"></ui-grid-info>\n                            <div class="grid"\n                                 ui-grid="UsersList.grid.options"\n                                 ui-grid-pagination\n                                 ui-grid-selection\n                                 ui-grid-resize-columns\n                                 ui-grid-auto-resize></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div fixed-element-while-scrolling="#usersTable" ng-show="showInfoBlock" class="col-sm-9 scroll-floating-element">\n            <div class="ibox block-user">\n                <div class="ibox-content">\n                    <div class="ibox-tools">\n                        <a class="close-link" ng-click="UsersList.handleEditCloseClick()">\n                            <i class="fa fa-times"></i>\n                        </a>\n                    </div>\n\n                    <div class="tab-content">\n                        <div class="tab-pane active">\n                            <div class="row m-b-lg" ng-show="user.id">\n                                <div class="col-lg-4 text-center">\n                                    <div class="m-b-sm">\n                                        <img alt="image" class="img-circle" gravatar-src="user.email" gravatar-size="100">\n                                    </div>\n\n                                    <div class="m-b-sm">\n                                    </div>\n                                </div>\n                                <div class="col-lg-8">\n                                    <h2>\n                                        {{user.fullname}}\n                                    </h2>\n\n                                    <a href="mailto:{{user.email}}" class="btn btn-primary btn-sm">\n                                        <i class="fa fa-envelope"></i> Send Email\n                                    </a>\n\n                                    <a ng-show="!user.active" ng-click="handleActivateClick(user)" class="btn btn-warning btn-sm" ng-class="{\'disabled\':activateInProgress}">\n                                        <i class="fa fa-undo"></i> Activate\n                                    </a>\n\n                                    <a ng-show="user.active" ng-click="handleDeactivateClick(user)" class="btn btn-danger btn-sm" ng-class="{\'disabled\':deactivateInProgress}">\n                                        <i class="fa fa-ban"></i> Deactivate\n                                    </a>\n\n                                    <a class="btn btn-default btn-sm" ng-click="handleResetClick(user)">\n                                        <i class="fa fa-refresh"></i> Reset unsaved changes\n                                    </a>\n                                </div>\n                            </div>\n                            <div class="client-detail">\n                                <div class="full-height-scroll scroll-floating-element" full-scroll>\n                                    <div class="row">\n                                        <div class="col-lg-12">\n                                            <div class="tabs-container">\n                                                <uib-tabset active="activeQsUserListSubTabs">\n                                                    <uib-tab heading="Personal details" disable="disabledQsUserListSubTabs[\'personalDetails\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/qs/partial/personalDetails.html\'"></div>\n                                                    </uib-tab>\n                                                    <uib-tab heading="Permissions" disable="disabledQsUserListSubTabs[\'permissions\']">\n                                                        <div ng-include src="\'/scripts/components/users/list/qs/partial/permissions.html\'"></div>\n                                                    </uib-tab>\n                                                </uib-tabset>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <pre ng-show="UsersList.devMode">{{user|json}}</pre>\n</div>\n'),$templateCache.put("/scripts/components/users/shared/password/passwordView.html",'<div class="password-box">\n    <div class="row">\n        <div class="col-lg-7 col-md-12 col-sm-12 col-xs-12">\n            <div ng-class="$ctrl.cnf.blockClass">\n                <div class="label-container col-lg-5 col-md-12 col-sm-12 col-xs-12">\n                    <div class="form-group">\n                        <label ng-class="$ctrl.cnf.labelClass">\n                            {{$ctrl.cnf.label || \'Password\'}} <span ng-show="$ctrl.isRequired()">*</span>\n                        </label>\n                    </div>\n                </div>\n                <div class="col-lg-7 col-md-12 col-sm-12 col-xs-12">\n                    <div class="form-group" ng-class="{\'has-errors\': !$ctrl.isPassLen}">\n                        <input ng-class="$ctrl.isValid() ? \'valid\' : \'invalid\'"\n                            type="password"\n                            name="password"\n                            class="form-control"\n                            placeholder="{{$ctrl.isRequired() ? \'Enter password\' : \' New password\'}}"\n                            ng-model="$ctrl.user.password"\n                            ng-change="$ctrl.handleChanges()"\n                            autocomplete="new-password"\n                            ng-focus="$ctrl.data"\n                            custom-popover\n                            popover-html="Add a password"\n                            popover-placement="left"\n                            popover-trigger="manual"\n                            popover-visibility="{{!$ctrl.isPassLen}}">\n                    </div>\n                </div>\n            </div>\n\n            <div ng-class="$ctrl.cnf.blockClass" ng-if="$ctrl.cnf.resetOnLogin">\n                <div class="col-lg-12">\n                    <div class="form-group">\n                        <input ng-class="reset-on-login" ng-model="$ctrl.user.passwordReset" type="checkbox" />\n                        reset password on login\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="col-lg-5 col-md-12 col-sm-12 col-xs-12">\n            <div ng-class="$ctrl.cnf.blockClass">\n                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-left">\n                    <div class="form-group" ng-if="$ctrl.user.password || $ctrl.isRequired()">\n                        <div class="validation-items">\n                            <div class="validation-item" ng-repeat="item in $ctrl.validators">\n                                <i class="fa fa-circle" ng-class="item.status ? \'text-navy\' : \'text-danger\'"></i> {{item.name}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n'),$templateCache.put("/scripts/shared/appUpdateMessage/appUpdateMessageView.html",'<div id="info-msg" ng-if="$ctrl.isVisible()">\n    New version of QS Hub is available. Please reload the page.\n</div>\n'),$templateCache.put("/scripts/shared/banners/tmProfileView.html",'<div class="alert alert-warning ng-scope col-lg-12 ">\n    <i class="fa fa-star"></i> You are not subscribed currently for <strong>{{profileDisableName}}</strong> profile. If you like to do so, please contact:<strong> tusupportqs.com </strong>\n</div>'),$templateCache.put("/scripts/shared/banners/ugPgProfileDisable.html",'<div class="alert alert-warning ng-scope col-lg-12 ">\n    <i class="fa fa-star"></i> You are not subscribed currently for <strong>{{profileDisableName}}</strong> profile. If you like to do so, please contact:<strong> tusupport@qs.com </strong>\n</div>'),$templateCache.put("/scripts/shared/breadcrumbs/breadcrumbsView.html",'<div class="page-heading row" >\n    <div class="col-lg-12">\n        <h2>{{$state.current.data.label}}</h2>\n        <ol class="breadcrumb">\n            <li ng-if="$state.$current.parent.data.label">\n                <span>{{$state.$current.parent.data.label}}</span>\n            </li>\n            <li class="active">\n                <strong>{{$state.current.data.label}}</strong>\n            </li>\n        </ol>\n    </div>\n</div>\n'),$templateCache.put("/scripts/shared/disabledInstitution/disabledInstitutionView.html",'<div class="widget red-bg p-lg text-center disabled-institution col-lg-4">\n    <div class="m-b-md">\n        <i class="fa fa-warning fa-4x"></i>\n        <h1 class="m-xs">Institution is disabled</h1>\n        <span class="font-bold no-margins">\n            Please contact <a href="mailto:tuonlinesupport@qs.com"><strong>tuonlinesupport@qs.com</strong></a>\n        </span>\n    </div>\n</div>'),$templateCache.put("/scripts/shared/displayFiltering/displayFilteringView.html",'<div class="ibox-tools dropdown" uib-dropdown>\n    <a aria-expanded="false" aria-haspopup="true" class="dropdown-toggle" href="#" uib-dropdown-toggle="" ng-show="active">\n        <i class="fa fa-wrench"></i>\n    </a>\n    <ul class="dropdown-menu dropdown-filter" uib-dropdown-menu>\n        <li class="hidden-column" ng-repeat="column in columns">\n            <label><input type="checkbox" ng-model-options="{getterSetter: true}" ng-model="column.show" ng-click="callback()" />{{column.title}}</label>\n        </li>\n        <li class="display-filtering-buttons" ng-if="columns.length > 0">\n            <div class="row">\n                <div class="col-lg-4">\n                    <a class="btn btn-sm btn-primary" ng-click="displayFilteringSelectAll()">Select All</a>\n                </div>\n                <div class="col-lg-4 col-lg-offset-2">\n                    <a class="btn btn-sm btn-danger" ng-click="closeDisplayFiltering($event)">Close</a>\n                </div>\n            </div>\n        </li>\n    </ul>\n</div>'),$templateCache.put("/scripts/shared/footer/footerView.html",'<p>\n    <span>\n    \t<strong>Copyright</strong>\n    \tQS Quacquarelli Symonds Ltd &copy;\n    \t<span current-date="yyyy"></span>\n    </span>\n    <span class="pull-right">\n    \tVersion <strong>{{version}}</strong>\n    </span>\n</p>\n'),$templateCache.put("/scripts/shared/modal/modalTemplate.html",'<div class=modal-body ng-swipe-left=Lightbox.nextImage() ng-swipe-right=Lightbox.prevImage()>\n    <div class=lightbox-nav><button class=close aria-hidden=true ng-click=$dismiss()>×</button>\n        <div class=btn-group ng-if="Lightbox.images.length > 1">\n            <a class="btn btn-xs btn-default previous" ng-click=Lightbox.prevImage()>‹</a>\n            <a class="btn btn-xs btn-default next" ng-click=Lightbox.nextImage()>›</a>\n        </div>\n    </div>\n    <div class=lightbox-image-container>\n        <div class=lightbox-image-caption><span>{{Lightbox.imageCaption}}</span></div>\n        <img ng-if=!Lightbox.isVideo(Lightbox.image) lightbox-src={{Lightbox.imageUrl}}>\n        <div ng-if=Lightbox.isVideo(Lightbox.image) class="embed-responsive embed-responsive-16by9">\n            <video ng-if=!Lightbox.isSharedVideo(Lightbox.image) lightbox-src={{Lightbox.imageUrl}} controls autoplay></video>\n            <embed-video ng-if=Lightbox.isSharedVideo(Lightbox.image) lightbox-src={{Lightbox.imageUrl}} ng-href={{Lightbox.imageUrl}} iframe-id=lightbox-video class=embed-responsive-item>\n                <a ng-href={{Lightbox.imageUrl}}>Watch video</a>\n            </embed-video>\n        </div>\n    </div>\n</div>\n  '),$templateCache.put("/scripts/shared/modal/modalView.html",'<div class="modal-header">\n    <h3>{{modalOptions.headerText}}</h3>\n</div>\n<div class="modal-body">\n    <p>{{modalOptions.bodyText}}</p>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-default" data-ng-click="modalOptions.close()">\n        {{modalOptions.closeButtonText}}\n    </button>\n    <button class="btn btn-{{modalOptions.actionButtonClass}}" data-ng-click="modalOptions.ok();">\n        {{modalOptions.actionButtonText}}\n    </button>\n</div>\n'),$templateCache.put("/scripts/shared/ng-table/filters/dateRangeFilter.html",'<input\n    date-range-picker\n    class="form-control date-picker filter"\n    type="text"\n    ng-model="params.filter()[name]"\n    clearable="true"\n    options="{locale: {format: \'D MMMM, YYYY\'}}"\n    readonly />'),$templateCache.put("/scripts/shared/noAccess/noAccessView.html",'<div class="widget red-bg p-lg text-center no-access-institution col-lg-4">\n    <div class="m-b-md">\n        <i class="fa fa-warning fa-4x"></i>\n        <h1 class="m-xs">No access to this section</h1>\n    </div>\n</div>'),$templateCache.put("/scripts/shared/progressCircle/progressCircleView.html",'<div class="c100 p{{percent}} {{colour}}">\n    <span class="text-label">{{text}}</span>\n    <div class="slice">\n        <div class="bar"></div>\n        <div class="fill"></div>\n    </div>\n</div>'),$templateCache.put("/scripts/shared/sidebar/sidebarView.html",'<nav class="navbar-default navbar-static-side" role="navigation" ng-controller="SidebarController as SidebarController">\n    <div class="sidebar-collapse">\n        <ul id="side-menu" class="nav vnav media" side-navigation="">\n            <li class="nav-header">\n                <div class="profile-element">\n                    <img src="/images/logo-white.svg" alt="Logo" />\n                </div>\n                <div class="logo-element">\n                    <img src="/images/logo-small.svg" alt="Logo" />\n                </div>\n            </li>\n            <li ui-sref-active="{\'active\':\'clients\'}" >\n                <a>\n                    <span class="icon"><i class="fa fa-user"></i></span>\n                    <span class="text">Institutions</span>\n                    <span class="fa arrow"></span>\n                </a>\n                <ul class="nav nav-second-level collapse">\n                    <li ui-sref-active="{\'active\':\'clients.profiles\'}">\n                        <a ui-sref="clients.profiles">\n                            <span class="icon"><i class="fa fa-book"></i></span>\n                            <span class="text">Profiles</span>\n                            <span class="fa arrow"></span>\n                        </a>\n                        <ul class="nav nav-third-level">\n                            <li ui-sref-active="{\'active\':\'clients.profiles.shared\'}">\n                                <a ui-sref="clients.profiles.shared" ng-show="MainController.userHasAccessTo(MainController.handles[\'clients.profiles.shared\'])">\n                                    <span class="icon"><i class="fa fa-info"></i></span>\n                                    <span class="text">Institution Details</span>\n                                </a>\n                            </li>\n                            <li ui-sref-active="{\'active\':\'clients.profiles.tu\'}" ng-show="isTuEnabled">\n                                <a ui-sref="clients.profiles.tu" ng-show="MainController.userHasAccessTo(MainController.handles[\'clients.profiles.tu\'])">\n                                    <span class="icon"><i class="fa fa-graduation-cap"></i></span>\n                                    <span class="text">Undergraduate / Postgraduate</span>\n                                </a>\n                            </li>\n                            <li ui-sref-active="{\'active\':\'clients.profiles.tm\'}" ng-show="isTmEnabled">\n                                <a ui-sref="clients.profiles.tm" ng-show="MainController.userHasAccessTo(MainController.handles[\'clients.profiles.tm\'])">\n                                    <span class="icon"><i class="fa fa-suitcase"></i></span>\n                                    <span class="text">MBA</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li ui-sref-active="{\'active\':\'clients.statistics\'}" ng-show="MainController.userHasAccessTo(MainController.handles[\'clients.statistics\'])">\n                        <a href="{{SidebarController.coreUrl}}/{{SidebarController.getCoreFlag()}}statistics">\n                            <span class="icon"><i class="fa fa-bar-chart"></i></span>&nbsp;\n                            <span class="text">Statistics</span>&nbsp;\n                            <i class="fa fa-external-link"></i>\n                        </a>\n                    </li>\n                    <li ng-if="!isClient" class="custom-popover" ui-sref-active="{\'active\':\'clients.contacts\'}">\n                        <a ui-sref="clients.contacts">\n                            <span class="icon"><i class="fa fa-users"></i></span>\n                            <span class="text">Contacts</span>\n                            <i class="fa fa-lock" aria-hidden="true"></i>\n                        </a>\n                    </li>\n                </ul>\n            </li>\n            <li ng-show="!isClient" ui-sref-active="{\'active\':\'staff\'}">\n                <a>\n                    <span class="icon"><i class="fa fa-star"></i></span>\n                    <span class="text">QS Staff</span>\n                    <span class="fa arrow"></span>\n                </a>\n                <ul class="nav nav-second-level collapse">\n                    <li ui-sref-active="{\'active\':\'staff.dashboard\'}">\n                        <a ui-sref="staff.dashboard">\n                            <span class="icon"><i class="fa fa-th-large"></i></span>\n                            <span class="text">Dashboard</span>\n                        </a>\n                    </li>\n                    <li ui-sref-active="{\'active\':\'staff.users\'}">\n                        <a ui-sref="staff.users">\n                            <span class="icon"><i class="fa fa-users"></i></span>\n                            <span class="text">Users &amp; Permissions</span>\n                            <span class="fa arrow"></span>\n                        </a>\n                        <ul class="nav nav-third-level">\n                            <li ui-sref-active="{\'active\':\'staff.users.qs\'}">\n                                <a ui-sref="staff.users.qs" ng-show="MainController.userHasAccessTo(MainController.handles[\'staff.users.qs\'])">\n                                    <span class="icon"><i class="fa fa-user-secret"></i></span>\n                                    <span class="text">QS Users</span>\n                                </a>\n                            </li>\n                            <li ui-sref-active="{\'active\':\'staff.users.institutions\'}">\n                                <a ui-sref="staff.users.institutions" ng-show="MainController.userHasAccessTo(MainController.handles[\'staff.users.institutions\'])">\n                                    <span class="icon"><i class="fa fa-graduation-cap"></i></span>\n                                    <span class="text">Institutions Users</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li ui-sref-active="{\'active\':\'staff.institutions\'}">\n                        <a ui-sref="staff.institutions">\n                            <span class="icon"><i class="fa fa-bank"></i></span>\n                            <span class="text">Institutions</span>\n                            <span class="fa arrow"></span>\n                        </a>\n                        <ul class="nav nav-third-level">\n                            <li ui-sref-active="{\'active\':\'staff.institutions.list\'}">\n                                <a ui-sref="staff.institutions.list" ng-show="MainController.userHasAccessTo(MainController.handles[\'staff.institutions.list\'])">\n                                    <span class="icon"><i class="fa fa-bars"></i></span>\n                                    <span class="text">List</span>\n                                </a>\n                            </li>\n                            <li ui-sref-active="{\'active\':\'staff.institutions.department\'}" ng-if="SidebarController.hasDepartmentsOverviewAccess()">\n                                <a ui-sref="staff.institutions.department">\n                                    <span class="icon"><i class="fa fa-tasks"></i>\n                                    </span><span class="text">Department Overview</span>\n                                </a>\n                            </li>\n                            <li ui-sref-active="{\'active\':\'staff.institutions.tu-programs\'}" ng-if="SidebarController.hasTuProgramsOverviewAccess()">\n                                <a ui-sref="staff.institutions.tu-programs">\n                                    <span class="icon"><i class="fa fa-server"></i>\n                                    </span><span class="text">TU Programs Overview</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li ui-sref-active="{\'active\':\'staff.tm-directory\'}"\n                        ng-show="MainController.userHasAccessTo(MainController.handles[\'staff.tm-directory\'])">\n                        <a ui-sref="staff.tm-directory">\n                            <span class="icon"><i class="fa fa-tumblr"></i></span>\n                            <span class="text">TM Directory</span>\n                        </a>\n                    </li>\n                    <li ui-sref-active="{\'active\':\'staff.master-password\'}"\n                        ng-show="MainController.userHasAccessTo(MainController.handles[\'staff.master-password\'])">\n                        <a ui-sref="staff.master-password">\n                            <span class="icon"><i class="fa fa-key"></i></span>\n                            <span class="text">Master Password</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href="{{SidebarController.coreUrl}}/{{SidebarController.getCoreFlag()}}admin/dashboard">\n                            <span class="icon"><i class="fa fa-external-link"></i></span>\n                            <span class="text">Return to Core</span>\n                        </a>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n</nav>\n'),$templateCache.put("/scripts/shared/topNavigationBar/topNavigationBarView.html",'<nav class="navbar navbar-static-top" role="navigation">\n\n    \x3c!-- START NAVBAR HEADFER --\x3e\n    <div class="navbar-header">\n        <span minimaliza-sidebar=""></span>\n    </div>\x3c!-- END NAVBAR HEADFER --\x3e\n\n    \x3c!-- START USER ACCOUNT/PROFILE --\x3e\n    <div class="user-profile" uib-dropdown>\n        <a class="truncate" href="#" uib-dropdown-toggle>\n            <span class="user-dp">\n                <img class="img-circle" ng-hide="MainController.profileLogo()" alt="image" gravatar-src="email" gravatar-size="30">\n                <img class="img-circle" ng-show="MainController.profileLogo()" ng-src="{{MainController.profileLogo()}}" alt="image" style="width: 30px; height: 30px;">\n            </span>\n            <span class="option" ng-bind="MainController.fullName"></span>\n            <i class="fa fa-angle-down"></i>\n        </a>\n        <ul class="dropdown-menu">\n            <li>\n                <a ui-sref="user.my-profile">\n                    <i class="fa fa-user"></i>\n                    <span>My Profile</span>\n                </a>\n            </li>\n            <li>\n                <a ui-sref="logout">\n                  <i class="fa fa-sign-out"></i>\n                  <span>Log out</span>\n                </a>\n            </li>\n        </ul>\n    </div>\x3c!-- END USER ACCOUNT/PROFILE --\x3e\n\n    \x3c!-- START SEARCH HELP --\x3e\n    <div class="user-help">\n        <a href="javascript:void(0)" ng-click="helpIcon(\'md\')" title="Help">\n          <span>Help</span>\n          <i class="fa fa-question-circle-o"></i>\n        </a>\n    </div>\x3c!-- END SEARCH HELP --\x3e\n\n    \x3c!-- START SEARCHBAR --\x3e\n    <div class="search-dropdown">\n        \x3c!-- Institution switch for QS users --\x3e\n        <ui-select\n          theme="bootstrap"\n          ng-if="!isClient"\n          ng-model="institution.selected"\n          ng-change="handleSearchInstitutionClick(institution.selected)">\n\n            <ui-select-match placeholder="Institution search...">\n                <i class="fa fa-building" aria-hidden="true"></i>\n                {{$select.selected.name}}\n            </ui-select-match>\n\n            <ui-select-choices\n              refresh-delay="500"\n              refresh="searchInstitutions($select.search)"\n              position="down"\n              repeat="option in institutionsDropdownList | filter: $select.search">\n              <span class="option" ng-bind-html="option.name | highlight: $select.search"></span>\n            </ui-select-choices>\n\n        </ui-select>\n\n        \x3c!-- Institution switch for Clients --\x3e\n        <ui-select\n          theme="bootstrap"\n          ng-if="isClient"\n          ng-model="institution.selected"\n          on-select="handleSearchInstitutionClick(institution.selected)">\n\n            <ui-select-match placeholder="Institution search...">\n                <i class="fa fa-building" aria-hidden="true"></i>\n                {{$select.selected.name}}\n            </ui-select-match>\n\n            <ui-select-choices class="search-dropdown-results"\n              repeat="option in institutionsDropdownList | filter: $select.search"\n              position="down">\n              <span class="option" ng-bind-html="option.name | highlight: $select.search"></span>\n            </ui-select-choices>\n\n        </ui-select>\n        <div class="spinner" ng-show="searchInProgress" wave-spinner=""></div>\n    </div>\x3c!-- END SEARCHBAR --\x3e\n\n    \x3c!-- START GO BACK BUTTON --\x3e\n    \n    <div class="go-back" ng-if="MainController.allowParent()">\n      <button type="button" class="btn btn-warning" ng-click="handleGoToParentInstitution()">\n          <i class="glyphicon glyphicon-upload"></i>\n          <span>Go to Parent Institution</span>\n      </button>\n    </div>\x3c!-- END GO BACK BUTTON --\x3e\n</nav>'),$templateCache.put("/scripts/shared/ui-grid/templates/dateCellTemplate.html",'<div class="ui-grid-cell-contents">{{COL_FIELD CUSTOM_FILTERS | date:"medium"}}</div>\n'),$templateCache.put("/scripts/shared/ui-grid/templates/selectCellTemplate.html",'<div class="ui-grid-cell-contents">{{COL_FIELD CUSTOM_FILTERS | boolToText:col.filter.selectOptions}}</div>\n'),$templateCache.put("/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html",'<div class="ui-grid-filter-container"\n     ng-repeat="colFilter in col.filters"\n     ng-class="{\'ui-grid-filter-cancel-button-hidden\' : colFilter.disableCancelFilterButton === true }">\n\n    <ui-select class="ui-grid-filter-select ui-grid-filter-input-{{$index}} select-{{col.field}}"\n        ng-model="colFilter.term"\n        theme="bootstrap"\n        search-enabled="{{colFilter.searchEnabled || false}}"\n        append-to-body="true">\n        <ui-select-match placeholder="{{colFilter.placeholder}}">\n            {{$select | uiGridSelectedLabel}}\n        </ui-select-match>\n        <ui-select-choices repeat="item in (colFilter.selectOptions | filter: $select.search) track by item.value">\n            <div ng-bind="item.label"></div>\n        </ui-select-choices>\n    </ui-select>\n\n    <div role="button" class="ui-grid-filter-button-select"\n         ng-click="removeFilter(colFilter, $index)"\n         ng-if="!colFilter.disableCancelFilterButton"\n         ng-disabled="colFilter.term === undefined || colFilter.term === null || colFilter.term === \'\'"\n         ng-show="colFilter.term !== undefined && colFilter.term != null">\n        <i class="ui-grid-icon-cancel" ui-grid-one-bind-aria-label="aria.removeFilter">&nbsp;</i>\n    </div>\n</div>\n'),$templateCache.put("/scripts/shared/ui-grid/uiGridInfo/uiGridInfoPopupView.html",'<h5>\n    Special search characters\n</h5>\n<table class="table table-striped no-margins">\n    <thead>\n        <tr>\n            <th>Character</th>\n            <th>Explanation</th>\n            <th>Example</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>=</td>\n            <td>search for exact result</td>\n            <td>=John Smith</td>\n        </tr>\n        <tr>\n            <td>%</td>\n            <td>search using word pattern matching</td>\n            <td>Test Univ%sity</td>\n        </tr>\n        <tr>\n            <td>,</td>\n            <td>search for one or more</td>\n            <td>John,Tom,Olga</td>\n        </tr>\n        <tr>\n            <td>&amp;</td>\n            <td>search for combination of</td>\n            <td>London&University</td>\n        </tr>\n    </tbody>\n</table>\n'),$templateCache.put("/scripts/shared/ui-grid/uiGridInfo/uiGridInfoView.html",'<span class="info pull-right clickable"\n      popover-placement="left-top"\n      popover-append-to-body="true"\n      popover-class="ui-grid-info"\n      uib-popover-template="\'/scripts/shared/ui-grid/uiGridInfo/uiGridInfoPopupView.html\'">\n    <i class="fa fa-info-circle"></i>\n</span>')}])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.AuthenticationService=function($resource,$q,$localStorage,$http,$window,constants,UserFactory,$rootScope,authInterceptor){var service={username:null},deferred=null;return service.getAuthenticationModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/signin")},service.setData=function(response){var token=response.token,userData={coreId:response.userData.coreId,isClient:response.userData.isClient,title:response.userData.title,userName:service.username,email:response.userData.email,firstName:response.userData.firstName,phone:response.userData.phone,profileLogo:response.userData.profileLogo,primaryInstitutionName:response.userData.primaryInstitutionName,lastName:response.userData.lastName,fullName:response.userData.fullName,primaryInstitution:response.userData.primaryInstitution,accessTo:response.userData.accessTo,roles:response.userData.roles,position:response.userData.position,institutions:angular.isArray(response.userData.institutions)?response.userData.institutions:[],passwordReset:!!response.userData.passwordReset};$localStorage.currentUser={token:token,info:userData},UserFactory.setData(userData),service.setAuthorizationHeader(token)},service.handleSuccess=function(response){if(response.error&&response.message)return service.handleFailure(response);authInterceptor.resetUrl(),service.setData(response),service.clearXLocalStorage(),$window.localStorage.setItem(constants.xStorage.keys.source,"hub"),$window.localStorage.setItem(constants.xStorage.keys.data,angular.toJson({token:$localStorage.currentUser.token,userData:$localStorage.currentUser.info})),deferred.resolve(!0),deferred=null},service.handleFailure=function(response){deferred.resolve(response),deferred=null},service.login=function(username,password){return deferred=$q.defer(),username&&username.length&&password&&password.length?(service.username=username,service.getAuthenticationModel().save(null,{username:username,password:password},service.handleSuccess,service.handleFailure)):deferred.resolve(!1),deferred.promise},service.logout=function(){delete $localStorage.currentUser,$http.defaults.headers.common.Authorization="",$rootScope.$emit(constants.events.logout),angular.forEach(constants.xStorage.keys,function(itemKey){$window.localStorage.removeItem(itemKey)})},service.setAuthorizationHeader=function(token){$http.defaults.headers.common.Authorization=token},service.getUserData=function(){return $localStorage.currentUser&&$localStorage.currentUser.info?$localStorage.currentUser.info:null},service.setUserData=function(data){void 0===$localStorage.currentUser&&($localStorage.currentUser={}),$localStorage.currentUser.info=data},service.clearXLocalStorage=function(){angular.forEach(constants.xStorage.keys,function(itemKey){$window.localStorage.removeItem(itemKey)})},service.setXLocalStorageLogout=function(){$window.localStorage.setItem(constants.xStorage.keys.logout,"hub")},service.hasUserData=function(){return!!$localStorage.currentUser},service.getAuthorizationHeader=function(){return $localStorage.currentUser&&$localStorage.currentUser.token?{Authorization:$localStorage.currentUser.token}:null},service.getPublicPages=function(){return["/","/forgot-password","/reset-password"]},service},angular.module("qsHub").service("AuthenticationService",["$resource","$q","$localStorage","$http","$window","constants","UserFactory","$rootScope","authInterceptor",App.services.AuthenticationService])}(window.angular),function(angular){"use strict";angular.module("qsHub").config(["$provide",function($provide){$provide.decorator("Grid",function($delegate,$timeout){return $delegate.prototype.renderingComplete=function(){angular.isFunction(this.options.onRegisterApi)&&this.options.onRegisterApi(this.api),this.api.core.raise.renderingComplete(this.api),$timeout(function(){var $viewport=angular.element(document.querySelectorAll(".ui-grid-render-container"));["touchstart","touchmove","touchend","keydown","wheel","mousewheel","DomMouseScroll","MozMousePixelScroll"].forEach(function(eventName){$viewport.unbind(eventName)})}.bind(this))},$delegate})}])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{filters:{}})).filters.uiGridSelectedLabel=function(){return function($select){if(!$select||void 0===$select.selected||null===$select.selected)return null;if($select.selected.label)return $select.selected.label;var i=0,total=$select.items.length;for(i;i<total;i++)if($select.items[i].value===$select.selected)return $select.items[i].label;return null}},angular.module("qsHub").filter("uiGridSelectedLabel",App.filters.uiGridSelectedLabel)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{components:{}})).components.uiGridInfo={templateUrl:"/scripts/shared/ui-grid/uiGridInfo/uiGridInfoView.html"},angular.module("qsHub").component("uiGridInfo",App.components.uiGridInfo)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.UiGrid=function($localStorage,Grid,UserFactory){var exploded,service={},clear=Grid.prototype.clearAllFilters;return service.getKey=function(nameSpace){return nameSpace+UserFactory.getData().coreId},service.storeColumnsFilters=function(nameSpace,columnsFilters){$localStorage[service.getKey(nameSpace)]=columnsFilters},service.getColumnsFilters=function(nameSpace,dateFilters){if(void 0!==$localStorage[service.getKey(nameSpace)])return $localStorage[service.getKey(nameSpace)];var filters={};return angular.isDefined(dateFilters)&&angular.isArray(dateFilters)&&dateFilters.length>0&&angular.forEach(dateFilters,function(filterName){filters[filterName]={startDate:null,endDate:null}}),filters},service.storeColumnsVisibility=function(nameSpace,columnsVisibility){$localStorage[service.getKey(nameSpace)]=columnsVisibility;var filterNameSpace=nameSpace.replace("Visibility","Filters"),columnsFilters=service.getColumnsFilters(filterNameSpace);return columnsFilters&&(angular.forEach(columnsVisibility,function(value,key){!1===value&&(columnsFilters["filter["+key+"]"]=null)}),service.storeColumnsFilters(columnsFilters)),columnsFilters},service.getColumnsVisibility=function(nameSpace){return $localStorage[service.getKey(nameSpace)]},service.getGridColumnsVisibility=function(columns){var visibility={};return angular.forEach(columns,function(column){angular.isDefined(column.visible)&&angular.isDefined(column.field)&&(visibility[column.field]=column.visible)}),visibility},service.getVisibilityByField=function(columns,fieldName,defaultValue){return angular.isDefined(columns)&&angular.isDefined(columns[fieldName])?columns[fieldName]:defaultValue},service.getFilterByField=function(filters,fieldName,defaultValue){var filter="filter["+fieldName+"]",defaultVal=void 0===defaultValue?null:defaultValue;return void 0===filters[filter]?defaultVal:filters[filter]},service.removeByNameSpace=function(nameSpace){$localStorage.removeItem(service.getKey(nameSpace))},service.applyFilters=function(column){"select"!==column.filters[0].type&&(column.filters[0].term.indexOf("=")>-1?column.filters[0].condition=new RegExp("^"+column.filters[0].term.replace(" ","\\s").replace("=","")+"$","i"):column.filters[0].term.indexOf("%")>-1?column.filters[0].condition=new RegExp(column.filters[0].term.replace("%","(.*).+"),"i"):column.filters[0].term.indexOf(",")>-1?(exploded=column.filters[0].term.split(","),angular.forEach(exploded,function(values,key){exploded[key].replace(" ","\\s"),exploded[key]="(\\b"+values+"\\b)"}),column.filters[0].condition=new RegExp(exploded.join("|"),"i")):column.filters[0].term.indexOf("&")>-1&&(exploded=column.filters[0].term.split("&"),angular.forEach(exploded,function(values,key){exploded[key].replace(" ","\\s"),exploded[key]="(?=.*"+values+")"}),column.filters[0].condition=new RegExp(exploded.join(""),"i")))},service.resetConditions=function(columns){angular.forEach(columns,function(column){delete column.filters[0].condition})},service.resetExtend=function(columnBefore,columnDefs,defaultFilters){Grid.prototype.clearAllFilters=function(){clear.apply(this,Grid.prototype.clearAllFilters),columnBefore.forEach(function(element,index){if(element.visible)columnDefs[index].visible=!0,defaultFilters&&columnDefs[index].filters&&(defaultFilters.lastLoginAtRange={startDate:null,endDate:null},defaultFilters.createdAt&&(defaultFilters.createdAt={startDate:null,endDate:null}));else{var x=columnBefore.indexOf(element);columnDefs[x].visible=!1}})}},service},angular.module("qsHub").service("UiGridService",["$localStorage","Grid","UserFactory",App.services.UiGrid])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.UiSelect=function(){var service={};return service.getYesNoOptions=function(excludeNa){var options=[{value:"",label:"N/A"},{value:"yes",label:"Yes"},{value:"no",label:"No"}];return(excludeNa=excludeNa||!1)&&delete options[0],options},service},angular.module("qsHub").service("UiSelectService",[App.services.UiSelect])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.animatedHighlight=function($animateCss){return{restrict:"A",template:"<animated-highlight></animated-highlight><div ng-transclude></div>",transclude:!0,link:function(scope,element,attrs){var colorBefore="#23a4f6",colorAfter="none",opacityBefore=.3,opacityAfter=1,delay=1;element.addClass("custom-highlight"),element.css({position:"relative"}),opacityBefore=attrs.highlightOpacityBefore||opacityBefore,opacityAfter=attrs.highlightOpacityAfter||opacityAfter,colorBefore=attrs.highlightColorBefore||colorBefore,colorAfter=attrs.highlightColorAfter||colorAfter,delay=attrs.highlightDelay||delay,scope.$watch(attrs.animatedHighlight,function(value){value&&$animateCss(element.find("animated-highlight"),{from:{background:colorBefore,opacity:opacityBefore,position:"absolute",height:"100%",width:"100%","z-index":1},to:{background:colorAfter,opacity:opacityAfter,"z-index":-1},duration:delay}).start()})}}},angular.module("qsHub").directive("animatedHighlight",["$animateCss",App.directives.animatedHighlight])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.sideNavigation=function($timeout,InstitutionFactory,UserFactory,WatchService){return{restrict:"A",link:function($scope,element){$timeout(function(){element.metisMenu()});var tuEnabledForInstitution=!1,tuEnabledForUser=!1,tmEnabledForInstitution=!1,tmEnabledForUser=!1,watches=[];$scope.isTuEnabled=!1,$scope.isTmEnabled=!1;var toggleTuAccess=function(){$scope.isTuEnabled=UserFactory.isClient()?tuEnabledForUser&&tuEnabledForInstitution:tuEnabledForInstitution},toggleTmAccess=function(){$scope.isTmEnabled=UserFactory.isClient()?tmEnabledForUser&&tmEnabledForInstitution:tmEnabledForInstitution};WatchService.create($scope,InstitutionFactory.isAdvancedProgram,function(is){is&&($scope.isTuEnabled=!1)});var initWatches=function(){angular.forEach(watches,function(watch){watch()}),watches.push(WatchService.create($scope,InstitutionFactory.isTuSubscribed,function(isTuSubscribed){tuEnabledForInstitution=!(!InstitutionFactory.getCoreId()||!isTuSubscribed),toggleTuAccess()})),watches.push(WatchService.create($scope,UserFactory.isTuEnabled,function(isTuEnabled){tuEnabledForUser=!(!InstitutionFactory.getCoreId()||!isTuEnabled),toggleTuAccess()})),watches.push(WatchService.create($scope,InstitutionFactory.isTmSubscribed,function(isTmSubscribed){tmEnabledForInstitution=!(!InstitutionFactory.getCoreId()||!isTmSubscribed),toggleTmAccess()})),watches.push(WatchService.create($scope,UserFactory.isTmEnabled,function(isTmEnabled){tmEnabledForUser=!(!InstitutionFactory.getCoreId()||!isTmEnabled),toggleTmAccess()}))};WatchService.create($scope,InstitutionFactory.getCoreId,function(coreId){coreId&&(initWatches(),toggleTuAccess(),toggleTmAccess())})}}},App.directives.minimalizeSidebar=function(){return{restrict:"A",template:'<a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>',controller:function($scope){$scope.minimalize=function(){$("body").toggleClass("mini-navbar"),!$("body").hasClass("mini-navbar")||$("body").hasClass("body-small")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},100)):$("body").hasClass("fixed-sidebar")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},300)):$("#side-menu").removeAttr("style")}}}},angular.module("qsHub").directive("sideNavigation",["$timeout","InstitutionFactory","UserFactory","WatchService",App.directives.sideNavigation]).directive("minimalizaSidebar",App.directives.minimalizeSidebar)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.mouseScrollHorizontal=function($swipe,$window){return{restrict:"EA",link:function(scope,element,attrs,ctrl){var pointX,pointY,startX,startY,isMouseDraged=!1,isMouseDown=!1;$swipe.bind(element,{start:function(coords,event){isMouseDraged=!1,isMouseDown=!0,startX=coords.x,startY=coords.y},move:function(coords,event){if(isMouseDraged=!0,isMouseDown){pointX=coords.x,pointY=coords.y;var delta=startX-pointX;element[0].scrollLeft=delta}},end:function(coords,event){isMouseDown=!1,isMouseDraged&&angular.element(event.target).unbind("click")}}),element.bind("DOMMouseScroll mousewheel onmousewheel",function(event){var delta=0;event=$window.event||event,delta=event.originalEvent?Math.max(-1,Math.min(1,event.originalEvent.wheelDelta||-event.originalEvent.detail)):Math.max(-1,Math.min(1,event.wheelDelta||-event.detail)),scope.$apply(function(){element[0].scrollLeft-=40*delta}),event.returnValue=!1,event.preventDefault&&event.preventDefault()})}}},angular.module("qsHub").directive("mouseScrollHorizontal",["$swipe","$window",App.directives.mouseScrollHorizontal])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.displayFiltering=function($timeout){return{restrict:"E",scope:{columns:"=",active:"=",callback:"&"},templateUrl:"/scripts/shared/displayFiltering/displayFilteringView.html",link:function(scope,element,attrs){element.find(".dropdown-filter").click(function(event){event.stopPropagation()}),scope.displayFilteringSelectAll=function(){angular.forEach(scope.columns,function(column){column.show=!0})},scope.closeDisplayFiltering=function(event){$timeout(function(){element.click().trigger(event)},0)}}}},angular.module("qsHub").directive("displayFiltering",["$timeout",App.directives.displayFiltering])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.InstitutionSwitchService=function($resource,$q,$log,constants){var service={};return service.getInstitutionSearchModel=function(){return $resource(constants.api.institutions.url+"/v1/list/search/:searchPhrase?sorting[coreId]=asc",null,{get:{cancellable:!0}})},service.getClientInstitutionsModel=function(){return $resource(constants.api.institutions.url+"/v1/list/allowed",null,{get:{cancellable:!0}})},service.searchInstitutions=function(searchPhrase){var deferred=$q.defer();return!searchPhrase||searchPhrase.length<1?deferred.resolve([]):service.getInstitutionSearchModel().get({searchPhrase:searchPhrase},function(data){constants.dev&&$log.log("success, got data: ",data),deferred.resolve(data.results),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve([]),deferred=null}),deferred.promise},service.getClientInstitutions=function(){return service.getClientInstitutionsModel().get().$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.results},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service},angular.module("qsHub").service("InstitutionSwitchService",["$resource","$q","$log","constants",App.services.InstitutionSwitchService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.LoginService=function(constants,$location){var service={};return service.allowLoginAs=function(institution){return!(!(institution&&institution.active&&institution.typeId)||institution.typeId!==constants.typeId.topLevelInstitutionId&&institution.typeId!==constants.typeId.clientDepartmentId&&institution.typeId!==constants.typeId.advancedProgramId&&institution.typeId!==constants.typeId.internalId)},service.getTuProfilesRedirect=function(parameters){$location.path(constants.defaultClientPage).search(parameters)},service},angular.module("qsHub").service("LoginService",["constants","$location",App.services.LoginService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Url=function(){var service={},youtubeIdPattern=/^(?:https?:\/\/)?(?:www\.)?youtube\.com\/watch\?(?=.*v=((\w|-){11}))(?:\S+)?$/,youtubePattern=/^(?:https?:\/\/)?(?:www\.)?youtube\.com\/watch\?v=([A-Za-z0-9\-_]){11}$|(\&t=\d+s)$/,pattern=/^((?:http|ftp)s?:\/\/)(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+(?:[A-Z]{2,6}\.?|[A-Z0-9-]{2,}\.?)|localhost|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(?::\d+)?(?:\/?|[\/?]\S+)$/i;return service.prependHttp=function(url){return url&&url.length&&!/^(f|ht)tps?:\/\//i.test(url)&&(url="http://"+url),url},service.extractYoutubeIdFromUrl=function(url){var match=url.match(youtubeIdPattern);if(match&&11===match[1].length)return match[1]},service.getPattern=function(){return pattern},service.getYoutubePattern=function(){return youtubePattern},service},angular.module("qsHub").service("UrlService",[App.services.Url])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Text=function(){var service={};return service.countWords=function(text){return text&&text.length>0?(text=text.replace(/<(?:.|\n)*?>/gm,"").replace(/&amp;nbsp;/g,"").replace(/&nbsp;/g,"").trim(),text.length?text.split(/\s+/).length:0):0},service.cleanHtmlTags=function(text){return text&&text.length>0&&0!==service.countWords(text)?text.replace(/<[^>]+>/gm,"").trim():[]},service},angular.module("qsHub").service("TextService",[App.services.Text])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Object=function(){var service={};return service.set=function(obj,prop,value){if(void 0===obj||void 0===prop||void 0===value)return!1;var index=prop.indexOf(".");if(index>-1)return service.set(obj[prop.substring(0,index)],prop.substr(index+1),value);obj[prop]=value},service},angular.module("qsHub").service("ObjectService",[App.services.Object])}(window.angular),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Time=function(){var service={};return service.now=function(unix){return unix=void 0!==unix&&unix,unix?parseInt(moment().format("x")):moment()},service.nowUnix=function(){return service.now(!0)},service.add=function(number,unit){return moment().add(number,unit)},service.formatInUnix=function(date){return moment(date,"x")},service.getInUnix=function(date){return parseInt(date.format("x"))},service.isValid=function(date){return moment(date,"x").isValid()},service.getMiliSeconds=function(momentObject){return momentObject.format("x")},service},angular.module("qsHub").service("TimeService",[App.services.Time])}(window.angular,window.moment),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{filters:{}})).filters.mDate=function(constants,$filter){return function(input){return input?$filter("date")(input,"mediumDate"):""}},angular.module("qsHub").filter("mDate",["constants","$filter",App.filters.mDate])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Object=function(){var service={};return service.isTmViewingEnabled=function(institution){return!!(angular.isDefined(institution)&&institution&&institution.enabled&&institution.enabled.tm&&institution.hasOwnProperty("nids")&&null!==institution.nids&&institution.nids.hasOwnProperty("tm")&&institution.nids.tm)},service},angular.module("qsHub").service("InstitutionService",[App.services.Object])}(window.angular),function(angular){"use strict";var App=App||{};App.handleMain=function(version,$scope,$state,$location,$localStorage,constants,InstitutionsService,InstitutionSwitchService,AuthenticationService,WatchService,WebSocketsService,InstitutionFactory,TuProfileFactory,UserFactory,SharedProfileFactory,AppUpdateMessageFactory,ModalService,AuthInterceptor){var controller=this;controller.handles=UserFactory.getHandles(),$scope.version=version,$scope.institution={selected:{name:InstitutionFactory.getDisplayName(),coreId:InstitutionFactory.getCoreId()}},$scope.institutionsDropdownList=null,$scope.email=null,$scope.profileLogo=UserFactory.getProfileLogo(),$scope.searchInstitutions=function(searchPhrase){$scope.searchInProgress=!0,InstitutionSwitchService.searchInstitutions(searchPhrase).then(function(results){$scope.institutionsDropdownList=results,$scope.searchInProgress=!1})},$scope.handleSearchInstitutionClick=function(institution){if(!institution||!institution.coreId)return!1;$state.$current.includes.staff?$location.path(constants.defaultClientPage).search({coreId:institution.coreId}):$location.path($location.path()).search({coreId:institution.coreId})},$scope.handleGoToParentInstitution=function(){if(!$scope.parentCoreId)return!1;$location.path(constants.defaultClientPage).search({coreId:$scope.parentCoreId})},controller.userHasAccessTo=function(page){var userHasAccessTo=!1;return angular.isDefined($localStorage.currentUser)&&angular.isArray($localStorage.currentUser.info.accessTo)&&$localStorage.currentUser.info.accessTo.length>0&&(userHasAccessTo=-1!==$localStorage.currentUser.info.accessTo.indexOf(page)),angular.equals(UserFactory.getHandles()[$state.current.name],page)&&(userHasAccessTo=!0),userHasAccessTo},controller.isInstitutionAllowed=function(institutionData){return institutionData&&institutionData.typeId?institutionData.typeId===constants.typeId.simpleDepartmentId?($location.path($location.path()).search({coreId:institutionData.parentCoreId}),!1):UserFactory.isClient()&&!UserFactory.isAllowedToLogin($localStorage.currentInstitutionId)?($location.path($location.path()).search({coreId:$localStorage.currentUser.info.primaryInstitution}),!1):!(institutionData.deleted||void 0!==institutionData.active&&!institutionData.active):UserFactory.hasData()&&!UserFactory.isClient()?(controller.resetInstitutionAndSendToQsDashboard(),!1):(AuthenticationService.logout(),InstitutionFactory.setData(null),$location.path("/"),$location.search("coreId",null),$location.replace(),!1)},controller.isAllowed=function(){return UserFactory.isAllowedToLogin($localStorage.currentInstitutionId)},controller.allowParent=function(){var allowedInsitutes=UserFactory.getAllowedInstitutions(),hasAccessTo=!1;if($scope.parentCoreId)return UserFactory.isClient()?allowedInsitutes.forEach(function(item){if(item===$scope.parentCoreId)return hasAccessTo=!0}):hasAccessTo=!0,hasAccessTo},controller.isDisabled=function(){return!1===InstitutionFactory.isActive()&&$state.includes("clients")},controller.noAccess=function(){return!(!UserFactory.isClient()||(void 0===$state.current.name||-1===$state.current.name.indexOf(".tu")||InstitutionFactory.isTuSubscribed())&&(void 0===$state.current.name||-1===$state.current.name.indexOf(".tm")||InstitutionFactory.isTmSubscribed()))||UserFactory.noAccess($state.current.name)},controller.resetInstitutionAndSendToQsDashboard=function(){$localStorage.currentInstitutionId=InstitutionFactory.getDefaultCoreId(),$location.path("/admin/dashboard"),$location.search("coreId",InstitutionFactory.getDefaultCoreId()),$location.replace()},$scope.helpIcon=function(size){var modalOptions={closeButtonText:"Ok",headerText:"Need help?"},modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,size:size,templateUrl:"/scripts/components/modal/helpModal.html"};ModalService.show(modalDefaults,modalOptions)},controller.coreIdWatch=function(newCoreId,oldCoreId){if(AuthInterceptor.hasErrors())return!1;if(-1!==constants.publicPages.indexOf($location.path())||!newCoreId&&!UserFactory.hasData()&&!AuthenticationService.hasUserData())return!1;if(TuProfileFactory.closeSidebars(),SharedProfileFactory.closeSidebars(),!UserFactory.hasData()){if(!AuthenticationService.getUserData())return!(-1===AuthenticationService.getPublicPages().indexOf($location.path()))||$location.path("/");UserFactory.setData(AuthenticationService.getUserData())}$scope.email=UserFactory.getUserName(),$scope.profileLogo=UserFactory.getProfileLogo(),$scope.isClient=UserFactory.isClient(),newCoreId||(newCoreId=$scope.isClient?oldCoreId||($localStorage.currentInstitutionId&&controller.isAllowed()?$localStorage.currentInstitutionId:UserFactory.getPrimaryInstitutionCoreId()):oldCoreId||($localStorage.currentInstitutionId?$localStorage.currentInstitutionId:InstitutionFactory.getDefaultCoreId())),$scope.isClient&&(InstitutionSwitchService.getClientInstitutions().then(function(institutionsList){$scope.institutionsDropdownList=institutionsList}),-1===$localStorage.currentUser.info.institutions.indexOf(parseInt(newCoreId))&&(newCoreId=$localStorage.currentUser.info.primaryInstitution)),$localStorage.currentInstitutionId=newCoreId,controller.fullName=UserFactory.getFullName(),controller.profileLogo=function(){return UserFactory.getProfileLogo()},InstitutionsService.getInstitutionData(newCoreId).then(function(data){var institutionData=data&&data.results?data.results[0]:null;if(institutionData){controller.isInstitutionAllowed(institutionData),InstitutionFactory.setData(institutionData);var displayName=InstitutionFactory.getDisplayName();UserFactory.isClient()||(displayName=displayName+" ["+InstitutionFactory.getCoreId()+"]"),institutionData&&institutionData.parentName?$scope.institution.selected={name:displayName,coreId:InstitutionFactory.getCoreId(),parentInstitutionName:institutionData.parentName}:$scope.institution.selected={name:displayName,coreId:InstitutionFactory.getCoreId()},$scope.parentCoreId=InstitutionFactory.getParentCoreId()}})},controller.releaseVersionWatch=function(releaseVersion){AppUpdateMessageFactory.setVisible(version<releaseVersion)},controller.initWatches=function(){WatchService.create($scope,function(){return $location.search().coreId},controller.coreIdWatch),WebSocketsService.subscribe("release","version",controller.releaseVersionWatch),WatchService.create($scope,UserFactory.getFullName,function(fullName){fullName&&(controller.fullName=fullName)}),WatchService.create($scope,UserFactory.getProfileLogo,function(profileLogo){profileLogo&&($scope.profileLogo=profileLogo)})},controller.init=function(){controller.initWatches()},controller.init()},angular.module("qsHub").controller("MainController",["version","$scope","$state","$location","$localStorage","constants","InstitutionsService","InstitutionSwitchService","AuthenticationService","WatchService","WebSocketsService","InstitutionFactory","TuProfileFactory","UserFactory","SharedProfileFactory","AppUpdateMessageFactory","ModalService","authInterceptor",App.handleMain])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.Login=function($rootScope,$scope,$location,$localStorage,$state,$window,constants,AuthenticationService,PasswordService,UserFactory,InstitutionFactory,NotifierFactory,authInterceptor,InstitutionsListService){var controller=this;$scope.forms={},$scope.credentials={},$scope.forgottenPassword={},$scope.showForgotPassword=!1,$scope.showResetPassword=!1,$scope.showResetPasswordConfirmation=!1,$scope.showAfterResetPasswordConfirmation=!1,$scope.loginInProgress=!1,$scope.animate=!1,controller.getPasswordValidator=function(){return[{name:"Minimum 8 characters",status:!1},{name:"Maximum 32 characters",status:!1},{name:"Lowercase letter (a-z)",status:!1},{name:"Uppercase letter (A-Z)",status:!1},{name:"Number (0-9)",status:!1},{name:"Special characters",status:!1},{name:"Both passwords match",status:!1}]},controller.isPasswordValid=function(){var result=!0;return angular.forEach($scope.validationItems,function(item){result&&!item.status&&(result=!1)}),result},controller.errors={missingRequired:"Username and password are required",invalidUsername:"Please enter a valid username",incorrectCredentials:"Username or password is incorrect",accountNotComplete:"Your account setup is not completed"},"forgot-password"===$state.current.data.page&&($scope.showResetPassword=!1,$scope.showForgotPassword=!0,$scope.showResetPasswordConfirmation=!1,$scope.showAfterResetPasswordConfirmation=!1),"reset-password"===$state.current.data.page&&($scope.showResetPassword=!0,$scope.showForgotPassword=!1,$scope.showResetPasswordConfirmation=!1,$scope.showAfterResetPasswordConfirmation=!1,$scope.validationItems=controller.getPasswordValidator(),$scope.password=null,$scope.repeatPassword=null),$scope.validatePassword=function(){if($scope.showResetPassword){$scope.validationItems=controller.getPasswordValidator();null!==$scope.forms.resetPasswordForm.password.$viewValue&&$scope.forms.resetPasswordForm.password.$viewValue.length>7&&($scope.validationItems[0].status=!0),null!==$scope.forms.resetPasswordForm.password.$viewValue&&$scope.forms.resetPasswordForm.password.$viewValue.length<33&&$scope.forms.resetPasswordForm.password.$viewValue.length>0&&($scope.validationItems[1].status=!0),new RegExp(/(?=.*?[a-z])/).test($scope.forms.resetPasswordForm.password.$viewValue)&&($scope.validationItems[2].status=!0),new RegExp(/(?=.*?[A-Z])/).test($scope.forms.resetPasswordForm.password.$viewValue)&&($scope.validationItems[3].status=!0),new RegExp(/(?=.*?[0-9])/).test($scope.forms.resetPasswordForm.password.$viewValue)&&($scope.validationItems[4].status=!0),new RegExp(/(?=.*?[\s\!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\:\;<\=\>\?\@\[\\\]\^\_\`\{\|\}\~\£\¬\€])/).test($scope.forms.resetPasswordForm.password.$viewValue)&&($scope.validationItems[5].status=!0),angular.isDefined($scope.forms.resetPasswordForm.password.$viewValue)&&angular.isDefined($scope.forms.resetPasswordForm.repeatPassword.$viewValue)&&angular.equals($scope.forms.resetPasswordForm.password.$viewValue,$scope.forms.resetPasswordForm.repeatPassword.$viewValue)&&$scope.forms.resetPasswordForm.password.$viewValue.length>0&&$scope.forms.resetPasswordForm.repeatPassword.$viewValue.length>0&&($scope.validationItems[6].status=!0)}},$scope.handleForgotPasswordClick=function(){$scope.showResetPasswordConfirmation=!1,$scope.resetSubmitInProgress=!1,$scope.email=null,$scope.showForgotPassword=!$scope.showForgotPassword,$scope.showResetPassword?($scope.showForgotPassword=!1,$scope.showResetPassword=!1,$state.go("logout")):($scope.showForgotPassword=!$scope.showForgotPassword,$scope.showForgotPassword?$state.go("forgot-password"):$state.go("logout"))},controller.showError=function(errorMessage){$scope.animate=!0,$scope.error=errorMessage,setTimeout(function(){$scope.animate=!1},1e3)},$scope.resetErrors=function(){$scope.error=!1},$scope.handleLogin=function(){if($scope.forms.loginForm.$setSubmitted(),$scope.loginInProgress||!$scope.forms.loginForm||!$scope.forms.loginForm.$valid){var error=$scope.forms.loginForm.$error.email?controller.errors.invalidUsername:controller.errors.missingRequired;return controller.showError(error),!1}$scope.loginInProgress=!0,$scope.animate=!1,AuthenticationService.login($scope.credentials.username,$scope.credentials.password).then(controller.loginCallback)},controller.loginCallback=function(response){if(angular.equals(response,!0)){var redirectUrl=$location.search().url,coreId=null;if(UserFactory.isClient())coreId=UserFactory.getPrimaryInstitutionCoreId(),!angular.isDefined(redirectUrl)&&UserFactory.hasAccessToInstitutionDetails()?redirectUrl=constants.defaultClientPage:angular.isDefined(redirectUrl)&&-1===redirectUrl.indexOf("profiles")&&InstitutionsListService.getInstitution(coreId).then(function(response){var allowState=UserFactory.getFirstAllowedState(response.subscriptions);return angular.equals("/",allowState)?($scope.animate=!1,$scope.loginInProgress=!1,controller.showError(controller.errors.accountNotComplete),!1):(-1===allowState.indexOf("statistics")?$state.go(allowState):$window.location=constants.urls.core+"/statistics",!0)}),UserFactory.hasAccess()||($scope.loginInProgress=!1,redirectUrl="/",controller.showError("Your account setup is not completed"));else if(coreId=$localStorage.currentInstitutionId?$localStorage.currentInstitutionId:InstitutionFactory.getDefaultCoreId(),redirectUrl){var urlStates=$state.get().map(function(state){var result={};return $state.href(state.name)&&!state.abstract?result[$state.href(state.name).replace("#","")]=state.name:result=null,result}).filter(function(e){return e}),resultUrlStates={},keyResult="";angular.forEach(urlStates,function(value,key){keyResult=Object.keys(value)[0],resultUrlStates[keyResult]=value[keyResult]}),controller.userHasAccessTo(UserFactory.getHandles()[resultUrlStates[redirectUrl]])?$location.url(redirectUrl):redirectUrl="/admin/dashboard"}else redirectUrl="/admin/dashboard";redirectUrl=redirectUrl||constants.defaultClientPage,redirectUrl=decodeURIComponent(redirectUrl),$location.path(redirectUrl).search({coreId:coreId})}else{$scope.animate=!0,$scope.error="Username or password is incorrect",$scope.loginInProgress=!1;var displayMessage=controller.errors.invalidUsername;response.hasOwnProperty("message")&&(displayMessage=response.message),controller.showError(displayMessage)}},controller.userHasAccessTo=function(page){var userHasAccessTo=!1;return angular.isDefined($localStorage.currentUser)&&angular.isArray($localStorage.currentUser.info.accessTo)&&$localStorage.currentUser.info.accessTo.length>0&&(userHasAccessTo=-1!==$localStorage.currentUser.info.accessTo.indexOf(page)),angular.equals(UserFactory.getHandles()[$state.current.name],page)&&(userHasAccessTo=!0),userHasAccessTo},$scope.handleResetPasswordSubmitClick=function(){if($scope.forgottenPasswordError=!1,$scope.resetSubmitInProgress||!$scope.forms.forgotPasswordForm||!$scope.forms.forgotPasswordForm.$valid)return!1;$scope.resetSubmitInProgress=!0,$scope.animate=!1,PasswordService.create($scope.forgottenPassword.email).then(controller.resetPasswordCallback)},controller.resetPasswordCallback=function(response){var responseObject={status:!1,message:"Request failed, please try again"};response&&response.hasOwnProperty("status")&&(responseObject.status=response.status,response.status||(responseObject.message=response.message)),$scope.resetSubmitInProgress=!1,response.status?($scope.showResetPasswordConfirmation=!0,$scope.animate=!1,$scope.forgottenPasswordError=!1):($scope.animate=!0,$scope.forgottenPasswordError=!0,$scope.forgottenPasswordErrorMessage=responseObject.message)},controller.updateResetCallback=function(response){$scope.resetSubmitInProgress=!1,response&&(NotifierFactory.show("success","New Password Saved","Password Reset"),AuthenticationService.login(response.email,controller.loginPassword).then(controller.loginCallback))},$scope.handleResetSubmitPasswordSubmitClick=function(){return!($scope.resetSubmitInProgress||!$scope.forms.resetPasswordForm||!$scope.forms.resetPasswordForm.$valid)&&(!!controller.isPasswordValid()&&($scope.resetSubmitInProgress=!0,controller.loginPassword=$scope.forms.resetPasswordForm.password.$modelValue,void PasswordService.update($scope.requestId,controller.loginPassword).then(controller.updateResetCallback)))},$scope.toggleForgottenPasswordForm=function(){$scope.forgottenPassword.email="",$scope.showResetPasswordConfirmation=!1,$scope.showForgotPassword=!$scope.showForgotPassword,$scope.forgottenPasswordError=!1,$scope.animate=!1,$scope.forms.forgotPasswordForm.$setPristine()},controller.destruct=function(){$location.path("/")},controller.init=function(){AuthenticationService.logout(),AuthenticationService.setXLocalStorageLogout(),InstitutionFactory.setData(null),$rootScope.$on(constants.events.logout,controller.destruct)},controller.init()},angular.module("qsHub").controller("LoginController",["$rootScope","$scope","$location","$localStorage","$state","$window","constants","AuthenticationService","PasswordService","UserFactory","InstitutionFactory","NotifierFactory","authInterceptor","InstitutionsListService",App.controllers.Login])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.Sidebar=function($window,constants,UserFactory){var controller=this;controller.coreUrl=constants.urls.core,controller.hasTuProgramsOverviewAccess=function(){return UserFactory.hasTuProgramsOverviewAccess()},controller.hasDepartmentsOverviewAccess=function(){return UserFactory.hasDepartmentsOverviewAccess()},controller.getCoreFlag=function(){return $window.localStorage[constants.xStorage.keys.sendToSession]?"true"===$window.localStorage[constants.xStorage.keys.sendToSession]?constants.coreFlag.value:"":constants.coreFlag.value}},angular.module("qsHub").controller("SidebarController",["$window","constants","UserFactory",App.controllers.Sidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.usersList=function(){var service={};return service.getContactTypeNameByHandle=function(handle,contactTypesList){var contactTypeName="";return contactTypesList&&angular.forEach(contactTypesList,function(contactType){contactType.handle&&contactType.name&&contactType.handle===handle&&(contactTypeName=contactType.name)}),contactTypeName},service.formatSections=function(sectionsList){var firstElement,flatArray=[];return angular.forEach(sectionsList,function(section){firstElement=!0,angular.forEach(section.pages,function(page){flatArray.push({sectionName:firstElement?section.name:null,pageName:page.name,pageHandle:section.handle+"."+page.handle,disabled:"dashboard"===page.handle,assigned:"dashboard"===page.handle}),firstElement=!1})}),flatArray},service.updateSectionsAndPages=function(userData,roleList){if("undefined"!==roleList&&userData.roles&&"undefined"!==userData.roles.custom&&!userData.roles.custom)for(var userRole in userData.roles)if(userData.roles[userRole])for(var role in roleList)if(roleList[role]){if(roleList[role].roleHandle!==userRole)continue;for(var section in roleList[role].sections)roleList[role].sections[section]&&(userData.accessTo[roleList[role].sections[section]]=!0)}return userData},service.updateRolesWithAll=function(userData,roleList){var childrenRolesHandles=null,groupHandle=null;for(var userRole in userData.roles)if(-1!==userRole.indexOf("all")&&userData.roles[userRole]&&(groupHandle=userRole.replace(".all",""),childrenRolesHandles=service.getChildrenRoles(groupHandle,roleList)))for(var childrenRoleHandle in childrenRolesHandles)childrenRoleHandle&&(userData.roles[childrenRolesHandles[childrenRoleHandle]]=!0);return userData},service.getChildrenRoles=function(groupHandle,rolesList){var childrenRoles=[];return angular.forEach(rolesList,function(role){if(role.all||role.groupHandle!==groupHandle)return!1;childrenRoles.push(role.roleHandle)}),childrenRoles},service.getParentRoleHandle=function(groupHandle,rolesList){var parentRoleHandle=null;return rolesList&&angular.forEach(rolesList,function(role){if(!role.all||role.groupHandle!==groupHandle)return!1;parentRoleHandle=role.roleHandle}),parentRoleHandle},service},angular.module("qsHub").service("UsersListService",[App.services.usersList])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.userTypes=function(){var service={userTypes:[{uniqueId:1,name:"Contact",disabled:!0},{uniqueId:2,name:"User",disabled:!1}]};return service.getUserTypes=function(){return service.userTypes},service},angular.module("qsHub").service("UserTypesService",[App.services.userTypes])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.Password=function($scope,PasswordService,WatchService){var controller=this;controller.defaultConfig={resetOnLogin:!0,label:null,labelClass:null,blockClass:"row"},PasswordService.setHasErrors(!0),controller.isValid=function(){return PasswordService.isPasswordValid(controller.user.password)},controller.isRequired=function(){return!(controller.user&&controller.user.id||controller.user.coreId)},controller.handleChanges=function(){controller.isValid(),controller.user.password=controller.user.password.split(" ").join(""),controller.validators=PasswordService.validatePassword(controller.user.password),PasswordService.setHasErrors(!!controller.user.password.length)},controller.initValidators=function(){var validators=PasswordService.getPasswordValidator();controller.validators=validators.splice(0,validators.length-1)},controller.userWatch=function(){controller.initValidators()},controller.initWatches=function(){WatchService.create($scope,function(){return controller.user},controller.userWatch),WatchService.create($scope,function(){return controller.resetValidators},controller.userWatch),WatchService.create($scope,PasswordService.getHasErrors,function(newValue){newValue=!controller.isRequired()||newValue,controller.isPassLen=newValue})},controller.$onInit=function(){controller.initValidators(),controller.initWatches(),controller.cnf=angular.extend({},controller.defaultConfig,controller.config)}},angular.module("qsHub").controller("PasswordController",["$scope","PasswordService","WatchService",App.controllers.Password])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{components:{}})).components.userPassword={templateUrl:"/scripts/components/users/shared/password/passwordView.html",bindings:{user:"=",config:"<",resetValidators:"<"},controller:"PasswordController"},angular.module("qsHub").component("userPassword",App.components.userPassword)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.Profile=function($scope,WatchService,UserFactory,AuthenticationService){UserFactory.hasData()||UserFactory.setData(AuthenticationService.getUserData()),WatchService.create($scope,UserFactory.isPasswordReset,function(isPasswordReset){$scope.isPasswordReset=isPasswordReset})},angular.module("qsHub").controller("ProfileController",["$scope","WatchService","UserFactory","AuthenticationService",App.controllers.Profile])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.profilePassword=function($scope,constants,ProfilePasswordService,AuthenticationService,PasswordService,NotifierFactory,UserFactory){var controller=this;controller.devMode=constants.dev,controller.forms={},controller.passwordFieldsVisible=!1,controller.updateInProgress=!1,controller.password=null,controller.confirmPassword=null,controller.submitted=!1,$scope.user=angular.extend({},UserFactory.getData()),controller.getForm=function(){return controller.forms.password},controller.togglePasswordFields=function(){$scope.user.password=null,controller.password=null,controller.confirmPassword=null,controller.passwordFieldsVisible=!controller.passwordFieldsVisible},controller.isPasswordFieldsVisible=function(){return controller.passwordFieldsVisible},controller.isDisabled=function(){return controller.updateInProgress},controller.update=function(){if(controller.submitted=!0,controller.updateInProgress||!PasswordService.isPasswordValid($scope.user.password))return!1;controller.updateInProgress=!0,ProfilePasswordService.update($scope.user.password).then(controller.updatePasswordCallback)},controller.updatePasswordCallback=function(success){controller.updateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Updated successfully!":"Update failed!","Password"),success&&(UserFactory.clearPasswordReset(),AuthenticationService.setUserData(UserFactory.getData()),controller.passwordFieldsVisible=!1)}},angular.module("qsHub").controller("ProfilePasswordController",["$scope","constants","ProfilePasswordService","AuthenticationService","PasswordService","NotifierFactory","UserFactory",App.controllers.profilePassword])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.ProfilePasswordService=function($resource,$log,constants){var service={};return service.getUpdateModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/user-profile",null,{update:{method:"PATCH"}})},service.update=function(password){var dataToUpdate={password:password};return service.getUpdateModel().update(dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("ProfilePasswordService",["$resource","$log","constants",App.services.ProfilePasswordService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.ProfilePersonalDetails=function($scope,constants,ProfilePersonalDetailsService,AuthenticationService,UserFactory,NotifierFactory,PasswordService){var controller=this;controller.devMode=constants.dev,controller.submitted=!1,controller.updateInProgress=!1,controller.forms={},$scope.user=angular.extend({},UserFactory.getData()),controller.getForm=function(){return controller.forms.personalDetails},controller.isValidFirstName=function(){return PasswordService.isValidFirstName(controller.getForm(),controller.user,"firstName")},controller.isValidLastName=function(){return PasswordService.isValidLastName(controller.getForm(),controller.user,"lastName")},controller.isValid=function(){return controller.isValidFirstName()&&controller.isValidLastName()},controller.setValid=function(fieldName){return controller.submitted=!1,PasswordService.setValid(controller.getForm(),fieldName)},controller.isDisabled=function(){return controller.updateInProgress},controller.update=function(){if(controller.submitted=!0,controller.getForm().$setDirty(),controller.getForm().firstName.$setDirty(),controller.getForm().lastName.$setDirty(),controller.updateInProgress||!controller.isValid())return!1;controller.updateInProgress=!0,ProfilePersonalDetailsService.update(controller.user,!0).then(controller.updateDetailsCallback)},controller.updateDetailsCallback=function(userObject){controller.updateInProgress=!1,NotifierFactory.show(userObject?"success":"error",userObject?"Updated successfully!":"Update failed!","Personal Details"),userObject&&(UserFactory.setFirstName(controller.user.firstName),$scope.user.firstName=controller.user.firstName,UserFactory.setLastName(controller.user.lastName),$scope.user.lastName=controller.user.lastName,UserFactory.setFullName(userObject.fullName),$scope.user.fullName=controller.user.fullName=userObject.fullName,UserFactory.setPosition(controller.user.position),$scope.user.position=controller.user.position,UserFactory.setTitle(controller.user.title),$scope.user.title=controller.user.title,controller.user.isClient&&(UserFactory.setPhone(controller.user.phone),$scope.user.phone=controller.user.phone),AuthenticationService.setUserData(UserFactory.getData()))},controller.copyScopeUserToControllerUser=function(){controller.user=angular.copy($scope.user)},controller.copyScopeUserToControllerUser(),controller.cancel=function(){controller.copyScopeUserToControllerUser()}},angular.module("qsHub").controller("ProfilePersonalDetailsController",["$scope","constants","ProfilePersonalDetailsService","AuthenticationService","UserFactory","NotifierFactory","PasswordService",App.controllers.ProfilePersonalDetails])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.profilePersonalDetailsService=function($resource,$q,$log,constants){var service={};return service.getUpdateModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/user-profile",null,{update:{method:"PATCH"}})},service.update=function(user){var UpdateModel=service.getUpdateModel(),dataToUpdate={title:user.title,firstName:user.firstName,lastName:user.lastName,position:user.position};return user.isClient&&(dataToUpdate.phone=user.phone),UpdateModel.update(dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.user},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("ProfilePersonalDetailsService",["$resource","$q","$log","constants",App.services.profilePersonalDetailsService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.profileLogo=function($scope,constants,ProfileLogoService,UserFactory,NotifierFactory,AuthenticationService,$timeout){var controller=this;controller.devMode=constants.dev,$scope.forms={},$scope.gravatar=!1,$scope.user=UserFactory.getData(),angular.isDefined($scope.user)&&null!==$scope.user&&!$scope.user.profileLogo&&($scope.gravatar=!0,$scope.user.profileLogo=""),$scope.uploadEnabled=!0,controller.acceptedFiles="image/jpeg, image/pjpeg",$scope.generalSubmitDisabled=!1,$scope.displayRemoveLink=!1,$scope.profilePic=null,$scope.handleRemoveLogoClick=function(){$scope.profile[logoType].path=null},controller.updateDetailsCallback=function(success){$scope.updateDetailsInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Updated successfully!":"Update failed!","User Details"),success&&UserFactory.announceNameChanges($scope.user)},controller.handleLogoRemoved=function(){$scope.uploadEnabled=!0,$scope.generalSubmitDisabled=!1,$scope.displayRemoveLink=!1},$scope.handleGeneralSubmit=function(){if($scope.displaySpinner=!0,!$scope.forms.imageForm||!$scope.forms.imageForm.$valid)return!1;$scope.generalSubmitDisabled=!0,ProfileLogoService.updateProfilePicture($scope.profilePic).then(function(response){NotifierFactory.show(response.status?"success":"error",response.status?"Saved successfully!":"Saving failed!","User Profile image"),$scope.displaySpinner=!1,response.status?($scope.user.profileLogo=response.url,$scope.gravatar=!1,UserFactory.setProfileLogo($scope.user.profileLogo)):""!==$scope.user.profileLogo&&$scope.user.profileLogo&&void 0!==$scope.user.profileLogo||($scope.user.profileLogo="",$scope.gravatar=!0),$scope.generalSubmitDisabled=!1,$scope.removeUploaderImage()})},controller.removeDropZoneUploadedImage=function(){controller.dropZoneImageInstance&&controller.dropZoneImageInstance.file&&controller.dropZoneImageInstance.file.length>1?controller.dropZoneImageInstance.removeFile(controller.dropZoneImageInstance.files[0]):($scope.gravatar=!1,controller.dropZoneImageInstance.removeAllFiles(),$scope.displayRemoveLink=!1)},$scope.removeUploaderImage=function(){$scope.generalSubmitDisabled?NotifierFactory.show("info","Image upload in progress, please wait.",""):$timeout(function(){controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved()})},controller.handleInit=function(){this.isValid=!0,this.globalAccept=!1,this.localAccept=!1},controller.handleAccept=function(file,done){file.acceptFile=function(){$scope.uploadEnabled=!1,$scope.displayRemoveLink=!$scope.displayRemoveLink,$scope.$apply(),done()}},controller.handleImageUploaded=function(file,response){$scope.$apply(function(){$scope.generalSubmitDisabled=!1,$scope.profilePic=response.path,$scope.displayRemoveLink=!0})},controller.handleImageUploadError=function(error){var errorMessage=void 0!==error.xhr&&JSON.parse(error.xhr.responseText);errorMessage=errorMessage?errorMessage.message:"Image upload failed!",this.files.length>0&&this.removeFile(this.files[0]),$scope.$apply(function(){$scope.displayRemoveLink=!1,$scope.generalSubmitDisabled=!1,NotifierFactory.show("error",errorMessage,"Profile image")})},controller.handleImageAdded=function(file){$scope.displayRemoveLink=!0,file.rejectExtension=function(){NotifierFactory.show("error","Allowed types: "+controller.acceptedFiles,"File type is unacceptable."),controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved()},1===this.files.length&&(this.globalAccept=!1,this.localAccept=!1),this.globalAccept||this.localAccept||1!==this.files.length||(this.isValid=!0,this.localAccept=!0),this.files.length>1&&this.globalAccept&&(this.isValid=!1,this.globalAccept=!0,this.removeFile(this.files[1]),$scope.$apply()),this.isValid=!0,-1===controller.acceptedFiles.split(",").indexOf(file.type)&&(this.isValid=!1,file.rejectExtension()),this.isValid&&($scope.generalSubmitDisabled=!0,$scope.uploadEnabled=!1)},controller.handleThumbnail=function(file){file.rejectDimensions=function(globalAccept){(globalAccept=void 0===globalAccept||globalAccept)||(NotifierFactory.show("error","Image dimension is incorrect.","Please upload 100px by 100px image."),controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved(),$scope.$apply())},file.rejectSize=function(globalAccept){(globalAccept=void 0===globalAccept||globalAccept)||(NotifierFactory.show("error","File size has exceeded the 1 MB limit.","Please upload again"),$scope.$apply())},(file.height<100||file.width<100)&&(this.isValid=!1,file.rejectDimensions(this.globalAccept)),file.size>4e5&&(this.isValid=!1,file.rejectSize(this.globalAccept)),this.isValid&&!this.globalAccept&&this.localAccept?(this.globalAccept=!0,file.acceptFile(this.localAccept)):($scope.generalSubmitDisabled=!1,this.files.length>1&&this.globalAccept&&this.removeFile(this.files[1])),!1===this.isValid&&(this.isValid=!0)},controller.imageConfig={dropzone:{url:ProfileLogoService.getUrl(),maxFilesize:.4,maxFiles:1,uploadMultiple:0,parallelUploads:1,autoProcessQueue:!0,addRemoveLinks:!1,acceptedFiles:controller.acceptedFiles,previewsContainer:".dropzone-previews",headers:AuthenticationService.getAuthorizationHeader(),thumbnailWidth:100,thumbnailHeight:100,clickable:".upload-button",paramName:"file",init:controller.handleInit,accept:controller.handleAccept},eventHandlers:{success:controller.handleImageUploaded,addedfile:controller.handleImageAdded,thumbnail:controller.handleThumbnail,error:controller.handleImageUploadError}},controller.initWatches=function(){$scope.$watch(UserFactory.getData,function(data){data&&($scope.user=data)})},controller.init=function(){controller.initWatches()},controller.init()},angular.module("qsHub").controller("ProfileLogoController",["$scope","constants","ProfileLogoService","UserFactory","NotifierFactory","AuthenticationService","$timeout",App.controllers.profileLogo])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.ProfileLogo=function($resource,$q,$log,constants){var service={};return service.getUrl=function(){return constants.api.usersPermissions.url+"/v1/user-profile-logo"},service.getUpdateModel=function(){return $resource(service.getUrl(),null,{update:{method:"PATCH"}})},service.updateProfilePicture=function(logoUrl){return service.getUpdateModel().update({userImage:logoUrl}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),{status:data.$resolved,url:data.url}},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("ProfileLogoService",["$resource","$q","$log","constants",App.services.ProfileLogo])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{components:{}})).components.appUpdate={templateUrl:"/scripts/shared/appUpdateMessage/appUpdateMessageView.html",controller:"AppUpdateMessageController"},angular.module("qsHub").component("appUpdate",App.components.appUpdate)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.AppUpdate=function(AppUpdateMessageFactory){this.isVisible=function(){return AppUpdateMessageFactory.isVisible()}},angular.module("qsHub").controller("AppUpdateMessageController",["AppUpdateMessageFactory",App.controllers.AppUpdate])}(window.angular),function(angular,airbrakeJs){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.AppUpdateMessage=function(){var visible;return{setVisible:function(isVisible){visible=isVisible||!0},isVisible:function(){return!!visible}}},angular.module("qsHub").factory("AppUpdateMessageFactory",[App.factories.AppUpdateMessage])}(window.angular,window.airbrakeJs),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.qsUsersList=function($scope,$resource,$timeout,constants,uiGridConstants,QsUsersService,UsersListService,NotifierFactory,GridService,PasswordService,WatchService){var controller=this;controller.devMode=constants.dev,controller.grid={},controller.defaultPaginationOptions={page:1,limit:constants.datagrid.contacts.defaultRowsNumber},controller.paginationOptions=GridService.getColumnsFilters(constants.gridNameSpaces.qsUserGridFilters,["lastLoginAtRange"]),controller.columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.qsUserGridVisibility),controller.defaultFilters={lastLoginAtRange:{startDate:null,endDate:null}},$scope.user={},$scope.userBeforeChanges={},$scope.forms={},$scope.filterActive=!0,$scope.isDatagridReloading=!1,$scope.showQsSections=!1,$scope.showClientSections=!1,$scope.activeQsUserListSubTabs=0,$scope.disabledQsUserListSubTabs={personalDetails:!1,permissions:!0},$scope.newUser={},$scope.newUserPanelNotClosed=!1,$scope.filters=controller.defaultFilters,$scope.columnsBeforeHide=[],$scope.visible={},controller.updateInDatagrid=function(item){var totalItems=controller.grid.options.data.length,key=0;for(key;key<totalItems;++key){if(controller.grid.options.data[key].id===item.id)return controller.grid.options.data[key]=angular.copy($scope.userBeforeChanges),!0;$scope.columnsBeforeEdit=null,$scope.filterActive=!0,$scope.newUserPanelNotClosed=!1}return!1},$scope.handleLastLoginAtDateRange=function(event){event.model.startDate&&event.model.endDate&&(controller.grid.options.columnDefs[3].filters[0].term=event.model.startDate.format("x"),controller.grid.options.columnDefs[3].filters[1].term=event.model.endDate.format("x"))},$scope.handleDatagridRowClick=function(user,addUser){if(PasswordService.setHasErrors(!0),$scope.disabledQsUserListSubTabs.permissions=!1,$scope.disabledQsUserListSubTabs.institutions=!1,angular.isDefined(addUser)&&addUser&&($scope.disabledQsUserListSubTabs.permissions=!0),$scope.selectedUserId===user.id)$scope.selectedUserId=0,$scope.showInfoBlock=!1,$scope.filterActive=!0,controller.toggleColumns(!1);else{$scope.selectedUserId=user.id,$scope.showInfoBlock=!0,$scope.filterActive=!1,$scope.user=angular.copy(user),$scope.userBeforeChanges=user,$scope.user=UsersListService.updateRolesWithAll($scope.user,controller.rolesList),$scope.user=UsersListService.updateSectionsAndPages($scope.user,controller.rolesList),controller.rolesBeforeChanges=[];for(var role in user.roles)user.roles[role]&&(controller.rolesBeforeChanges[role]=!0);controller.toggleColumns(!0)}},controller.toggleColumns=function(hide){controller.grid.options&&(hide?(angular.forEach(controller.grid.options.columnDefs,function(column){angular.isDefined(column.visible)&&!0===column.visible&&$scope.columnsBeforeHide.push(column),$scope.visible[column.field]=column.visible}),angular.forEach(controller.grid.options.columnDefs,function(column){column.visible="email"===column.field})):(angular.forEach($scope.columnsBeforeHide,function(column){column.visible=!0}),$scope.columnsBeforeHide=[],$scope.$broadcast(constants.events.closingInstitutionsUsers)),controller.grid.options.enableGridMenu=!hide,controller.grid.options.enableColumnMenus=!hide,controller.grid.options.enableColumnResizing=!hide,controller.grid.options.enablePaginationControls=!hide)},$scope.handleResetClick=function(){$scope.user=angular.copy($scope.userBeforeChanges)},$scope.handleDeactivateClick=function(user){if(!user.id||$scope.deactivateInProgress)return!1;$scope.deactivateInProgress=!0,QsUsersService.deactivate(user.id).then(controller.deactivationCallback)},$scope.handleActivateClick=function(user){if(!user.id||$scope.activateInProgress)return!1;$scope.activateInProgress=!0,QsUsersService.activate(user.id).then(controller.activationCallback)},controller.deactivationCallback=function(success){$scope.user.active=!success,success&&($scope.userBeforeChanges.active=$scope.user.active,controller.updateInDatagrid($scope.user)),$scope.deactivateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Deactivated successfully!":"Deactivation failed!","Deactivation")},controller.activationCallback=function(success){$scope.user.active=!!success,success&&($scope.userBeforeChanges.active=$scope.user.active,controller.updateInDatagrid($scope.user)),$scope.activateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Activated successfully!":"Activation failed!","Activation")},$scope.handleNewUserResponse=function(response){response.hasOwnProperty("insertedId")&&response.insertedId.length>0&&($scope.user.id=response.insertedId,$scope.user.active=!0,angular.copy($scope.user,$scope.userBeforeChanges),$scope.disabledQsUserListSubTabs.permissions=!1,$scope.activeQsUserListSubTabs=1,angular.copy($scope.user,$scope.newUser),controller.reloadDatagrid(),$scope.selectedUserId=$scope.user.id,$scope.newUserPanelNotClosed=!0)},$scope.handlePersonalDetailsSubmit=function(){if($scope.forms.personalDetailsForm.firstname.$setDirty(),$scope.forms.personalDetailsForm.lastname.$setDirty(),$scope.forms.personalDetailsForm.email.$setDirty(),PasswordService.setHasErrors(!(!$scope.user.id&&!$scope.forms.personalDetailsForm.password.$viewValue)),$scope.personalDetailsSubmitInProgress||!$scope.forms.personalDetailsForm||!$scope.forms.personalDetailsForm.$valid||!PasswordService.isValid($scope.forms.personalDetailsForm,$scope.user)||!PasswordService.getHasErrors())return!1;var newUser=void 0===$scope.user.id;if(newUser&&!PasswordService.isPasswordValid($scope.user.password)||!newUser&&void 0!==$scope.user.password&&!PasswordService.isPasswordValid($scope.user.password))return NotifierFactory.show("error","Please set a valid password"),!1;$scope.personalDetailsSubmitInProgress=!0,QsUsersService.savePersonalDetails($scope.user).then(function(response){var message="Personal Details",success=!1;response&&((success=!response.error)?($scope.user.fullname=QsUsersService.getFullName($scope.user),$scope.user.contactTypes?QsUsersService.getContactTypes().then(function(contactTypesList){if(!contactTypesList)return!1;var contactTypeNames=[],contactTypeName=null;angular.forEach($scope.user.contactTypes,function(contactTypeData,handle){if(!contactTypeData.assigned)return!1;contactTypeName=UsersListService.getContactTypeNameByHandle(handle,contactTypesList),contactTypeNames.push(contactTypeName)}),$scope.user.contactTypesAsString=contactTypeNames.join(", "),$scope.handleNewUserResponse(response),$scope.userBeforeChanges=angular.copy($scope.user),controller.updateInDatagrid($scope.user)}):$scope.handleNewUserResponse(response),controller.resetPersonalDetailsForm()):response.hasOwnProperty("message")&&response.message.length>0&&(message=response.message)),success&&(delete $scope.user.password,$scope.userBeforeChanges=angular.copy($scope.user),controller.updateInDatagrid($scope.user)),$scope.personalDetailsSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!",message)})},$scope.handlePermissionsSubmit=function(){$scope.permissionsSubmitInProgress=!0,QsUsersService.savePermissions($scope.user).then(function(success){$scope.permissionsSubmitInProgress=!1,$scope.userBeforeChanges=angular.copy($scope.user),controller.updateInDatagrid($scope.user),controller.reloadDatagrid(),NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Permissions")})},$scope.handlePrimaryContactTypeClick=function(handle){$scope.user.contactTypes[handle].assigned=!0},$scope.handleAssignedContactTypeClick=function(handle){!1===$scope.user.contactTypes[handle].assigned&&($scope.user.contactTypes[handle].primary=!1)},$scope.handleRoleClick=function(clickedRole){if(!$scope.user.roles.custom&&void 0!==clickedRole){$scope.user.accessTo={"admin_dashboard.dashboard":!0};var clickedRoleAssigned=$scope.user.roles[clickedRole.roleHandle],parentRoleClicked=clickedRole.all,globalAdminRoleClicked="global_admin.global_admin"===clickedRole.roleHandle,childrenRolesHandles=UsersListService.getChildrenRoles(clickedRole.groupHandle,controller.rolesList),parentRoleHandle=null;if(globalAdminRoleClicked&&clickedRoleAssigned)angular.forEach(controller.rolesList,function(role){if("custom"===role.roleHandle)return!1;angular.forEach(role.sections,function(section){$scope.user.accessTo[section]=!0})});else{if(!globalAdminRoleClicked)if(clickedRoleAssigned){if(parentRoleClicked)(childrenRolesHandles=UsersListService.getChildrenRoles(clickedRole.groupHandle,controller.rolesList))&&angular.forEach(childrenRolesHandles,function(childrenRoleHandle){$scope.user.roles[childrenRoleHandle]=!0});else if(childrenRolesHandles){var allDepartments=!0;angular.forEach(childrenRolesHandles,function(childrenRoleHandle){!1!==$scope.user.roles[childrenRoleHandle]&&void 0!==$scope.user.roles[childrenRoleHandle]||(allDepartments=!1)}),allDepartments&&(parentRoleHandle=UsersListService.getParentRoleHandle(clickedRole.groupHandle,controller.rolesList))&&($scope.user.roles[parentRoleHandle]=!0)}}else parentRoleClicked?childrenRolesHandles&&angular.forEach(childrenRolesHandles,function(childrenRoleHandle){$scope.user.roles[childrenRoleHandle]=!1}):(parentRoleHandle=UsersListService.getParentRoleHandle(clickedRole.groupHandle,controller.rolesList))&&($scope.user.roles[parentRoleHandle]=!1);$scope.user=UsersListService.updateSectionsAndPages($scope.user,controller.rolesList)}}},$scope.toggleQsSections=function(){$scope.showQsSections=!$scope.showQsSections},$scope.toggleClientSections=function(){$scope.showClientSections=!$scope.showClientSections},$scope.activateCustomRole=function(){angular.isDefined($scope.user.roles)||($scope.user.roles={custom:!0}),$scope.user.roles={custom:!0}},controller.loadData=function(){QsUsersService.getContactTypes().then(function(contactTypes){controller.contactTypes=contactTypes}),QsUsersService.getRoles().then(function(rolesList){controller.rolesList=rolesList}),QsUsersService.getSections().then(function(sectionsList){controller.qsSectionsList=sectionsList}),QsUsersService.getSections(!0).then(function(sectionsList){controller.clientSectionsList=sectionsList})},$scope.handleColumnClick=function(){var columnsVisibility={};angular.forEach($scope.columns,function(column){columnsVisibility[column.field]=column.show}),QsUsersService.storeColumnsVisibility(columnsVisibility)},controller.loadDatagridColumnsVisibility=function(){var columnsVisibility=QsUsersService.getColumnsVisibility();columnsVisibility&&angular.forEach($scope.columns,function(column){"undefined"!==columnsVisibility[column.field]&&(column.show=!!columnsVisibility[column.field])})},controller.handleGridFiltersChanges=function(){controller.paginationOptions=angular.copy(controller.defaultPaginationOptions);var filterColumn,sortColumn;angular.forEach($scope.gridApi.grid.columns,function(column){filterColumn=column.filters[0].column?column.filters[0].column:column.field,"lastLoginAt"===column.field?void 0!==column.filters&&void 0!==column.filters[0].term&&void 0!==column.filters[1].term?controller.paginationOptions["filter["+filterColumn+"]"]={startDate:column.filters[0].term&&isNaN(column.filters[0].term)?column.filters[0].term.format("x"):column.filters[0].term,endDate:column.filters[1].term&&isNaN(column.filters[1].term)?column.filters[1].term.format("x"):column.filters[1].term}:controller.paginationOptions["filter["+filterColumn+"]"]=null:("contactTypesAsString"===column.field||"contactTypes.handle"===column.field)&&void 0!==column.filters&&"undefined"!==column.filters[0].term&&column.filters[0].term&&column.filters[0].term.value?controller.paginationOptions["filter[contactTypes.handle]"]=column.filters[0].term.value:void 0!==column.filters&&"undefined"!==column.filters[0].term&&(controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term),void 0!==column.sort.direction&&(sortColumn=column.sort.column?column.sort.column:column.field,controller.paginationOptions["sorting["+sortColumn+"]"]=column.sort.direction)}),null===controller.paginationOptions["filter[lastLoginAt]"]&&(controller.paginationOptions["filter[lastLoginAt]"]=controller.defaultFilters.lastLoginAtRange),null===controller.paginationOptions["filter[lastLoginAt]"].startDate&&(controller.paginationOptions["filter[lastLoginAt]"].endDate=null,controller.defaultFilters.lastLoginAtRange={startDate:null,endDate:null}),GridService.storeColumnsFilters(constants.gridNameSpaces.qsUserGridFilters,controller.paginationOptions),angular.isDefined($scope.filterTimeout)&&$timeout.cancel($scope.filterTimeout),$scope.filterTimeout=$timeout(function(){controller.getPage()},500)},controller.getPage=function(){return $scope.isDatagridReloading=!0,QsUsersService.getAllUsers(angular.merge({},controller.paginationOptions,controller.defaultPaginationOptions)).then(function(response){controller.grid.options.totalItems=response.totalMatching,controller.grid.options.data=response.results,controller.grid.options.minRowsToShow=response.totalFiltered,$scope.isDatagridReloading=!1})},controller.reloadDatagrid=function(){controller.getPage()},controller.initDataGrid=function(){controller.grid.options={enableSorting:!0,exporterMenuCsv:!1,enableGridMenu:!0,showGridFooter:!1,selectedItems:$scope.selectedUserId,enableFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,paginationPageSizes:[constants.datagrid.contacts.defaultRowsNumber,50,100],paginationPageSize:constants.datagrid.contacts.defaultRowsNumber,useExternalPagination:!0,useExternalSorting:!0,useExternalFiltering:!0,rowTemplate:"/scripts/components/users/list/institutions/datagrid/rowTemplate.html",columnDefs:[{displayName:"Email",field:"email",cellFilter:"lowercase",visible:!0,filter:{term:GridService.getFilterByField(controller.paginationOptions,"email","")}},{displayName:"Full Name",field:"fullname",visible:GridService.getVisibilityByField(controller.columnsVisibility,"fullname",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"fullname","")}},{displayName:"Contact Types",filter:{type:uiGridConstants.filter.SELECT,selectOptions:[],term:GridService.getFilterByField(controller.paginationOptions,"contactTypes.handle")},field:"contactTypesAsString",maxWidth:130,visible:GridService.getVisibilityByField(controller.columnsVisibility,"contactTypes.handle",!0),filterHeaderTemplate:"/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html"},{displayName:"Last Login",field:"lastLoginAt",filterCellFiltered:!0,filters:[{visible:!0,condition:uiGridConstants.filter.GREATER_THAN},{condition:uiGridConstants.filter.LESS_THAN}],filter:{term:GridService.getFilterByField(controller.paginationOptions,"lastLoginAt",""),applyTextFilter:controller.applyDateFilter("lastLoginAt","")},cellTemplate:"/scripts/shared/ui-grid/templates/dateCellTemplate.html",filterHeaderTemplate:"/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html",visible:GridService.getVisibilityByField(controller.columnsVisibility,"lastLoginAt",!0)}],onRegisterApi:function(gridApi){var columnsVisibilityBeforeChanges=angular.copy(controller.grid.options.columnDefs);$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){$scope.handleDatagridRowClick(row.entity)}),gridApi.core.on.rowsRendered($scope,function(){$scope.isDatagridRendered=!0}),gridApi.core.on.filterChanged($scope,controller.handleGridFiltersChanges),gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),gridApi.pagination.on.paginationChanged($scope,function(newPage,limit){controller.defaultPaginationOptions.page=newPage,controller.defaultPaginationOptions.limit=limit,controller.getPage()}),$scope.gridApi.core.on.sortChanged($scope,controller.handleGridFiltersChanges),GridService.resetExtend(columnsVisibilityBeforeChanges,controller.grid.options.columnDefs,controller.defaultFilters)}};var lastLogin=GridService.getFilterByField(controller.paginationOptions,"lastLoginAt","");null!==lastLogin&&null!==controller.paginationOptions["filter[lastLoginAt]"]&&angular.isDefined(lastLogin)&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"])&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"].startDate)&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"].endDate)&&(controller.grid.options.columnDefs[3].filters[0].term=controller.paginationOptions["filter[lastLoginAt]"].startDate,controller.grid.options.columnDefs[3].filters[1].term=controller.paginationOptions["filter[lastLoginAt]"].endDate),controller.getPage().then(function(){QsUsersService.getContactTypesFilter().then(function(options){var list=[];angular.forEach(options,function(option){list.push({value:option.id,label:option.title})}),controller.grid.options.columnDefs[2].filter.selectOptions=list})})},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.qsUserGridVisibility),reload=!1;columnsVisibility&&$scope.filterActive&&angular.forEach(controller.grid.options.columnDefs,function(column,key){!0===columnsVisibility[column.field]&&!1===column.visible&&(controller.grid.options.columnDefs[key].filter.term=null,controller.paginationOptions["filter["+column.field+"]"]=null,reload=!0,"lastLoginAt"===column.field&&(delete controller.grid.options.columnDefs[key].filters[0].term,controller.defaultFilters.lastLoginAtRange={startDate:null,endDate:null}))}),$scope.filterActive&&controller.saveStateVisibility(),reload&&controller.getPage()},controller.applyDateFilter=function(filterName,defaultValue){var filter=GridService.getFilterByField(controller.paginationOptions,filterName,defaultValue);angular.isDefined(filter)&&null!==filter&&angular.isDefined(filter.startDate)&&angular.isDefined(filter.endDate)&&(null!==filter.startDate&&null!==filter.startDate?controller.defaultFilters.lastLoginAtRange={startDate:parseInt(filter.startDate,10),endDate:parseInt(filter.endDate,10)}:controller.defaultFilters.lastLoginAtRange={startDate:null,endDate:null})},controller.handleAddQsUserClick=function(){var user={accessTo:{"admin_dashboard.dashboard":!0}};user.id=null,$scope.activeQsUserListSubTabs=0,$scope.handleDatagridRowClick(user,!0),controller.resetPersonalDetailsForm()},controller.resetPersonalDetailsForm=function(){$scope.forms.personalDetailsForm&&$scope.forms.personalDetailsForm.$setPristine()},controller.handleEditCloseClick=function(){var user={};user.id=$scope.selectedUserId,$scope.handleDatagridRowClick(user,!0)},controller.convertVisibleColumnsField=function(value){switch(value){case"contactTypesAsString":return"contactTypes.handle"}},controller.isValidFirstName=function(){return PasswordService.isValidFirstName($scope.forms.personalDetailsForm,$scope.user)},controller.isValidLastName=function(){return PasswordService.isValidLastName($scope.forms.personalDetailsForm,$scope.user)},controller.isValidEmail=function(){return PasswordService.isValidEmail($scope.forms.personalDetailsForm,$scope.user)},controller.setValid=function(fieldName){return PasswordService.setValid($scope.forms.personalDetailsForm,fieldName)},controller.saveStateVisibility=function(){var visibility=angular.copy(controller.grid.options.columnDefs);angular.forEach(visibility,function(column){-1!==["contactTypesAsString"].indexOf(column.field)&&(column.field=controller.convertVisibleColumnsField(column.field))}),GridService.storeColumnsVisibility(constants.gridNameSpaces.qsUserGridVisibility,GridService.getGridColumnsVisibility(visibility))},controller.init=function(){controller.loadData(),controller.initDataGrid(),controller.loadDatagridColumnsVisibility()},controller.init()},angular.module("qsHub").controller("QsUsersListController",["$scope","$resource","$timeout","constants","uiGridConstants","QsUsersListService","UsersListService","NotifierFactory","UiGridService","PasswordService","WatchService",App.controllers.qsUsersList])}(window.angular),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.QsUsers=function($resource,$q,$log,$localStorage,constants,UsersListService,RequestsQueueService,InstitutionsUsersListService){var service={contactTypes:null,roles:null,sections:null,deferred:{getContactTypes:null,getRoles:null,getSections:[]}};return service.getUsersListModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/list/qs-users",{},{get:{isArray:!1,cancellable:!0}})},service.getAllUsers=function(filters){if(constants.dev)var endTime,startTime=(new Date).getTime();RequestsQueueService.cancelAll("getAllQsUsers");var hasSorting=!1,allowedFilters=["limit","page"];if(filters)for(var key in filters){if(-1!==key.indexOf("sorting")){hasSorting=!0;break}0!==key.indexOf("filter")&&-1===allowedFilters.indexOf(key)&&delete filters[key]}hasSorting||(filters["sorting[createdAt]"]="desc");var Api=service.getUsersListModel().get(filters);return RequestsQueueService.add(Api,"getAllQsUsers"),Api.$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("getAllQsUsers"),data.results=service.formatList(data.results),data},function(error){return constants.dev&&$log.log("request failed"+error),[]}).then(function(data){return data.results=service.appendAccessData(data.results),data}).then(function(data){return data.results=service.appendContactsData(data.results),data})},service.formateDate=function(date,format){var formatedDate="";return date&&moment(date,"x").isValid()&&(formatedDate=moment(date,"x"),format&&(formatedDate=formatedDate.format(format))),formatedDate},service.appendAccessData=function(userData){return userData&&service.getRoles().then(function(systemRoles){if(systemRoles){var hasCustomRole,originalRoles=null;angular.forEach(userData,function(userObject){if(!userObject.roles)return!1;originalRoles=angular.copy(userObject.roles),userObject.roles={},hasCustomRole=!1,angular.forEach(originalRoles,function(value){value===constants.customRole&&(hasCustomRole=!0)}),angular.forEach(originalRoles,function(value){userObject.roles[value]=!0,hasCustomRole||value!==constants.globalAdminRole||(userObject.globalAdmin=!0,angular.forEach(systemRoles,function(role){angular.forEach(role.sections,function(section){userObject.accessTo[section]=!0})}))})})}}),userData},service.appendContactsData=function(userData){if(userData){var contactTypeName=null,originalContactTypes=null;service.getContactTypes().then(function(contactTypesList){contactTypesList&&contactTypesList.length&&angular.forEach(userData,function(userObject){if(userObject.contactTypesAsArray||(userObject.contactTypesAsArray=[]),!userObject.contactTypes)return!1;originalContactTypes=angular.copy(userObject.contactTypes),userObject.contactTypes={},angular.forEach(originalContactTypes,function(contactType,key){if(!(contactTypeName=UsersListService.getContactTypeNameByHandle(contactType.handle,contactTypesList)))return!1;userObject.contactTypesAsArray.push(contactTypeName),userObject.contactTypesAsString=userObject.contactTypesAsArray.length?userObject.contactTypesAsArray.join(", "):null,userObject.contactTypes[contactType.handle]={primary:contactType.primary,assigned:!0}})})})}return userData},service.getContactTypesFilter=function(){return service.getContactTypes().then(function(contactTypesList){var contactTypeFilters=[];return contactTypesList&&angular.forEach(contactTypesList,function(contactType){contactTypeFilters.push({id:contactType.handle,title:contactType.name})}),contactTypeFilters})},service.formatList=function(userData){if(userData){var accessTo;angular.forEach(userData,function(userObject){userObject.accessTo&&(accessTo={},angular.forEach(userObject.accessTo,function(value){accessTo[value]=!0}),userObject.accessTo=angular.copy(accessTo))})}return userData},service.getContactTypes=function(){return InstitutionsUsersListService.getContactTypes()},service.formatRoles=function(rolesList){var flatArray=[];return angular.forEach(rolesList,function(rolesGroup){angular.forEach(rolesGroup.roles,function(role){flatArray.push({groupHandle:rolesGroup.handle,groupName:rolesGroup.name,roleName:role.name,roleHandle:rolesGroup.handle+"."+role.handle,all:!!role.all&&role.all,sections:role.sections})})}),flatArray.push({groupName:"Custom",roleName:"Switching off will revert changes to default",roleHandle:"custom",all:!1}),flatArray},service.getRoles=function(){if(service.deferred.getRoles)return service.deferred.getRoles.promise;service.deferred.getRoles=$q.defer();var deferred=service.deferred.getRoles;return service.roles?deferred.resolve(service.roles):$resource(constants.api.usersPermissions.url+"/v1/list/qs-roles").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.roles=service.formatRoles(data.results),deferred.resolve(service.roles),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.roles=[],deferred.resolve(service.roles),deferred=null}),deferred.promise},service.getSections=function(client){var type=client?"client":"qs",Api=$resource(constants.api.usersPermissions.url+"/v1/list/"+type+"-sections");if(service.deferred.getSections[type])return service.deferred.getSections[type].promise;service.deferred.getSections[type]=$q.defer();var deferred=service.deferred.getSections[type];return service.sections?deferred.resolve(service.sections):Api.get(function(data){constants.dev&&$log.log("success, got data: ",data),service.sections=UsersListService.formatSections(data.results),deferred.resolve(service.sections),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.sections=[],deferred.resolve(service.sections),deferred=null}),deferred.promise},service.activate=function(id){return $resource(constants.api.usersPermissions.url+"/v1/user/:id/activate",{id:id}).get().$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deactivate=function(id){return $resource(constants.api.usersPermissions.url+"/v1/user/:id/deactivate",{id:id}).get().$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getFullName=function(userObject){return[userObject.title,userObject.firstname,userObject.lastname].filter(Boolean).join(" ")},service.getUserModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/user/:id",null,{create:{method:"POST"},update:{method:"PATCH"}})},service.initQsUser=function(user){return user.hasOwnProperty("contactTypes")||(user.contactTypes=[]),user.roles=[],user.accessTo=[],user.deleted=!1,user.active=!0,user.qs=!0,user},service.savePersonalDetails=function(userData){var UserModel=service.getUserModel(),dataToUpdate=angular.copy(userData);if(dataToUpdate.contactTypes){var formattedContactTypes=[];angular.forEach(dataToUpdate.contactTypes,function(contactTypeData,handle){contactTypeData.assigned&&formattedContactTypes.push({handle:handle,primary:!!contactTypeData.primary})}),dataToUpdate.contactTypes=formattedContactTypes,delete dataToUpdate.contactTypesAsString}return delete dataToUpdate.accessTo,delete dataToUpdate.roles,delete dataToUpdate.fullname,userData.id?UserModel.update({id:userData.id},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1}):(dataToUpdate=service.initQsUser(dataToUpdate),UserModel.create({},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1}))},service.savePermissions=function(userData){var UserModel=service.getUserModel(),dataToUpdate={accessTo:[],roles:[],qs:!0};if(userData.accessTo)for(var section in userData.accessTo)userData.accessTo[section]&&dataToUpdate.accessTo.push(section);if(userData.roles)for(var role in userData.roles)userData.roles[role]&&dataToUpdate.roles.push(role);return UserModel.update({id:userData.id},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.storeColumnsVisibility=function(columnsVisibility){$localStorage.qsUsersGridColumnsVisibility=columnsVisibility},service.getColumnsVisibility=function(){return $localStorage.qsUsersGridColumnsVisibility},service},angular.module("qsHub").service("QsUsersListService",["$resource","$q","$log","$localStorage","constants","UsersListService","RequestsQueueService","InstitutionsUsersListService",App.services.QsUsers])}(window.angular,window.moment),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.adminDashboard=function($scope,constants,UserFactory,QsUsersListService,AdminDashboardService){var controller=this;controller.devMode=constants.dev,controller.loadData=function(){QsUsersListService.getRoles().then(function(rolesList){var userData=UserFactory.getData();$scope.userRoles=AdminDashboardService.getUserRoleNames(userData&&userData.roles?userData.roles:[],rolesList)})},controller.init=function(){controller.loadData()},controller.init()},angular.module("qsHub").controller("AdminDashboardController",["$scope","constants","UserFactory","QsUsersListService","AdminDashboardService",App.controllers.adminDashboard])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.AdminDashboard=function(constants){var service={};return service.getUserRoleNames=function(userRoles,rolesList){var i,y,result=[],totalUserRoles=userRoles?userRoles.length:0,totalRoles=rolesList?rolesList.length:0;if(totalUserRoles)for(i=0;i<totalUserRoles;i++)for(y=0;y<totalRoles;y++)if(rolesList[y].roleHandle===userRoles[i]){if(rolesList[y].roleHandle===constants.globalAdminRole)return[rolesList[y].roleName];result.push(rolesList[y].roleName)}return result.sort()},service},angular.module("qsHub").service("AdminDashboardService",["constants",App.services.AdminDashboard])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.usersInstitutions=function(constants,InstitutionsUsersFactory){var controller=this;controller.devMode=constants.dev,controller.init=function(){InstitutionsUsersFactory.setRequestFilters({})},controller.init()},angular.module("qsHub").controller("InstitutionsUsersController",["constants","InstitutionsUsersFactory",App.controllers.usersInstitutions])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.InstitutionsUsers=function(){var requestFilters;return{getRequestFilters:function(){return requestFilters||angular.copy(null)},setRequestFilters:function(newRequestFilters){requestFilters=newRequestFilters},resetRequestFilters:function(){requestFilters=angular.copy(null)}}},angular.module("qsHub").factory("InstitutionsUsersFactory",[App.factories.InstitutionsUsers])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.institutionsUsersList=function($scope,$resource,$timeout,constants,uiGridConstants,InstitutionsUsersListService,UsersListService,NotifierFactory,InstitutionsUsersListFactory,InstitutionsUsersFactory,WatchService,UserTypesService,PasswordService,GridService,UserFactory){var controller=this;controller.devMode=constants.dev,controller.defaultFilters={lastLoginAtRange:{startDate:null,endDate:null}},controller.showDatagrid=!1,controller.grid={options:{data:[]}},controller.defaultPaginationOptions={page:1,limit:constants.datagrid.contacts.defaultRowsNumber},controller.paginationOptions=GridService.getColumnsFilters(constants.gridNameSpaces.schoolUserGridFilters,["lastLoginAtRange"]),controller.columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.schoolUserGridVisibility),controller.isDatagridReloading=!1,controller.isDatagridRendered=!1,controller.rolesBeforeChanges=[],$scope.user={},$scope.newUser={},$scope.newUserPanelNotClosed=!1,$scope.userBeforeChanges={},$scope.forms={},$scope.showInfoBlock=!1,$scope.disabledInstitutionsUserListSubTabs={personalDetails:!1,permissions:!0,institutions:!0},$scope.filters=null,$scope.columnsBeforeHide=[],$scope.visible={},controller.hasWriteAccess=UserFactory.hasInstitutionsUsersAccess(),controller.userTypes=UserTypesService.getUserTypes(),controller.initSelectedItem=function(){$scope.selectedItem={},$scope.selectedItem.selectedOptionType=controller.userTypes[1]},controller.initSelectedItem(),InstitutionsUsersListService.getContactTypes().then(function(contactTypes){controller.contactTypes=contactTypes}),InstitutionsUsersListService.getRoles().then(function(rolesList){controller.rolesList=rolesList}),InstitutionsUsersListService.getSections().then(function(sectionsList){controller.sectionsList=sectionsList}),$scope.handleLastLoginAtDateRange=function(event){event.model.startDate&&event.model.endDate&&(controller.grid.options.columnDefs[7].filters[0].term=event.model.startDate.format("x"),controller.grid.options.columnDefs[7].filters[1].term=event.model.endDate.format("x"))},$scope.handleDatagridRowClick=function(user){if(PasswordService.setHasErrors(!0),$scope.disabledInstitutionsUserListSubTabs.permissions=!1,$scope.disabledInstitutionsUserListSubTabs.institutions=!1,$scope.selectedUserId===user.id)$scope.selectedUserId=null,$scope.showInfoBlock=!1,$scope.filterActive=!0,InstitutionsUsersListFactory.resetActiveUserId(),controller.toggleColumns(!1);else{$scope.selectedUserId=user.id,$scope.showInfoBlock=!0,$scope.filterActive=!1,$scope.user=angular.copy(user),$scope.userBeforeChanges=user,$scope.user=UsersListService.updateRolesWithAll($scope.user,controller.rolesList),$scope.user=UsersListService.updateSectionsAndPages($scope.user,controller.rolesList),controller.rolesBeforeChanges=[];for(var role in user.roles)user.roles[role]&&(controller.rolesBeforeChanges[role]=!0);InstitutionsUsersListFactory.setActiveUserId($scope.selectedUserId),controller.toggleColumns(!0)}},controller.updateInDatagrid=function(item){var totalItems=controller.grid.options.data.length,key=0;for(key;key<totalItems;++key){if(controller.grid.options.data[key].id===item.id)return controller.grid.options.data[key]=angular.copy($scope.userBeforeChanges),!0;$scope.columnsBeforeEdit=null,$scope.filterActive=!0,InstitutionsUsersListFactory.resetActiveUserId(),$scope.newUserPanelNotClosed=!1}return!1},controller.toggleColumns=function(hide){controller.grid.options&&(hide?(angular.forEach(controller.grid.options.columnDefs,function(column){angular.isDefined(column.visible)&&!0===column.visible&&$scope.columnsBeforeHide.push(column),$scope.visible[column.field]=column.visible}),angular.forEach(controller.grid.options.columnDefs,function(column){column.visible="email"===column.field})):(angular.forEach($scope.columnsBeforeHide,function(column){column.visible=!0}),$scope.columnsBeforeHide=[],$scope.$broadcast(constants.events.closingInstitutionsUsers)),controller.grid.options.enableGridMenu=!hide,controller.grid.options.enableColumnMenus=!hide,controller.grid.options.enableColumnResizing=!hide,controller.grid.options.enablePaginationControls=!hide)},$scope.handleResetClick=function(){$scope.user=angular.copy($scope.userBeforeChanges)},$scope.handleDeactivateClick=function(user){if(!user||!user.id||$scope.deactivateInProgress)return!1;$scope.deactivateInProgress=!0,InstitutionsUsersListService.deactivate(user.id).then(controller.deactivationCallback)},$scope.handleActivateClick=function(user){if(!user.id||$scope.activateInProgress)return!1;$scope.activateInProgress=!0,InstitutionsUsersListService.activate(user.id).then(controller.activationCallback)},controller.deactivationCallback=function(success){$scope.user.active=!success,success&&($scope.userBeforeChanges.active=$scope.user.active,controller.updateInDatagrid($scope.userBeforeChanges)),$scope.deactivateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Deactivated successfully!":"Deactivation failed!","Deactivation")},controller.activationCallback=function(success){$scope.user.active=!!success,success&&($scope.userBeforeChanges.active=$scope.user.active,controller.updateInDatagrid($scope.userBeforeChanges)),$scope.activateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Activated successfully!":"Activation failed!","Activation")},$scope.handleNewUserResponse=function(response){response.hasOwnProperty("insertedId")&&response.insertedId.length>0&&($scope.user.id=response.insertedId,$scope.user.active=!0,angular.copy($scope.user,$scope.userBeforeChanges),$scope.activeTab=1,$scope.disabledInstitutionsUserListSubTabs.permissions=!1,$scope.disabledInstitutionsUserListSubTabs.institutions=!1,angular.copy($scope.user,$scope.newUser),$scope.selectedUserId=$scope.user.id,$scope.newUserPanelNotClosed=!0,controller.reloadDatagrid())},$scope.handlePersonalDetailsSubmit=function(){$scope.forms.personalDetailsForm.firstname.$setDirty(),$scope.forms.personalDetailsForm.lastname.$setDirty(),$scope.forms.personalDetailsForm.email.$setDirty(),PasswordService.setHasErrors(!(!$scope.user.id&&!$scope.forms.personalDetailsForm.password.$viewValue));var newUser=void 0===$scope.user.id;return!!(!$scope.personalDetailsSubmitInProgress&&$scope.forms.personalDetailsForm&&$scope.forms.personalDetailsForm.$valid&&PasswordService.isValid($scope.forms.personalDetailsForm,$scope.user)&&PasswordService.getHasErrors())&&(newUser&&!PasswordService.isPasswordValid($scope.user.password)||!newUser&&void 0!==$scope.user.password&&!PasswordService.isPasswordValid($scope.user.password)?(NotifierFactory.show("error","Please set a valid password"),!1):($scope.personalDetailsSubmitInProgress=!0,void InstitutionsUsersListService.savePersonalDetails($scope.user).then(function(response){var message="Personal Details",success=!1;response&&((success=!response.error)?($scope.user.fullname=InstitutionsUsersListService.getFullName($scope.user),response.hasOwnProperty("insertedId")&&response.insertedId.length&&($scope.user.id=response.insertedId,$scope.user.active=!0,angular.copy($scope.user,$scope.userBeforeChanges),$scope.activeTab=1,$scope.disabledInstitutionsUserListSubTabs.permissions=!1,$scope.disabledInstitutionsUserListSubTabs.institutions=!1,angular.copy($scope.user,$scope.newUser),$scope.selectedUserId=$scope.user.id),controller.resetPersonalDetailsForm()):response.hasOwnProperty("message")&&response.message.length&&(message=response.message),success&&$scope.user.contactTypes&&InstitutionsUsersListService.getContactTypes().then(function(contactTypesList){if(!contactTypesList)return!1;var contactTypeNames=[],contactTypeName=null;for(var contactType in $scope.user.contactTypes)$scope.user.contactTypes[contactType].assigned&&(contactTypeName=UsersListService.getContactTypeNameByHandle(contactType,contactTypesList),contactTypeNames.push(contactTypeName));$scope.user.contactTypesAsString=contactTypeNames.join(", ")}),success&&(delete $scope.user.password,$scope.userBeforeChanges=angular.copy($scope.user),controller.reloadDatagrid()),$scope.personalDetailsSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!",message))})))},$scope.handlePermissionsSubmit=function(){$scope.permissionsSubmitInProgress=!0,InstitutionsUsersListService.savePermissions($scope.user).then(function(success){$scope.permissionsSubmitInProgress=!1,$scope.userBeforeChanges=angular.copy($scope.user),controller.rolesBeforeChanges=[];for(var role in $scope.user.roles)$scope.user.roles[role]&&(controller.rolesBeforeChanges[role]=!0);success&&controller.updateInDatagrid($scope.user),NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Permissions")})},$scope.handlePrimaryContactTypeClick=function(handle){$scope.user.contactTypes[handle].assigned=!0},$scope.handleContactTypeClick=function(handle){$scope.user.contactTypes[handle]&&$scope.user.contactTypes[handle].primary&&!$scope.user.contactTypes[handle].assigned&&($scope.user.contactTypes[handle].primary=!1)},$scope.handleAssignedContactTypeClick=function(handle){!1===$scope.user.contactTypes[handle].assigned&&($scope.user.contactTypes[handle].primary=!1)},$scope.handleRoleClick=function(clickedRole){if(!$scope.user.roles.custom&&void 0!==clickedRole){$scope.user.accessTo={};var clickedRoleAssigned=$scope.user.roles[clickedRole.roleHandle],parentRoleClicked=clickedRole.all,childrenRolesHandles=UsersListService.getChildrenRoles(clickedRole.groupHandle,controller.rolesList),parentRoleHandle=null;if(clickedRoleAssigned){if(parentRoleClicked)childrenRolesHandles&&angular.forEach(childrenRolesHandles,function(childrenRoleHandle){$scope.user.roles[childrenRoleHandle]=!0});else if(childrenRolesHandles){var allDepartments=!0;angular.forEach(childrenRolesHandles,function(childrenRoleHandle){!1!==$scope.user.roles[childrenRoleHandle]&&void 0!==$scope.user.roles[childrenRoleHandle]||(allDepartments=!1)}),allDepartments&&(parentRoleHandle=UsersListService.getParentRoleHandle(clickedRole.groupHandle,controller.rolesList))&&($scope.user.roles[parentRoleHandle]=!0)}}else parentRoleClicked?childrenRolesHandles&&angular.forEach(childrenRolesHandles,function(childrenRoleHandle){$scope.user.roles[childrenRoleHandle]=!1}):(parentRoleHandle=UsersListService.getParentRoleHandle(clickedRole.groupHandle,controller.rolesList))&&($scope.user.roles[parentRoleHandle]=!1);$scope.user=UsersListService.updateSectionsAndPages($scope.user,controller.rolesList)}},$scope.activateCustomRole=function(){angular.isDefined($scope.user.roles)||($scope.user.roles={}),$scope.user.roles.custom=!0},$scope.handleColumnClick=function(){var columnsVisibility={};angular.forEach($scope.columns,function(column){columnsVisibility[column.field]=column.show}),InstitutionsUsersListService.storeColumnsVisibility(columnsVisibility)},controller.handleAddInstitutionsUserClick=function(){controller.resetPersonalDetailsForm(),$scope.selectedUserId=null,$scope.user={},InstitutionsUsersListFactory.resetActiveUserId(),$scope.activeTab=0,$scope.disabledInstitutionsUserListSubTabs.permissions=!0,$scope.disabledInstitutionsUserListSubTabs.institutions=!0,controller.toggleColumns(!0),$scope.showInfoBlock=!0,$scope.filterActive=!1},controller.resetPersonalDetailsForm=function(){$scope.forms.personalDetailsForm&&$scope.forms.personalDetailsForm.$setPristine()},controller.handleEditCloseClick=function(){controller.toggleColumns(!1),$scope.showInfoBlock=!1,$scope.selectedUserId=null,$scope.activeTab=0},controller.loadDatagridColumnsVisibility=function(){var columnsVisibility=InstitutionsUsersListService.getColumnsVisibility();columnsVisibility&&angular.forEach($scope.columns,function(column){"undefined"!==columnsVisibility[column.field]&&(column.show=!!columnsVisibility[column.field])})},controller.reloadDatagrid=function(){controller.getPage()},controller.getPage=function(){return controller.isDatagridReloading=!0,InstitutionsUsersListService.getAllUsers(angular.merge({},controller.paginationOptions,controller.defaultPaginationOptions)).then(function(response){controller.grid.options.totalItems=response.totalMatching,controller.grid.options.data=response.results,controller.grid.options.minRowsToShow=response.totalFiltered,controller.isDatagridReloading=!1,controller.showDatagrid=!0})},controller.reloadDatagrid=function(){controller.getPage()},controller.initDataGridOptions=function(){controller.grid.options={data:[],enableSorting:!0,exporterMenuCsv:!1,enableGridMenu:!0,showGridFooter:!1,selectedItems:$scope.selectedUserId,enableFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,paginationPageSizes:[constants.datagrid.contacts.defaultRowsNumber,50,100],paginationPageSize:constants.datagrid.contacts.defaultRowsNumber,useExternalPagination:!0,useExternalSorting:!0,useExternalFiltering:!0,rowTemplate:"/scripts/components/users/list/institutions/datagrid/rowTemplate.html",columnDefs:[{displayName:"Email",field:"email",cellFilter:"lowercase",visible:!0,filter:{term:GridService.getFilterByField(controller.paginationOptions,"email","")}},{displayName:"Full Name",field:"fullname",visible:GridService.getVisibilityByField(controller.columnsVisibility,"fullname",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"fullname","")}},{displayName:"Position",field:"position",visible:GridService.getVisibilityByField(controller.columnsVisibility,"position",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"position","")}},{displayName:"Phone",field:"phone",visible:GridService.getVisibilityByField(controller.columnsVisibility,"phone",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"phone","")}},{displayName:"Primary Institution Core Id",field:"primaryInstitutionCoreId",visible:GridService.getVisibilityByField(controller.columnsVisibility,"primaryInstitutionCoreId",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"primaryInstitutionCoreId","")}},{displayName:"Primary Institution",field:"primaryInstitutionName",visible:GridService.getVisibilityByField(controller.columnsVisibility,"primaryInstitutionName",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"primaryInstitutionName","")}},{displayName:"Contact Types",filter:{type:uiGridConstants.filter.SELECT,selectOptions:[],term:GridService.getFilterByField(controller.paginationOptions,"contactTypes.handle")},field:"contactTypesAsString",maxWidth:130,visible:GridService.getVisibilityByField(controller.columnsVisibility,"contactTypes.handle",!0),filterHeaderTemplate:"/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html"},{displayName:"Last Login",field:"lastLoginAt",filterCellFiltered:!0,filters:[{visible:!0,condition:uiGridConstants.filter.GREATER_THAN},{condition:uiGridConstants.filter.LESS_THAN}],filter:{term:GridService.getFilterByField(controller.paginationOptions,"lastLoginAt",""),applyTextFilter:controller.applyDateFilter("lastLoginAt","")},cellTemplate:"/scripts/shared/ui-grid/templates/dateCellTemplate.html",filterHeaderTemplate:"/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html",visible:GridService.getVisibilityByField(controller.columnsVisibility,"lastLoginAt",!0)}],onRegisterApi:function(gridApi){var columnsVisibilityBeforeChanges=angular.copy(controller.grid.options.columnDefs);$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){$scope.handleDatagridRowClick(row.entity)}),gridApi.core.on.rowsRendered($scope,function(){controller.isDatagridRendered=!0}),gridApi.core.on.filterChanged($scope,controller.handleGridFiltersChanges),gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),gridApi.pagination.on.paginationChanged($scope,function(newPage,limit){controller.defaultPaginationOptions.page=newPage,controller.defaultPaginationOptions.limit=limit,controller.getPage()}),$scope.gridApi.core.on.sortChanged($scope,controller.handleGridFiltersChanges),GridService.resetExtend(columnsVisibilityBeforeChanges,controller.grid.options.columnDefs,$scope.filters)}};var lastLogin=GridService.getFilterByField(controller.paginationOptions,"lastLoginAt","");null!==lastLogin&&null!==controller.paginationOptions["filter[lastLoginAt]"]&&angular.isDefined(lastLogin)&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"])&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"].startDate)&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"].endDate)&&(controller.grid.options.columnDefs[7].filters[0].term=controller.paginationOptions["filter[lastLoginAt]"].startDate,controller.grid.options.columnDefs[7].filters[1].term=controller.paginationOptions["filter[lastLoginAt]"].endDate)},controller.handleGridFiltersChanges=function(){controller.paginationOptions=angular.copy(controller.defaultPaginationOptions);var filterColumn,sortColumn;angular.forEach($scope.gridApi.grid.columns,function(column){filterColumn=column.filters[0].column?column.filters[0].column:column.field,"lastLoginAt"===column.field?void 0!==column.filters&&void 0!==column.filters[0].term&&void 0!==column.filters[1].term?controller.paginationOptions["filter["+filterColumn+"]"]={startDate:column.filters[0].term&&isNaN(column.filters[0].term)?column.filters[0].term.format("x"):column.filters[0].term,endDate:column.filters[1].term&&isNaN(column.filters[1].term)?column.filters[1].term.format("x"):column.filters[1].term}:controller.paginationOptions["filter["+filterColumn+"]"]=null:("contactTypesAsString"===column.field||"contactTypes.handle"===column.field)&&void 0!==column.filters&&"undefined"!==column.filters[0].term&&column.filters[0].term&&column.filters[0].term.value?controller.paginationOptions["filter[contactTypes.handle]"]=column.filters[0].term.value:void 0!==column.filters&&"undefined"!==column.filters[0].term&&(controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term),void 0!==column.sort.direction&&(sortColumn=column.sort.column?column.sort.column:column.field,controller.paginationOptions["sorting["+sortColumn+"]"]=column.sort.direction)}),null===controller.paginationOptions["filter[lastLoginAt]"]&&(controller.paginationOptions["filter[lastLoginAt]"]=$scope.filters.lastLoginAtRange),null===controller.paginationOptions["filter[lastLoginAt]"].startDate&&(controller.paginationOptions["filter[lastLoginAt]"].endDate=null,$scope.filters.lastLoginAtRange={startDate:null,endDate:null}),GridService.storeColumnsFilters(constants.gridNameSpaces.schoolUserGridFilters,controller.paginationOptions),angular.isDefined($scope.filterTimeout)&&$timeout.cancel($scope.filterTimeout),$scope.filterTimeout=$timeout(function(){controller.getPage()},500)},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.schoolUserGridVisibility),reload=!1;columnsVisibility&&$scope.filterActive&&angular.forEach(controller.grid.options.columnDefs,function(column,key){!0===columnsVisibility[column.field]&&!1===column.visible&&(controller.grid.options.columnDefs[key].filter.term=null,controller.paginationOptions["filter["+column.field+"]"]=null,reload=!0,"lastLoginAt"===column.field&&(delete controller.grid.options.columnDefs[key].filters[0].term,$scope.filters.lastLoginAtRange={startDate:null,endDate:null}))}),$scope.filterActive&&controller.saveStateVisibility(),reload&&controller.getPage()},controller.applyDateFilter=function(filterName,defaultValue){var filter=GridService.getFilterByField(controller.paginationOptions,filterName,defaultValue);angular.isDefined(filter)&&null!==filter&&angular.isDefined(filter.startDate)&&angular.isDefined(filter.endDate)&&(null!==filter.startDate&&null!==filter.startDate?controller.defaultFilters.lastLoginAtRange={startDate:parseInt(filter.startDate,10),endDate:parseInt(filter.endDate,10)}:controller.defaultFilters.lastLoginAtRange={startDate:null,endDate:null})},controller.initDataGrid=function(){$scope.filters=angular.extend({},controller.defaultFilters),controller.getPage().then(function(){InstitutionsUsersListService.getContactTypesFilter().then(function(options){var list=[];angular.forEach(options,function(option){list.push({value:option.id,label:option.title})}),controller.grid.options.columnDefs[6].filter.selectOptions=list})})},controller.convertVisibleColumnsField=function(value){switch(value){case"contactTypesAsString":return"contactTypes.handle"}},controller.saveStateVisibility=function(){var visibility=angular.copy(controller.grid.options.columnDefs);angular.forEach(visibility,function(column){-1!==["contactTypesAsString"].indexOf(column.field)&&(column.field=controller.convertVisibleColumnsField(column.field))}),GridService.storeColumnsVisibility(constants.gridNameSpaces.schoolUserGridVisibility,GridService.getGridColumnsVisibility(visibility))},controller.isValidFirstName=function(){return PasswordService.isValidFirstName($scope.forms.personalDetailsForm,$scope.user)},controller.isValidLastName=function(){return PasswordService.isValidLastName($scope.forms.personalDetailsForm,$scope.user)},controller.isValidEmail=function(){return PasswordService.isValidEmail($scope.forms.personalDetailsForm,$scope.user)},controller.setValid=function(fieldName){return PasswordService.setValid($scope.forms.personalDetailsForm,fieldName)},controller.initWatches=function(){WatchService.create($scope,"activeTab",function(newValue){InstitutionsUsersListFactory.setSelectedTabId(newValue)}),$scope.$on(constants.events.institutionsUserPrimaryInstitutionChanges,function(){$scope.userBeforeChanges=angular.copy($scope.user),controller.updateInDatagrid($scope.user)})},controller.$onInit=function(){controller.initDataGridOptions(),controller.initWatches(),controller.loadDatagridColumnsVisibility(),controller.initDataGrid()},controller.$onDestroy=function(){}},angular.module("qsHub").controller("InstitutionsUsersListController",["$scope","$resource","$timeout","constants","uiGridConstants","InstitutionsUsersListService","UsersListService","NotifierFactory","InstitutionsUsersListFactory","InstitutionsUsersFactory","WatchService","UserTypesService","PasswordService","UiGridService","UserFactory",App.controllers.institutionsUsersList])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.InstitutionsUsers=function($resource,$q,$log,$localStorage,constants,UsersListService,RequestsQueueService){var service={contactTypes:null,roles:null,sections:null,deferred:{getContactTypes:null,getRoles:null,getSections:null}};return service.getInstitutionsUsersListModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/list/client-users",{},{get:{isArray:!1,cancellable:!0}})},service.getUserModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/user/:id",null,{update:{method:"PATCH"},replace:{method:"PUT"}})},service.getUserInstitutionModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/user/institution",null,{create:{method:"POST"}})},service.getAllUsers=function(filters){if(constants.dev)var endTime,startTime=(new Date).getTime();RequestsQueueService.cancelAll("getAllInstitutionsUsers");var hasSorting=!1,allowedFilters=["limit","page"];if(filters)for(var key in filters){if(-1!==key.indexOf("sorting")){hasSorting=!0;break}0!==key.indexOf("filter")&&-1===allowedFilters.indexOf(key)&&delete filters[key]}hasSorting||(filters["sorting[createdAt]"]="desc");var Api=service.getInstitutionsUsersListModel().get(filters);return RequestsQueueService.add(Api,"getAllInstitutionsUsers"),Api.$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("getAllInstitutionsUsers"),data.results=service.formatList(data.results),data},function(error){return constants.dev&&$log.log("request failed"+error),[]}).then(function(data){return data.results=service.appendContactsData(data.results),data})},service.appendContactsData=function(userData){if(userData){var contactTypeName=null;service.getContactTypes().then(function(contactTypesList){contactTypesList&&angular.forEach(userData,function(userObject){if(userObject.contactTypesAsArray||(userObject.contactTypesAsArray=[]),!userObject.contactTypes)return!1;var contactTypes=angular.copy(userObject.contactTypes);userObject.contactTypes={},angular.forEach(contactTypes,function(contactType){contactTypeName=UsersListService.getContactTypeNameByHandle(contactType.handle,contactTypesList),userObject.contactTypesAsArray.push(contactTypeName),userObject.contactTypesAsString=userObject.contactTypesAsArray.length?userObject.contactTypesAsArray.join(", "):null,userObject.contactTypes[contactType.handle]={primary:contactType.primary,assigned:!0}})})})}return userData},service.getContactTypesFilter=function(){var deferred=$q.defer();return service.getContactTypes().then(function(contactTypesList){var contactTypeFilters=[];contactTypesList&&angular.forEach(contactTypesList,function(contactType){contactTypeFilters.push({id:contactType.handle,title:contactType.name})}),deferred.resolve(contactTypeFilters)}),deferred.promise},service.formatList=function(userData){if(userData){var accessTo,roles;angular.forEach(userData,function(userObject){accessTo=userObject.accessTo?angular.copy(userObject.accessTo):[],userObject.accessTo={},angular.forEach(accessTo,function(value){userObject.accessTo[value]=!0}),roles=userObject.roles?angular.copy(userObject.roles):[],userObject.roles={},angular.forEach(roles,function(value){userObject.roles[value]=!0,value===constants.globalAdminRole&&(userObject.globalAdmin=!0)})})}return userData},service.getContactTypes=function(){if(service.deferred.getContactTypes)return service.deferred.getContactTypes.promise;service.deferred.getContactTypes=$q.defer();var deferred=service.deferred.getContactTypes;return service.contactTypes?deferred.resolve(service.contactTypes):$resource(constants.api.usersPermissions.url+"/v1/list/contact-types").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.contactTypes=data.results,deferred.resolve(service.contactTypes),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.contactTypes=[],deferred.resolve(service.contactTypes),deferred=null}),deferred.promise},service.formatRoles=function(rolesList){var flatArray=[];return angular.forEach(rolesList,function(rolesGroup){angular.forEach(rolesGroup.roles,function(role){flatArray.push({groupHandle:rolesGroup.handle,groupName:rolesGroup.name,roleName:role.name,roleHandle:rolesGroup.handle+"."+role.handle,all:!!role.all&&role.all,sections:role.sections})})}),flatArray.push({groupName:"Custom",roleName:"Switching off will revert changes to default",roleHandle:"custom",all:!1}),flatArray},service.getRoles=function(){if(service.deferred.getRoles)return service.deferred.getRoles.promise;service.deferred.getRoles=$q.defer();var deferred=service.deferred.getRoles;return service.roles?deferred.resolve(service.roles):$resource(constants.api.usersPermissions.url+"/v1/list/client-roles").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.roles=service.formatRoles(data.results),deferred.resolve(service.roles),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.roles=[],deferred.resolve(service.roles),deferred=null}),deferred.promise},service.getSections=function(){if(service.deferred.getSections)return service.deferred.getSections.promise;service.deferred.getSections=$q.defer();var deferred=service.deferred.getSections;return service.sections?deferred.resolve(service.sections):$resource(constants.api.usersPermissions.url+"/v1/list/client-sections").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.sections=UsersListService.formatSections(data.results),deferred.resolve(service.sections),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.sections=[],deferred.resolve(service.sections),deferred=null}),deferred.promise},service.activate=function(id){return $resource(constants.api.usersPermissions.url+"/v1/user/:id/activate",{id:id}).get().$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deactivate=function(id){return $resource(constants.api.usersPermissions.url+"/v1/user/:id/deactivate",{id:id}).get().$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getFullName=function(userObject){return[userObject.title,userObject.firstname,userObject.lastname].filter(Boolean).join(" ")},service.initInstitutionsUser=function(user){return user.hasOwnProperty("contactTypes")||(user.contactTypes=[]),user.roles=[],user.accessTo=[],user.deleted=!1,user.active=!0,user.qs=!1,user},service.savePersonalDetails=function(userData){var UserModel=service.getUserModel(),dataToUpdate=angular.extend({},userData);if(dataToUpdate.contactTypes){var formattedContactTypes=[];for(var contactType in dataToUpdate.contactTypes)dataToUpdate.contactTypes[contactType].assigned&&formattedContactTypes.push({handle:contactType,primary:!!dataToUpdate.contactTypes[contactType].primary});dataToUpdate.contactTypes=formattedContactTypes}return delete dataToUpdate.accessTo,delete dataToUpdate.roles,delete dataToUpdate.fullname,userData.id?UserModel.update({id:userData.id},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1}):(UserModel=service.getUserInstitutionModel(),dataToUpdate=service.initInstitutionsUser(dataToUpdate),delete dataToUpdate.id,UserModel.create(dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1}))},service.savePermissions=function(userData){var UserModel=service.getUserModel(),dataToUpdate={accessTo:[],roles:[]};if(userData.accessTo)for(var section in userData.accessTo)userData.accessTo[section]&&dataToUpdate.accessTo.push(section);if(userData.roles)for(var role in userData.roles)userData.roles[role]&&dataToUpdate.roles.push(role);return UserModel.update({id:userData.id},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.storeColumnsVisibility=function(columnsVisibility){$localStorage.institutionUsersGridColumnsVisibility=columnsVisibility},service.getColumnsVisibility=function(){return $localStorage.institutionUsersGridColumnsVisibility},service},angular.module("qsHub").service("InstitutionsUsersListService",["$resource","$q","$log","$localStorage","constants","UsersListService","RequestsQueueService",App.services.InstitutionsUsers])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.InstitutionsUsersListFactory=function(){var selectedTabId=null,activeUserId=null,tabs={personal:0,permissions:1,institutions:2};return{setSelectedTabId:function(newSelectedTabId){selectedTabId=newSelectedTabId},isInstitutionsTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===tabs.institutions},setActiveUserId:function(newActiveUserId){activeUserId=newActiveUserId},resetActiveUserId:function(){activeUserId=null},getActiveUserId:function(){return activeUserId}}},angular.module("qsHub").factory("InstitutionsUsersListFactory",[App.factories.InstitutionsUsersListFactory])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfilePrograms=function($scope,constants,InstitutionsUsersListInstitutionsService,InstitutionsUsersListFactory,NotifierFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.searchInProgress=!1,controller.submitInProgress=!1,$scope.selectedInstitutionsNamesLoaded=!1,$scope.userInstitutions={assigned:[]},controller.newAssignedValues={},$scope.institutionsSearchResults=[],controller.disallowSubmit=function(){return!($scope.user.id&&!controller.submitInProgress&&$scope.selectedInstitutionsNamesLoaded)||(!$scope.user.primaryInstitutionCoreId||(!(!($scope.user.institutions&&$scope.user.institutions.length&&$scope.userBeforeChanges.institutions&&$scope.userBeforeChanges.institutions.length&&$scope.userInstitutions.assigned&&$scope.userInstitutions.assigned.length)||InstitutionsUsersListInstitutionsService.hasChanges($scope.user.institutions,$scope.userBeforeChanges.institutions,$scope.userInstitutions.assigned)||$scope.user.primaryInstitutionCoreId!==$scope.userBeforeChanges.primaryInstitutionCoreId)||!(!$scope.user.institutions||$scope.user.institutions.length||!$scope.userBeforeChanges.institutions||$scope.userBeforeChanges.institutions.length||!$scope.userInstitutions.assigned||$scope.userInstitutions.assigned.length)))},controller.isProgressBarVisible=function(){return!$scope.selectedInstitutionsNamesLoaded||controller.searchInProgress},controller.handleInstitutionSubmit=function(){controller.submitInProgress=!0,InstitutionsUsersListInstitutionsService.getInstitutionsGroups($scope.user.primaryInstitutionCoreId).then(function(institutionsGroups){if(angular.isArray(institutionsGroups)&&institutionsGroups.length>0){var institutionsGroupsFormatted={};institutionsGroupsFormatted[0]={},angular.forEach(institutionsGroups,function(institutionsGroup){institutionsGroupsFormatted[0][institutionsGroup.coreId]={coreId:institutionsGroup.coreId,name:institutionsGroup.name}}),institutionsGroups=institutionsGroupsFormatted}$scope.user.institutionsGroups=institutionsGroups,InstitutionsUsersListInstitutionsService.saveInstitutions($scope.user.id,$scope.userInstitutions.assigned,{primaryInstitutionCoreId:$scope.user.primaryInstitutionCoreId,primaryInstitutionCoreIdAsString:""+$scope.user.primaryInstitutionCoreId,primaryInstitutionName:$scope.user.primaryInstitutionName,qs:$scope.user.qs},institutionsGroups).then(controller.saveInstitutionsCallback)})},controller.saveInstitutionsCallback=function(success){var assignedIds=InstitutionsUsersListInstitutionsService.getObjectColumn($scope.userInstitutions.assigned,"coreId");$scope.user.institutions=angular.copy(assignedIds),$scope.userBeforeChanges.institutions=angular.copy(assignedIds),$scope.userBeforeChanges.primaryInstitutionCoreId=$scope.user.primaryInstitutionCoreId,controller.submitInProgress=!1,success&&(controller.userInstitutionsBeforeChanges=angular.copy($scope.userInstitutions),$scope.user.primaryInstitutionCoreIdAsString=""+$scope.user.primaryInstitutionCoreId,$scope.$emit(constants.events.institutionsUserPrimaryInstitutionChanges)),controller.newAssignedValues=angular.copy($scope.userInstitutions.assigned),NotifierFactory.show(success?"success":"error",success?"Updated successfully!":"Update failed!","User Institutions")},controller.searchInstitutionsCallback=function(results){controller.searchInProgress=!1,$scope.institutionsSearchResults=results},controller.searchInstitutions=function(searchPhrase){controller.searchInProgress=!0,InstitutionsUsersListInstitutionsService.searchInstitutions(searchPhrase,$scope.user.primaryInstitutionCoreId,$scope.userInstitutions.assigned).then(controller.searchInstitutionsCallback)},controller.getInstitutionsNamesCallback=function(results){$scope.selectedInstitutionsNamesLoaded=!0,$scope.userInstitutions.assigned=results;var addPrimary=!0;for(var r in results)if(results[r].coreId===$scope.user.primaryInstitutionCoreId){addPrimary=!1;break}addPrimary&&$scope.user.primaryInstitutionCoreId&&""!==$scope.user.primaryInstitutionName&&$scope.user.primaryInstitutionName&&$scope.userInstitutions.assigned.push({coreId:$scope.user.primaryInstitutionCoreId,name:$scope.user.primaryInstitutionName+" ["+$scope.user.primaryInstitutionCoreId+"]"}),controller.userInstitutionsBeforeChanges=angular.copy($scope.userInstitutions)},controller.handleItemSelect=function(item){1===$scope.userInstitutions.assigned.length&&($scope.user.primaryInstitutionCoreId=item.coreId,$scope.user.primaryInstitutionName=item.name.replace(" ["+item.coreId+"]",""))},controller.handleItemRemove=function(item){item&&$scope.user.primaryInstitutionCoreId===item.coreId&&($scope.user.primaryInstitutionCoreId=null)},controller.handlePrimaryInstitutionChanges=function(){for(var i in $scope.userInstitutions.assigned)if($scope.userInstitutions.assigned[i].coreId===$scope.user.primaryInstitutionCoreId){$scope.user.primaryInstitutionName=$scope.userInstitutions.assigned[i].name.replace(" ["+$scope.user.primaryInstitutionCoreId+"]",""),$scope.user.primaryInstitutionCoreIdAsString=""+$scope.userInstitutions.assigned[i].coreId;break}},controller.initUserInstitutions=function(){$scope.selectedInstitutionsNamesLoaded=!1,$scope.user&&$scope.user.institutions&&$scope.user.institutions.length?InstitutionsUsersListInstitutionsService.getInstitutionNames($scope.user.institutions).then(controller.getInstitutionsNamesCallback):controller.getInstitutionsNamesCallback([])},controller.initWatches=function(){WatchService.create($scope,InstitutionsUsersListFactory.getActiveUserId,function(userId){userId?InstitutionsUsersListFactory.isInstitutionsTabSelected()&&controller.initUserInstitutions():($scope.selectedInstitutionsNamesLoaded=!0,controller.getInstitutionsNamesCallback([]))}),WatchService.create($scope,"user.primaryInstitutionCoreId",function(newValue,oldValue){void 0===newValue&&($scope.user.primaryInstitutionCoreId=oldValue)}),WatchService.create($scope,"userInstitutions.assigned",function(newValue,oldValue){0===newValue.length&&oldValue.length>0&&($scope.user.primaryInstitutionName=null,$scope.user.primaryInstitutionCoreId=null,$scope.user.primaryInstitutionCoreIdAsString=null)}),WatchService.create($scope,function(){return controller.newAssignedValues},function(newValue,oldValue){newValue!==oldValue&&($scope.userInstitutions.assigned=angular.copy(newValue))}),$scope.$on(constants.events.closingInstitutionsUsers,function(){$scope.userInstitutions=angular.copy(controller.userInstitutionsBeforeChanges),$scope.selectedInstitutionsNamesLoaded=!1}),WatchService.create($scope,InstitutionsUsersListFactory.isInstitutionsTabSelected,function(isSelected){isSelected&&controller.initUserInstitutions()})},controller.init=function(){controller.initWatches()},WatchService.create($scope,InstitutionsUsersListFactory.isInstitutionsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0),isActive&&InstitutionsUsersListFactory.getActiveUserId()&&!$scope.selectedInstitutionsNamesLoaded&&controller.initUserInstitutions()})},angular.module("qsHub").controller("InstitutionsUsersInstitutionsController",["$scope","constants","InstitutionsUsersListInstitutionsService","InstitutionsUsersListFactory","NotifierFactory","WatchService",App.controllers.tuProfilePrograms])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.InstitutionsUsersListInstitutionsService=function($resource,$q,$log,constants,RequestsQueueService){var service={institutionsNames:[]};return service.getInstitutionNamesByCoreIdsModel=function(){return $resource(constants.api.institutions.url+"/v1/list/all/parent-name?sorting[coreId]=asc",null,{get:{cancellable:!0}})},service.getInstitutionsGroupsModel=function(){return $resource(constants.api.institutions.url+"/v1/list/all?filter[coreId]=:id",{limit:1,"columns[]":"groupMembers"},{get:{cancellable:!0}})},service.getInstitutionsSearchModel=function(){return $resource(constants.api.institutions.url+"/v1/list/all/parent-name",{"sorting[coreId]":"asc","field[]":["name","coreId"]},{get:{cancellable:!0}})},service.getUserModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/user/:id",null,{update:{method:"PATCH",cancellable:!0}})},service.searchInstitutions=function(searchPhrase,primaryInstitutionCoreId,assignedInstitutionsCoreIds){var deferred=$q.defer(),institutions=[];if(primaryInstitutionCoreId||(primaryInstitutionCoreId=0),!searchPhrase||searchPhrase.length<1)deferred.resolve(institutions);else{if(constants.dev)var endTime,startTime=(new Date).getTime();var queryString={"filter[name]":searchPhrase,"exclude[coreIdAsString][]":[primaryInstitutionCoreId]};assignedInstitutionsCoreIds.length&&angular.forEach(assignedInstitutionsCoreIds,function(value){value.coreId&&queryString["exclude[coreIdAsString][]"].push(value.coreId)}),RequestsQueueService.cancelAll("searchInstitutions");var Api=service.getInstitutionsSearchModel().get(queryString);RequestsQueueService.add(Api,"searchInstitutions"),Api.$promise.then(function(response){constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",response,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("searchInstitutions"),deferred.resolve(response.results)},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve([])})}return deferred.promise},service.getObjectColumn=function(dataObject,column){var filteredData=[];return angular.forEach(dataObject,function(data){data[column]&&filteredData.push(data[column])}),filteredData},service.hasChanges=function(sourceOne,sourceTwo,assigned){var assignedIds=service.getObjectColumn(assigned,"coreId");return sourceOne=sourceOne.sort(),sourceTwo=sourceTwo.sort(),assignedIds=assignedIds.sort(),!angular.equals(sourceOne,sourceTwo)||!angular.equals(sourceTwo,assignedIds)},service.saveInstitutions=function(userId,institutionsData,primaryInstitutionData,institutionsGroups){var deferred=$q.defer(),institutions=[];if(userId&&institutionsData&&primaryInstitutionData){if(constants.dev)var endTime,startTime=(new Date).getTime();institutionsData.length&&(institutions=service.getObjectColumn(institutionsData,"coreId")),RequestsQueueService.cancelAll("saveInstitutions");var Api=service.getUserModel().update({id:userId},{institutions:institutions,primaryInstitutionCoreId:primaryInstitutionData.primaryInstitutionCoreId,primaryInstitutionCoreIdAsString:primaryInstitutionData.primaryInstitutionCoreIdAsString,primaryInstitutionName:primaryInstitutionData.primaryInstitutionName,institutionsGroups:institutionsGroups});RequestsQueueService.add(Api,"saveInstitutions"),Api.$promise.then(function(response){constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",response,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("saveInstitutions"),deferred.resolve(1===response.modifiedCount)},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve(!1)})}else deferred.resolve(!1);return deferred.promise},service.getInstitutionsGroups=function(institutionCoreId){if(!institutionCoreId)throw"Missing Required";return service.getInstitutionsGroupsModel().get({id:institutionCoreId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data&&data.results&&data.results[0]&&data.results[0].groupMembers?data.results[0].groupMembers:[]},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getInstitutionNames=function(coreIds){var deferred=$q.defer(),names=[];if(coreIds&&coreIds.length){var cacheKey=coreIds.join(":");if(void 0!==service.institutionsNames[cacheKey])constants.dev&&$log.log("serving from cache"),deferred.resolve(service.institutionsNames[cacheKey]);else{if(constants.dev)var endTime,startTime=(new Date).getTime();RequestsQueueService.cancelAll("getInstitutionNames");var Api=service.getInstitutionNamesByCoreIdsModel().get({"filter[coreId][]":coreIds,"field[]":["coreId","name"]});RequestsQueueService.add(Api,"getInstitutionNames"),Api.$promise.then(function(response){constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",response,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("getInstitutionNames"),service.institutionsNames[cacheKey]=response.results,deferred.resolve(response.results)},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve(names)})}}else deferred.resolve(names);return deferred.promise},service},angular.module("qsHub").service("InstitutionsUsersListInstitutionsService",["$resource","$q","$log","constants","RequestsQueueService",App.services.InstitutionsUsersListInstitutionsService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.departmentOverview=function($scope,$rootScope,$controller,constants,InstitutionFactory,TuProfileFactory,TuProfileService,TuProfileDepartmentsService,InstitutionsService,InstitutionSwitchService,WatchService,GridService,$stateParams){$controller("TuProfileDepartmentsController",{$scope:$scope});var controller=this,departmentControllerAs=$scope.getTuProfileDepartmentController();$scope.showDepartmentEditForm=!1,$scope.showDepartmentAddForm=!1,controller.searchInProgress=!1,controller.isDatagridReloading=!1,controller.institution={},controller.institutionsList=[],controller.showInstitutionDeps=!1,controller.searchInstitution=function(searchPhrase){controller.searchInProgress=!0,InstitutionSwitchService.searchInstitutions(searchPhrase).then(function(results){controller.institutionsList=results,controller.searchInProgress=!1})},controller.isAddButtonDisabled=function(){return!controller.isInstitutionSelected()||controller.isRightSidePanelActive()},$scope.isDeleteButtonDisabled=function(){return $scope.deleteInProgress||!InstitutionFactory.getInstitutionIdDepartmentOverview()||!departmentControllerAs.hasDepartmentsToDelete()},controller.handleSearchInstitutionClick=function(institution){institution&&institution.coreId&&(InstitutionFactory.setInstitutionIdDepartmentOverview(institution.coreId),controller.coreId=institution.coreId,departmentControllerAs.clearDepartmentsToDelete())},controller.isInstitutionSelected=function(){return!!controller.showInstitutionDeps||null!==InstitutionFactory.getInstitutionIdDepartmentOverview()&&void 0!==InstitutionFactory.getInstitutionIdDepartmentOverview()},controller.isRightSidePanelActive=function(){return!(!$scope.showDepartmentEditForm&&!$scope.showDepartmentAddForm)},controller.reloadDatagrid=function(coreId){return!!coreId&&(controller.isDatagridReloading=!0,TuProfileDepartmentsService.getAllDepartmentsByCoreId(coreId).then(function(response){return controller.isDatagridReloading=!1,$scope.gridOptions.data=response,response}))},controller.hasNewDepartmentWatch=function(newDepartmentId){newDepartmentId&&controller.reloadDatagrid(controller.coreId).then(function(departmentsList){if(departmentsList){var i=0,department=null,total=departmentsList.length;for(i;i<total;i++)if((department=departmentsList[i]).id===newDepartmentId){TuProfileFactory.setDepartmentBeforeChanges(department);break}}$scope.selectedDepartmentId=newDepartmentId}).finally(function(){TuProfileFactory.setDepartmentEditFormVisibility(!0)})},controller.isDepartmentAddFormVisibleWatch=function(visible){$scope.showDepartmentAddForm=visible,visible=visible||TuProfileFactory.isDepartmentEditFormVisible(TuProfileFactory.getProfileTabs().departments),departmentControllerAs.toggleColumns(visible)},controller.isDepartmentEditFormVisible=function(visible){$scope.showDepartmentEditForm=visible,$scope.selectedDepartmentId=visible?TuProfileFactory.getDepartmentId():null,visible=visible||TuProfileFactory.isDepartmentAddFormVisible(TuProfileFactory.getProfileTabs().departments),departmentControllerAs.toggleColumns(visible)},controller.getInstitutionIdDepartmentOverviewWatch=function(newValue,oldValue){$stateParams.coreId&&(newValue=$stateParams.coreId),newValue!==oldValue&&newValue&&(controller.destruct(),InstitutionsService.getInstitutionData(newValue).then(function(data){var institutionData=data&&data.results?data.results[0]:null;InstitutionFactory.setDataDepartmentOverview(institutionData),InstitutionFactory.setInstitutionIdDepartmentOverview(newValue)}),controller.initWatches(newValue),departmentControllerAs.initDataGrid(newValue))},controller.initWatches=function(coreId){if(!coreId)return!1;WatchService.create($scope,TuProfileFactory.hasNewDepartment,controller.hasNewDepartmentWatch),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentAddFormVisible(TuProfileFactory.getProfileTabs().departments)},controller.isDepartmentAddFormVisibleWatch),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentEditFormVisible(TuProfileFactory.getProfileTabs().departments)},controller.isDepartmentEditFormVisible),$rootScope.$on(constants.events.logout,controller.destruct)},controller.destruct=function(){TuProfileFactory.reset(),TuProfileFactory.setDepartmentAddFormVisibility(!1),TuProfileFactory.setDepartmentEditFormVisibility(!1)},controller.showInstitutionDepartments=function(){$stateParams.coreId&&$stateParams.name&&void 0!==$stateParams.coreId&&(controller.initWatches($stateParams.coreId),controller.institution.selected={name:$stateParams.name+" ["+$stateParams.coreId+"]",coreId:$stateParams.coreId},departmentControllerAs.initDataGrid($stateParams.coreId),controller.showInstitutionDeps=!0,controller.coreId=$stateParams.coreId)},controller.init=function(){controller.showInstitutionDepartments(),InstitutionFactory.resetDepartmentOverview(),controller.destruct(),controller.activeInstitutionCoreId=$stateParams.coreId},controller.init(),WatchService.create($scope,InstitutionFactory.getInstitutionIdDepartmentOverview,controller.getInstitutionIdDepartmentOverviewWatch)},angular.module("qsHub").controller("DepartmentOverviewController",["$scope","$rootScope","$controller","constants","InstitutionFactory","TuProfileFactory","TuProfileService","TuProfileDepartmentsService","InstitutionsService","InstitutionSwitchService","WatchService","UiGridService","$stateParams",App.controllers.departmentOverview])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.departmentOverviewForm=function($scope,$controller,TuProfileFactory,InstitutionFactory,TuProfileDepartmentsService,WatchService,$stateParams){var TuProfileDepartmentFormController=$controller("TuProfileDepartmentForm",{$scope:$scope}),controller=this,departmentFormControllerAs=$scope.getTuProfileDepartmentForm();controller.handleUpgradeClick=departmentFormControllerAs.handleUpgradeClick,controller.isUpgradeDisabled=departmentFormControllerAs.isUpgradeDisabled,controller.tuSupportEmail=departmentFormControllerAs.tuSupportEmail,controller.isLoginRestricted=departmentFormControllerAs.isLoginRestricted,$scope.toggleDepartmentEditForm=function(){TuProfileFactory.setDepartmentEditFormVisibility()},$scope.toggleDepartmentAddForm=function(){TuProfileDepartmentFormController.resetAddForm(),TuProfileFactory.setDepartmentAddFormVisibility()},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getCampusData,function(newValue){newValue&&($scope.campusList=TuProfileDepartmentsService.formatCampusList(newValue))},!0),WatchService.create($scope,InstitutionFactory.getInstitutionIdDepartmentOverview,function(newValue,oldValue){newValue!==oldValue&&newValue&&($scope.newDepartmentBeforeChanges.parentCoreId=newValue,$scope.newDepartment.parentCoreId=newValue)}),WatchService.create($scope,TuProfileFactory.getDepartment,function(newValue,oldValue){newValue!==oldValue&&($scope.department=newValue,$scope.isInvalidDepartmentNameUpdate=!1,$scope.isInvalidBelongsToUpdate=!1,$scope.isInvalidNewDepartmentName=!1,$scope.isInvalidNewBelongsTo=!1)},!0),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentAddFormVisible(TuProfileFactory.getProfileTabs().departments)},function(){$stateParams.coreId&&void 0!==$stateParams.coreId&&($scope.newDepartmentBeforeChanges.parentCoreId=$stateParams.coreId,$scope.newDepartment.parentCoreId=$stateParams.coreId,$stateParams.coreId=null),TuProfileDepartmentFormController.resetAddForm()})},controller.init=function(){controller.initWatches(),$scope.newDepartment.parentCoreId=$stateParams.coreId,departmentFormControllerAs.initialiseForm(),$scope.forms&&$scope.forms.addDepartmentForm&&$scope.forms.addDepartmentForm.$setUntouched()},controller.init()},angular.module("qsHub").controller("DepartmentOverviewFormController",["$scope","$controller","TuProfileFactory","InstitutionFactory","TuProfileDepartmentsService","WatchService","$stateParams",App.controllers.departmentOverviewForm])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.InstitutionsTuPrograms=function($scope,$rootScope,$controller,constants,TuProfileFactory,TuProfileService,InstitutionSwitchService,InstitutionFactory,WatchService,GridService){$controller("TuProfileProgramsController",{$scope:$scope});var controller=this,programsControllerAs=$scope.getTuProfileProgramsController();$scope.showProgramEditForm=!1,$scope.showProgramAddForm=!1,controller.searchInProgress=!1,controller.institutionsDropdownList=[],controller.searchInstitution=function(searchPhrase){controller.searchInProgress=!0,InstitutionSwitchService.searchInstitutions(searchPhrase).then(function(results){controller.institutionsDropdownList=results,controller.searchInProgress=!1})},controller.loadTuProfileData=function(coreId){TuProfileService.getTuProfileData(coreId).then(function(data){$scope.profileDataLoaded=!0,$scope.tuProfile=data,TuProfileFactory.setData(data),TuProfileFactory.setProgramAddFormVisibility(!1),TuProfileFactory.setProgramEditFormVisibility(!1),$scope.tuProfileBeforeChanges=angular.copy(data),$scope.$broadcast(constants.events.institutionTuProfileChanges)})},$scope.handleSearchInstitutionClick=function(institution){institution&&institution.coreId&&(InstitutionFactory.setInstitutionIdTuProgramsOverview(institution.coreId),programsControllerAs.clearProgramsToDelete())},$scope.isInstitutionSelected=function(){return!(null===InstitutionFactory.getInstitutionIdTuProgramsOverview()||!angular.isDefined(InstitutionFactory.getInstitutionIdTuProgramsOverview()))},$scope.isRightSidePanelActive=function(){return!(!$scope.showProgramEditForm&&!$scope.showProgramAddForm)},controller.getInstitutionIdTuProgramsOverviewWatch=function(newValue,oldValue){newValue!==oldValue&&newValue?(controller.coreId=newValue,controller.initWatches(newValue),controller.loadTuProfileData(newValue),programsControllerAs.initDataGrid(newValue)):InstitutionFactory.setInstitutionIdTuProgramsOverview(null)},controller.hasNewProgramWatch=function(newProgramId){newProgramId&&programsControllerAs.reloadDatagrid(controller.coreId).then(function(programsList){if(programsList){var i=0,program=null,total=programsList.length;for(i;i<total;i++)if((program=programsList[i]).id===newProgramId){TuProfileFactory.setProgramBeforeChanges(program);break}}$scope.selectedProgramId=newProgramId}).finally(function(){TuProfileFactory.setProgramEditFormVisibility(!0)})},controller.isProgramAddFormVisibleWatch=function(visible){$scope.showProgramAddForm=visible,visible=visible||TuProfileFactory.isProgramEditFormVisible(TuProfileFactory.getProfileTabs().programs),programsControllerAs.toggleColumns(visible)},controller.isProgramEditFormVisibleWatch=function(visible){$scope.showProgramEditForm=visible,$scope.selectedProgramId=visible?TuProfileFactory.getProgramId():null,visible=visible||TuProfileFactory.isProgramAddFormVisible(TuProfileFactory.getProfileTabs().programs),programsControllerAs.toggleColumns(visible)},controller.initWatches=function(coreId){if(!coreId)return!1;WatchService.create($scope,TuProfileFactory.hasNewProgram,controller.hasNewProgramWatch),WatchService.create($scope,function(){return TuProfileFactory.isProgramAddFormVisible(TuProfileFactory.getProfileTabs().programs)},controller.isProgramAddFormVisibleWatch),WatchService.create($scope,function(){return TuProfileFactory.isProgramEditFormVisible(TuProfileFactory.getProfileTabs().programs)},controller.isProgramEditFormVisibleWatch),$rootScope.$on(constants.events.logout,controller.destruct)},controller.destruct=function(){TuProfileFactory.reset(),$scope.showProgramEditForm=!1,$scope.showProgramAddForm=!1},WatchService.create($scope,InstitutionFactory.getInstitutionIdTuProgramsOverview,controller.getInstitutionIdTuProgramsOverviewWatch)},angular.module("qsHub").controller("InstitutionsTuProgramsController",["$scope","$rootScope","$controller","constants","TuProfileFactory","TuProfileService","InstitutionSwitchService","InstitutionFactory","WatchService","UiGridService",App.controllers.InstitutionsTuPrograms])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.InstitutionsTuProgramsForm=function($scope,$controller,InstitutionFactory,TuProfileDepartmentsService,InstitutionsService,WatchService){$controller("TuProfileProgramForm",{$scope:$scope});var controller=this,programFormControllerAs=$scope.getTuProfileProgramFormController();controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getInstitutionIdTuProgramsOverview,function(newValue){newValue&&(TuProfileDepartmentsService.getAllDepartments(newValue,{page:1,count:1e3}),$scope.newProgram.institutionCoreId=newValue,$scope.newProgramBeforeChanges.institutionCoreId=newValue,InstitutionsService.getInstitutionData(newValue).then(function(data){var institutionData=data&&data.results?data.results[0]:null;$scope.InstitutionNameTuPrograms=institutionData.name}),$scope.isClientDepartment=InstitutionFactory.isClientDepartment(),$scope.isClientDepartment&&($scope.newProgram.departmentCoreId=newValue,$scope.departmentsList=[{coreId:newValue,name:$scope.InstitutionNameTuPrograms}],$scope.newProgramBeforeChanges={institutionCoreId:newValue,departmentCoreId:newValue}))})},controller.init=function(){programFormControllerAs.init(),programFormControllerAs.initForm(),$scope.forms&&$scope.forms.addProgramForm&&$scope.forms.addProgramForm.$setUntouched(),controller.initWatches(),angular.extend(controller,programFormControllerAs)},controller.init()},angular.module("qsHub").controller("InstitutionsTuProgramsFormController",["$scope","$controller","InstitutionFactory","TuProfileDepartmentsService","InstitutionsService","WatchService",App.controllers.InstitutionsTuProgramsForm])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.institutionsList=function($scope,$resource,$stateParams,constants,InstitutionsListService,SharedProfileFactory,NotifierFactory,InstitutionFactory,InstitutionsListFactory,orderBy,LoginService,TuProfileDepartmentsService,uiGridConstants,$timeout,WatchService,ModalService,TmProfileProgramsService,InstitutionService,GridService,InstitutionsListSubscriptionsFactory,TimeService){var controller=this;controller.devMode=constants.dev,controller.filters={},controller.urls={tu:constants.drupal.tu.url+"/node/",tm:constants.drupal.tm.url+"/node/"},controller.newInstitution=!1,controller.isClient=!1,controller.isSimple=!1,controller.isAdvancedProgram=!1,controller.subscriptionDates=[],controller.isDisplayDepartmentEnabled=!1,$scope.institution={},$scope.institutionBeforeChanges={},$scope.columnsBeforeHide=[],$scope.forms={},$scope.filterActive=!0,$scope.isDatagridReloading=!1,$scope.isSelectReloading=!1,$scope.basicDetailsSubmitInProgress=!1,$scope.subscriptionProfilesSubmitInProgress=!1,$scope.subscriptionStatisticsSubmitInProgress=!1,$scope.drupalSubmitInProgress=!1,$scope.institutionGroupSubmitInProgress=!1,$scope.institutionsWithoutGroup=[],$scope.isDatagridRendered=!1,$scope.isProgramDowngradeDisabled=!0,$scope.noChanges=!0,$scope.visible={},$scope.datePickerTu={date:{startDate:null,endDate:null},options:{ranges:{"6 months from today":[TimeService.now(),TimeService.add(6,"months")],"12 months from today":[TimeService.now(),TimeService.add(12,"months")]},eventHandlers:{"apply.daterangepicker":function(ev){$scope.handleDateRangePickerApplyClick(ev,"tu")}},opens:"center",alwaysShowCalendars:!0}},controller.setSelectedItem=function(typeId){$scope.selectedItem={selectedOptionType:{},parentCoreId:null},typeId&&angular.forEach(controller.typesList,function(item){item.uniqueId===typeId&&($scope.selectedItem.selectedOptionType=item)})},$scope.datePickerTm={date:{startDate:null,endDate:null},options:{ranges:{"6 months from today":[TimeService.now(),TimeService.add(6,"months")],"12 months from today":[TimeService.now(),TimeService.add(12,"months")]},eventHandlers:{"apply.daterangepicker":function(ev){$scope.handleDateRangePickerApplyClick(ev,"tm")}},opens:"center",alwaysShowCalendars:!0}},$scope.activeTab=0,$scope.disabledInstitutionListTabs={basicDetails:!1,subscriptions:!1,campuses:!1,institutionGroups:!1,drupal:!1},$scope.handleDateRangePickerApplyClick=function(element,type){element.model.startDate||(element.model.startDate=TimeService.now()),element.model.endDate||(element.model.endDate=TimeService.now()),$scope.institution.subscriptions[type].startDate=TimeService.getInUnix(element.model.startDate),$scope.institution.subscriptions[type].endDate=TimeService.getInUnix(element.model.endDate)},controller.similarNames={display:!1,loading:!1,results:[]},controller.showDepartments={display:!1,loading:!1,results:[]},SharedProfileFactory.setInstitutionListShowCampusInfoBlock(!1),$scope.disabledSubmit=function(){return $scope.subscriptionProfilesSubmitInProgress||$scope.institution.subscriptions&&$scope.institution.subscriptions.tm&&$scope.institution.subscriptions.tm.subscribed&&$scope.institution.subscriptions.tm.advanced&&(!$scope.institution.subscriptions.tm.startDate||!$scope.institution.subscriptions.tm.endDate)||$scope.institution.subscriptions&&$scope.institution.subscriptions.tu&&$scope.institution.subscriptions.tu.subscribed&&$scope.institution.subscriptions.tu.advanced&&(!$scope.institution.subscriptions.tu.startDate||!$scope.institution.subscriptions.tu.endDate)},controller.reloadDatagrid=function(){controller.getPage()},controller.populateSubscriptionsDateDatepickers=function(){$scope.institution&&$scope.institution.subscriptions&&($scope.institution.subscriptions.tu&&$scope.institution.subscriptions.tu.startDate&&$scope.institution.subscriptions.tu.endDate&&($scope.datePickerTu.date.startDate=InstitutionsListService.formatSubscriptionDate($scope.institution.subscriptions.tu.startDate),$scope.datePickerTu.date.endDate=InstitutionsListService.formatSubscriptionDate($scope.institution.subscriptions.tu.endDate)),$scope.institution.subscriptions.tm&&$scope.institution.subscriptions.tm.startDate&&$scope.institution.subscriptions.tm.endDate&&($scope.datePickerTm.date.startDate=InstitutionsListService.formatSubscriptionDate($scope.institution.subscriptions.tm.startDate),$scope.datePickerTm.date.endDate=InstitutionsListService.formatSubscriptionDate($scope.institution.subscriptions.tm.endDate)))},controller.toggleColumns=function(hide,forceClose){if(angular.isUndefined(forceClose)&&(forceClose=!1),$scope.gridOptions)if(hide&&!forceClose)angular.forEach($scope.gridOptions.columnDefs,function(column){$scope.visible[column.field]=column.visible,column.visible="name"===column.field});else{var columns=[];angular.forEach($scope.columnsBeforeHide,function(column){column.visible=!0,columns.push(column.field)}),angular.forEach($scope.gridOptions.columnDefs,function(column){-1!==columns.indexOf(column.field)&&(column.visible=!0)}),$scope.columnsBeforeHide=[],$scope.comesFromProfile=!1}},controller.getTuWarningMessage=function(){return $scope.institution.subscriptions&&$scope.institution.subscriptions.tu&&$scope.institution.subscriptions.tu.subscribed&&$scope.institution.enabled&&!$scope.institution.enabled.ug&&!$scope.institution.enabled.pg&&$scope.institutionBeforeChanges.enabled&&$scope.institutionBeforeChanges.enabled.ug&&$scope.institutionBeforeChanges.enabled.pg?"Institution will be unpublished from topuniversities.com. Press update to continue.":$scope.institution.subscriptions&&$scope.institution.subscriptions.tu&&$scope.institution.subscriptions.tu.subscribed&&$scope.institution.enabled&&!$scope.institution.enabled.ug&&$scope.institutionBeforeChanges.enabled&&$scope.institutionBeforeChanges.enabled.ug?"Undergraduate profile will be unpublished on topuniversities.com. You can access profile in Qs Hub, however will not be able to publish. Press update to continue":$scope.institution.subscriptions&&$scope.institution.subscriptions.tu&&$scope.institution.subscriptions.tu.subscribed&&$scope.institution.enabled&&!$scope.institution.enabled.pg&&$scope.institutionBeforeChanges.enabled&&$scope.institutionBeforeChanges.enabled.pg?"Postgraduate profile will be unpublished on topuniversities.com. You can access profile in Qs Hub, however will not be able to publish. Press update to continue":!!($scope.institution.subscriptions&&$scope.institution.subscriptions.tu&&!$scope.institution.subscriptions.tu.subscribed&&$scope.institutionBeforeChanges.subscriptions&&$scope.institutionBeforeChanges.subscriptions.tu&&$scope.institutionBeforeChanges.subscriptions.tu.subscribed)&&"Disabling in QS Hub will also disable profile in topuniversities.com. If you wish to continue please press update."},controller.hasTuWarning=function(){return!!controller.getTuWarningMessage()},controller.getTmWarningMessage=function(){return $scope.institution.subscriptions&&$scope.institution.subscriptions.tm&&$scope.institution.subscriptions.tm.subscribed&&$scope.institution.enabled&&!$scope.institution.enabled.tm&&$scope.institutionBeforeChanges.enabled&&$scope.institutionBeforeChanges.enabled.tm?"Mba profile will be unpublished on topmba.com. You can access profile in Qs Hub, however will not be able to publish. Press update to continue.":!!($scope.institution.subscriptions&&$scope.institution.subscriptions.tm&&!$scope.institution.subscriptions.tm.subscribed&&$scope.institutionBeforeChanges.subscriptions&&$scope.institutionBeforeChanges.subscriptions.tm&&$scope.institutionBeforeChanges.subscriptions.tm.subscribed)&&"Disabling in QS Hub will also disable profile in topmba.com. If you wish to continue please press update."},controller.hasTmWarning=function(){return!!controller.getTmWarningMessage()},controller.isTuSubscriptionDatesInvalid=function(){return $scope.institution.subscriptions&&$scope.institution.subscriptions.tu&&$scope.institution.subscriptions.tu.subscribed&&$scope.institution.subscriptions.tu.advanced&&(!$scope.institution.subscriptions.tu.startDate||""===$scope.institution.subscriptions.tu.startDate||!$scope.institution.subscriptions.tu.endDate||""===$scope.institution.subscriptions.tu.endDate)},controller.isTmSubscriptionDatesInvalid=function(){return $scope.institution.subscriptions&&$scope.institution.subscriptions.tm&&$scope.institution.subscriptions.tm.subscribed&&$scope.institution.subscriptions.tm.advanced&&(!$scope.institution.subscriptions.tm.startDate||""===$scope.institution.subscriptions.tm.startDate||!$scope.institution.subscriptions.tm.endDate||""===$scope.institution.subscriptions.tm.endDate)},$scope.handleDatagridRowClick=function(institution,forceClose){controller.resetBasicDetailsForm(),controller.resetDrupalForm(),controller.isClient=InstitutionsListService.isClientDepartment(institution.typeId),controller.isSimple=InstitutionsListService.isSimpleDepartment(institution.typeId),angular.isUndefined(forceClose)&&(forceClose=!1),$scope.institutionBeforeChanges=institution,$scope.noChanges=!0,$scope.selectedInstitutionId=$scope.selectedInstitutionId===institution.id?null:institution.id,institution.groupMembers&&(institution.groupMembers=InstitutionsListService.excludeGroupMember(institution.coreId,institution.groupMembers),$scope.institutionsWithoutGroup=institution.groupMembers,$scope.institutionBeforeChanges.groupMembers=angular.copy(institution.groupMembers)),$scope.institution=angular.copy(institution),$scope.institution.campus=orderBy($scope.institution.campus,"order",!1),$scope.showInfoBlock=!forceClose&&$scope.selectedInstitutionId===institution.id,$scope.gridOptions.enableGridMenu=!$scope.showInfoBlock,$scope.gridOptions.enableColumnResizing=null===$scope.selectedInstitutionId,$scope.gridOptions.enablePaginationControls=null===$scope.selectedInstitutionId,SharedProfileFactory.setInstitutionListShowCampusInfoBlock(!1),$scope.selectedInstitutionId?(controller.setSelectedItem(institution.typeId),controller.allowedInstitutionTypes(!0),$scope.disabledInstitutionListTabs.subscriptions=!1,$scope.disabledInstitutionListTabs.campuses=!1,$scope.disabledInstitutionListTabs.institutionGroups=!1,$scope.disabledInstitutionListTabs.drupal=!1):(controller.allowedInstitutionTypes(),$scope.disabledInstitutionListTabs.subscriptions=!0,$scope.disabledInstitutionListTabs.campuses=!0,$scope.disabledInstitutionListTabs.institutionGroups=!0,$scope.disabledInstitutionListTabs.drupal=!0),$scope.filterActive=!0,$scope.selectedInstitutionId!==institution.id||forceClose||(angular.forEach($scope.gridOptions.columnDefs,function(column){angular.isDefined(column.visible)&&!0===column.visible&&$scope.columnsBeforeHide.push(column)}),$scope.filterActive=!1,controller.populateSubscriptionsDateDatepickers(),$scope.array=[],$scope.institutionsWithoutGroup=[]),controller.isAdvancedProgram=InstitutionsListService.isAdvancedProgram(institution.typeId),controller.isAdvancedProgram&&controller.isProgramDowngradeEnabled(),(controller.isAdvancedProgram||controller.isTopLevelInstitution(institution.typeId))&&TuProfileDepartmentsService.getAllDepartmentsByCoreId(institution.coreId).then(function(response){controller.isDisplayDepartmentEnabled=!!Object.keys(response).length}),controller.toggleColumns("undefined"!==institution.id&&$scope.selectedInstitutionId===institution.id,forceClose)},controller.allowProgramDowngrade=function(){return!controller.programDowngradeInProgress&&$scope.institution&&$scope.institution.active&&controller.isAdvancedProgram},controller.handleProgramDowngradeClick=function(e){if($scope.isProgramDowngradeDisabled)return e.preventDefault(),!1;var modalOptions={closeButtonText:"Cancel",actionButtonText:"Yes",actionButtonClass:"danger",headerText:"Program Downgrade",bodyText:"Are you sure you want to downgrade this program?"};ModalService.show({},modalOptions).then(function(){controller.programDowngradeInProgress=!0,TmProfileProgramsService.downgrade($scope.institution.coreId).then(controller.programDowngradeCallback)})},controller.programDowngradeCallback=function(success){success&&($scope.handleDatagridRowClick($scope.institution),controller.reloadDatagrid()),controller.programDowngradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Downgrade successfully!":"Downgrade failed!","Downgrade to Simple")},controller.isProgramDowngradeEnabled=function(){$scope.isProgramDowngradeDisabled=$scope.institution.subscriptions.tm.subscribed&&$scope.institution.subscriptions.tm.advanced&&null!==$scope.institution.subscriptions.tm.startDate&&null!==$scope.institution.subscriptions.tm.endDate&&$scope.institution.subscriptions.tm.startDate<TimeService.nowUnix()&&$scope.institution.subscriptions.tm.endDate>TimeService.nowUnix()||controller.isFutureTmSubscription()},controller.isFutureTmSubscription=function(){return $scope.institution.subscriptions.tm.subscribed&&null!==$scope.institution.subscriptions.tm.startDate&&$scope.institution.subscriptions.tm.startDate>TimeService.nowUnix()},controller.downgradeProgramTooltipText=function(){return"Disabled due to tm "+(controller.isFutureTmSubscription()?"future":"current")+" subscription"},$scope.handleResetClick=function(){$scope.institution=angular.copy($scope.institutionBeforeChanges),$scope.noChanges=!0},$scope.allowLoginAs=function(){return LoginService.allowLoginAs($scope.institution)},$scope.handleLoginAsClick=function(){LoginService.getTuProfilesRedirect({coreId:$scope.institution.coreId})},$scope.handleDeactivateClick=function(institution){if(!institution||!institution.id||$scope.deactivateInProgress)return!1;$scope.deactivateInProgress=!0,InstitutionsListService.deactivate(institution.id).then(controller.deactivationCallback)},$scope.handleActivateClick=function(institution){if(!institution.id||$scope.activateInProgress)return!1;$scope.activateInProgress=!0,InstitutionsListService.activate(institution.id).then(controller.activationCallback)},controller.deactivationCallback=function(success){$scope.institution.active=!success,success&&($scope.institutionBeforeChanges.active=$scope.institution.active,controller.reloadDatagrid()),$scope.deactivateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Deactivated successfully!":"Deactivation failed!","Deactivation")},controller.activationCallback=function(success){$scope.institution.active=!!success,success&&($scope.institutionBeforeChanges.active=$scope.institution.active,controller.reloadDatagrid()),$scope.activateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Activated successfully!":"Activation failed!","Activation")},controller.basicDetailsSubmitCallback=function(response){var message="Basic Details",success=!1;response&&((success=!response.error)?(response.hasOwnProperty("insertedId")&&response.insertedId.length>0&&($scope.institution.id=response.insertedId,$scope.institution.coreId=response.insertedCoreId,$scope.institution.coreIdAsString=response.insertedCoreId.toString(),$scope.institution.tuAdvanced=!1,$scope.institution.tmAdvanced=!1,$scope.institution.active=!0,$scope.institution.subscriptions={all:{subscribed:!0}},$scope.activeTab=1,$scope.disabledInstitutionListTabs.subscriptions=!1,$scope.disabledInstitutionListTabs.campuses=!1,$scope.disabledInstitutionListTabs.institutionGroups=!1,$scope.disabledInstitutionListTabs.drupal=!1,controller.newInstitution=!0,$scope.noChanges=!0,$scope.selectedInstitutionId=$scope.institution.id,message="Institution added successfully!"),$scope.institutionBeforeChanges=angular.copy($scope.institution),controller.reloadDatagrid(),controller.isClient=InstitutionsListService.isClientDepartment($scope.institution.typeId)):response.hasOwnProperty("message")&&response.message.length>0&&(message=response.message)),$scope.basicDetailsSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!",message)},$scope.handleBasicDetailsSubmit=function(){if(controller.resetBasicDetailsForm(),!$scope.basicDetailsSubmitInProgress&&$scope.forms.basicDetailsForm&&$scope.forms.basicDetailsForm.$valid||($scope.forms.basicDetailsForm.name.$valid||(controller.isInvalidNewSchoolName=!0),$scope.forms.basicDetailsForm.typeId.$valid||(controller.isInvalidType=!0),$scope.forms.basicDetailsForm.countryCode.$valid||(controller.isInvalidCountry=!0),controller.isInvalidType||$scope.forms.basicDetailsForm.belongsTo.$valid||(controller.isInvalidBelongsTo=!0),controller.isInvalidType||void 0!==$scope.institution.parentName||(controller.isInvalidParentInstitution=!0)),controller.isInvalidType||controller.isInvalidNewSchoolName||controller.isInvalidCountry||controller.isInvalidBelongsTo||controller.isInvalidParentInstitution)return!1;$scope.basicDetailsSubmitInProgress=!0,$scope.institution.id?InstitutionsListService.saveBasicDetails($scope.institution).then(controller.basicDetailsSubmitCallback):InstitutionsListService.insertBasicDetails($scope.institution).then(controller.basicDetailsSubmitCallback)},controller.resetBasicDetailsForm=function(){controller.isInvalidNewSchoolName=!1,controller.isInvalidType=!1,controller.isInvalidCountry=!1,controller.isInvalidBelongsTo=!1,controller.isInvalidParentInstitution=!1},controller.setIsInvalidNewSchoolName=function(flag){controller.isInvalidNewSchoolName=flag},controller.setIsInvalidBelongsTo=function(value){controller.isInvalidBelongsTo=value},controller.setIsInvalidParentInstitution=function(value){controller.isInvalidParentInstitution=value},$scope.handleDrupalSubmit=function(){if(controller.resetDrupalForm(),!$scope.drupalSubmitInProgress&&$scope.forms.drupalForm&&$scope.forms.drupalForm.$valid||($scope.forms.drupalForm.tuRegion&&!$scope.forms.drupalForm.tuRegion.$valid&&(controller.isInvalidTuRegion=!0),$scope.forms.drupalForm.tmRegion&&!$scope.forms.drupalForm.tmRegion.$valid&&(controller.isInvalidTmRegion=!0)),controller.isInvalidTuRegion||controller.isInvalidTmRegion)return!1;InstitutionsListService.saveDrupal($scope.institution).then(function(success){$scope.drupalSubmitInProgress=!1,$scope.institutionBeforeChanges=angular.copy($scope.institution),controller.reloadDatagrid(),NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Drupal")})},controller.resetDrupalForm=function(){controller.isInvalidTuRegion=!1,controller.isInvalidTmRegion=!1},controller.setIsInvalidTuRegion=function(value){controller.isInvalidTuRegion=value},controller.setIsInvalidTmRegion=function(value){controller.isInvalidTmRegion=value},$scope.disallowGroupsSubmit=function(){return!!$scope.institutionGroupSubmitInProgress||($scope.institutionBeforeChanges.groupMembers&&$scope.institution.groupMembers?angular.equals($scope.institutionBeforeChanges.groupMembers,$scope.institution.groupMembers):!($scope.institutionBeforeChanges.groupMembers&&$scope.institutionBeforeChanges.groupMembers.length||$scope.institution.groupMembers&&$scope.institution.groupMembers.length))},$scope.handleInstitutionGroupSubmit=function(){if($scope.institutionGroupSubmitInProgress||!$scope.forms.basicDetailsForm||!$scope.forms.basicDetailsForm.$valid)return!1;$scope.institutionGroupSubmitInProgress=!0,InstitutionsListService.saveInstitutionGroup($scope.institution).then(function(success){$scope.institutionGroupSubmitInProgress=!1,success&&($scope.institutionBeforeChanges.groupMembers=angular.copy($scope.institution.groupMembers),controller.reloadDatagrid()),NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Group Institutions")})},$scope.searchInstitutionsWithoutGroup=function(searchPhrase){$scope.isSelectReloading=!0,InstitutionsListService.searchInstitutionsWithoutGroup($scope.institution.coreId,searchPhrase).then(function(results){$scope.isSelectReloading=!1,$scope.institutionsWithoutGroup=results})},$scope.handleSubscriptionSubmit=function(){if($scope.subscriptionProfilesSubmitInProgress||!$scope.forms.subscriptionForm||!$scope.forms.subscriptionForm.$valid)return!1;$scope.subscriptionProfilesSubmitInProgress=!0,InstitutionsListService.saveSubscription($scope.institution).then(function(success){if($scope.subscriptionProfilesSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Subscriptions"),$scope.institution.subscriptionsAsArray=[],$scope.institution.subscriptionsAsString="",InstitutionsListService.getAllSubscriptions($scope.institution.coreId).then(function(res){controller.subscriptionDates=res;var key,max=-1/0;controller.subscriptionDates.forEach(function(v,k){max<+v&&(max=+v,key=k)}),InstitutionsListFactory.setInvalidDates(controller.subscriptionDates[key])}),success){$scope.institution.subscriptions&&angular.forEach($scope.institution.subscriptions,function(subscription){subscription.subscribed&&subscription.advanced&&subscription.endDate<TimeService.nowUnix()&&(subscription.advanced=!1),subscription.subscribed&&subscription.advanced&&subscription.startDate>TimeService.nowUnix()&&(subscription.advanced=!1)}),InstitutionsListService.appendSubscriptionsData([$scope.institution]);var currentCoreId=$scope.institution.coreId;if(currentCoreId){var activeCoreId=InstitutionFactory.getCoreId();activeCoreId&&currentCoreId===activeCoreId&&InstitutionFactory.setSubscriptions(angular.copy($scope.institution.subscriptions))}controller.isAdvancedProgram&&controller.isProgramDowngradeEnabled(),$scope.institutionBeforeChanges=angular.copy($scope.institution),controller.reloadDatagrid(),InstitutionsListSubscriptionsFactory.setHasSubscriptionsChanges(!0)}})},$scope.updateCountryName=function(){controller.isInvalidCountry=!1,InstitutionsListService.getCountryNameByCode($scope.institution.countryCode).then(function(countryName){$scope.institution.countryName=countryName})},controller.defaultPaginationOptions={page:1,limit:25},controller.paginationOptions=GridService.getColumnsFilters(constants.gridNameSpaces.institutionsGridFilters,[]),controller.columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.institutionsGridVisibility),controller.getPage=function(){return InstitutionsListService.getAll(angular.merge({},controller.paginationOptions,controller.defaultPaginationOptions)).then(function(response){if(response&&0===response.length)return!1;if($scope.gridOptions||($scope.gridOptions={}),controller.newInstitution){var found=!1;if(angular.forEach(response.results,function(institution){angular.equals(institution.id,$scope.institution.id)&&(found=!0)}),!found){for(response.results.unshift($scope.institution);response.results.length>$scope.gridOptions.paginationPageSize;)response.results.pop();response.totalMatching=response.results.length}controller.newInstitution=!1}$scope.gridOptions.totalItems=response.totalMatching,$scope.gridOptions.data=response.results,$scope.gridOptions.minRowsToShow=response.totalFiltered.length<25?response.totalFiltered:25})},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.institutionsGridVisibility),reload=!1,field="";columnsVisibility&&!$scope.comesFromProfile&&$scope.filterActive&&angular.forEach($scope.gridOptions.columnDefs,function(column,key){field=controller.convertVisibleColumnsField(column.field),!0===columnsVisibility[field]&&!1===column.visible&&($scope.gridOptions.columnDefs[key].filter.term=null,controller.paginationOptions["filter["+field+"]"]=null,reload=!0)}),!$scope.comesFromProfile&&$scope.filterActive&&controller.saveStateVisibility(),reload&&controller.getPage()},controller.handleGridFiltersChanges=function(){if(null!==$scope.gridApi){var sortKeys=[];if(angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.filters&&"undefined"!==column.filters[0].term&&column.filters[0].type===uiGridConstants.filter.SELECT&&"object"==typeof column.filters[0].term&&null!==column.filters[0].term&&void 0!==column.filters[0].term.value&&(column.filters[0].term=column.filters[0].term.value),void 0!==column.sort.priority&&(sortKeys[column.sort.priority]=column.name)}),sortKeys.length>1){var latestSortKey=sortKeys.pop();angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.sort.priority&&column.name!==latestSortKey&&(column.sort={})})}controller.paginationOptions=angular.copy(controller.defaultPaginationOptions);var filterColumn,sortColumn;angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.filters&&"undefined"!==column.filters[0].term&&(filterColumn=column.filters[0].column?column.filters[0].column:column.field,controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term),void 0!==column.sort.direction&&(sortColumn=column.sort.column?column.sort.column:column.field,controller.paginationOptions["sorting["+sortColumn+"]"]=column.sort.direction)}),$scope.comesFromProfile||GridService.storeColumnsFilters(constants.gridNameSpaces.institutionsGridFilters,controller.paginationOptions),angular.isDefined($scope.filterTimeout)&&$timeout.cancel($scope.filterTimeout),$scope.filterTimeout=$timeout(function(){controller.getPage()},500)}},controller.allowViewTuSite=function(){return $scope.institutionBeforeChanges&&$scope.institutionBeforeChanges.subscriptions&&$scope.institutionBeforeChanges.subscriptions.tu&&$scope.institutionBeforeChanges.subscriptions.tu.subscribed},controller.allowViewTmSite=function(){return $scope.institutionBeforeChanges&&$scope.institutionBeforeChanges.subscriptions&&$scope.institutionBeforeChanges.subscriptions.tm&&$scope.institutionBeforeChanges.subscriptions.tm.subscribed},controller.isViewTuSiteEnabled=function(){return angular.isDefined($scope.institutionBeforeChanges)&&$scope.institutionBeforeChanges&&$scope.institutionBeforeChanges.enabled&&($scope.institutionBeforeChanges.enabled.ug||$scope.institutionBeforeChanges.enabled.pg)&&$scope.institutionBeforeChanges.hasOwnProperty("nids")&&null!==$scope.institutionBeforeChanges.nids&&$scope.institutionBeforeChanges.nids.hasOwnProperty("master")&&$scope.institutionBeforeChanges.nids.master},controller.isClientDepartmentDowngradeDisabled=function(){return controller.isClientDepartment($scope.institutionBeforeChanges.typeId)&&$scope.institutionBeforeChanges&&$scope.institutionBeforeChanges.subscriptions&&($scope.institutionBeforeChanges.subscriptions.tu&&$scope.institutionBeforeChanges.subscriptions.tu.subscribed||$scope.institutionBeforeChanges.subscriptions.tm&&$scope.institutionBeforeChanges.subscriptions.tm.subscribed)},controller.allowViewTmSiteButtonEnabled=function(){return InstitutionService.isTmViewingEnabled($scope.institutionBeforeChanges)},controller.initDataGrid=function(){$scope.isDatagridReloading=!1,$scope.typesList=[],InstitutionsListService.getTypeFilterData(!0).then(function(results){$scope.typesList=results});var rankingsOptions=[];if(angular.forEach(controller.subscriptionsList,function(item){InstitutionsListService.isStatisticsSubscription(item.type)&&rankingsOptions.push({value:item.handle,label:item.name})}),controller.activeInstitutionCoreId=$stateParams.coreId,controller.activeInstitutionCoreId){$scope.comesFromProfile=!0;var filters=angular.copy(controller.paginationOptions);angular.forEach(filters,function(item,key){-1!==key.indexOf("filter")&&(filters[key]=null,controller.paginationOptions[key]=null)}),GridService.storeColumnsFilters(constants.gridNameSpaces.institutionsGridFilters,filters),controller.activeInstitutionCoreId="="+controller.activeInstitutionCoreId,controller.paginationOptions["filter[coreIdAsString]"]=controller.activeInstitutionCoreId}$scope.countriesList=[],InstitutionsListService.getCountries().then(function(results){controller.countriesList=results,angular.forEach(results,function(data){$scope.countriesList.push({value:data.countryCode,label:data.name})})});var selectTemplate="/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html",selectCellTemplate="/scripts/shared/ui-grid/templates/selectCellTemplate.html";controller.getPage().then(function(){$scope.gridOptions=angular.extend({},$scope.gridOptions,{enableSorting:!0,exporterMenuCsv:!1,enableGridMenu:!0,showGridFooter:!1,selectedItems:$scope.selectedProgramId,enableFiltering:!0,useExternalFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,paginationPageSizes:[25,50,100],paginationPageSize:25,useExternalPagination:!0,useExternalSorting:!0,rowTemplate:"/scripts/components/institutions/list/datagrid/rowTemplate.html",columnDefs:[{displayName:"Name",visible:!0,field:"name",filter:{term:GridService.getFilterByField(controller.paginationOptions,"name")}},{displayName:"Local Name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"localName",!1),field:"localName",filter:{term:GridService.getFilterByField(controller.paginationOptions,"localName")}},{displayName:"Core ID",visible:!!controller.activeInstitutionCoreId||GridService.getVisibilityByField(controller.columnsVisibility,"coreId",!0),field:"coreId",maxWidth:120,filter:{term:controller.activeInstitutionCoreId?controller.activeInstitutionCoreId:GridService.getFilterByField(controller.paginationOptions,"coreId")}},{displayName:"Parent Institution Core ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"parentCoreId",!1),field:"parentCoreId",maxWidth:120,filter:{term:GridService.getFilterByField(controller.paginationOptions,"parentCoreId")}},{displayName:"Parent Institution Name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"parentName",!1),field:"parentName",maxWidth:300,filter:{term:GridService.getFilterByField(controller.paginationOptions,"parentName")}},{displayName:"Type",visible:GridService.getVisibilityByField(controller.columnsVisibility,"typeId",!0),field:"typeId",filter:{column:"typeId",type:uiGridConstants.filter.SELECT,selectOptions:$scope.typesList,term:GridService.getFilterByField(controller.paginationOptions,"typeId")},filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Country Name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"countryCode",!0),field:"countryCode",filter:{column:"countryCode",type:uiGridConstants.filter.SELECT,selectOptions:$scope.countriesList,searchEnabled:!0,term:GridService.getFilterByField(controller.paginationOptions,"countryCode")},filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Filemaker ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"filemakerId",!1),field:"filemakerId",filter:{term:GridService.getFilterByField(controller.paginationOptions,"filemakerId")}},{displayName:"Has No Departments",visible:GridService.getVisibilityByField(controller.columnsVisibility,"hasNoDepartments",!1),field:"hasNoDepartments",filter:{type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"hasNoDepartments")},filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Active",visible:GridService.getVisibilityByField(controller.columnsVisibility,"active",!0),field:"active",filter:{column:"active",type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"active")},maxWidth:80,filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Advanced TU",visible:GridService.getVisibilityByField(controller.columnsVisibility,"tuAdvanced",!0),field:"tuAdvanced",filter:{type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"tuAdvanced")},enableSorting:!1,maxWidth:120,filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Advanced TM",visible:GridService.getVisibilityByField(controller.columnsVisibility,"tmAdvanced",!0),field:"tmAdvanced",filter:{type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"tmAdvanced")},enableSorting:!1,maxWidth:120,filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Rankings",visible:GridService.getVisibilityByField(controller.columnsVisibility,"subscriptionsAsString",!0),field:"subscriptionsAsString",enableSorting:!1,filter:{type:uiGridConstants.filter.SELECT,selectOptions:rankingsOptions,term:GridService.getFilterByField(controller.paginationOptions,"subscriptionsAsString")},filterHeaderTemplate:selectTemplate},{displayName:"UG node ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"nids.ug",!1),field:"nids.ug",filter:{term:GridService.getFilterByField(controller.paginationOptions,"nids.ug")}},{displayName:"PG node ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"nids.pg",!1),field:"nids.pg",filter:{term:GridService.getFilterByField(controller.paginationOptions,"nids.pg")}},{displayName:"Overview node ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"nids.master",!1),field:"nids.master",filter:{term:GridService.getFilterByField(controller.paginationOptions,"nids.master")}},{displayName:"TM node ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"nids.tm",!1),field:"nids.tm",filter:{term:GridService.getFilterByField(controller.paginationOptions,"nids.tm")}},{displayName:"Has UG",visible:GridService.getVisibilityByField(controller.columnsVisibility,"enabled.ug",!1),field:"enabledUg",filter:{column:"enabled.ug",type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"enabled.ug")},filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Has PG",visible:GridService.getVisibilityByField(controller.columnsVisibility,"enabled.pg",!1),field:"enabledPg",filter:{column:"enabled.pg",type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"enabled.pg")},filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Has TM",visible:GridService.getVisibilityByField(controller.columnsVisibility,"enabled.tm",!1),field:"enabledTm",filter:{column:"enabled.tm",type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"enabled.tm")},filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate}],onRegisterApi:function(gridApi){var columnsVisibilityBeforeChanges=angular.copy($scope.gridOptions.columnDefs);$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){$scope.handleDatagridRowClick(row.entity)}),gridApi.core.on.rowsRendered($scope,function(){$scope.isDatagridRendered=!0}),gridApi.pagination.on.paginationChanged($scope,function(newPage,limit){controller.defaultPaginationOptions.page=newPage,controller.defaultPaginationOptions.limit=limit,controller.getPage()}),$scope.gridApi.core.on.filterChanged($scope,controller.handleGridFiltersChanges),$scope.gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),$scope.gridApi.core.on.sortChanged($scope,controller.handleGridFiltersChanges),GridService.resetExtend(columnsVisibilityBeforeChanges,$scope.gridOptions.columnDefs),controller.activeInstitutionCoreId&&$scope.gridOptions.data&&1===$scope.gridOptions.data.length&&$scope.handleDatagridRowClick($scope.gridOptions.data[0])}})})},controller.allowedInstitutionTypes=function(reset){angular.isUndefined(reset)&&(reset=!1),angular.forEach(controller.typesList,function(item){item.uniqueId===constants.typeId.clientDepartmentId||item.uniqueId===constants.typeId.topLevelInstitutionId||reset?item.disabled=!1:item.disabled=!0})},controller.handleAddInstitutionClick=function(){controller.setSelectedItem(),controller.similarNames.display=!1,controller.showDepartments.display=!1,$scope.forms.basicDetailsForm.$setPristine(),$scope.forms.basicDetailsForm.$setUntouched(),$scope.activeTab=0;var institution={};institution.id=null,controller.similarNames.display=!1,controller.similarNames.loading=!1,controller.similarNames.results=[],$scope.handleDatagridRowClick(institution,null===$scope.selectedInstitutionId&&$scope.showInfoBlock)},controller.handleEditCloseClick=function(){var institution={};institution.id=$scope.selectedInstitutionId,$scope.handleDatagridRowClick(institution,!0)},controller.setSelectedOptionType=function(selectedType){controller.isInvalidType=!1,angular.isDefined(selectedType)&&selectedType.hasOwnProperty("uniqueId")&&($scope.institution.typeId=selectedType.uniqueId)},controller.findSimilar=function(institution){null===institution.id&&angular.isDefined(institution.name)&&institution.name.length>0?(controller.similarNames.display=!0,controller.similarNames.loading=!0,InstitutionsListService.searchInstitutions(institution.name).then(function(results){controller.similarNames.results=results,controller.similarNames.loading=!1})):(controller.similarNames.display=!1,controller.similarNames.loading=!1,controller.similarNames.results=[])},controller.stripInstitutionId=function(institutionName){return institutionName.replace(/\[[0-9]+]/g,"")},controller.handleSearchInstitutionClick=function(selectedSearchResult){return $scope.institution.parentName=controller.stripInstitutionId(selectedSearchResult.name),$scope.institution.parentCoreId=selectedSearchResult.coreId,controller.showDepartments.display=!1,controller.showDepartments.results=[],!0},controller.initialiseBelongsTo=function(){controller.belongsToList=InstitutionsListService.getBelongsToList()},controller.isClientDepartment=function(institutionTypeId){return InstitutionsListService.isClientDepartment(institutionTypeId)},controller.showParentInstitution=function(institutionTypeId){return InstitutionsListService.isClientDepartment(institutionTypeId)||InstitutionsListService.isSimpleDepartment(institutionTypeId)||InstitutionsListService.isAdvancedProgram(institutionTypeId)},controller.isTopLevelInstitution=function(institutionTypeId){return InstitutionsListService.isTopLevelInstitution(institutionTypeId)},$scope.searchInstitutions=function(searchPhrase){$scope.searchInProgress=!0,InstitutionsListService.searchTopLevelInstitutions(searchPhrase).then(function(results){$scope.parentInstitutionSearchResults=results,$scope.searchInProgress=!1})},$scope.searchTopLevelInstitutions=function(searchPhrase){$scope.searchInProgress=!0,InstitutionsListService.searchTopLevelInstitutions(searchPhrase).then(function(results){$scope.parentInstitutionSearchResults=results,$scope.searchInProgress=!1})},controller.showDepartments=function(){controller.showDepartments.loading=!0,InstitutionsListService.getDepartments($scope.institution.parentCoreId).then(function(results){controller.showDepartments.results=results,controller.showDepartments.loading=!1,controller.showDepartments.display=!0})},controller.handleDepartmentsListCloseClick=function(){controller.showDepartments.display=!1},controller.handleGetCampusesWatch=function(newCampuses){$scope.selectedInstitutionId&&($scope.institution.campus=newCampuses,$scope.institutionBeforeChanges.campus=newCampuses)},controller.handleDowngradeClick=function(){if(controller.isClientDepartmentDowngradeDisabled())return!1;var modalOptions={closeButtonText:"Cancel",actionButtonText:"Yes",actionButtonClass:"danger",headerText:"Department Downgrade",bodyText:"Are you sure you want to downgrade this department?"};ModalService.show({},modalOptions).then(function(){$scope.downgradeInProgress=!0,TuProfileDepartmentsService.downgrade($scope.institution.id).then(controller.downgradeCallback)})},controller.hasMissingFields=function(){var uni=$scope.institutionBeforeChanges;if(!angular.equals(uni,{}))return InstitutionsListService.isSimpleDepartment(uni.typeId)?!uni.name||!uni.parentCoreId||!uni.countryCode:InstitutionsListService.isAdvancedProgram(uni.typeId)?!(uni.name&&uni.parentCoreId&&uni.countryCode&&uni.drupalTmRegionId):InstitutionsListService.isClientDepartment(uni.typeId)?!(uni.name&&uni.parentCoreId&&uni.countryCode&&uni.belongsTo&&uni.belongsTo.length&&uni.drupalTuRegionId&&uni.drupalTmRegionId):InstitutionsListService.isTopLevelInstitution(uni.typeId)?!(uni.name&&uni.parentCoreId&&uni.countryCode&&uni.drupalTuRegionId&&uni.drupalTmRegionId):void 0},controller.downgradeCallback=function(success){success&&(controller.isClient=!1,controller.isSimple=!0,controller.setSelectedItem(constants.typeId.simpleDepartmentId),$scope.institution.typeId=constants.typeId.simpleDepartmentId,$scope.institution.enabled&&($scope.institution.enabled.ug=!1,$scope.institution.enabled.pg=!1),$scope.institution.subscriptions&&$scope.institution.subscriptions.tu&&delete $scope.institution.subscriptions.tu,$scope.institutionBeforeChanges=angular.copy($scope.institution),controller.reloadDatagrid()),$scope.downgradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Downgrade successfully!":"Downgrade failed!","Downgrade to Simple")},controller.isUpgradeButtonDisabled=function(){return!($scope.institutionBeforeChanges.name&&$scope.institutionBeforeChanges.name.length&&$scope.institutionBeforeChanges.typeId&&parseInt($scope.institution.typeId,10)===constants.typeId.simpleDepartmentId&&$scope.institutionBeforeChanges.countryCode&&$scope.institutionBeforeChanges.countryCode.length)},controller.handleUpgradeClick=function(){if(!$scope.institution||!$scope.institution.id)return!1;$scope.upgradeInProgress=!0,TuProfileDepartmentsService.upgrade($scope.institution.id).then(controller.upgradeCallback)},controller.upgradeCallback=function(success){success&&(controller.isSimple=!1,controller.isClient=!0,$scope.institution.typeId=constants.typeId.clientDepartmentId,controller.setSelectedItem(constants.typeId.clientDepartmentId),$scope.institutionBeforeChanges=angular.copy($scope.institution),controller.reloadDatagrid()),$scope.upgradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Upgraded successfully!":"Upgrade failed!","Upgrade to Client")},controller.isSimpleDepartment=function(institutionTypeId){return InstitutionsListService.isSimpleDepartment(institutionTypeId)},controller.isAllStatistic=function(handle){return InstitutionsListService.isAllStatistic(handle)},controller.convertVisibleColumnsField=function(value){switch(value){case"enabledTm":return"enabled.tm";case"enabledUg":return"enabled.ug";case"enabledPg":return"enabled.pg";default:return value}},controller.saveStateVisibility=function(){var visibility=angular.copy($scope.gridOptions.columnDefs);angular.forEach(visibility,function(column){-1!==["enabledTm","enabledUg","enabledPg"].indexOf(column.field)&&(column.field=controller.convertVisibleColumnsField(column.field))}),GridService.storeColumnsVisibility(constants.gridNameSpaces.institutionsGridVisibility,GridService.getGridColumnsVisibility(visibility))},controller.initWatches=function(){WatchService.create($scope,"activeTab",function(newValue,oldValue){InstitutionsListFactory.hasSelectedTab()&&angular.equals(newValue,oldValue)||InstitutionsListFactory.setSelectedTabId(newValue)}),WatchService.create($scope,InstitutionsListFactory.getCampuses,controller.handleGetCampusesWatch),WatchService.create($scope,InstitutionFactory.getActiveTab,function(newValue){newValue&&($scope.activeTab=1)}),WatchService.create($scope,InstitutionsListFactory.isInstitutionListReload,function(value){value&&(controller.reloadDatagrid(),InstitutionsListFactory.setReloadInstitutionList(!1))});var dataLoadWatch=WatchService.create($scope,"dataToLoad",function(leftToLoad){0===leftToLoad&&(dataLoadWatch(),controller.initDataGrid())})},controller.loadData=function(){$scope.dataToLoad=4,InstitutionsListService.getSubscriptions().then(function(subscriptions){controller.subscriptionsList=subscriptions,$scope.dataToLoad--}),InstitutionsListService.getTypes().then(function(list){controller.typesList=list,$scope.dataToLoad--}),InstitutionsListService.getTuRegions().then(function(list){controller.tuRegionsList=list,$scope.dataToLoad--}),InstitutionsListService.getTmRegions().then(function(list){controller.tmRegionsList=list,$scope.dataToLoad--})},controller.init=function(){controller.loadData(),controller.initWatches(),controller.initialiseBelongsTo()},controller.init()},angular.module("qsHub").controller("InstitutionsListController",["$scope","$resource","$stateParams","constants","InstitutionsListService","SharedProfileFactory","NotifierFactory","InstitutionFactory","InstitutionsListFactory","orderByFilter","LoginService","TuProfileDepartmentsService","uiGridConstants","$timeout","WatchService","ModalService","TmProfileProgramsService","InstitutionService","UiGridService","InstitutionsListSubscriptionsFactory","TimeService",App.controllers.institutionsList])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.institutionsList=function(){var invalidDates,campuses,selectedTabId=null,tabIds={subscriptions:1,campuses:2,status:5},isReload=!1;return{setSelectedTabId:function(newSelectedTabId){selectedTabId=newSelectedTabId},hasSelectedTab:function(){return null!==selectedTabId},isCampusesTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===tabIds.campuses},isSubscriptionsTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===tabIds.subscriptions},isStatusTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===tabIds.status},setCampuses:function(newCampuses){campuses=newCampuses},getCampuses:function(){return campuses},setInvalidDates:function(val){invalidDates=val},isInvalidDates:function(){return invalidDates},setReloadInstitutionList:function(val){isReload=val},isInstitutionListReload:function(){return isReload}}},angular.module("qsHub").factory("InstitutionsListFactory",App.factories.institutionsList)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.campusesList=function($scope,$resource,NgTableParams,constants,InstitutionsListService,CampusesService,NotifierFactory,SharedProfileFactory,MapInitializerFactory,InstitutionsListFactory,WatchService){var newlyAdded,controller=this,alreadyInitialised=!1;$scope.refreshMapInProgress=!1,InstitutionsListService.getCountries().then(function(list){controller.countriesList=list}),$scope.selectedCampusId=!1,controller.resetColumns=function(){angular.forEach($scope.columns,function(column,key){column.show=SharedProfileFactory.getColumns()[key].show})},$scope.campusesToDelete={},$scope.deleteInProgress=!1,$scope.showCampusInfoBlock=!1,SharedProfileFactory.setInstitutionListShowCampusInfoBlock($scope.showCampusInfoBlock),$scope.columns=[{title:"Delete",show:!0,field:"delete",headerTemplateURL:"ng-table/templates/campus/delete-header.html"},{title:"Name",show:!0,field:"name"},{title:"Address",show:!0,field:"addressLine"},{title:"Postcode",show:!0,field:"postcode"},{title:"Town/City",show:!0,field:"city"},{title:"Country",show:!1,field:"country"},{title:"Country Name",show:!0,field:"countryName"},{title:"Primary Campus",show:!1,field:"primary"},{title:"Primary Campus",show:!0,field:"primaryName"},{title:"Order",show:!1,field:"order"}],SharedProfileFactory.setColumns($scope.columns),$scope.campusMap=null;var hiddenColumns=[];angular.forEach($scope.columns,function(column){column.show||hiddenColumns.push(column)}),$scope.hiddenColumns=hiddenColumns,controller.renderMap=function(){var campus=SharedProfileFactory.getCampus();campus.latitude||(campus.latitude=null),campus.longitude||(campus.longitude=null),SharedProfileFactory.setCampus(campus);var campusLatitude=campus.latitude,campusLongitude=campus.longitude;null!==campusLatitude&&null!==campusLongitude||(campusLatitude=0,campusLongitude=0);var googleMapsLatLng=new google.maps.LatLng({lat:parseFloat(campusLatitude),lng:parseFloat(campusLongitude)});$scope.campusMap.panTo(googleMapsLatLng),$scope.campusMap.setOptions({zoom:15,mapTypeId:google.maps.MapTypeId.ROADMAP,draggable:!0}),controller.googleMapsMarker&&controller.googleMapsMarker.setMap(null),controller.googleMapsMarker=new google.maps.Marker({map:$scope.campusMap,position:googleMapsLatLng,draggable:!0}),google.maps.event.addListener(controller.googleMapsMarker,"dragend",function(event){$scope.campusMap.panTo(event.latLng),campus.autoGenerate=!1,campus.latitude=event.latLng.lat(),campus.longitude=event.latLng.lng(),google.maps.event.trigger($scope.campusMap,"resize"),$scope.campusMap.setCenter(controller.googleMapsMarker.getPosition()),$scope.campus=campus,$scope.$apply()}),$scope.campusMap.addListener("idle",function(){newlyAdded&&(google.maps.event.trigger($scope.campusMap,"resize"),$scope.campusMap.setCenter(controller.googleMapsMarker.getPosition()),newlyAdded=!1)})},controller.initialiseMap=function(){$scope.campusMap||MapInitializerFactory.initStart(),MapInitializerFactory.mapsInitialized.then(function(){null===$scope.campusMap&&($scope.campusMap=new google.maps.Map(document.getElementById("campusMap"),{zoom:15,mapTypeId:google.maps.MapTypeId.ROADMAP,draggable:!0}),newlyAdded=!0),controller.renderMap()})},$scope.handleDataGridRowClickCampus=function(campus){$scope.submitted=!1;var campusCopy=angular.copy(campus);SharedProfileFactory.setCampus(campusCopy),$scope.selectedCampusId=$scope.selectedCampusId!==campusCopy.id&&campusCopy.id,$scope.campus=campusCopy,SharedProfileFactory.setCampus(campusCopy),$scope.lat=campusCopy.latitude,$scope.log=campusCopy.longitude,$scope.displayMap=!0,$scope.showCampusInfoBlock=$scope.selectedCampusId===campusCopy.id,SharedProfileFactory.setInstitutionListShowCampusInfoBlock($scope.showCampusInfoBlock),$scope.selectedCampusId===campusCopy.id?angular.forEach($scope.columns,function(column){"name"!==column.field&&(column.show=!1)}):controller.resetColumns(),controller.initialiseMap()},$scope.handleCampusSubmit=function(){if($scope.campusSubmitInProgress||!$scope.forms.campusDetailsForm||!$scope.forms.campusDetailsForm.$valid)return $scope.submitted=!0,NotifierFactory.show("error","Error: Please fill in all required fields","Campus"),!1;$scope.campusSubmitInProgress=!0,InstitutionsListService.saveCampus($scope.institution.id,$scope.campus).then(function(success){$scope.campusSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Campus"),success&&(angular.isUndefined($scope.campus.id)&&($scope.campus.id=success.insertedId,angular.isArray($scope.institution.campus)||($scope.institution.campus=[]),$scope.institution.campus.push($scope.campus),$scope.selectedCampusId=$scope.campus.id,$scope.showCampusInfoBlock=!0),angular.isDefined(success.coordinates)&&($scope.campus.latitude=success.coordinates.latitude,$scope.campus.longitude=success.coordinates.longitude,SharedProfileFactory.setMapUpdateRequest(Math.random())),angular.forEach($scope.institution.campus,function(campus,index){campus.id===$scope.campus.id?($scope.institution.campus[index]=angular.copy($scope.campus),$scope.institution.campus[index].addressLine=InstitutionsListService.getCampusAddress($scope.campus),$scope.campus.addressLine=$scope.institution.campus[index].addressLine,$scope.institution.campus[index].primaryName=InstitutionsListService.getCampusIsPrimary($scope.campus),$scope.campus.primaryName=$scope.institution.campus[index].primaryName,InstitutionsListService.getCountryNameByCode($scope.campus.country).then(function(countryName){$scope.institution.campus[index].countryName=countryName})):$scope.campus.primary&&($scope.institution.campus[index].primary=!1,$scope.institution.campus[index].primaryName=InstitutionsListService.getCampusIsPrimary($scope.institution.campus[index]))}),controller.reloadDatagrid(),InstitutionsListService.syncCampuses($scope.institution),InstitutionsListFactory.setReloadInstitutionList(!0))})},$scope.sortableOptions={disabled:!1,"ui-floating":!1,start:function(){controller.initialList=[],controller.initialList=angular.copy($scope.institution.campus)},stop:function(){$scope.sortableOptions.disabled=!0,controller.reOrderCampuses(),InstitutionsListService.saveOrder($scope.institution.id,$scope.institution.campus).then(function(success){NotifierFactory.show(success?"success":"error",success?" Order saved successfully!":"Saving order failed!","Campus"),success?InstitutionsListService.syncCampuses($scope.institution):$scope.institution.campus=controller.initialList}).finally(function(){$scope.sortableOptions.disabled=!1})}},controller.getCampusesToDelete=function(){var campusIds=[];return $scope.campusesToDelete&&angular.forEach($scope.campusesToDelete,function(remove,id){remove&&campusIds.push(id)}),campusIds},controller.hasCampusesToDelete=function(){return 0!==controller.getCampusesToDelete().length},$scope.isDeleteButtonDisabled=function(){return $scope.deleteInProgress||!controller.hasCampusesToDelete()},$scope.handleDeleteClick=function(){if($scope.deleteInProgress||!controller.hasCampusesToDelete())return!1;$scope.deleteInProgress=!0;var campusIds=controller.getCampusesToDelete();InstitutionsListService.deleteCampuses($scope.institution.id,campusIds).then(function(success){success&&($scope.campusesToDelete={},angular.forEach(campusIds,function(campusId){angular.forEach($scope.institution.campus,function(campus,key){campus.id===campusId&&delete $scope.institution.campus[key]})}),$scope.institution.campus=$scope.institution.campus.filter(function(item){return"undefined"!==item}),controller.reloadDatagrid(),InstitutionsListService.syncCampuses($scope.institution)),$scope.deleteInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Deleted successfully!":"Deletion failed!","Campus")})},controller.reloadDatagrid=function(){$scope.tableParams.reload()},controller.reOrderCampuses=function(){for(var assignedOrder=1,index=0;index<$scope.institution.campus.length;index++)$scope.institution.campus[index].order=assignedOrder,assignedOrder++},$scope.getMode=function(){return $scope.showCampusInfoBlock&&$scope.selectedCampusId},$scope.handleAddClick=function(){$scope.selectedCampusId?SharedProfileFactory.setInstitutionListShowCampusInfoBlock(!0):SharedProfileFactory.setInstitutionListShowCampusInfoBlock(!$scope.showCampusInfoBlock),$scope.selectedCampusId=!1,angular.forEach($scope.columns,function(column){"name"!==column.field&&(column.show=!1)}),$scope.campus={displayInFrontEnd:!0},$scope.campus.latitude||($scope.lat=$scope.campus.latitude=null),$scope.campus.longitude||($scope.log=$scope.campus.longitude=null),SharedProfileFactory.setCampus($scope.campus),$scope.displayMap=!0,controller.initialiseMap()},$scope.coordinatesChanged=function(){SharedProfileFactory.setMapUpdateRequest(Math.random())},controller.coordinatesUpdated=function(success,message){NotifierFactory.show(success,message,"Address Search")},controller.getCoordinatesByCampusCallback=function(response){response?!angular.isArray(response)||angular.isObject(response[0])||angular.isObject(response[1])?controller.coordinatesUpdated("warning","Address not found!"):($scope.campus.latitude=response[0],$scope.campus.longitude=response[1],SharedProfileFactory.setMapUpdateRequest(Math.random()),SharedProfileFactory.announceCampusesChanges($scope.campus.id),controller.coordinatesUpdated("success","Coordinates updated!")):controller.coordinatesUpdated("error","Error requesting coordinates!"),$scope.refreshMapInProgress=!1},controller.refreshMap=function(){$scope.refreshMapInProgress=!0,$scope.campus.autoGenerate?CampusesService.getCoordinatesByCampus($scope.campus).then(controller.getCoordinatesByCampusCallback):(SharedProfileFactory.setMapUpdateRequest(Math.random()),$scope.refreshMapInProgress=!1)},controller.initDataGrid=function(){$scope.tableParams=new NgTableParams({page:1,count:1e3},{filterDelay:0,getData:function(){return $scope.institution.campus}}),alreadyInitialised=!0},controller.initWatches=function(){WatchService.create($scope,SharedProfileFactory.mapUpdateRequest,function(newValue){if(newValue&&null!==newValue&&angular.isDefined($scope.campus)&&angular.isDefined($scope.campus.latitude)&&angular.isDefined($scope.campus.longitude)&&null!==$scope.campus){var campus=$scope.campus,intLatitude=parseInt(campus.latitude,10),intLongitude=parseInt(campus.longitude,10);if(-90<=intLatitude&&intLatitude<=90&&-180<=intLongitude&&intLongitude<=180){var googleMapsLatLng=new google.maps.LatLng({lat:parseFloat(campus.latitude),lng:parseFloat(campus.longitude)});angular.isDefined(controller.googleMapsMarker)&&(controller.googleMapsMarker.setPosition(googleMapsLatLng),google.maps.event.trigger($scope.campusMap,"resize"),$scope.campusMap.setCenter(controller.googleMapsMarker.getPosition()))}}}),WatchService.create($scope,"institution.id",function(newId,oldId){newId&&newId!==oldId&&($scope.campusesToDelete={},controller.reloadDatagrid())}),WatchService.create($scope,SharedProfileFactory.getInstitutionListShowCampusInfoBlock,function(show){show||($scope.selectedCampusId=!1,controller.resetColumns()),$scope.showCampusInfoBlock=show})},controller.init=function(){controller.initWatches(),controller.initDataGrid()};var cancelInitWatch=WatchService.create($scope,InstitutionsListFactory.isCampusesTabSelected,function(isActive){!alreadyInitialised&&isActive&&(alreadyInitialised=!0,controller.init(),cancelInitWatch())});controller.displayOnFrontEndClick=function(){!$scope.campus.displayInFrontEnd||null!==$scope.campus.longitude&&$scope.campus.longitude&&null!==$scope.campus.latitude&&$scope.campus.latitude||($scope.campus.autoGenerate=!0)}},angular.module("qsHub").controller("CampusesListController",["$scope","$resource","NgTableParams","constants","InstitutionsListService","CampusesService","NotifierFactory","SharedProfileFactory","MapInitializerFactory","InstitutionsListFactory","WatchService",App.controllers.campusesList])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.InstitutionsList=function($resource,$q,$log,$localStorage,constants,RequestsQueueService,InstitutionFactory,InstitutionsListFactory,TuProfileService,TimeService){var service={types:null,tuRegions:null,subscriptions:null,countries:null,tmRegions:null,deferred:{getSubscriptions:null,searchInstitutionsWithoutGroup:null,getCountries:null,getTypes:null,getInstitution:null,getTmRegions:null},institutionGroupsRequest:null};return service.getCampusesOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:id/campusesOrder",null,{update:{method:"PATCH"}})},service.getInstitutionListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/all",null,{get:{isArray:!1,cancellable:!0}})},service.getInstitutionModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:id",null,{create:{method:"POST"},update:{method:"PATCH"},replace:{method:"PUT"}})},service.getInstitutionGroupsSaveModel=function(){return $resource(constants.api.institutions.url+"/v1/institution-groups/:id",null,{update:{method:"PATCH"}})},service.getInstitutionGroupsModel=function(){return $resource(constants.api.institutions.url+"/v1/list/institution-groups/:searchPhrase?sorting[coreId]=asc",null,{get:{cancellable:!0}})},service.getCampusModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:id/campus/:campusId",null,{update:{method:"PATCH"},replace:{method:"PUT"},create:{method:"POST"},delete:{method:"DELETE"}})},service.getDeleteCampusesModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:id/delete-campus",null,{create:{method:"POST"}})},service.getTopLevelInstitutionSearchModel=function(){return $resource(constants.api.institutions.url+"/v1/list/search/:searchPhrase?sorting[coreId]=asc&filter[typeId]="+constants.typeId.topLevelInstitutionId,null,{get:{cancellable:!0}})},service.getDepartmentsListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/departments/core-id/:parentCoreId?filter[fieldName]=active&filter[typeId]="+constants.typeId.clientDepartmentId,null,{get:{cancellable:!0}})},service.getInstitutionSearchModel=function(){return $resource(constants.api.institutions.url+"/v1/list/search/:searchPhrase?sorting[coreId]=asc&filter[fieldName]=active",null,{get:{cancellable:!0}})},service.getDepartmentModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:id",null,{create:{method:"POST"}})},service.getAll=function(filters){if(constants.dev)var endTime,startTime=(new Date).getTime();var hasSorting=!1;if(filters)for(var key in filters)if(-1!==key.indexOf("sorting")){hasSorting=!0;break}hasSorting||(filters["sorting[createdAt]"]="desc"),RequestsQueueService.cancelAll("getAll");var Api=service.getInstitutionListModel().get(filters);return RequestsQueueService.add(Api,"getAll"),Api.$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("getAll"),data.results=service.formatList(data.results),data},function(error){if(!constants.dev)return[];$log.log("request failed"+error)}).then(service.appendSubscriptionsData)},service.getAllSubscriptions=function(institutionCoreId){var subscriptions;return service.getInstitutionListModel().get({"filter[parentCoreId]":"="+institutionCoreId,limit:1,"columns[]":"subscriptions"}).$promise.then(function(data){return data.results&&(subscriptions=data.results.reduce(function(all,item,index){return item.subscriptions.hasOwnProperty("tm")&&null!==item.subscriptions.tm.endDate&&(all[item.coreIdAsString]=item.subscriptions.tm.endDate),all},[])),subscriptions},function(error){if(!constants.dev)return[];$log.log("request failed"+error)})},service.getTmSubscriptions=function(institutionCoreId){return service.getInstitutionListModel().get({"filter[coreId]":"="+institutionCoreId,limit:1,"columns[]":"subscriptions"}).$promise.then(function(data){return data.results&&data.results[0]&&data.results[0].subscriptions&&data.results[0].subscriptions.tm?data.results[0].subscriptions.tm:[]},function(error){if(!constants.dev)return[];$log.log("request failed"+error)})},service.isStatisticsSubscription=function(handle,subscriptionsList){if(!subscriptionsList)return"statistics"===handle;var total=subscriptionsList.length,i=0;for(i;i<total;i++)if(subscriptionsList[i].handle===handle)return"statistics"===subscriptionsList[i].type;return!1},service.appendSubscriptionsData=function(institutionsData){if(!institutionsData)return institutionsData;var subscriptionName=null;return service.getSubscriptions().then(function(subscriptionsList){return subscriptionsList&&angular.forEach(institutionsData.results,function(institutionData){if(institutionData.subscriptionsAsArray||(institutionData.subscriptionsAsArray=[]),!institutionData.subscriptions)return!1;angular.forEach(institutionData.subscriptions,function(subscription,key){return!(!subscription.subscribed||!service.isStatisticsSubscription(key,subscriptionsList))&&(!!(subscriptionName=service.getSubscriptionNameByHandle(key,subscriptionsList))&&(institutionData.subscriptionsAsArray.push(subscriptionName),void(institutionData.subscriptionsAsString=institutionData.subscriptionsAsArray?institutionData.subscriptionsAsArray.join(", "):null)))})}),institutionsData})},service.formatSubscriptionDate=function(date){var formattedDate="";return date&&TimeService.isValid(date)&&(formattedDate=TimeService.formatInUnix(date)),formattedDate},service.getTypeFilterData=function(grid){grid=grid||!1;var deferred=$q.defer();return service.getTypes().then(function(types){var typesFilterData=[];types&&angular.forEach(types,function(data){grid?typesFilterData.push({value:data.uniqueId,label:data.name}):typesFilterData.push({id:data.uniqueId,title:data.name})}),deferred.resolve(typesFilterData)}),deferred.promise},service.getTypes=function(){if(service.deferred.getTypes)return service.deferred.getTypes.promise;service.deferred.getTypes=$q.defer();var deferred=service.deferred.getTypes;return service.types?deferred.resolve(service.types):$resource(constants.api.institutions.url+"/v1/list/types").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.types=data.results,deferred.resolve(service.types),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.types=[],deferred.resolve(service.types),deferred=null}),deferred.promise},service.getTuRegions=function(){var deferred=$q.defer();return service.tuRegions?deferred.resolve(service.tuRegions):$resource(constants.api.institutions.url+"/v1/list/tu-regions").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.tuRegions=data.results,deferred.resolve(service.tuRegions)},function(error){constants.dev&&($log.log("request failed"+error),service.tuRegions=[]),deferred.resolve(service.tuRegions)}),deferred.promise},service.getTmRegions=function(){if(service.deferred.getTmRegions)return service.deferred.getTmRegions.promise;service.deferred.getTmRegions=$q.defer();var deferred=service.deferred.getTmRegions;return service.tmRegions?deferred.resolve(service.tmRegions):$resource(constants.api.institutions.url+"/v1/list/tm-regions").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.tmRegions=data.results,deferred.resolve(service.tmRegions),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.tmRegions=[],deferred.resolve(service.tmRegions),deferred=null}),deferred.promise},service.getTypeNameById=function(typeId){var typeName,deferred=$q.defer();return service.getTypes().then(function(types){angular.forEach(types,function(type){type.uniqueId===typeId&&(typeName=type.name)}),deferred.resolve(typeName)}),deferred.promise},service.formatList=function(institutionsData){return angular.isArray(institutionsData)?angular.forEach(institutionsData,function(institutionData){service.processInstitution(institutionData)}):service.processInstitution(institutionsData),institutionsData},service.processInstitution=function(institutionData){service.getTypeNameById(institutionData.typeId).then(function(typeName){institutionData.typeName=typeName}),service.getCountryNameByCode(institutionData.countryCode).then(function(countryName){institutionData.countryName=countryName}),(institutionData=service.processCampuses(institutionData)).isActive=institutionData.active?"Yes":"No",institutionData.enabledUg=institutionData.enabled&&void 0!==institutionData.enabled.ug?institutionData.enabled.ug:null,institutionData.enabledPg=institutionData.enabled&&void 0!==institutionData.enabled.pg?institutionData.enabled.pg:null,institutionData.enabledTm=institutionData.enabled&&void 0!==institutionData.enabled.tm?institutionData.enabled.tm:null,institutionData.tuAdvanced=!!institutionData.tuAdvanced,institutionData.tmAdvanced=!!institutionData.tmAdvanced,institutionData.hasNoDepartments=!!institutionData.hasNoDepartments,void 0!==institutionData.nids&&null!==institutionData.nids||(institutionData.nids={ug:null,pg:null,master:null,tm:null}),service.getTuRegions().then(function(list){if(!institutionData.drupalTuRegionId)return!1;var validTid=!1;angular.forEach(list,function(item){item.tid===institutionData.drupalTuRegionId&&item.tu&&(validTid=!0)}),validTid||(institutionData.drupalTuRegionId=null)}),service.getTmRegions().then(function(list){var validTid=!1;if(!institutionData.drupalTmRegionId)return!1;angular.forEach(list,function(item){item.tid===institutionData.drupalTmRegionId&&item.tm&&(validTid=!0)}),validTid||(institutionData.drupalTmRegionId=null)})},service.processCampuses=function(institutionData,campusId,unCheckAll){angular.isDefined(campusId)||(campusId=null),angular.isDefined(unCheckAll)||(unCheckAll=!1);var primaryCount=0;return angular.forEach(institutionData.campus,function(campus,index){service.getCountryNameByCode(campus.country).then(function(countryName){campus.countryName=countryName}),null===campusId?(angular.isDefined(institutionData.campus[index].primary)&&institutionData.campus[index].primary?primaryCount++:institutionData.campus[index].primary=!1,primaryCount>1&&(institutionData.campus[index].primary=!1,primaryCount--),unCheckAll&&(institutionData.campus[index].primary=!1)):institutionData.campus[index].id===campusId?institutionData.campus[index].primary=!0:institutionData.campus[index].primary=!1,campus.primaryName=service.getCampusIsPrimary(campus),campus.addressLine=service.getCampusAddress(campus)}),institutionData},service.getSubscriptionNameByHandle=function(handle,subscriptionsList){var subscriptionName="";return"ug"===handle?"Undergraduate Profile":"pg"===handle?"Postgraduate Profile":"tm"===handle?"TopMBA Profile":(subscriptionsList&&angular.forEach(subscriptionsList,function(subscription){subscription.handle&&subscription.name&&subscription.handle===handle&&(subscriptionName=subscription.name)}),subscriptionName)},service.getSubscriptions=function(){if(service.deferred.getSubscriptions)return service.deferred.getSubscriptions.promise;service.deferred.getSubscriptions=$q.defer();var deferred=service.deferred.getSubscriptions;return service.subscriptions?deferred.resolve(service.subscriptions):$resource(constants.api.institutions.url+"/v1/list/subscriptions?filter[type]=statistics&sorting[name]=asc").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.subscriptions=data.results,deferred.resolve(service.subscriptions),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.subscriptions=[],deferred.resolve(service.subscriptions),deferred=null}),deferred.promise},service.activate=function(id){return $resource(constants.api.institutions.url+"/v1/institution/:id/activate",{id:id}).get().$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deactivate=function(id){return $resource(constants.api.institutions.url+"/v1/institution/:id/deactivate",{id:id}).get().$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getInstitutionGroupsSaveModel=function(){return $resource(constants.api.institutions.url+"/v1/institution-groups/:id",null,{update:{method:"PATCH"}})},service.getInstitutionGroupsModel=function(){return $resource(constants.api.institutions.url+"/v1/list/institution-groups/:searchPhrase?sorting[coreId]=asc",null,{get:{cancellable:!0}})},service.filterObject=function(filters,object){var filteredObject=angular.copy(filters);return angular.forEach(filters,function(value,key){value&&"object"==typeof value?angular.forEach(value,function(subValue,subKey){null===subValue&&null!==object&&object.hasOwnProperty(key)&&null!==object[key]&&object[key].hasOwnProperty(subKey)&&"undefined"!==object[key][subKey]&&(filteredObject[key][subKey]=object[key][subKey])}):null===value&&"undefined"!==object[key]&&(filteredObject[key]=object[key])}),filteredObject},service.filterObjectForSubscriptions=function(filters,object){var filteredObject=angular.copy(filters);return angular.forEach(filters,function(value,key){value&&"object"==typeof value?angular.forEach(value,function(subValue,subKey){subValue&&"object"==typeof subValue?angular.forEach(subValue,function(subValue2,subKey2){null===subValue2&&(void 0!==object[key]&&null!==object[key]&&void 0!==object[key][subKey]&&null!==object[key][subKey][subKey2]?filteredObject[key][subKey][subKey2]=!!object[key][subKey][subKey2]&&object[key][subKey][subKey2]:filteredObject[key][subKey][subKey2]=null)}):null===subValue&&object[key]&&object[key][subKey]&&(filteredObject[key][subKey]=object[key][subKey])}):null===value&&object[key]&&(filteredObject[key]=object[key])}),filteredObject},service.isSimpleDepartment=function(institutionTypeId){return institutionTypeId===constants.typeId.simpleDepartmentId},service.isClientDepartment=function(institutionTypeId){return institutionTypeId===constants.typeId.clientDepartmentId},service.isTopLevelInstitution=function(institutionTypeId){return institutionTypeId===constants.typeId.topLevelInstitutionId},service.isAdvancedProgram=function(institutionTypeId){return institutionTypeId===constants.typeId.advancedProgramId},service.insertBasicDetails=function(institutionData){var EndpointModel,dataToInsert={};return service.isClientDepartment(institutionData.typeId)?(EndpointModel=service.getDepartmentModel(),dataToInsert={active:null,belongsTo:null,businessSchool:null,countryCode:null,countryName:null,filemakerId:null,localName:null,name:null,parentCoreId:null,parentName:null,typeId:null}):(EndpointModel=service.getInstitutionModel(),dataToInsert={active:null,businessSchool:null,countryCode:null,countryName:null,filemakerId:null,hasNoDepartments:null,localName:null,name:null,parentCoreId:null,parentName:null,typeId:null}),EndpointModel.create({},service.filterObject(dataToInsert,institutionData)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveBasicDetails=function(institutionData){var InstitutionModel=service.getInstitutionModel(),dataToUpdate={name:null,localName:null,typeId:null,filemakerId:null,businessSchool:null,hasNoDepartments:null,countryCode:null};return service.isClientDepartment(institutionData.typeId)&&(dataToUpdate={name:null,localName:null,typeId:null,filemakerId:null,businessSchool:null,hasNoDepartments:null,countryCode:null,belongsTo:null}),InstitutionModel.update({id:institutionData.id},service.filterObject(dataToUpdate,institutionData)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveDrupal=function(institutionData){var dataToUpdate={nids:{overview:null,ug:null,pg:null,tm:null},drupalTmRegionId:null,drupalTuRegionId:null};return service.getInstitutionModel().update({id:institutionData.id},service.filterObject(dataToUpdate,institutionData)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveSubscription=function(institutionData){var dataToUpdate={linkedWithAdvancedPrograms:null,subscriptions:{tu:{subscribed:null,advanced:null,startDate:null,endDate:null},tm:{subscribed:null,advanced:null,startDate:null,endDate:null},all:{subscribed:!0},aw:{subscribed:null},brics:{subscribed:null},aur:{subscribed:null},eeca:{subscribed:null},wur:{subscribed:null},ger:{subscribed:null},lau:{subscribed:null}},enabled:{ug:null,pg:null,tm:null}};return service.getInstitutionModel().update({id:institutionData.id},service.filterObjectForSubscriptions(dataToUpdate,institutionData)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveInstitutionGroup=function(institutionData){var deferred=$q.defer();return service.getInstitutionGroupsSaveModel().update({id:institutionData.id},institutionData.groupMembers).$promise.then(function(data){constants.dev&&$log.log("success, got data: ",data),deferred.resolve(!0)},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve(!1)}),deferred.promise},service.searchInstitutionsWithoutGroup=function(institutionId,searchPhrase){service.deferred.searchInstitutionsWithoutGroup&&(service.deferred.searchInstitutionsWithoutGroup.resolve(),service.institutionGroupsRequest&&service.institutionGroupsRequest.$cancelRequest()),service.deferred.searchInstitutionsWithoutGroup=$q.defer();var deferred=service.deferred.searchInstitutionsWithoutGroup,institutionsWithoutGroup=[];if(!searchPhrase||searchPhrase.length<1)deferred.resolve(institutionsWithoutGroup);else{var InstitutionGroupsModel=service.getInstitutionGroupsModel();service.institutionGroupsRequest=InstitutionGroupsModel.get({searchPhrase:searchPhrase},function(data){constants.dev&&$log.log("success, got data: ",data),data&&data.results&&angular.forEach(data.results,function(item){item.coreId!==institutionId&&institutionsWithoutGroup.push({coreId:item.coreId,name:item.name})}),deferred.resolve(institutionsWithoutGroup),deferred=null,service.institutionGroupsRequest=null},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve(institutionsWithoutGroup),deferred=null,service.institutionGroupsRequest=null})}return deferred.promise},service.getCountryFilterData=function(){var deferred=$q.defer();return service.getCountries().then(function(countries){var countriesFilterData=[];countries&&angular.forEach(countries,function(data){countriesFilterData.push({id:data.countryCode,title:data.name})}),deferred.resolve(countriesFilterData)}),deferred.promise},service.getCountries=function(){if(service.deferred.getCountries)return service.deferred.getCountries.promise;service.deferred.getCountries=$q.defer();var deferred=service.deferred.getCountries;return service.countries?deferred.resolve(service.countries):$resource(constants.api.institutions.url+"/v1/list/countries?sorting[name]=asc").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.countries=data.results,deferred.resolve(service.countries),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.countries=[],deferred.resolve(service.countries),deferred=null}),deferred.promise},service.saveCampus=function(organisationId,campus){var CampusModel=service.getCampusModel(),dataToUpdate={name:null,addressLine1:null,addressLine2:null,postcode:null,city:null,state:null,displayInFrontEnd:null,country:null,primary:null,region:null,latitude:null,longitude:null,autoGenerate:null,primaryInPrograms:null};return angular.isDefined(campus.id)?CampusModel.update({id:organisationId,campusId:campus.id},service.filterObject(dataToUpdate,campus)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1}):CampusModel.create({id:organisationId},service.filterObject(dataToUpdate,campus)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!!(angular.isDefined(data.createdCount)&&data.createdCount&&angular.isDefined(data.insertedId))&&data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deleteCampuses=function(institutionId,campusIds){return service.getDeleteCampusesModel().save({id:institutionId},campusIds).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getCountryNameByCode=function(countryCode){var countryName,deferred=$q.defer();return service.getCountries().then(function(countries){angular.forEach(countries,function(country){country.countryCode===countryCode&&(countryName=country.name)}),deferred.resolve(countryName)}),deferred.promise},service.getCampusAddress=function(campus){return campus.addressLine=[],angular.isDefined(campus.addressLine1)&&null!==campus.addressLine1&&campus.addressLine.push(campus.addressLine1),angular.isDefined(campus.addressLine2)&&null!==campus.addressLine2&&campus.addressLine.push(campus.addressLine2),campus.addressLine.join(", ")},service.getCampusIsPrimary=function(campus){return campus.primary?"Yes":"No"},service.getInstitution=function(id){if(service.deferred.getInstitution)return service.deferred.getInstitution.promise;service.deferred.getInstitution=$q.defer();var deferred=service.deferred.getInstitution;return service.institution?deferred.resolve(service.institution):$resource(constants.api.institutions.url+"/v1/list/all?filter[coreId]=:id&limit=1",{id:id}).get(function(data){constants.dev&&$log.log("success, got data: ",data),service.institution=service.formatList(data.results)[0],deferred.resolve(service.institution),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.institution=[],deferred.resolve(service.institution),deferred=null}),deferred.promise},service.deleteCampus=function(organisationId,campus){var CampusModel=service.getCampusModel();if(angular.isDefined(campus.id))return CampusModel.delete({id:organisationId,campusId:campus.id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveOrder=function(organisationId,campuses){return service.getCampusesOrderingModel().update({id:organisationId},{campus:service.formatForOrdering(campuses)}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.formatForOrdering=function(items){var formattedItems=[];return angular.forEach(items,function(item){formattedItems.push({id:item.id,order:item.order})}),formattedItems},service.excludeGroupMember=function(institutionCoreId,groupMembers){for(var groupMembersClone=angular.copy(groupMembers),i=0;i<groupMembersClone.length;i++)if(parseInt(groupMembersClone[i].coreId,10)===parseInt(institutionCoreId,10)){groupMembersClone.splice(i,1);break}return groupMembersClone},service.getColumnsVisibility=function(){return $localStorage.institutionGridColumnsVisibility},service.syncCampuses=function(institution){var currentCoreId=institution.coreId;if(currentCoreId){var activeCoreId=InstitutionFactory.getCoreId();activeCoreId&&currentCoreId===activeCoreId&&InstitutionFactory.setCampuses(angular.copy(institution.campus)),InstitutionsListFactory.setCampuses(angular.copy(institution.campus))}},service.searchInstitutions=function(searchPhrase){var deferred=$q.defer(),institutions=[];return searchPhrase&&searchPhrase.length?service.getInstitutionSearchModel().get({searchPhrase:searchPhrase},function(data){constants.dev&&$log.log("success, got data: ",data),data&&data.results&&angular.forEach(data.results,function(item){institutions.push({coreId:item.coreId,name:item.name,active:item.active})}),deferred.resolve(institutions),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve(institutions),deferred=null}):deferred.resolve(institutions),deferred.promise},service.getBelongsToList=function(){return TuProfileService.getBelongsToList()},service.searchTopLevelInstitutions=function(searchPhrase){var deferred=$q.defer();return!searchPhrase||searchPhrase.length<1?deferred.resolve([]):service.getTopLevelInstitutionSearchModel().get({searchPhrase:searchPhrase},function(data){constants.dev&&$log.log("success, got data: ",data),deferred.resolve(data.results),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve([]),deferred=null}),deferred.promise},service.getDepartments=function(parentCoreId){var deferred=$q.defer();return parentCoreId?service.getDepartmentsListModel().get({parentCoreId:parentCoreId},function(data){constants.dev&&$log.log("success, got data: ",data),deferred.resolve(data.results),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),deferred.resolve([]),deferred=null}):deferred.resolve([]),deferred.promise},service.isAllStatistic=function(handle){return"all"===handle},service},angular.module("qsHub").service("InstitutionsListService",["$resource","$q","$log","$localStorage","constants","RequestsQueueService","InstitutionFactory","InstitutionsListFactory","TuProfileService","TimeService",App.services.InstitutionsList])}(window.angular),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.institutionsSubscriptions=function($scope,constants,InstitutionsSubscriptionsService,InstitutionsListFactory,InstitutionFactory,WatchService,InstitutionsListSubscriptionsFactory){var controller=this;controller.isLogVisible={},controller.subscriptionsLog={},controller.subscriptionsLogLoading={},controller.downgradeCheckInProgress=!1,controller.maxDate=null,controller.types={tu:"tu",tm:"tm"},controller.getCurrentDate=function(){return moment().format("x")},controller.initDowngradeAllowed=function(){controller.downgradeAllowed={tu:!0,tm:!0}},controller.initDowngradeAllowed(),controller.handleHistoryLogClick=function(type){controller.isHistoryLogVisible(type)||controller.loadSubscriptions(type),controller.toggleSubscriptionsLog(type)},controller.loadSubscriptions=function(type){controller.subscriptionsLogLoading[type]=!0,InstitutionsSubscriptionsService.getLog($scope.institution.id,type).then(function(results){controller.subscriptionsLogLoading[type]=!1,controller.subscriptionsLog[type]=results})},controller.toggleSubscriptionsLog=function(type){controller.isLogVisible[type]=!controller.isLogVisible[type]},controller.isHistoryLogVisible=function(type){return controller.isLogVisible[type]||!1},controller.isSubscriptionsLogLoading=function(type){return controller.subscriptionsLogLoading[type]||!1},controller.getSubscriptionsLog=function(type){return controller.subscriptionsLog[type]||[]},controller.isProfilesLoading=function(){return controller.downgradeCheckInProgress},controller.isDowngradeAllowed=function(){controller.initDowngradeAllowed(),$scope.institution&&$scope.institution.hasOwnProperty("coreId")&&null!==$scope.institution.coreId&&angular.isNumber($scope.institution.coreId)&&$scope.institution.coreId>0&&$scope.institution.hasOwnProperty("typeId")&&null!==$scope.institution.typeId&&($scope.institution.typeId===constants.typeId.topLevelInstitutionId||$scope.institution.typeId===constants.typeId.clientDepartmentId)&&(controller.downgradeCheckInProgress=!0,InstitutionsSubscriptionsService.isDowngradeAllowed($scope.institution.coreId).then(function(results){controller.downgradeAllowed=results,controller.downgradeCheckInProgress=!1}))},controller.isDowngradeAllowedTu=function(isSubscribed){return void 0===isSubscribed||null===isSubscribed||!isSubscribed||controller.downgradeAllowed.tu&&isSubscribed},controller.isDowngradeAllowedTm=function(isSubscribed){return void 0===isSubscribed||null===isSubscribed||!isSubscribed||controller.downgradeAllowed.tm&&isSubscribed},controller.handleInstitutionChange=function(){controller.isDowngradeAllowed(),controller.isLogVisible={}},controller.maxDateWatch=function(value){value&&(controller.maxDate=value,$scope.institution.subscriptions&&$scope.institution.subscriptions.tm&&$scope.institution.subscriptions.tm.endDate&&($scope.institution.subscriptions.tm.endDate=value))},controller.subscriptionsWatch=function(value){value&&$scope.institution.subscriptions&&$scope.institution.subscriptions.tm&&$scope.institution.subscriptions.tm.endDate&&parseInt($scope.institution.subscriptions.tm.endDate)<controller.maxDate&&($scope.institution.subscriptions.tm.endDate=controller.maxDate)},controller.allowTu=function(){return!(!$scope.institution||$scope.institution.typeId===constants.typeId.advancedProgramId)},controller.hasSubscriptionsChangesWatch=function(has){has&&(InstitutionsListSubscriptionsFactory.setHasSubscriptionsChanges(!1),controller.handleInstitutionChange())},controller.initWatches=function(){WatchService.create($scope,"institution.id",controller.handleInstitutionChange),WatchService.create($scope,InstitutionsListFactory.isInvalidDates,controller.maxDateWatch),WatchService.create($scope,InstitutionFactory.getSubscriptions,controller.subscriptionsWatch),WatchService.create($scope,InstitutionsListSubscriptionsFactory.hasSubscriptionsChanges,controller.hasSubscriptionsChangesWatch)},controller.init=function(){controller.initWatches()};var cancelSubscriptionTabWatch=WatchService.create($scope,InstitutionsListFactory.isSubscriptionsTabSelected,function(selected){selected&&(cancelSubscriptionTabWatch(),controller.init())})},angular.module("qsHub").controller("InstitutionsSubscriptionsController",["$scope","constants","InstitutionsSubscriptionsService","InstitutionsListFactory","InstitutionFactory","WatchService","InstitutionsListSubscriptionsFactory",App.controllers.institutionsSubscriptions])}(window.angular,window.moment),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.institutionsSubscriptions=function($resource,$log,constants){var service={};return service.getModel=function(){return $resource(constants.api.institutions.url+"/v1/subscription-history/:id?field[]=startDate&field[]=endDate&field[]=createdByFullName&sorting[createdAt]=desc",null,{update:{method:"PATCH"}})},service.getDowngradeAllowedModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/core-id/:id/allow-downgrade")},service.filterByDate=function(subscritpions){var filtered=[];return angular.forEach(subscritpions,function(subscritpion){subscritpion.startDate&&subscritpion.endDate&&filtered.push(subscritpion)}),filtered},service.getLog=function(institutionId,type){if(!institutionId||!type)throw"Missing Required";if(constants.dev)var endTime,startTime=(new Date).getTime();return service.getModel().get({id:institutionId,"filter[type]":"="+type}).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),data.results},function(error){if(!constants.dev)return[];$log.log("request failed"+error)}).then(service.filterByDate)},service.isDowngradeAllowed=function(institutionId){if(!institutionId)throw"Missing Required";if(constants.dev)var endTime,startTime=(new Date).getTime();return service.getDowngradeAllowedModel().get({id:institutionId}).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),data},function(error){if(!constants.dev)return[];$log.log("request failed"+error)})},service},angular.module("qsHub").service("InstitutionsSubscriptionsService",["$resource","$log","constants",App.services.institutionsSubscriptions])}(window.angular,window.moment),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.institutionsListSubscriptions=function(){var hasSubscriptionsChanges;return{setHasSubscriptionsChanges:function(has){hasSubscriptionsChanges=has},hasSubscriptionsChanges:function(){return hasSubscriptionsChanges}}},angular.module("qsHub").factory("InstitutionsListSubscriptionsFactory",App.factories.institutionsListSubscriptions)}(window.angular,window.moment),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.institutionsListStatus=function($scope,constants,InstitutionsListFactory,InstitutionsListService,WatchService){var controller=this;controller.handleInstitutionChange=function(institution){institution&&(controller.institution=angular.copy(institution),controller.setType(),controller.setCountry(),controller.setBelongsTo(),controller.setTuRegion(),controller.setTmRegion(),controller.isAdvancedProgram=InstitutionsListService.isAdvancedProgram(controller.institution.typeId))},controller.setType=function(){angular.forEach(controller.typesList,function(item){item.value===controller.institution.typeId&&(controller.institution.type=item.label)})},controller.setCountry=function(){angular.forEach(controller.countryList,function(item){item.countryCode===controller.institution.countryCode&&(controller.institution.country=item.name)})},controller.setBelongsTo=function(){angular.forEach(controller.belongsToList,function(item){item.id===controller.institution.belongsTo&&(controller.institution.belongsToName=item.title)})},controller.setTuRegion=function(){angular.forEach(controller.tuRegionsList,function(item){item.tid===controller.institution.drupalTuRegionId&&(controller.institution.tuRegion=item.name)})},controller.setTmRegion=function(){angular.forEach(controller.tmRegionsList,function(item){item.tid===controller.institution.drupalTmRegionId&&(controller.institution.tmRegion=item.name)})},controller.initLists=function(){controller.typesList=[],InstitutionsListService.getTypeFilterData(!0).then(function(results){controller.typesList=results,controller.setType()}),controller.countryList=[],InstitutionsListService.getCountries().then(function(results){controller.countryList=results,controller.setCountry()}),controller.belongsToList=InstitutionsListService.getBelongsToList(),InstitutionsListService.getTuRegions().then(function(list){controller.tuRegionsList=list,controller.setTuRegion()}),InstitutionsListService.getTmRegions().then(function(list){controller.tmRegionsList=list,controller.setTmRegion()})},controller.initWatches=function(){WatchService.create($scope,"institutionBeforeChanges",controller.handleInstitutionChange)},controller.init=function(){controller.initWatches(),controller.initLists()};var cancelTabWatch=WatchService.create($scope,InstitutionsListFactory.isStatusTabSelected,function(selected){selected&&(cancelTabWatch(),controller.init())})},angular.module("qsHub").controller("InstitutionsListStatusController",["$scope","constants","InstitutionsListFactory","InstitutionsListService","WatchService",App.controllers.institutionsListStatus])}(window.angular,window.moment),function(angular,airbrakeJs){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.ExceptionHandler=function($log,constants,version,InstitutionFactory,UserFactory){if(!constants.airbrake.enabled)return function(exception){$log.error(exception)};var airbrake=new airbrakeJs.Client({projectId:constants.airbrake.projectId,projectKey:constants.airbrake.key});return airbrake.addFilter(function(notice){return notice.context.environment=constants.env,notice.context.version=version,notice.params={},InstitutionFactory.isEmpty()||(notice.params.institutionCoreId=InstitutionFactory.getCoreId()),UserFactory.hasData()&&(notice.params.username=UserFactory.getUserName()),notice}),function(exception,cause){$log.error(exception),airbrake.notify({error:exception,params:{angular_cause:cause}})}},angular.module("qsHub").factory("$exceptionHandler",["$log","constants","version","InstitutionFactory","UserFactory",App.factories.ExceptionHandler])}(window.angular,window.airbrakeJs),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Modal=function($uibModal){var service={modalDefaults:{backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"/scripts/shared/modal/modalView.html"},modalOptions:{closeButtonText:"Close",actionButtonText:"OK",actionButtonClass:"danger",headerText:"Proceed?",bodyText:"Perform this action?"}};return service.show=function(customModalDefaults,customModalOptions){customModalDefaults||(customModalDefaults={});var tempModalDefaults={},tempModalOptions={};return angular.extend(tempModalDefaults,service.modalDefaults,customModalDefaults),angular.extend(tempModalOptions,service.modalOptions,customModalOptions),tempModalDefaults.controller||(tempModalDefaults.controller=function($scope,$uibModalInstance){$scope.modalOptions=tempModalOptions,$scope.modalOptions.ok=function(result){$uibModalInstance.close(result)},$scope.modalOptions.close=function(result){$uibModalInstance.dismiss("cancel")}}),$uibModal.open(tempModalDefaults).result},service},angular.module("qsHub").service("ModalService",["$uibModal",App.services.Modal])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Watch=function(){var service={};return service.create=function($scope,watchExpression,listener,objectEquality,prettyPrintExpression){if("object"!=typeof $scope||"function"!=typeof listener)return!1;var stopWatch=$scope.$watch(watchExpression,function(newValue,oldValue){try{listener(newValue,oldValue)}catch(e){throw stopWatch(),e}},objectEquality,prettyPrintExpression);return stopWatch},service},angular.module("qsHub").service("WatchService",[App.services.Watch])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.progressCircle=function(){return{scope:{progressCircle:"="},link:function(scope){scope.getParams=function(progressCircle){switch(progressCircle){case"pending":scope.percent=0,scope.colour="grey",scope.text="Pending";break;case"progress":scope.percent=50,scope.colour="blue",scope.text="Progress";break;case"success":scope.percent=100,scope.colour="green",scope.text="Success";break;case"failure":scope.percent=100,scope.colour="red",scope.text="Failed";break;default:scope.percent=0,scope.colour="",scope.text="No Status"}},scope.$watch("progressCircle",function(value,oldValue){angular.equals(value,oldValue)||scope.getParams(value)}),scope.getParams(scope.progressCircle)},restrict:"A",templateUrl:"/scripts/shared/progressCircle/progressCircleView.html"}},angular.module("qsHub").directive("progressCircle",App.directives.progressCircle)}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.sharedProfile=function($scope,$location,$log,$state,constants,SharedProfileService,SharedProfileFactory,InstitutionFactory,UserFactory,WatchService){var controller=this;controller.devMode=constants.dev,$scope.loadInProgress=!0,$scope.generalHistoryDisabled=!1,$scope.fetchingHistory=!1,$scope.showGeneralHistoryBlock=!1,SharedProfileFactory.setCampusFormVisibility(!1),$scope.showCampusForm=SharedProfileFactory.isCampusFormVisible(),$scope.activeTab=SharedProfileFactory.getActiveTabs().general,controller.historyLog={totalReturned:0,total:0},controller.loadHistoryLog=function(){$scope.fetchingHistory=!1,$scope.generalHistoryDisabled=!0,SharedProfileFactory.isLoadMoreInProgress()||($scope.fetchingHistory=!0),SharedProfileService.getGeneralHistory(SharedProfileFactory.getId(),!0,SharedProfileFactory.getLogLimit()).then(function(data){$scope.generalHistoryDisabled=!1,$scope.fetchingHistory=!1,$scope.showGeneralHistoryBlock=!0,$scope.generalHistoryLog=data.results,controller.historyLog.total=data.totalMatching,controller.historyLog.totalReturned=data.totalFiltered,SharedProfileFactory.setLoadMoreInProgress(!1)})},controller.handleLoadMoreHistoryLog=function(){SharedProfileFactory.setLogLimit(SharedProfileFactory.getLogLimit()+5),SharedProfileFactory.setLoadMoreInProgress(!0),controller.loadHistoryLog()},controller.fetchingMoreHistoryLog=function(){return SharedProfileFactory.isLoadMoreInProgress()},$scope.handleHistoryLogClick=function(){$scope.handleGeneralHistoryCloseClick(),$scope.showGeneralHistoryBlock&&controller.loadHistoryLog()},$scope.isGeneralTabActive=function(){return SharedProfileFactory.isGeneralTabSelected()},$scope.isCampusesTabActive=function(){return SharedProfileFactory.isCampusesTabSelected()},$scope.isRightSidePanelActive=function(){return!(!SharedProfileFactory.isGeneralTabSelected()||!$scope.showGeneralHistoryBlock)||(!(!SharedProfileFactory.isCampusesTabSelected()||!$scope.showCampusForm)||void 0)},$scope.handleGeneralHistoryCloseClick=function(){SharedProfileFactory.setLogLimit(1),$scope.generalHistoryLog={},$scope.showGeneralHistoryBlock=!$scope.showGeneralHistoryBlock},controller.handleHistoryLogVisibility=function(){return SharedProfileFactory.getLogLimit()<controller.historyLog.total},controller.initWatches=function(){WatchService.create($scope,"activeTab",function(newValue,oldValue){SharedProfileFactory.hasSelectedTab()&&angular.equals(newValue,oldValue)||SharedProfileFactory.setSelectedTabId(newValue)}),WatchService.create($scope,InstitutionFactory.getCoreId,function(coreId){if(!coreId)return!1;$scope.loadInProgress=!0,UserFactory.noAccess($state.current.name)?($scope.loadInProgress=!1,SharedProfileFactory.setData(null)):SharedProfileService.getSharedProfile(coreId).then(function(data){$scope.loadInProgress=!1,SharedProfileFactory.setData(data),$scope.sharedProfile=data,$scope.showGeneralHistoryBlock=!1,$scope.$broadcast(constants.events.institutionSharedProfileChanges)})}),WatchService.create($scope,SharedProfileFactory.isCampusFormVisible,function(newValue,oldValue){newValue!==oldValue&&($scope.showCampusForm=newValue)})},controller.init=function(){controller.initWatches()},controller.init()},angular.module("qsHub").controller("SharedProfileController",["$scope","$location","$log","$state","constants","SharedProfileService","SharedProfileFactory","InstitutionFactory","UserFactory","WatchService",App.controllers.sharedProfile])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.SharedProfileService=function($resource,$q,$log,constants){var service={generalHistory:null,deferred:{getGeneralHistory:null}};return service.getSharedProfilesCoreModel=function(){return $resource(constants.api.institutions.url+"/v1/shared-profile/core-id/:id")},service.getSharedProfilesHistoryModel=function(){return $resource(constants.api.institutions.url+"/v1/list/shared-profile-history?sorting[modifiedAt]=desc&count=10&filter[recordId]=:recordId")},service.getSharedProfilesModel=function(){return $resource(constants.api.institutions.url+"/v1/shared-profile/:id",null,{update:{method:"PATCH"}})},service.getSharedProfile=function(coreId){if(!coreId)throw"Missing Required";return service.getSharedProfilesCoreModel().get({id:coreId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.toJSON()},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.getGeneralHistory=function(recordId,noCache,limit){if(!recordId)return!1;if(noCache=noCache||!1,service.deferred.getGeneralHistory)return service.deferred.getGeneralHistory.promise;service.deferred.getGeneralHistory=$q.defer();var deferred=service.deferred.getGeneralHistory;return!noCache&&service.generalHistory?deferred.resolve(service.generalHistory):service.getSharedProfilesHistoryModel().get({recordId:recordId,limit:limit},function(data){constants.dev&&$log.log("success, got data: ",data),service.generalHistory=data,deferred.resolve(service.generalHistory),service.deferred.getGeneralHistory=null},function(error){constants.dev&&$log.log("request failed"+error),service.generalHistory=[],deferred.resolve(service.generalHistory),service.deferred.getGeneralHistory=null}),deferred.promise},service.saveGeneral=function(profileData){var dataToUpdate={foundationYear:null,fullName:null,smallLogo:{path:null,title:null,description:null},mediumLogo:{path:null,title:null,description:null},largeLogo:{path:null,title:null,description:null}};return service.getSharedProfilesModel().update({id:profileData.id},service.filterObject(dataToUpdate,profileData)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.update=function(sharedProfileId,dataToUpdate){return service.getSharedProfilesModel().update({id:sharedProfileId},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.filterObject=function(filters,object){var filteredObject={};return filters&&object&&"object"==typeof filters&&"object"==typeof object&&(filteredObject=angular.copy(filters),angular.forEach(filters,function(value,key){value&&"object"==typeof value&&object[key]?angular.forEach(value,function(subValue,subKey){null===subValue&&object[key][subKey]&&(filteredObject[key][subKey]=object[key][subKey])}):null===value&&object[key]&&(filteredObject[key]=object[key])})),filteredObject},service},angular.module("qsHub").service("SharedProfileService",["$resource","$q","$log","constants",App.services.SharedProfileService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.sharedProfile=function($scope,$log,constants,SharedProfileService,NotifierFactory,SharedProfileFactory,InstitutionFactory,AuthenticationService,ModalService,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.acceptedFiles="image/jpeg, image/pjpeg, image/jpeg, image/pjpeg",$scope.generalSubmitDisabled=!1,$scope.displayRemoveLink=!1,$scope.uploadEnabled=!0,$scope.forms={},$scope.profileBeforeChanges={},$scope.foundationYearSpinOptions={verticalbuttons:!0,min:0,max:(new Date).getFullYear()},$scope.displaySpinner=!1,SharedProfileFactory.setSelectedTabId(0),controller.initLastUploaded=function(smallLogoPath,mediumLogoPath,largeLogoPath){return smallLogoPath=void 0===smallLogoPath?null:smallLogoPath,mediumLogoPath=void 0===mediumLogoPath?null:mediumLogoPath,largeLogoPath=void 0===largeLogoPath?null:largeLogoPath,{smallLogoPath:smallLogoPath,mediumLogoPath:mediumLogoPath,largeLogoPath:largeLogoPath}},controller.lastUploaded=controller.initLastUploaded(),controller.handleLogoRemoved=function(){$scope.uploadEnabled=!0,$scope.generalSubmitDisabled=!1,$scope.displayRemoveLink=!1},controller.checkProfileLogos=function(){$scope.profile||($scope.profile={}),$scope.profile.smallLogo||($scope.profile.smallLogo={}),$scope.profile.mediumLogo||($scope.profile.mediumLogo={}),$scope.profile.largeLogo||($scope.profile.largeLogo={})},controller.assignDefaultDisplayLogos=function(){$scope.profile.smallLogoPath=null,$scope.profile.mediumLogoPath=null,$scope.profile.largeLogoPath=null},controller.copyProfileToDisplayLogos=function(){angular.isDefined($scope.profile.smallLogo)&&$scope.profile.smallLogo.hasOwnProperty("path")&&($scope.profile.smallLogoPath=$scope.profile.smallLogo.path),angular.isDefined($scope.profile.mediumLogo)&&$scope.profile.mediumLogo.hasOwnProperty("path")&&($scope.profile.mediumLogoPath=$scope.profile.mediumLogo.path),angular.isDefined($scope.profile.largeLogo)&&$scope.profile.largeLogo.hasOwnProperty("path")&&($scope.profile.largeLogoPath=$scope.profile.largeLogo.path)},controller.copyLastUploadedToProfileLogos=function(){controller.checkProfileLogos(),controller.lastUploaded.smallLogoPath&&($scope.profile.smallLogo.path=controller.lastUploaded.smallLogoPath),controller.lastUploaded.mediumLogoPath&&($scope.profile.mediumLogo.path=controller.lastUploaded.mediumLogoPath),controller.lastUploaded.largeLogoPath&&($scope.profile.largeLogo.path=controller.lastUploaded.largeLogoPath)},controller.copyLastUploadedToProfileDisplayLogos=function(){controller.lastUploaded.smallLogoPath&&($scope.profile.smallLogoPath=controller.lastUploaded.smallLogoPath),controller.lastUploaded.mediumLogoPath&&($scope.profile.mediumLogoPath=controller.lastUploaded.mediumLogoPath),controller.lastUploaded.largeLogoPath&&($scope.profile.largeLogoPath=controller.lastUploaded.largeLogoPath)},controller.assignDisplayLogos=function(){controller.checkProfileLogos(),controller.assignDefaultDisplayLogos(),controller.copyProfileToDisplayLogos()},controller.copyResponseToLastUploaded=function(response){response.small.path&&response.small.status&&(controller.lastUploaded.smallLogoPath=response.small.path),response.medium.path&&response.medium.status&&(controller.lastUploaded.mediumLogoPath=response.medium.path),response.large.path&&response.large.status&&(controller.lastUploaded.largeLogoPath=response.large.path)},controller.assignDisplayLogo=function(clearLogos,response){response=void 0!==response&&response,controller.checkProfileLogos(),response&&(controller.copyResponseToLastUploaded(response),controller.copyLastUploadedToProfileLogos()),controller.copyLastUploadedToProfileDisplayLogos(),clearLogos||(controller.lastUploaded=controller.initLastUploaded())},controller.getUploadUrl=function(){return constants.api.institutions.url+"/v1/shared-profile-logo/core-id/"+InstitutionFactory.getCoreId()},$scope.handleClearLogosClick=function(){var modalOptions={closeButtonText:"No",actionButtonText:"Yes",headerText:"Delete Logo",bodyText:"Are you sure you wish to delete profile logos?"};ModalService.show({},modalOptions).then(function(result){$scope.handleGeneralSubmit(!0)})},$scope.handleGeneralSubmit=function(clearLogos){if($scope.displaySpinner=!0,clearLogos=!!angular.isDefined(clearLogos)&&clearLogos,$scope.generalSubmitDisabled||!$scope.forms.generalForm||!$scope.forms.generalForm.$valid)return!1;$scope.generalSubmitDisabled=!0,controller.copyLastUploadedToProfileLogos(),clearLogos&&($scope.profile.smallLogo.path=null,$scope.profile.mediumLogo.path=null,$scope.profile.largeLogo.path=null),SharedProfileService.saveGeneral($scope.profile).then(function(response){$scope.generalSubmitDisabled=!1,response.status?(controller.assignDisplayLogo(clearLogos,response),clearLogos?($scope.profile.smallLogoPath=null,$scope.profile.mediumLogoPath=null,$scope.profile.largeLogoPath=null,NotifierFactory.show("success","Logos removed successfully!","Institution Details General data")):NotifierFactory.show(response.status?"success":"error",response.status?"Saved successfully!":"Saving failed!","Institution Details General data"),$scope.profileBeforeChanges=angular.copy($scope.profile)):$scope.profile=angular.copy($scope.profileBeforeChanges),clearLogos||$scope.removeUploaderImage(),$scope.displaySpinner=!1})},controller.removeDropZoneUploadedImage=function(){controller.logoDropzoneInstance.files.length>1?controller.logoDropzoneInstance.removeFile(controller.logoDropzoneInstance.files[0]):controller.logoDropzoneInstance.removeAllFiles()},$scope.removeUploaderImage=function(){$scope.generalSubmitDisabled?NotifierFactory.show("info","Logo upload in progress, please wait.",""):(controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved(),controller.lastUploaded=controller.initLastUploaded())},controller.handleInit=function(){this.isValid=!0,this.globalAccept=!1,this.localAccept=!1},controller.handleAccept=function(file,done){file.acceptFile=function(){$scope.uploadEnabled=!1,$scope.$apply(),done()}},controller.handleLogoUploaded=function(file,response){var success=response&&response.hasOwnProperty("large")&&response.hasOwnProperty("medium")&&response.hasOwnProperty("small");if(success&&angular.forEach(response,function(data){data.status||(success=!1)}),success)$scope.generalSubmitDisabled=!1,controller.lastUploaded=controller.initLastUploaded(),controller.copyResponseToLastUploaded(response),$scope.displayRemoveLink=!0;else{var message="Logo image upload failed!";null!==response&&response.hasOwnProperty("code")&&(message=response.message),controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved(),NotifierFactory.show("error",message,"Institution Details - General")}$scope.$apply()},controller.handleLogoAdded=function(file){file.rejectExtension=function(){NotifierFactory.show("error","Allowed types: "+controller.acceptedFiles,"File type is unacceptable."),controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved(),$scope.$apply()},1===this.files.length&&(this.globalAccept=!1,this.localAccept=!1),this.globalAccept||this.localAccept||1!==this.files.length||(this.isValid=!0,this.localAccept=!0),this.files.length>1&&this.globalAccept&&(this.isValid=!1,this.globalAccept=!0,this.removeFile(this.files[1]),$scope.$apply()),this.isValid=!0,-1===controller.acceptedFiles.split(",").indexOf(file.type)&&(this.isValid=!1,file.rejectExtension()),this.isValid&&($scope.generalSubmitDisabled=!0,$scope.uploadEnabled=!1,$scope.$apply())},controller.handleThumbnail=function(file){file.rejectDimensions=function(globalAccept){(globalAccept=void 0===globalAccept||globalAccept)||(NotifierFactory.show("error","Logo dimension is incorrect.","Please upload 200px by 200px logo."),controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved(),$scope.$apply())},file.rejectSize=function(globalAccept){(globalAccept=void 0===globalAccept||globalAccept)||(NotifierFactory.show("error","Please upload less than 400 KB.","Uploaded Image is greater than the limit."),controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved(),$scope.$apply())},200===file.height&&200===file.width||(this.isValid=!1,file.rejectDimensions(this.globalAccept)),file.size>4e5&&(this.isValid=!1,file.rejectSize(this.globalAccept)),this.isValid&&!this.globalAccept&&this.localAccept?(this.globalAccept=!0,file.acceptFile(this.localAccept)):($scope.generalSubmitDisabled=!1,this.files.length>1&&this.globalAccept&&this.removeFile(this.files[1]),$scope.$apply()),!1===this.isValid&&(this.isValid=!0)},controller.logoConfig={dropzone:{url:controller.getUploadUrl,maxFilesize:1,maxFiles:1,uploadMultiple:0,parallelUploads:1,autoProcessQueue:!0,addRemoveLinks:!1,acceptedFiles:controller.acceptedFiles,previewsContainer:".dropzone-previews",headers:AuthenticationService.getAuthorizationHeader(),thumbnailWidth:200,thumbnailHeight:200,paramName:"file",init:controller.handleInit,accept:controller.handleAccept},eventHandlers:{success:controller.handleLogoUploaded,addedfile:controller.handleLogoAdded,thumbnail:controller.handleThumbnail}},controller.isRemoveLogosDisabled=function(){return!$scope.profile||!$scope.profile.smallLogoPath&&!$scope.profile.mediumLogoPath&&!$scope.profile.largeLogoPath||$scope.generalSubmitDisabled},controller.initWatches=function(){WatchService.create($scope,SharedProfileFactory.getData,function(newValue){$scope.profile=newValue,controller.assignDisplayLogos(),controller.removeDropZoneUploadedImage(),controller.handleLogoRemoved(),$scope.profileBeforeChanges=angular.copy(newValue)})},controller.init=function(){controller.initWatches()},WatchService.create($scope,SharedProfileFactory.isGeneralTabSelected,function(isActive){!alreadyInitialised&&isActive&&(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("SharedProfileGeneralController",["$scope","$log","constants","SharedProfileService","NotifierFactory","SharedProfileFactory","InstitutionFactory","AuthenticationService","ModalService","WatchService",App.controllers.sharedProfile])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.SharedProfileCampuses=function($scope,NgTableParams,constants,CampusesService,SharedProfileService,InstitutionsListService,NotifierFactory,SharedProfileFactory,InstitutionFactory,MapInitializerFactory,WatchService){var controller=this,alreadyInitialised=!1,newlyAdded=!1;controller.devMode=constants.dev,controller.googleMapsMarker=null,controller.noCache=!1,$scope.isQsUser=!0,$scope.campusesInEventsInclusionDisbaled=!1,$scope.loadInProgress=!0,$scope.displayMapBlock=!1,$scope.selectedCampusId=null,$scope.mapMarkers=[],$scope.campusesToDelete={},$scope.deleteInProgress=!1,$scope.columns=[{title:"Delete",show:!0,field:"delete",headerTemplateURL:"ng-table/templates/campus/delete-header.html"},{title:"Campus Name",show:!0,field:"name"},{title:"Address",show:!0,field:"addressLine"},{title:"Postcode",show:!0,field:"postcode"},{title:"Town/City",show:!0,field:"city"},{title:"Latitude",show:!0,field:"latitude"},{title:"Longitude",show:!0,field:"longitude"},{title:"Country Name",show:!0,field:"countryName"},{title:"Primary Campus",show:!0,field:"primaryName"},{title:"Order",show:!1,field:"order"}],$scope.campusMap=null,controller.renderMap=function(){var campus=SharedProfileFactory.getCampus();campus.latitude||(campus.latitude=null),campus.longitude||(campus.longitude=null),SharedProfileFactory.setCampus(campus);var campusLatitude=campus.latitude,campusLongitude=campus.longitude;null!==campusLatitude&&null!==campusLongitude||(campusLatitude=0,campusLongitude=0);var googleMapsLatLng=new google.maps.LatLng({lat:parseFloat(campusLatitude),lng:parseFloat(campusLongitude)});$scope.campusMap.panTo(googleMapsLatLng),$scope.campusMap.setOptions({zoom:15,mapTypeId:google.maps.MapTypeId.ROADMAP,draggable:!0}),controller.googleMapsMarker&&controller.googleMapsMarker.setMap(null),controller.googleMapsMarker=new google.maps.Marker({map:$scope.campusMap,position:googleMapsLatLng,draggable:!0}),google.maps.event.addListener(controller.googleMapsMarker,"dragend",function(event){$scope.campusMap.panTo(event.latLng),campus.autoGenerate=!1,campus.latitude=event.latLng.lat(),campus.longitude=event.latLng.lng(),google.maps.event.trigger($scope.campusMap,"resize"),$scope.campusMap.setCenter(controller.googleMapsMarker.getPosition()),$scope.$apply()}),$scope.campusMap.addListener("idle",function(){newlyAdded&&(google.maps.event.trigger($scope.campusMap,"resize"),$scope.campusMap.setCenter(controller.googleMapsMarker.getPosition()),newlyAdded=!1)})},controller.initialiseMap=function(){$scope.campusMap||MapInitializerFactory.initStart(),MapInitializerFactory.mapsInitialized.then(function(){null===$scope.campusMap&&($scope.campusMap=new google.maps.Map(document.getElementById("campusMap"),{zoom:15,mapTypeId:google.maps.MapTypeId.ROADMAP,draggable:!0}),newlyAdded=!0),controller.renderMap()})},$scope.handleAddClick=function(){SharedProfileFactory.setCampus({displayInFrontEnd:!0}),SharedProfileFactory.setCampusAddFormVisibility(),$scope.displayMapBlock=!1,$scope.selectedCampusId=null,SharedProfileFactory.isCampusFormVisible()&&!SharedProfileFactory.isCampusEditForm()&&(controller.initialiseMap(),$scope.displayMapBlock=!0)},$scope.handleDatagridRowClick=function(campus){$scope.selectedCampusId=$scope.selectedCampusId===campus.id?null:campus.id;var campusCopy=angular.copy(campus);SharedProfileFactory.setCampus(campusCopy),SharedProfileFactory.setCampusEditFormVisibility($scope.selectedCampusId===campus.id&&"undefined"!==campus.id),$scope.displayMapBlock=!0,controller.initialiseMap()},$scope.handleIncludeInEventsClick=function(){$scope.campusesInEventsInclusionDisbaled=!0,SharedProfileService.update($scope.sharedProfile.id,{campusesOnEvents:$scope.sharedProfile.campusesOnEvents}).then(function(success){NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!",$scope.sharedProfile.campusesOnEvents?"Including campuses on events pages":"Excluding campuses on events pages"),$scope.campusesInEventsInclusionDisbaled=!1})},$scope.sortableOptions={disabled:!1,"ui-floating":!1,stop:function(){$scope.sortableOptions.disabled=!0,controller.reOrderCampuses(),InstitutionsListService.saveOrder(InstitutionFactory.getId(),$scope.tableParams.data).then(function(success){NotifierFactory.show(success?"success":"error",success?" Order saved successfully!":"Saving order failed!","Campus")}).finally(function(){$scope.sortableOptions.disabled=!1})}},controller.reOrderCampuses=function(){for(var assignedOrder=1,index=0;index<$scope.tableParams.data.length;index++)$scope.tableParams.data[index].order=assignedOrder,assignedOrder++},controller.getCampusesToDelete=function(){var campusIds=[];return $scope.campusesToDelete&&angular.forEach($scope.campusesToDelete,function(remove,id){remove&&campusIds.push(id)}),campusIds},controller.hasCampusesToDelete=function(){return 0!==controller.getCampusesToDelete().length},$scope.isDeleteButtonDisabled=function(){return $scope.deleteInProgress||!controller.hasCampusesToDelete()},$scope.handleDeleteClick=function(){if($scope.deleteInProgress||!controller.hasCampusesToDelete())return!1;var campusIds=controller.getCampusesToDelete();$scope.deleteInProgress=!0,CampusesService.deleteCampuses(InstitutionFactory.getId(),campusIds).then(function(success){if($scope.deleteInProgress=!1,success){for(var objectId in $scope.campusesToDelete)if(objectId===$scope.selectedCampusId){SharedProfileFactory.setCampusFormVisibility(!1);break}$scope.campusesToDelete={},controller.noCache=!0,$scope.tableParams.reload()}NotifierFactory.show(success?"success":"error",success?"Deleted successfully!":"Deletion failed!","Campus")})},controller.initWatches=function(){WatchService.create($scope,SharedProfileFactory.hasCampusesChanges,function(newValue){newValue&&(controller.noCache=!0,$scope.campusesToDelete={},$scope.tableParams.reload(),$scope.selectedCampusId=newValue)}),WatchService.create($scope,SharedProfileFactory.isCampusFormVisible,function(newValue){newValue||($scope.selectedCampusId=null,$scope.displayMapBlock=!1)}),WatchService.create($scope,SharedProfileFactory.mapUpdateRequest,function(newValue){if(newValue&&null!==newValue){var intLatitude,intLongitude,campus=SharedProfileFactory.getCampus();if(null===campus.latitude||null===campus.longitude?(intLatitude=null,intLongitude=null):(intLatitude=parseInt(campus.latitude,10),intLongitude=parseInt(campus.longitude,10)),null===intLatitude||null===intLongitude||intLatitude<-90||intLatitude>90||intLongitude<-180||intLongitude>180)return;var googleMapsLatLng=new google.maps.LatLng({lat:parseFloat(campus.latitude),lng:parseFloat(campus.longitude)});null!==controller.googleMapsMarker&&(controller.googleMapsMarker.setPosition(googleMapsLatLng),google.maps.event.trigger($scope.campusMap,"resize"),$scope.campusMap.setCenter(controller.googleMapsMarker.getPosition()))}})},controller.initDataGrid=function(){$scope.tableParams=new NgTableParams({page:1,count:200,coreId:InstitutionFactory.getCoreId()},{counts:[],debugMode:constants.dev,getData:function(params){var results=CampusesService.getCampusList(params,controller.noCache);return controller.noCache=!1,results}})},controller.initEvents=function(){$scope.$on(constants.events.institutionSharedProfileChanges,function(){alreadyInitialised=!1,SharedProfileFactory.isCampusesTabSelected()&&(controller.initDataGrid(),alreadyInitialised=!0),$scope.campusesToDelete={}})},controller.init=function(){controller.initWatches(),controller.initEvents(),controller.initDataGrid()},WatchService.create($scope,SharedProfileFactory.isCampusesTabSelected,function(isActive){!alreadyInitialised&&isActive&&(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("SharedProfileCampusesController",["$scope","NgTableParams","constants","CampusesService","SharedProfileService","InstitutionsListService","NotifierFactory","SharedProfileFactory","InstitutionFactory","MapInitializerFactory","WatchService",App.controllers.SharedProfileCampuses])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.sharedProfileCampusForm=function($scope,CampusesService,SharedProfileService,NotifierFactory,InstitutionFactory,SharedProfileFactory,WatchService){var controller=this;controller.submitted=!1,$scope.forms={},$scope.refreshMapInProgress=!1;InstitutionFactory.getCoreId();$scope.campus=SharedProfileFactory.getCampus(),controller.isValidName=function(){return!!($scope.forms.campusForm&&($scope.forms.campusForm.$pristine||$scope.forms.campusForm.name&&$scope.forms.campusForm.name.$pristine)||$scope.campus&&$scope.campus.name&&$scope.campus.name.trim().length)},controller.isValidCountry=function(){return!!($scope.forms.campusForm&&($scope.forms.campusForm.$pristine||$scope.forms.campusForm.country&&$scope.forms.campusForm.country.$pristine)||$scope.campus&&$scope.campus.country&&$scope.campus.country.trim().length)},controller.isValidAddress=function(){return!!($scope.forms.campusForm&&($scope.forms.campusForm.$pristine||$scope.forms.campusForm.addressLine1&&$scope.forms.campusForm.addressLine1.$pristine)||$scope.campus&&$scope.campus.addressLine1&&$scope.campus.addressLine1.trim().length)},controller.isValidCity=function(){return!!($scope.forms.campusForm&&($scope.forms.campusForm.$pristine||$scope.forms.campusForm.city&&$scope.forms.campusForm.city.$pristine)||$scope.campus&&$scope.campus.city&&$scope.campus.city.trim().length)},controller.setValid=function(fieldName){controller.submitted=null,fieldName?$scope.forms.campusForm&&$scope.forms.campusForm[fieldName]&&$scope.forms.campusForm[fieldName].$setPristine():$scope.forms.campusForm.$setPristine()},controller.isValid=function(){return controller.isValidName()&&controller.isValidCountry()&&controller.isValidAddress()&&controller.isValidCity()},controller.editToggle=function(edit){$scope.displayDelete=edit,$scope.editMode=edit},controller.editToggle(SharedProfileFactory.isCampusEditForm()),CampusesService.getCountries().then(function(list){$scope.countriesList=list}),CampusesService.getTuRegions().then(function(list){$scope.tuRegionsList=list}),$scope.handleCancelClick=function(){SharedProfileFactory.setCampusFormVisibility()},$scope.handleDeleteClick=function(){CampusesService.deleteCampus($scope.institutionId,$scope.campus.id).then(controller.deleteCallback,controller.isValidName())},controller.deleteCallback=function(success){$scope.campusSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Deleted successfully!":"Deletion failed!","Campus"),success&&(SharedProfileFactory.setCampus({}),SharedProfileFactory.setCampusFormVisibility(!1),SharedProfileFactory.announceCampusesChanges(!0))},$scope.handleCreateClick=function(){if(controller.submitted=!0,$scope.forms.campusForm.$setDirty(),$scope.forms.campusForm.name.$setDirty(),$scope.forms.campusForm.country.$setDirty(),$scope.forms.campusForm.addressLine1.$setDirty(),$scope.forms.campusForm.city.$setDirty(),$scope.campusSubmitInProgress||!$scope.forms.campusForm||!controller.isValid())return!1;$scope.campusSubmitInProgress=!0,CampusesService.create($scope.institutionId,$scope.campus).then(controller.createCallback)},controller.createCallback=function(response){if($scope.campusSubmitInProgress=!1,NotifierFactory.show(response?"success":"error",response?"Saved successfully!":"Saving failed!","Campus"),response){$scope.campus.id=response.insertedId,angular.isDefined(response.coordinates)&&($scope.campus.latitude=response.coordinates.latitude,$scope.campus.longitude=response.coordinates.longitude,SharedProfileFactory.setMapUpdateRequest(Math.random())),SharedProfileFactory.setCampus($scope.campus),SharedProfileFactory.setCampusAddFormVisibility(!1),SharedProfileFactory.setCampusEditFormVisibility(!0),SharedProfileFactory.announceCampusesChanges($scope.campus.id);var currentCampuses=InstitutionFactory.getCampuses();currentCampuses.push($scope.campus),InstitutionFactory.setCampuses(currentCampuses)}},controller.resetCampusForm=function(){$scope.forms.campusForm&&$scope.forms.campusForm.$setPristine()},$scope.handleUpdateClick=function(){if(controller.submitted=!0,$scope.forms.campusForm.$setDirty(),$scope.forms.campusForm.name.$setDirty(),$scope.forms.campusForm.country.$setDirty(),$scope.forms.campusForm.addressLine1.$setDirty(),$scope.forms.campusForm.city.$setDirty(),$scope.campusSubmitInProgress||!$scope.forms.campusForm||!$scope.forms.campusForm.$valid)return!1;$scope.campusSubmitInProgress=!0,CampusesService.update($scope.institutionId,$scope.campus).then(controller.updateCallback),controller.resetCampusForm()},controller.updateCallback=function(response){if($scope.campusSubmitInProgress=!1,NotifierFactory.show(response?"success":"error",response?"Updated successfully!":"Updated failed!","Campus"),response){angular.isDefined(response.coordinates)&&($scope.campus.latitude=response.coordinates.latitude,$scope.campus.longitude=response.coordinates.longitude,SharedProfileFactory.setMapUpdateRequest(Math.random())),SharedProfileFactory.announceCampusesChanges($scope.campus.id);var currentCampuses=InstitutionFactory.getCampuses(),i=0,total=currentCampuses.length;for(i;i<total;i++)if(currentCampuses[i].id===$scope.campus.id){currentCampuses[i]=angular.copy($scope.campus),InstitutionFactory.setCampuses(currentCampuses);break}}},controller.coordinatesUpdated=function(success,message){NotifierFactory.show(success,message,"Address Search")},controller.getCoordinatesByCampusCallback=function(response){response?!angular.isArray(response)||angular.isObject(response[0])||angular.isObject(response[1])?controller.coordinatesUpdated("warning","Address not found!"):(!0,$scope.campus.latitude=response[0],$scope.campus.longitude=response[1],SharedProfileFactory.setMapUpdateRequest(Math.random()),SharedProfileFactory.announceCampusesChanges($scope.campus.id),controller.coordinatesUpdated("success","Coordinates updated successfully!")):controller.coordinatesUpdated("error","Error requesting coordinates!"),$scope.refreshMapInProgress=!1},controller.refreshMap=function(){$scope.refreshMapInProgress=!0,$scope.campus.autoGenerate?CampusesService.getCoordinatesByCampus($scope.campus).then(controller.getCoordinatesByCampusCallback):(SharedProfileFactory.setMapUpdateRequest(Math.random()),$scope.refreshMapInProgress=!1)},controller.displayOnFrontEndClick=function(){!$scope.campus.displayInFrontEnd||null!==$scope.campus.longitude&&$scope.campus.longitude&&null!==$scope.campus.latitude&&$scope.campus.latitude||($scope.campus.autoGenerate=!0)},controller.initWatches=function(){WatchService.create($scope,SharedProfileFactory.isCampusEditForm,function(newValue,oldValue){newValue!==oldValue&&controller.editToggle(newValue)}),WatchService.create($scope,SharedProfileFactory.getCampus,function(newValue,oldValue){newValue!==oldValue&&($scope.campus=newValue,controller.resetCampusForm())}),WatchService.create($scope,InstitutionFactory.getCoreId,function(newValue){$scope.institutionId=InstitutionFactory.getId()})},controller.init=function(){controller.initWatches()},controller.init()},angular.module("qsHub").controller("SharedProfileCampusFormController",["$scope","CampusesService","SharedProfileService","NotifierFactory","InstitutionFactory","SharedProfileFactory","WatchService",App.controllers.sharedProfileCampusForm])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Campuses=function($resource,$q,$log,constants,InstitutionsListService,InstitutionsService,InstitutionFactory,DataHandlerFactory,orderBy){var service={deferred:{getCampusList:null}};return service.getCountries=function(){return InstitutionsListService.getCountries()},service.getTuRegions=function(){return InstitutionsListService.getTuRegions()},service.getCampusList=function(params,noCache){var coreId=params.parameters().coreId;if(service.deferred.getCampusList)return service.deferred.getCampusList.promise;service.deferred.getCampusList=$q.defer();var deferred=service.deferred.getCampusList,campuses=null,total=0;return noCache||((campuses=InstitutionFactory.getCampuses())?(campuses=DataHandlerFactory.objectToArray(campuses),total=campuses.length,params.total(total),params.totalEntries=total,deferred.resolve(service.formatCampusList(campuses)),service.deferred.getCampusList=null):(service.deferred.getCampusList=null,deferred.resolve([]))),campuses||InstitutionsService.getInstitutionData(coreId,!0).then(function(data){data.results&&data.results[0]&&data.results[0].campus?(data.results[0].campus=DataHandlerFactory.objectToArray(data.results[0].campus),total=data.results[0].campus.length,params.total(total),params.totalEntries=total,deferred.resolve(service.formatCampusList(data.results[0].campus)),service.deferred.getCampusList=null):(service.deferred.getCampusList=null,deferred.resolve([]))}),deferred.promise},service.formatCampusList=function(campusList){var formatedCampusList=[];return angular.forEach(campusList,function(campus){InstitutionsListService.getCountryNameByCode(campus.country).then(function(countryName){campus.countryName=countryName}),campus.addressLine=InstitutionsListService.getCampusAddress(campus),campus.primaryName=InstitutionsListService.getCampusIsPrimary(campus),formatedCampusList.push(campus)}),orderBy(formatedCampusList,"order",!1)},service.getCreateModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:institutionId/campus")},service.create=function(institutionId,campusData){var dataToInsert={name:null,addressLine1:null,addressLine2:null,addressLine3:null,postcode:null,city:null,state:null,country:null,primary:null,displayInFrontEnd:null,region:null,latitude:null,longitude:null,autoGenerate:null};return service.getCreateModel().save({institutionId:institutionId},service.filterObject(dataToInsert,campusData)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deleteCampus=function(institutionId,campusId){return InstitutionsListService.getCampusModel().delete({id:institutionId,campusId:campusId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deleteCampuses=function(institutionId,campusIds){return InstitutionsListService.getDeleteCampusesModel().save({id:institutionId},campusIds).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.update=function(institutionId,campusData){var dataToUpdate={name:null,addressLine1:null,addressLine2:null,postcode:null,city:null,state:null,country:null,primary:null,displayInFrontEnd:null,region:null,latitude:null,longitude:null,autoGenerate:null};return InstitutionsListService.getCampusModel().update({id:institutionId,campusId:campusData.id},service.filterObject(dataToUpdate,campusData)).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.filterObject=function(filters,object){var filteredObject=angular.copy(filters);return angular.forEach(filters,function(value,key){value&&"object"==typeof value?angular.forEach(value,function(subValue,subKey){null===subValue&&"undefined"!==object[key][subKey]&&(filteredObject[key][subKey]=object[key][subKey])}):null===value&&"undefined"!==object[key]&&(filteredObject[key]=object[key])}),filteredObject},service.getCoordinatesModel=function(){return $resource(constants.api.institutions.url+"/v1/get-coordinates/:searchString",{},{get:{isArray:!0,cancellable:!1}})},service.getSearchString=function(campus){var searchValues=[],searchFields=["addressLine1","addressLine2","city","postcode","country"];return campus&&angular.forEach(searchFields,function(value){campus.hasOwnProperty(value)&&campus[value]&&campus[value].length>0&&searchValues.push(campus[value].trim())}),searchValues.join(" ")},service.getCoordinatesByCampus=function(campus){var searchFields=service.getSearchString(campus);if(!searchFields.length){var deferred=$q.defer();return deferred.resolve(!1),deferred.promise}return service.getCoordinatesModel().get({searchString:searchFields}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("CampusesService",["$resource","$q","$log","constants","InstitutionsListService","InstitutionsService","InstitutionFactory","DataHandlerFactory","orderByFilter",App.services.Campuses])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfile=function($scope,$rootScope,$resource,$location,$state,constants,TuProfileService,NotifierFactory,TuProfileFactory,TuProfileHistoryLogFactory,InstitutionFactory,UserFactory,WatchService,TuProfileDepartmentsService){var controller=this;controller.devMode=constants.dev,$scope.upgradeEmailsTo=constants.emails.upgradeTu,controller.subjects={},$scope.institutionDataLoaded=!1,$scope.profileDataLoaded=!1,$scope.tuProfile={},$scope.upgradeRequest={name:UserFactory.getFullName(),email:UserFactory.getUserName()},$scope.tuProfileBeforeChanges={},$scope.forms={},$scope.showUpgradeForm=!1,$scope.showHistory=!1,$scope.tuIsAdvanced=!1,$scope.activeTab=TuProfileFactory.getProfileTabs().overview,$scope.upgradeInProgress=!1,$scope.historyLog={log:{},totalReturned:0,total:0},$scope.showClientUpgradeForm=!1,$scope.handleHistoryLogVisibility=function(){return TuProfileHistoryLogFactory.getLogLimit()<$scope.historyLog.total},$scope.handleLoadMoreHistoryLog=function(){TuProfileHistoryLogFactory.setLogLimit(TuProfileHistoryLogFactory.getLogLimit()+5),$scope.$broadcast(constants.events.loadMoreHistoryLogs,TuProfileHistoryLogFactory.getProfileType(),InstitutionFactory.isTuAdvanced(),TuProfileHistoryLogFactory.getLogLimit())},$scope.loadInProgress=function(){return!$scope.institutionDataLoaded||!$scope.profileDataLoaded},controller.loadTuProfileData=function(coreId){TuProfileService.getTuProfileData(coreId).then(function(data){$scope.profileDataLoaded=!0,$scope.tuProfile=data,TuProfileFactory.setData(data),$scope.tuProfileBeforeChanges=angular.copy(data),$scope.ugOrPgDisabled=!(InstitutionFactory.isUgEnabled()&&InstitutionFactory.isPgEnabled()),$scope.profileDisableName=InstitutionFactory.isUgEnabled()||InstitutionFactory.isPgEnabled()?InstitutionFactory.isUgEnabled()?"Postgraduate":"Undergraduate":"Undergraduate and Postgraduate",$scope.$broadcast(constants.events.institutionTuProfileChanges)})},$scope.isProfileEnabled=function(type){return type===constants.profileTypes.ug?!InstitutionFactory.isUgEnabled():type===constants.profileTypes.pg?!InstitutionFactory.isPgEnabled():type===constants.profileTypes.master&&(!InstitutionFactory.isUgEnabled()&&!InstitutionFactory.isPgEnabled())},$scope.toggleUpgradeForm=function(){TuProfileFactory.setUpgradeFormVisibility()},$scope.toggleDepartmentEditForm=function(){TuProfileFactory.setDepartmentEditFormVisibility()},$scope.toggleDepartmentAddForm=function(){TuProfileFactory.setDepartmentAddFormVisibility()},$scope.toggleHistory=function(visibility){visibility||(TuProfileHistoryLogFactory.setTriggeredBy(""),TuProfileHistoryLogFactory.setLogLimit(1)),TuProfileFactory.setHistoryLogVisibility(visibility)},$scope.fetchingHistoryLog=function(){return TuProfileHistoryLogFactory.isInProgress()},$scope.fetchingMoreHistoryLog=function(){return TuProfileHistoryLogFactory.isLoadMoreInProgress()},$scope.handleUpgradeClick=function(){if(!($scope.forms.upgradeProfile&&$scope.forms.upgradeProfile.$valid&&$scope.tuProfile.id&&$scope.upgradeRequest))return!1;$scope.upgradeInProgress=!0;var comments=$scope.upgradeRequest.comments||null;TuProfileService.sendUpgradeRequest($scope.tuProfile.id,comments).then(function(success){$scope.upgradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Inquiry sent successfully!":"Processing inquiry failed!","Upgrade To Advanced"),success&&($scope.upgradeRequest.comments=null,$scope.toggleUpgradeForm())})},$scope.showDepartmentsTab=function(){var showDepartmentsTab=!InstitutionFactory.isClientDepartment()&&!InstitutionFactory.hasNoDepartments();return!showDepartmentsTab&&TuProfileFactory.isDepartmentsTabSelected()&&($scope.activeTab=TuProfileFactory.getProfileTabs().overview),showDepartmentsTab},$scope.isRightSidePanelActive=function(){return!!TuProfileFactory.isSubjectsTabSelected()||(!!TuProfileFactory.isPublishTabSelected()||(!(!$scope.showUpgradeForm||!(TuProfileFactory.isOverviewTabSelected()||TuProfileFactory.isProgramsTabSelected()||TuProfileFactory.isMediaTabSelected()||TuProfileFactory.isDepartmentsTabSelected()))||(!(!TuProfileFactory.isOverviewTabSelected()||!$scope.showHistory)||(!(!TuProfileFactory.isDepartmentsTabSelected()||!($scope.showDepartmentEditForm||$scope.showDepartmentAddForm||$scope.showClientUpgradeForm))||(!(!TuProfileFactory.isProgramsTabSelected()||!$scope.showProgramEditForm&&!$scope.showProgramAddForm)||!!TuProfileFactory.isMediaTabSelected())))))},controller.isRequestInfoTypeUrl=function(log){var activeOverviewSubTabs=TuProfileFactory.getActiveOverviewSubTabs(),searchField="requestInfoTypeMaster";return activeOverviewSubTabs.ug?searchField="requestInfoTypeUg":activeOverviewSubTabs.pg&&(searchField="requestInfoTypePg"),"url"===log[searchField]},$scope.isSubjectsTabActive=function(){return TuProfileFactory.isSubjectsTabSelected()},$scope.isMediaTabActive=function(){return TuProfileFactory.isMediaTabSelected()},$scope.isPublishTabActive=function(){return TuProfileFactory.isPublishTabSelected()},controller.handleSendUpgradeRequestClick=function(){controller.upgradeInProgress=!0,TuProfileDepartmentsService.sendUpgradeRequest($scope.upgradeRequest.department.id,$scope.upgradeRequest.comments).then(controller.upgradeCallback)},controller.upgradeCallback=function(success){controller.upgradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Upgraded Request sent successfully!":"Upgrade failed!","Upgrade to Client"),success&&(TuProfileFactory.setClientDepartmentUpgradeFormVisibility(!1),TuProfileFactory.setDepartmentEditFormVisibility(!1))},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.isTuAdvanced,function(newValue){$scope.tuIsAdvanced=newValue}),WatchService.create($scope,"activeTab",function(newValue){TuProfileFactory.setSelectedTabId(newValue),TuProfileFactory.closeSidebars(),TuProfileHistoryLogFactory.resetTriggeredBy()}),WatchService.create($scope,InstitutionFactory.getData,function(institutionData){return TuProfileFactory.setHistoryLogVisibility(!1),TuProfileHistoryLogFactory.setTriggeredBy(""),!InstitutionFactory.isEmpty()&&($scope.institutionDataLoaded=!0,$scope.institutionId=InstitutionFactory.getId(),$scope.institutionData=institutionData,$scope.tuIsAdvanced=InstitutionFactory.isTuAdvanced(),InstitutionFactory.isTuSubscribed()||UserFactory.isClient()?void(angular.isDefined($state)&&InstitutionFactory.isTuSubscribed()&&!UserFactory.noAccess($state.current.name)?controller.loadTuProfileData(InstitutionFactory.getCoreId()):($scope.tuProfile={},$scope.profileDataLoaded=!0,TuProfileFactory.setData(null),$scope.$broadcast(constants.events.institutionTuProfileChanges))):($location.path(constants.defaultClientPage),!1))}),WatchService.create($scope,function(){return TuProfileFactory.isUpgradeFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.upgradeRequest.comments=null,$scope.showUpgradeForm=newValue)}),WatchService.create($scope,function(){return TuProfileFactory.isHistoryLogVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.showHistory=newValue)}),WatchService.create($scope,function(){return TuProfileFactory.isProgramAddFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.showProgramAddForm=newValue)}),WatchService.create($scope,function(){return TuProfileFactory.isProgramEditFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.showProgramEditForm=newValue)}),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.showDepartmentAddForm=newValue)}),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.showDepartmentEditForm=newValue)}),WatchService.create($scope,TuProfileFactory.getAvailableSubjects,function(newValue,oldValue){newValue===oldValue&&angular.equals(controller.subjects,newValue)||(controller.subjects=newValue)}),WatchService.create($scope,TuProfileHistoryLogFactory.getData,function(newValue,oldValue){angular.equals(newValue,oldValue)||newValue&&($scope.isAdvanced=TuProfileHistoryLogFactory.isAdvanced(),$scope.historyLog.total=newValue.totalMatching,$scope.historyLog.totalReturned=newValue.totalFiltered,$scope.historyLog.log=newValue.results)}),WatchService.create($scope,function(){return TuProfileFactory.isClientDepartmentUpgradeFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.upgradeRequest={department:TuProfileFactory.getDepartment(),comments:null,name:UserFactory.getFullName(),email:UserFactory.getUserName()},$scope.showClientUpgradeForm=newValue)}),$rootScope.$on(constants.events.logout,controller.destruct)},controller.destruct=function(){TuProfileFactory.reset(),$scope.showDepartmentEditForm=!1,$scope.showDepartmentAddForm=!1,$scope.showProgramEditForm=!1,$scope.showDProgramAddForm=!1},controller.init=function(){controller.initWatches()},controller.init()},angular.module("qsHub").controller("TuProfileController",["$scope","$rootScope","$resource","$location","$state","constants","TuProfileService","NotifierFactory","TuProfileFactory","TuProfileHistoryLogFactory","InstitutionFactory","UserFactory","WatchService","TuProfileDepartmentsService",App.controllers.tuProfile])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfileService=function($resource,$q,$log,constants){var service={overviewData:[],institutionData:null,tuOverviewHistory:null,deferred:{getOverviewData:null,getInstitutionData:null,getTuOverviewHistory:null},belongsTo:{all:"all",ug:"ug",pg:"pg"}};return service.getInstitutionListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/all/:id")},service.getTuProfileModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id",null,{update:{method:"PATCH"}})},service.getInstitutionModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:id",null,{update:{method:"PATCH"}})},service.getUpgradeRequestModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/upgrade-request")},service.updateTuProfile=function(id,data){return service.getTuProfileModel().update({id:id},data).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.updateInstitution=function(id,data){return service.getInstitutionModel().update({id:id},data).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getTuByCoreIdModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/core-id/:id",null,{get:{cancellable:!0}})},service.getTuProfileData=function(coreId){if(!coreId)throw"Missing Required";return service.getTuByCoreIdModel(coreId).get({id:coreId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.toJSON()},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.sendUpgradeRequest=function(tuProfileId,comments){if(!tuProfileId)throw"Missing Required";return service.getUpgradeRequestModel().save({id:tuProfileId},{comments:comments}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getBelongsToList=function(grid){return grid=grid||!1,grid?[{value:service.belongsTo.all,label:"All"},{value:service.belongsTo.ug,label:"Undergraduate"},{value:service.belongsTo.pg,label:"Postgraduate"}]:[{id:service.belongsTo.all,title:"All"},{id:service.belongsTo.ug,title:"Undergraduate"},{id:service.belongsTo.pg,title:"Postgraduate"}]},service.getBelongsToName=function(belongsTo){switch(belongsTo){case service.belongsTo.ug:return"Undergraduate";case service.belongsTo.pg:return"Postgraduate";default:return"All"}},service},angular.module("qsHub").service("TuProfileService",["$resource","$q","$log","constants",App.services.TuProfileService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuProfileOverview=function($scope,$resource,$location,$timeout,constants,TuProfileService,TuProfileOverviewService,UrlService,ObjectService,TextService,NotifierFactory,TuProfileFactory,TuProfileHistoryLogFactory,WatchService,InstitutionFactory){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.textEditorBasicOptions={disableDragAndDrop:!0,styleWithSpan:!1,minHeight:280,maxHeight:280,toolbar:[["alignment",["ul","ol"]],["edit",["undo","redo"]],["view",["codeview"]]],popover:{link:[]}},controller.textEditorAdvancedOptions={disableDragAndDrop:!0,styleWithSpan:!1,minHeight:280,maxHeight:280,toolbar:[["style",["bold","italic","underline","superscript","subscript","strikethrough"]],["alignment",["ul","ol"]],["insert",["link","unlink"]],["edit",["undo","redo"]],["view",["codeview"]]],popover:{link:[]}},controller.advancedDescriptionWordLimit=500,controller.validationMessageAdvancedDescriptionWordLimit="Profile advanced description has exceeded the limit of "+controller.advancedDescriptionWordLimit+" words. Please reduce number of words.",controller.advancedMasterOverviewWords=0,controller.advancedUgOverviewWords=0,controller.advancedPgOverviewWords=0,controller.basicDescriptionWordLimit=200,controller.validationMessageBasicDescriptionWordLimit="Profile basic description has exceeded the limit of "+controller.basicDescriptionWordLimit+" words. Please reduce number of words.",controller.basicMasterOverviewWords=0,controller.basicUgOverviewWords=0,controller.basicPgOverviewWords=0,controller.submitted={master:!1,ug:!1,pg:!1},$scope.forms={},$scope.overviewBasicMasterFormSubmitInProgress=!1,$scope.overviewBasicUgFormSubmitInProgress=!1,$scope.overviewBasicPgFormSubmitInProgress=!1,$scope.activeOverviewSubTab=TuProfileOverviewService.getActiveTabs().master,controller.isInvalidUrl=function(profileType){if(!controller.submitted[profileType])return!1;var url=$scope.tuProfile[profileType+"WebsiteUrl"];return url&&url.length>1&&url.length<7},WatchService.create($scope,"activeOverviewSubTab",function(newValue,oldValue){newValue!==oldValue&&void 0!==newValue&&(TuProfileFactory.setActiveOverviewSubTabs(newValue),$scope.showHistory&&newValue===TuProfileOverviewService.getActiveTabs().master?(TuProfileHistoryLogFactory.setLogLimit(1),$scope.tuIsAdvanced?$scope.handleTuOverviewHistoryLogClick("master",!0):$scope.handleTuOverviewHistoryLogClick("master")):$scope.showHistory&&newValue===TuProfileOverviewService.getActiveTabs().ug?(TuProfileHistoryLogFactory.setLogLimit(1),$scope.ugIsAdvanced?$scope.handleTuOverviewHistoryLogClick("ug",!0):$scope.ugIsAdvanced||$scope.handleTuOverviewHistoryLogClick("ug")):$scope.showHistory&&newValue===TuProfileOverviewService.getActiveTabs().pg&&(TuProfileHistoryLogFactory.setLogLimit(1),$scope.tuIsAdvanced?$scope.handleTuOverviewHistoryLogClick("pg",!0):$scope.handleTuOverviewHistoryLogClick("pg")))}),$scope.$watch(InstitutionFactory.getCoreId,function(newValue,oldValue){newValue!==oldValue&&controller.resetDescriptionForm()}),$scope.countWords=function(text){return TextService.countWords(text)},$scope.handleOverviewBasicMasterDataSubmit=function(){return $scope.isBasicOverviewEmpty=!1,(void 0!==$scope.tuProfile.basicMasterOverview&&0===TextService.cleanHtmlTags($scope.tuProfile.basicMasterOverview).length||""===$scope.tuProfile.basicMasterOverview)&&($scope.isBasicOverviewEmpty=!0),$scope.countWords($scope.tuProfile.basicMasterOverview)>controller.basicDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageBasicDescriptionWordLimit,"Saving failed!"),!1):!($scope.overviewBasicMasterFormSubmitInProgress||!$scope.forms.overviewBasicMasterForm||!$scope.forms.overviewBasicMasterForm.$valid||$scope.isBasicOverviewEmpty)&&($scope.overviewBasicMasterFormSubmitInProgress=!0,void TuProfileOverviewService.saveOverviewData($scope.tuProfile.id,{type:constants.profileTypes.master,basicMasterOverview:$scope.tuProfile.basicMasterOverview}).then(function(success){$scope.overviewBasicMasterFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")}))},$scope.setIsBasicOverviewEmpty=function(value){$scope.isBasicOverviewEmpty=value},$scope.handleOverviewAdvancedMasterDataSubmit=function(){return controller.submitted.master=!0,$scope.isAdvancedOverviewEmpty=!1,(void 0!==$scope.tuProfile.advancedMasterOverview&&0===TextService.cleanHtmlTags($scope.tuProfile.advancedMasterOverview).length||""===$scope.tuProfile.advancedMasterOverview)&&($scope.isAdvancedOverviewEmpty=!0),$scope.countWords($scope.tuProfile.advancedMasterOverview)>controller.advancedDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageAdvancedDescriptionWordLimit,"Saving failed!"),!1):($scope.tuProfile.masterWebsiteUrl=UrlService.prependHttp($scope.tuProfile.masterWebsiteUrl),!($scope.overviewAdvancedMasterFormSubmitInProgress||!$scope.forms.overviewAdvancedMasterForm||!$scope.forms.overviewAdvancedMasterForm.$valid||$scope.isAdvancedOverviewEmpty||controller.isInvalidUrl("master"))&&($scope.overviewAdvancedMasterFormSubmitInProgress=!0,void TuProfileOverviewService.saveOverviewData($scope.tuProfile.id,{type:constants.profileTypes.master,advanced:!0,requestInfoTypeMaster:$scope.tuProfile.requestInfoTypeMaster,advancedMasterOverview:$scope.tuProfile.advancedMasterOverview,masterWebsiteUrl:$scope.tuProfile.masterWebsiteUrl,masterRequestInfoUrl:$scope.tuProfile.masterRequestInfoUrl,masterRequestInfoUrlTitle:$scope.tuProfile.masterRequestInfoUrlTitle,masterRequestInfoEmail:$scope.tuProfile.masterRequestInfoEmail}).then(function(success){$scope.overviewAdvancedMasterFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")})))},$scope.setIsAdvancedOverviewEmpty=function(value){$scope.isAdvancedOverviewEmpty=value},$scope.handleOverviewBasicUgDataSubmit=function(){return $scope.isBasicUgOverviewEmpty=!1,(void 0!==$scope.tuProfile.basicUgOverview&&0===TextService.cleanHtmlTags($scope.tuProfile.basicUgOverview).length||""===$scope.tuProfile.basicUgOverview)&&($scope.isBasicUgOverviewEmpty=!0),$scope.countWords($scope.tuProfile.basicUgOverview)>controller.basicDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageBasicDescriptionWordLimit,"Saving failed!"),!1):!($scope.overviewBasicUgFormSubmitInProgress||!$scope.forms.overviewBasicUgForm||!$scope.forms.overviewBasicUgForm.$valid||$scope.isBasicUgOverviewEmpty)&&($scope.overviewBasicUgFormSubmitInProgress=!0,void TuProfileOverviewService.saveOverviewData($scope.tuProfile.id,{type:constants.profileTypes.ug,basicUgOverview:$scope.tuProfile.basicUgOverview}).then(function(success){$scope.overviewBasicUgFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")}))},$scope.setIsBasicUgOverviewEmpty=function(value){$scope.isBasicUgOverviewEmpty=value},$scope.handleOverviewAdvancedUgDataSubmit=function(){return controller.submitted.ug=!0,$scope.isAdvancedUgOverviewEmpty=!1,(void 0!==$scope.tuProfile.advancedUgOverview&&0===TextService.cleanHtmlTags($scope.tuProfile.advancedUgOverview).length||""===$scope.tuProfile.advancedUgOverview)&&($scope.isAdvancedUgOverviewEmpty=!0),$scope.countWords($scope.tuProfile.advancedUgOverview)>controller.advancedDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageAdvancedDescriptionWordLimit,"Saving failed!"),!1):($scope.tuProfile.ugWebsiteUrl=UrlService.prependHttp($scope.tuProfile.ugWebsiteUrl),!($scope.overviewAdvancedUgFormSubmitInProgress||!$scope.forms.overviewAdvancedUgForm||!$scope.forms.overviewAdvancedUgForm.$valid||$scope.isAdvancedUgOverviewEmpty||controller.isInvalidUrl("ug"))&&($scope.overviewAdvancedUgFormSubmitInProgress=!0,void TuProfileOverviewService.saveOverviewData($scope.tuProfile.id,{type:constants.profileTypes.ug,advanced:!0,requestInfoTypeUg:$scope.tuProfile.requestInfoTypeUg,advancedUgOverview:$scope.tuProfile.advancedUgOverview,ugWebsiteUrl:$scope.tuProfile.ugWebsiteUrl,ugRequestInfoUrlTitle:$scope.tuProfile.ugRequestInfoUrlTitle,ugRequestInfoUrl:$scope.tuProfile.ugRequestInfoUrl,ugRequestInfoEmail:$scope.tuProfile.ugRequestInfoEmail}).then(function(success){$scope.overviewAdvancedUgFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")})))},$scope.setIsAdvancedUgOverviewEmpty=function(value){$scope.isAdvancedUgOverviewEmpty=value},$scope.handleOverviewBasicPgDataSubmit=function(){return $scope.isBasicPgOverviewEmpty=!1,(void 0!==$scope.tuProfile.basicPgOverview&&0===TextService.cleanHtmlTags($scope.tuProfile.basicPgOverview).length||""===$scope.tuProfile.basicPgOverview)&&($scope.isBasicPgOverviewEmpty=!0),$scope.countWords($scope.tuProfile.basicPgOverview)>controller.basicDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageBasicDescriptionWordLimit,"Saving failed!"),!1):!($scope.overviewBasicPgFormSubmitInProgress||!$scope.forms.overviewBasicPgForm||!$scope.forms.overviewBasicPgForm.$valid||$scope.isBasicPgOverviewEmpty)&&($scope.overviewBasicPgFormSubmitInProgress=!0,void TuProfileOverviewService.saveOverviewData($scope.tuProfile.id,{type:constants.profileTypes.pg,basicPgOverview:$scope.tuProfile.basicPgOverview}).then(function(success){$scope.overviewBasicPgFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")}))},$scope.setIsBasicPgOverviewEmpty=function(value){$scope.isBasicPgOverviewEmpty=value},controller.setOverviewInvalid=function(type){switch(type){case"advancedOverview":$scope.setIsAdvancedOverviewEmpty(!1);break;case"advancedPgOverview":$scope.setIsAdvancedPgOverviewEmpty(!1);break;case"advancedUgOverview":$scope.setIsAdvancedUgOverviewEmpty(!1);break;case"basicOverview":$scope.setIsBasicOverviewEmpty(!1);break;case"basicUgOverview":$scope.setIsBasicUgOverviewEmpty(!1);break;case"basicpgOverview":$scope.setIsBasicPgOverviewEmpty(!1)}},$scope.handleOverviewAdvancedPgDataSubmit=function(){return controller.submitted.pg=!0,$scope.isAdvancedPgOverviewEmpty=!1,(void 0!==$scope.tuProfile.advancedPgOverview&&0===TextService.cleanHtmlTags($scope.tuProfile.advancedPgOverview).length||""===$scope.tuProfile.advancedPgOverview)&&($scope.isAdvancedPgOverviewEmpty=!0),$scope.countWords($scope.tuProfile.advancedPgOverview)>controller.advancedDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageAdvancedDescriptionWordLimit,"Saving failed!"),!1):($scope.tuProfile.pgWebsiteUrl=UrlService.prependHttp($scope.tuProfile.pgWebsiteUrl),!($scope.overviewAdvancedPgFormSubmitInProgress||!$scope.forms.overviewAdvancedPgForm||!$scope.forms.overviewAdvancedPgForm.$valid||$scope.isAdvancedPgOverviewEmpty||controller.isInvalidUrl("pg"))&&($scope.overviewAdvancedPgFormSubmitInProgress=!0,void TuProfileOverviewService.saveOverviewData($scope.tuProfile.id,{type:constants.profileTypes.pg,advanced:!0,requestInfoTypePg:$scope.tuProfile.requestInfoTypePg,advancedPgOverview:$scope.tuProfile.advancedPgOverview,pgWebsiteUrl:$scope.tuProfile.pgWebsiteUrl,pgRequestInfoUrlTitle:$scope.tuProfile.pgRequestInfoUrlTitle,pgRequestInfoUrl:$scope.tuProfile.pgRequestInfoUrl,pgRequestInfoEmail:$scope.tuProfile.pgRequestInfoEmail}).then(function(success){$scope.overviewAdvancedPgFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")})))},$scope.setIsAdvancedPgOverviewEmpty=function(value){$scope.isAdvancedPgOverviewEmpty=value},$scope.$on(constants.events.loadMoreHistoryLogs,function(event,profileType,advanced,limit){advanced=advanced||!1,TuProfileHistoryLogFactory.setLoadMoreInProgress(!0),TuProfileFactory.setHistoryLogVisibility(!0),TuProfileOverviewService.getHistoryLog($scope.tuProfile.id,profileType,advanced,limit).then(function(data){TuProfileHistoryLogFactory.setData(data),TuProfileHistoryLogFactory.setLoadMoreInProgress(!1)})}),$scope.handleTuOverviewHistoryLogClick=function(profileType,advanced){advanced=advanced||!1,TuProfileHistoryLogFactory.setAdvanced(advanced),$scope.tuProfile.id!==TuProfileOverviewService.getProfileId()&&TuProfileHistoryLogFactory.setLogLimit(1),TuProfileHistoryLogFactory.shouldBeVisible($scope.tuProfile.id)?(TuProfileHistoryLogFactory.setInProgress(!0),TuProfileFactory.setHistoryLogVisibility(!0),TuProfileHistoryLogFactory.setProfileType(profileType),TuProfileOverviewService.getHistoryLog($scope.tuProfile.id,profileType,advanced,TuProfileHistoryLogFactory.getLogLimit()).then(function(data){TuProfileHistoryLogFactory.setData(data),TuProfileHistoryLogFactory.setInProgress(!1)}),TuProfileHistoryLogFactory.setTriggeredBy($scope.tuProfile.id)):(TuProfileHistoryLogFactory.setLogLimit(1),TuProfileHistoryLogFactory.setTriggeredBy(""),TuProfileFactory.setHistoryLogVisibility(!1))},controller.isAdvancedOverviewInvalid=function(advancedOverviewWords){return advancedOverviewWords>controller.advancedDescriptionWordLimit},controller.isBasicOverviewInvalid=function(basicOverviewWords){return basicOverviewWords>controller.basicDescriptionWordLimit},controller.onKeyUp=function($event){if(13!==$event.keyCode){var url=$event.target.value,variableName=$event.target.getAttribute("ng-model");url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),variableName&&ObjectService.set($scope,variableName,url))}},controller.initWatches=function(){WatchService.create($scope,TuProfileFactory.getData,function(newValue,oldValue){newValue!==oldValue&&($scope.tuProfile=newValue)})},controller.init=function(){controller.initWatches()},controller.resetDescriptionForm=function(){$scope.setIsAdvancedOverviewEmpty(!1),$scope.setIsAdvancedUgOverviewEmpty(!1),$scope.setIsAdvancedPgOverviewEmpty(!1),$scope.setIsBasicOverviewEmpty(!1),$scope.setIsBasicUgOverviewEmpty(!1),$scope.setIsBasicPgOverviewEmpty(!1)},WatchService.create($scope,TuProfileFactory.isOverviewTabSelected,function(isActive,wasActive){wasActive&&controller.resetDescriptionForm(),alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuProfileOverviewController",["$scope","$resource","$location","$timeout","constants","TuProfileService","TuProfileOverviewService","UrlService","ObjectService","TextService","NotifierFactory","TuProfileFactory","TuProfileHistoryLogFactory","WatchService","InstitutionFactory",App.controllers.TuProfileOverview])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfileOverviewService=function($resource,$q,$log,constants){var service={overviewData:null,institutionData:null,historyLog:null,historyLogFieldNames:null,profileId:null,activeTabs:{master:0,pg:1,ug:2},deferred:{getHistoryLog:null}};return service.getTuModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id",null,{update:{method:"PATCH"}})},service.saveOverviewData=function(profileId,overviewData){return service.getTuModel().update({id:profileId},overviewData).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getHistoryModel=function(){return $resource(constants.api.institutions.url+"/v1/list/tu-overview-history?sorting[modifiedAt]=desc&count=10&")},service.getActiveTabs=function(){return service.activeTabs},service.getProfileId=function(){return service.profileId},service.getHistoryLog=function(recordId,profileType,advanced,limit){if(!recordId||!profileType||void 0===advanced)return!1;var fields;switch(profileType){case"master":fields=["masterWebsiteUrl","masterRequestInfoEmail","masterRequestInfoUrlTitle","masterRequestInfoUrl","masterWebsiteUrl","masterRequestInfoEmail","masterRequestInfoUrlTitle","masterRequestInfoUrl","advancedMasterOverview","basicMasterOverview"];break;case"ug":fields=["ugWebsiteUrl","ugRequestInfoEmail","ugRequestInfoUrlTitle","ugRequestInfoUrl","basicUgOverview","ugWebsiteUrl","ugRequestInfoEmail","ugRequestInfoUrlTitle","ugRequestInfoUrl","advancedUgOverview","basicUgOverview"];break;case"pg":fields=["pgWebsiteUrl","pgRequestInfoEmail","pgRequestInfoUrlTitle","pgRequestInfoUrl","pgWebsiteUrl","pgRequestInfoEmail","pgRequestInfoUrlTitle","pgRequestInfoUrl","advancedPgOverview","basicPgOverview"]}if(fields.push("advanced"),service.deferred.getHistoryLog)return service.deferred.getHistoryLog.promise;service.deferred.getHistoryLog=$q.defer();var deferred=service.deferred.getHistoryLog;return service.historyLog?deferred.resolve(service.historyLog):service.getHistoryModel().get({"filter[recordId]":recordId,"field[]":fields,"filter[type]":profileType,limit:limit},function(data){constants.dev&&$log.log("success, got data: ",data),service.historyLog=data,service.profileId=recordId,deferred.resolve(service.historyLog),deferred=null,service.deferred.getHistoryLog=null,service.historyLog=null},function(error){constants.dev&&$log.log("request failed"+error),service.historyLog=null,deferred.resolve(service.historyLog),deferred=null,service.deferred.getHistoryLog=null}),deferred.promise},service},angular.module("qsHub").service("TuProfileOverviewService",["$resource","$q","$log","constants",App.services.TuProfileOverviewService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmProfileOverview=function($scope,constants,TmProfileOverviewService,UrlService,ObjectService,TextService,NotifierFactory,UserFactory,TmProfileFactory,TmProfileOverviewHistoryLogFactory,TmProfileOverviewFactory,InstitutionFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.fetchingHistoryLogsInProgress=!1,controller.textEditorBasicOptions={disableDragAndDrop:!0,styleWithSpan:!1,minHeight:280,maxHeight:280,toolbar:[["alignment",["ul","ol"]],["edit",["undo","redo"]],["view",["codeview"]]],popover:{link:[]}},controller.textEditorAdvancedOptions={disableDragAndDrop:!0,styleWithSpan:!1,minHeight:280,maxHeight:280,toolbar:[["style",["bold","italic","underline","superscript","subscript","strikethrough"]],["alignment",["ul","ol"]],["insert",["link","unlink"]],["edit",["undo","redo"]],["view",["codeview"]]],popover:{link:[]}},controller.advancedDescriptionWordLimit=500,controller.validationMessageAdvancedDescriptionWordLimit="Profile advanced description has exceeded the limit of "+controller.advancedDescriptionWordLimit+" words. Please reduce number of words.",controller.advancedOverviewWords=0,controller.basicDescriptionWordLimit=200,controller.validationMessageBasicDescriptionWordLimit="Profile basic description has exceeded the limit of "+controller.basicDescriptionWordLimit+" words. Please reduce number of words.",controller.basicOverviewWords=0,controller.submitted=!1,$scope.overviewBasicFormSubmitInProgress=!1,$scope.forms={},$scope.upgradeRequest={name:UserFactory.getFullName(),email:UserFactory.getUserName()},controller.isInvalidUrl=function(){if(!controller.submitted)return!1;var url=$scope.tmProfile.websiteUrl;return url&&url.length>1&&url.length<7},$scope.countWords=function(text){return TextService.countWords(text)},$scope.handleOverviewBasicDataSubmit=function(){return $scope.isBasicTmOverviewEmpty=!1,(void 0!==$scope.tmProfile.basicOverview&&0===TextService.cleanHtmlTags($scope.tmProfile.basicOverview).length||""===$scope.tmProfile.basicOverview)&&($scope.isBasicTmOverviewEmpty=!0),$scope.countWords($scope.tmProfile.basicOverview)>controller.basicDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageBasicDescriptionWordLimit,"Saving failed!"),!1):!($scope.overviewBasicFormSubmitInProgress||!$scope.forms.overviewBasicForm||!$scope.forms.overviewBasicForm.$valid||$scope.isBasicTmOverviewEmpty)&&($scope.overviewBasicFormSubmitInProgress=!0,void TmProfileOverviewService.saveOverviewData($scope.tmProfile.id,{basicOverview:$scope.tmProfile.basicOverview}).then(function(success){$scope.overviewBasicFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")}))},$scope.setIsBasicTmOverviewEmpty=function(value){$scope.isBasicTmOverviewEmpty=value},$scope.handleOverviewAdvancedDataSubmit=function(){return controller.submitted=!0,$scope.isAdvancedTmOverviewEmpty=!1,(void 0!==$scope.tmProfile.advancedOverview&&0===TextService.cleanHtmlTags($scope.tmProfile.advancedOverview).length||""===$scope.tmProfile.advancedOverview)&&($scope.isAdvancedTmOverviewEmpty=!0),$scope.countWords($scope.tmProfile.advancedOverview)>controller.advancedDescriptionWordLimit?(NotifierFactory.show("error",controller.validationMessageAdvancedDescriptionWordLimit,"Saving failed!"),!1):($scope.tmProfile.websiteUrl=UrlService.prependHttp($scope.tmProfile.websiteUrl),!($scope.overviewAdvancedFormSubmitInProgress||!$scope.forms.overviewAdvancedForm||!$scope.forms.overviewAdvancedForm.$valid||controller.isInvalidUrl()||$scope.isAdvancedTmOverviewEmpty)&&($scope.overviewAdvancedFormSubmitInProgress=!0,void TmProfileOverviewService.saveOverviewData($scope.tmProfile.id,{advanced:!0,advancedOverview:$scope.tmProfile.advancedOverview,websiteUrl:$scope.tmProfile.websiteUrl,requestInfoEmail:$scope.tmProfile.requestInfoEmail}).then(function(success){$scope.overviewAdvancedFormSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Overview Information")})))},$scope.setIsAdvancedTmOverviewEmpty=function(value){$scope.isAdvancedTmOverviewEmpty=value},controller.handleTmOverviewHistoryLogClick=function(advanced){controller.fetchingHistoryLogsInProgress=!0,advanced=advanced||!1;var isVisible=!TmProfileOverviewHistoryLogFactory.isOverviewVisible();TmProfileOverviewHistoryLogFactory.setOverviewVisible(isVisible),isVisible&&(TmProfileOverviewService.getOverviewHistoryLogs($scope.tmProfile.id,advanced).then(function(data){TmProfileOverviewHistoryLogFactory.setLogs(data),controller.fetchingHistoryLogsInProgress=!1}),TmProfileFactory.setUpgradeFormVisibility(!1))},controller.handleTmFaqHistoryLogClick=function(){controller.fetchingHistoryLogsInProgress=!0;var isVisible=!TmProfileOverviewHistoryLogFactory.isFaqVisible();TmProfileOverviewHistoryLogFactory.setFaqVisible(isVisible),isVisible&&TmProfileOverviewService.getFaqHistoryLogs($scope.tmProfile.id).then(function(data){TmProfileOverviewHistoryLogFactory.setLogs(data),controller.fetchingHistoryLogsInProgress=!1})},controller.isAdvancedOverviewInvalid=function(advancedOverviewWords){return advancedOverviewWords>controller.advancedDescriptionWordLimit},controller.isBasicOverviewInvalid=function(basicOverviewWords){return basicOverviewWords>controller.basicDescriptionWordLimit},controller.onKeyUp=function($event){if(13!==$event.keyCode){var url=$event.target.value,variableName=$event.target.getAttribute("ng-model");url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),variableName&&ObjectService.set($scope,variableName,url))}},$scope.isRightSidePanelActive=function(){return!(!TmProfileFactory.isOverviewTabSelected||!$scope.showUpgradeForm)},controller.isOverviewInvalid=function(){return controller.submitted&&($scope.isAdvancedTmOverviewEmpty||$scope.isBasicTmOverviewEmpty)},controller.setOverviewInvalid=function(type){"advancedTmOverview"===type?$scope.setIsAdvancedTmOverviewEmpty(!1):"basicTmOverview"===type&&$scope.setIsBasicTmOverviewEmpty(!1)},controller.activeOverviewSubTabWatch=function(selectedTabId){TmProfileOverviewFactory.setSelectedTabId(selectedTabId),TmProfileFactory.closeRightSidePanels()},controller.isLoadMoreRequestWatch=function(loadMore){if(loadMore){TmProfileOverviewHistoryLogFactory.loadMore(!1),TmProfileOverviewHistoryLogFactory.setLoadMoreInProgress(!0);var limit=TmProfileOverviewHistoryLogFactory.getLimit()+5;TmProfileOverviewHistoryLogFactory.isOverviewVisible()?TmProfileOverviewService.getOverviewHistoryLogs($scope.tmProfile.id,InstitutionFactory.isTmAdvanced(),limit).then(function(data){TmProfileOverviewHistoryLogFactory.setLogs(data),TmProfileOverviewHistoryLogFactory.setLoadMoreInProgress(!1),TmProfileOverviewHistoryLogFactory.setLimit(limit)}):TmProfileOverviewService.getFaqHistoryLogs($scope.tmProfile.id,limit).then(function(data){TmProfileOverviewHistoryLogFactory.setLogs(data),TmProfileOverviewHistoryLogFactory.setLoadMoreInProgress(!1),TmProfileOverviewHistoryLogFactory.setLimit(limit)})}},controller.initWatches=function(){WatchService.create($scope,"activeOverviewSubTab",controller.activeOverviewSubTabWatch),WatchService.create($scope,TmProfileOverviewHistoryLogFactory.isLoadMoreRequest,controller.isLoadMoreRequestWatch),WatchService.create($scope,TmProfileFactory.getData,function(newValue,oldValue){newValue!==oldValue&&($scope.tmProfile=newValue)}),WatchService.create($scope,TmProfileFactory.isUpgradeFormVisible($scope.activeTab),function(newValue,oldValue){newValue!==oldValue&&($scope.upgradeRequest.comments=null,$scope.showUpgradeForm=newValue)}),WatchService.create($scope,InstitutionFactory.getCoreId,function(newValue,oldValue){newValue!==oldValue&&controller.resetDescriptionForm()})},controller.init=function(){controller.initWatches()},controller.resetDescriptionForm=function(){$scope.setIsBasicTmOverviewEmpty(!1),$scope.setIsAdvancedTmOverviewEmpty(!1)},WatchService.create($scope,TmProfileFactory.isOverviewTabSelected,function(isActive,wasActive){wasActive&&controller.resetDescriptionForm(),!alreadyInitialised&&isActive&&wasActive&&(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfileOverviewController",["$scope","constants","TmProfileOverviewService","UrlService","ObjectService","TextService","NotifierFactory","UserFactory","TmProfileFactory","TmProfileOverviewHistoryLogFactory","TmProfileOverviewFactory","InstitutionFactory","WatchService",App.controllers.TmProfileOverview])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmProfileOverviewFaq=function($scope,constants,TmProfileOverviewService,TextService,NotifierFactory,TmProfileFactory,TmProfileOverviewFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.maxItems=TmProfileOverviewService.maxFaqItems,controller.updateInProgress=!1,controller.wordsLimit=200,controller.defaultItem={answer:null,question:null},controller.textEditorAdvancedOptions={disableDragAndDrop:!0,styleWithSpan:!1,minHeight:280,maxHeight:280,toolbar:[["alignment",["ul","ol"]],["edit",["undo","redo"]],["view",["codeview"]]],popover:{link:[]}},controller.wordsCounters=[],controller.items=new Array(controller.maxItems),controller.tmProfile=null,$scope.faq=[],controller.handleTextEditorChanges=function(key,text){controller.wordsCounters[key]=controller.countWords(text)},controller.isInvalidAnswer=function(key){return controller.wordsCounters[key]>controller.wordsLimit},controller.countWords=function(text){return TextService.countWords(text)},controller.handleAddClick=function(){$scope.faq.length<controller.maxItems&&$scope.faq.push(angular.copy(controller.defaultItem))},controller.handleUpdateClick=function(){for(var key in $scope.faq)if(controller.isInvalidAnswer(key))return NotifierFactory.show("error","FAQ answer has exceeded the limit of "+controller.wordsLimit+" words. Please reduce number of words.","Saving failed!"),!1;controller.updateInProgress=!0,TmProfileOverviewService.saveOverviewData(controller.tmProfileId,{faq:$scope.faq}).then(function(success){controller.updateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Updated successfully!":"Update failed!","Overview FAQ"),success&&(controller.tmProfile.faq=angular.copy($scope.faq),TmProfileFactory.setData(controller.tmProfile))})},controller.handleRemoveClick=function(key){if(void 0===$scope.faq||!$scope.faq.length)return!1;key=parseInt(key,10),void 0!==$scope.faq[key]&&$scope.faq.splice(key,1)},controller.isRemoveDisabled=function(){return controller.updateInProgress},controller.isItemVisible=function(key){return void 0===$scope.faq?0===key:(key=parseInt(key,10),void 0!==$scope.faq&&null!==$scope.faq&&void 0!==$scope.faq[key]||0===key)},controller.showAddFaq=function(itemIndex){return $scope.faq&&$scope.faq.length===itemIndex+1},controller.resetFaq=function(){controller.tmProfile&&controller.tmProfile.faq&&($scope.faq=angular.copy(controller.tmProfile.faq))},controller.initWatches=function(){WatchService.create($scope,TmProfileFactory.getData,function(newValue){controller.tmProfile=angular.copy(newValue),$scope.faq=newValue&&newValue.faq?newValue.faq:null,controller.tmProfileId=newValue&&newValue.id?newValue.id:null}),WatchService.create($scope,TmProfileOverviewFactory.isOverviewTabSelected,function(isActive){isActive||controller.resetFaq()})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileOverviewFactory.isFaqSelected,function(isActive){!alreadyInitialised&&isActive?(controller.init(),alreadyInitialised=!0):isActive&&controller.resetFaq()})},angular.module("qsHub").controller("TmProfileOverviewFaqController",["$scope","constants","TmProfileOverviewService","TextService","NotifierFactory","TmProfileFactory","TmProfileOverviewFactory","WatchService",App.controllers.TmProfileOverviewFaq])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmProfileOverviewService=function($resource,$q,$log,constants){var service={overviewData:null,institutionData:null,historyLog:null,historyLogFieldNames:null,profileId:null,deferred:{getHistoryLog:null},maxFaqItems:5};return service.getTmModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id",null,{update:{method:"PATCH"}})},service.saveOverviewData=function(profileId,overviewData){return service.getTmModel().update({id:profileId},overviewData).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getHistoryModel=function(){return $resource(constants.api.institutions.url+"/v1/list/tm-overview-history?sorting[modifiedAt]=desc&count=10&")},service.getActiveTabs=function(){return service.activeTabs},service.getProfileId=function(){return service.profileId},service.getLogs=function(profileId,fields,limit){if(!profileId)return!1;if(limit=limit||1,service.deferred.getHistoryLog)return service.deferred.getHistoryLog.promise;service.deferred.getHistoryLog=$q.defer();var deferred=service.deferred.getHistoryLog;return service.historyLog?deferred.resolve(service.historyLog):service.getHistoryModel().get({"filter[recordId]":profileId,"field[]":fields,limit:limit},function(data){constants.dev&&$log.log("success, got data: ",data),service.historyLog=data,service.profileId=profileId,deferred.resolve(service.historyLog),deferred=null,service.deferred.getHistoryLog=null,service.historyLog=null},function(error){constants.dev&&$log.log("request failed"+error),service.historyLog=null,deferred.resolve(service.historyLog),deferred=null,service.deferred.getHistoryLog=null}),deferred.promise},service.getOverviewHistoryLogs=function(profileId,isAdvanced,limit){if(!profileId||void 0===isAdvanced)return!1;var fields=["websiteUrl","requestInfoEmail","websiteUrl","advanced"];return isAdvanced?fields.push("advancedOverview"):fields.push("basicOverview"),service.getLogs(profileId,fields,limit)},service.getFaqHistoryLogs=function(profileId,limit){return!!profileId&&service.getLogs(profileId,["faq"],limit)},service},angular.module("qsHub").service("TmProfileOverviewService",["$resource","$q","$log","constants",App.services.TmProfileOverviewService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.TmProfileOverview=function(){var selectedTabId=0;return{setSelectedTabId:function(tabId){selectedTabId=tabId},isFaqSelected:function(){return 1===selectedTabId},isOverviewSelected:function(){return 0===selectedTabId}}},angular.module("qsHub").factory("TmProfileOverviewFactory",[App.factories.TmProfileOverview])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.tmProfileOverviewHistoryLog=function(){var limit,faqVisible=!1,overviewVisible=!1,loadMoreInProgress=!1,loadMore=!1,logs=[];return{isFaqVisible:function(){return faqVisible},isOverviewVisible:function(){return overviewVisible},setFaqVisible:function(isVisible){(faqVisible=isVisible)&&(overviewVisible=!1)},setOverviewVisible:function(isVisible){(overviewVisible=isVisible)&&(faqVisible=!1)},closeAll:function(){overviewVisible=!1,faqVisible=!1},setLogs:function(data){logs=data},getLogs:function(){return logs},setLimit:function(newLimit){limit=newLimit},getLimit:function(){return limit||1},isLoadMoreInProgress:function(){return loadMoreInProgress},setLoadMoreInProgress:function(inProgress){loadMoreInProgress=inProgress},loadMore:function(more){loadMore=void 0===more||more},isLoadMoreRequest:function(){return loadMore}}},angular.module("qsHub").factory("TmProfileOverviewHistoryLogFactory",[App.factories.tmProfileOverviewHistoryLog])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfileDepartments=function($scope,$rootScope,$resource,$location,constants,NotifierFactory,TuProfileFactory,InstitutionFactory,TuProfileDepartmentsService,TuProfileService,uiGridConstants,UserFactory,WatchService,GridService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.deleteField="delete",controller.modifiedAtField="modifiedAt",$scope.departmentsToDelete={},$scope.alphabeticalOrderingInProgress=!1,$scope.deleteInProgress=!1,$scope.isDatagridReloading=!1,$scope.isDatagridRendered=!1,$scope.filters={createdAt:{startDate:null,endDate:null}},controller.gridFilterNameSpace=TuProfileFactory.getIsDepartmentOverview()?constants.gridNameSpaces.departmentsOvGridFilters:constants.gridNameSpaces.departmentsGridFilters,controller.gridVisibilityNameSpace=TuProfileFactory.getIsDepartmentOverview()?constants.gridNameSpaces.departmentsOvGridVisibility:constants.gridNameSpaces.departmentsGridVisibility,controller.lastCreatedAt=null,controller.paginationOptions=GridService.getColumnsFilters(controller.gridFilterNameSpace,[]),controller.columnsVisibility=GridService.getColumnsVisibility(controller.gridVisibilityNameSpace),$scope.getTuProfileDepartmentController=function(){return controller},$scope.handleCreatedAtDateRange=function(event){null===event||void 0===event?($scope.gridOptions.columnDefs[5].filters[0].term=null,$scope.gridOptions.columnDefs[5].filters[1].term=null):event.model.startDate&&event.model.endDate&&($scope.gridOptions.columnDefs[5].filters[0].term=event.model.startDate.format("x"),$scope.gridOptions.columnDefs[5].filters[1].term=event.model.endDate.format("x"))},$scope.handleDatagridRowClick=function(department){$scope.selectedDepartmentId=$scope.selectedDepartmentId===department.id?null:department.id,TuProfileFactory.setDepartmentBeforeChanges(department),department=angular.copy(department),TuProfileFactory.setDepartmentEditFormVisibility($scope.selectedDepartmentId===department.id&&"undefined"!==department.id),TuProfileFactory.setDepartment(department),controller.toggleColumns($scope.selectedDepartmentId===department.id&&"undefined"!==department.id),TuProfileFactory.setIsDepartmentRowSelected(!0)},controller.toggleColumns=function(hide){$scope.gridOptions&&(hide?angular.forEach($scope.gridOptions.columnDefs,function(column){column.field!==controller.deleteField?column.visible=!angular.isDefined(controller.columnsVisibility)||controller.columnsVisibility[column.field]:column.visible=!1}):angular.forEach($scope.gridOptions.columnDefs,function(column){column.field===controller.deleteField?column.visible=!0:column.visible=!angular.isDefined(controller.columnsVisibility)||controller.columnsVisibility[column.field]}),$scope.gridOptions.enableGridMenu=!hide)},$scope.handleAlphabeticalOrderClick=function(alphabetical){$scope.alphabeticalOrderingInProgress=!0,TuProfileService.updateInstitution($scope.institutionId,{departmentsAlphabeticalOrder:alphabetical}).then(function(success){success&&controller.reloadDatagrid(),$scope.alphabeticalOrderingInProgress=!1})},$scope.handleAddDepartmentClick=function(){TuProfileFactory.setDepartmentAddFormVisibility()},controller.applyDateFilter=function(filterName,defaultValue){var filter=GridService.getFilterByField(controller.paginationOptions,filterName,defaultValue);angular.isDefined(filter)&&null!==filter&&angular.isDefined(filter.startDate)&&angular.isDefined(filter.endDate)&&(null!==filter.startDate&&null!==filter.startDate?$scope.filters.createdAt={startDate:parseInt(filter.startDate,10),endDate:parseInt(filter.endDate,10)}:$scope.filters.createdAt={startDate:null,endDate:null})},controller.getDepartmentsToDelete=function(){var departmentsIds=[];return $scope.departmentsToDelete&&angular.forEach($scope.departmentsToDelete,function(remove,id){remove&&departmentsIds.push(id)}),departmentsIds},controller.clearDepartmentsToDelete=function(){$scope.departmentsToDelete={}},controller.hasDepartmentsToDelete=function(){return 0!==controller.getDepartmentsToDelete().length},$scope.isDeleteButtonDisabled=function(){return $scope.deleteInProgress||!$scope.institutionId||!controller.hasDepartmentsToDelete()},$scope.handleDeleteClick=function(){if($scope.deleteInProgress||!controller.hasDepartmentsToDelete())return!1;var departmentsIds=controller.getDepartmentsToDelete();$scope.deleteInProgress=!0,TuProfileDepartmentsService.delete(departmentsIds).then(function(success){if($scope.deleteInProgress=!1,success){$scope.departmentsToDelete={};var i=0,rows=$scope.gridOptions.data,total=rows.length;for(i;i<total;i++)rows[i]&&rows[i].id&&-1!==departmentsIds.indexOf(rows[i].id)&&delete $scope.gridOptions.data[i];TuProfileFactory.setIsDepartmentUpdated(!0)}NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failed!","Departments Deleted")})},$scope.handleDatagridFiltersChanges=function(grid){angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.filters&&"undefined"!==column.filters[0].term&&(column.filters[0].type===uiGridConstants.filter.SELECT&&"object"==typeof column.filters[0].term&&null!==column.filters[0].term&&void 0!==column.filters[0].term.value?column.filters[0].term=column.filters[0].term.value:null!==column.filters[0].term&&void 0!==column.filters[0].term&&GridService.applyFilters(column));var filterColumn=column.filters[0].column?column.filters[0].column:column.field;"modifiedAt"===column.field?void 0!==column.filters&&void 0!==column.filters[0].term&&void 0!==column.filters[1].term?controller.paginationOptions["filter["+filterColumn+"]"]={startDate:column.filters[0].term&&isNaN(column.filters[0].term)?column.filters[0].term.format("x"):column.filters[0].term,endDate:column.filters[1].term&&isNaN(column.filters[1].term)?column.filters[1].term.format("x"):column.filters[1].term}:controller.paginationOptions["filter["+filterColumn+"]"]=null:void 0!==column.filters&&"undefined"!==column.filters[0].term&&(controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term)}),GridService.storeColumnsFilters(controller.gridFilterNameSpace,controller.paginationOptions);for(var currentCreatedAt=null,i=0;i<grid.columns.length;i++){for(var x=0;x<grid.columns[i].filters.length;x++)if(void 0!==grid.columns[i].filters[x].term)return void(controller.lastCreatedAt=angular.copy(currentCreatedAt));grid.columns[i].field===controller.modifiedAtField&&(currentCreatedAt=grid.columns[i].filters[0].term&&grid.columns[i].filters[1].term?[grid.columns[i].filters[0].term,grid.columns[i].filters[1].term].join("|"):null)}(currentCreatedAt||controller.lastCreatedAt)&&(!currentCreatedAt&&controller.lastCreatedAt&&($scope.filters.createdAt={startDate:null,endDate:null}),controller.lastCreatedAt=angular.copy(currentCreatedAt))},$scope.handleDatagridDragAndDrop=function(){$scope.institutionData.departmentsAlphabeticalOrder=!1;var i=0,rows=$scope.gridApi.core.getVisibleRows(),total=rows.length,orderedIds=[];for(i;i<total;i++)orderedIds.push(rows[i].entity.coreId);TuProfileDepartmentsService.updateOrder($scope.institutionId,orderedIds).then(function(success){NotifierFactory.show(success?"success":"error",success?"Successfully updated!":"Update failed!","Departments Order")})},controller.reloadDatagrid=function(){var coreId=InstitutionFactory.getCoreId();return!!coreId&&($scope.isDatagridReloading=!0,TuProfileDepartmentsService.getAllDepartmentsByCoreId(coreId).then(function(response){return $scope.isDatagridReloading=!1,$scope.gridOptions.data=response,response}))},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(controller.gridVisibilityNameSpace);columnsVisibility&&angular.forEach($scope.gridOptions.columnDefs,function(column,key){"delete"!==column.field&&!0===columnsVisibility[column.field]&&!1===column.visible&&($scope.gridOptions.columnDefs[key].filter.term=null,"modifiedAt"===column.field&&(delete $scope.gridOptions.columnDefs[key].filters[0].term,$scope.filters.lastLoginAtRange={startDate:null,endDate:null}))}),controller.columnsVisibility=GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs),GridService.storeColumnsVisibility(controller.gridVisibilityNameSpace,controller.columnsVisibility)},controller.initWatches=function(){WatchService.create($scope,TuProfileFactory.hasNewDepartment,function(newDepartmentId){newDepartmentId&&controller.reloadDatagrid(InstitutionFactory.getCoreId()).then(function(departmentsList){if(departmentsList){var i=0,department=null,total=departmentsList.length;for(i;i<total;i++)if((department=departmentsList[i]).id===newDepartmentId){TuProfileFactory.setDepartmentBeforeChanges(department);break}}$scope.selectedDepartmentId=newDepartmentId}).finally(function(){TuProfileFactory.setDepartmentEditFormVisibility(!0)})}),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab)},function(visible){visible=visible||TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab),controller.toggleColumns(visible)}),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab)},function(visible){$scope.selectedDepartmentId=visible?TuProfileFactory.getDepartmentId():null,visible=visible||TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab),controller.toggleColumns(visible)}),WatchService.create($scope,function(){return TuProfileFactory.isClientDepartmentUpgradeFormVisible($scope.activeTab)},function(visible){visible=visible||TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab),$scope.selectedDepartmentId=visible?TuProfileFactory.getDepartmentId():null,controller.toggleColumns(visible)}),WatchService.create($scope,InstitutionFactory.getCoreId,function(coreId){coreId&&controller.initDataGrid(coreId)}),WatchService.create($scope,TuProfileFactory.getUpdateDepartmentsGrid,function(newValue,oldValue){newValue!==oldValue&&(controller.reloadDatagrid(),TuProfileFactory.setUpdateDepartmentsGrid(!1))}),$rootScope.$on(constants.events.logout,controller.destruct)};var selectTemplate="/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html",selectCellTemplate="/scripts/shared/ui-grid/templates/selectCellTemplate.html";$scope.gridOptions={enableSorting:!1,exporterMenuCsv:!1,enableGridMenu:!0,showGridFooter:!0,selectedItems:$scope.selectedDepartmentId,enableFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,rowTemplate:"/scripts/components/profiles/tu/departments/datagrid/rowTemplate.html",columnDefs:[{displayName:"Delete",field:controller.deleteField,enableSorting:!1,enableColumnResizing:!1,headerCellClass:"text-center v-align",headerCellTemplate:"/scripts/components/profiles/tu/departments/datagrid/deleteHeaderCellTemplate.html",cellTemplate:"/scripts/components/profiles/tu/departments/datagrid/deleteCellTemplate.html",maxWidth:80},{displayName:"Core ID",field:"coreId",maxWidth:80,visible:GridService.getVisibilityByField(controller.columnsVisibility,"coreId",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"coreId","")}},{displayName:"Full Name",field:"fullname",visible:GridService.getVisibilityByField(controller.columnsVisibility,"fullname",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"fullname","")}},{displayName:"Department Type",filter:{type:uiGridConstants.filter.SELECT,selectOptions:TuProfileDepartmentsService.getDepartmentTypes(!0),term:GridService.getFilterByField(controller.paginationOptions,"typeId")},visible:GridService.getVisibilityByField(controller.columnsVisibility,"typeId",!0),field:"typeId",maxWidth:160,filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Belongs To",filter:{type:uiGridConstants.filter.SELECT,selectOptions:TuProfileService.getBelongsToList(!0),term:GridService.getFilterByField(controller.paginationOptions,"belongsTo")},field:"belongsTo",maxWidth:130,visible:GridService.getVisibilityByField(controller.columnsVisibility,"belongsTo",!0),filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Last update",type:"date",field:controller.modifiedAtField,cellFilter:"date:'medium'",filterCellFiltered:!1,visible:GridService.getVisibilityByField(controller.columnsVisibility,"controller.modifiedAtField",!0),filters:[{visible:!0,condition:uiGridConstants.filter.GREATER_THAN_OR_EQUAL},{condition:uiGridConstants.filter.LESS_THAN_OR_EQUAL}],filterHeaderTemplate:"/scripts/components/profiles/tu/departments/datagrid/createdAtFilterHeaderTemplate.html"}],onRegisterApi:function(gridApi){var columnsVisibilityBeforeChanges=angular.copy($scope.gridOptions.columnDefs);$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){$scope.handleDatagridRowClick(row.entity)}),gridApi.draggableRows.on.rowDropped($scope,function(){$scope.handleDatagridDragAndDrop()}),gridApi.core.on.rowsRendered($scope,function(){$scope.isDatagridRendered=!0}),gridApi.core.on.filterChanged($scope,function(){$scope.handleDatagridFiltersChanges(this.grid)}),gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),GridService.resetExtend(columnsVisibilityBeforeChanges,$scope.gridOptions.columnDefs,$scope.filters)}},controller.initDataGrid=function(coreId){if(!coreId)return!1;TuProfileDepartmentsService.getAllDepartmentsByCoreId(coreId).then(function(response){$scope.isDatagridReloading=!1,$scope.gridOptions.data=response,$scope.gridOptions.minRowsToShow=response.length<50?response.length:50,$scope.departmentsToDelete={}})},$scope.cutomCheckboxMessage=function(){return UserFactory.isClient()?"Deleting client departments is not permitted. Contact tusupport@qs.com to delete":"To delete client departments go to Institution List backend"},controller.destruct=function(){alreadyInitialised=!1},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isDepartmentsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuProfileDepartmentsController",["$scope","$rootScope","$resource","$location","constants","NotifierFactory","TuProfileFactory","InstitutionFactory","TuProfileDepartmentsService","TuProfileService","uiGridConstants","UserFactory","WatchService","UiGridService",App.controllers.tuProfileDepartments])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfileDepartmentForm=function($scope,$state,$rootScope,$resource,constants,NotifierFactory,TuProfileFactory,InstitutionFactory,UserFactory,TuProfileDepartmentsService,LoginService,ModalService,WatchService,InstitutionsListService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,$scope.forms={},$scope.upgradeInProgress=!1,$scope.downgradeInProgress=!1,$scope.addInProgress=!1,$scope.editInProgress=!1,$scope.newDepartment={},$scope.newDepartmentBeforeChanges={parentCoreId:null},$scope.campusList=[],$scope.department={},$scope.belongsToList=[],controller.modifiedAtField="modifiedAt",controller.tuSupportEmail=constants.support.tu,$scope.getTuProfileDepartmentForm=function(){return controller},$scope.isFetchInProgress=function(){return!$scope.department||!$scope.department.id},$scope.allowUpgrade=function(){return TuProfileDepartmentsService.allowUpgrade($scope.department)},$scope.allowLoginAs=function(){return TuProfileDepartmentsService.allowLoginAs($scope.department)},$scope.allowEdit=function(){return!UserFactory.isClient()||!InstitutionsListService.isClientDepartment($scope.department.typeId)||UserFactory.isAllowedToLogin($scope.department.coreId)},controller.isLoginRestricted=function(){return UserFactory.isClient()&&!UserFactory.isAllowedToLogin($scope.department.coreId)},$scope.allowDowngrade=function(){return TuProfileDepartmentsService.allowDowngrade($scope.department)},$scope.isDowngradeDisabled=function(){return TuProfileDepartmentsService.hasActiveSubscription($scope.department)},controller.getDepartmentCoreId=function(){if(angular.isDefined($scope.department.coreId))return $scope.department.coreId;var department=TuProfileFactory.getDepartmentBeforeChanges();return department&&department.coreId?department.coreId:null},controller.handleUpgradeClick=function(){if(UserFactory.isClient())TuProfileFactory.setClientDepartmentUpgradeFormVisibility();else{var modalOptions={closeButtonText:"Cancel",headerText:"Upgrade To Client Department",institutionCoreId:controller.getDepartmentCoreId(),completeUpgradeClick:function(){if(this.close(),!$scope.department||!$scope.department.id||$scope.upgradeInProgress)return!1;$scope.upgradeInProgress=!0,TuProfileDepartmentsService.upgrade($scope.department.id).then(controller.upgradeCallback)}},modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"/scripts/components/profiles/tu/departments/modalUpgradeDepartmentView.html"};ModalService.show(modalDefaults,modalOptions)}},controller.upgradeCallback=function(success){if(success){var departmentInstance=TuProfileFactory.getDepartmentBeforeChanges();departmentInstance.typeId=constants.typeId.clientDepartmentId,TuProfileDepartmentsService.formatList([departmentInstance]),$scope.department.typeId=constants.typeId.clientDepartmentId,$scope.department.typeName=TuProfileDepartmentsService.getTypeName(constants.typeId.clientDepartmentId),$scope.department.coreId=departmentInstance.coreId,InstitutionFactory.setActiveTab(!0)}$scope.upgradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Upgraded successfully!":"Upgrade failed!","Upgrade to Client")},$scope.handleDowngradeClick=function(){$scope.downgradeInProgress=!0;var modalOptions={closeButtonText:"Cancel",headerText:"Current Subscription(s)",institutionCoreId:controller.getDepartmentCoreId(),department:$scope.department,downgradeAndDelete:$scope.downgradeAndDelete,subscriptions:TuProfileDepartmentsService.hasActiveSubscription($scope.department),completeDowngradeClick:function(downgradeAndDelete){this.close(),modalOptions.subscriptions&&!downgradeAndDelete?$state.go("staff.institutions.list",{coreId:modalOptions.institutionCoreId}):TuProfileDepartmentsService.downgrade($scope.department.id).then(controller.downgradeCallback)}},modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"/scripts/components/profiles/tu/departments/modalDowngradeDepartmentView.html"};ModalService.show(modalDefaults,modalOptions)},controller.downgradeCallback=function(success){if(success){var departmentInstance=TuProfileFactory.getDepartmentBeforeChanges();departmentInstance.typeId=constants.typeId.simpleDepartmentId,TuProfileDepartmentsService.formatList([departmentInstance]),$scope.department.typeId=constants.typeId.simpleDepartmentId,$scope.department.typeName=TuProfileDepartmentsService.getTypeName(constants.typeId.simpleDepartmentId)}$scope.downgradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Downgrade successfully!":"Downgrade failed!","Downgrade to Simple")},$scope.handleLoginAsClick=function(){LoginService.getTuProfilesRedirect({coreId:$scope.department.coreId}),TuProfileFactory.setDepartmentEditFormVisibility(),TuProfileFactory.setDepartment(null)},$scope.handleDepartmentUpdateClick=function(){controller.isValid($scope.department)&&($scope.editInProgress=!0,TuProfileDepartmentsService.update($scope.department).then(controller.updateCallback))},$scope.setIsInvalidDepartmentNameUpdate=function(value){$scope.isInvalidDepartmentNameUpdate=value},$scope.setIsInvalidBelongsToUpdate=function(value){$scope.isInvalidBelongsToUpdate=value},controller.updateCallback=function(response){var success=!1;if(response.hasOwnProperty("modifiedAt")&&(success=!0),$scope.editInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Updated successfully!":"Update failed!","Update Department"),success){var departmentInstance=TuProfileFactory.getDepartmentBeforeChanges();angular.forEach($scope.department,function(value,key){departmentInstance[key]=value,key===controller.modifiedAtField&&(departmentInstance[key]=response.modifiedAt)}),TuProfileDepartmentsService.formatList([departmentInstance]),TuProfileFactory.setIsDepartmentUpdated(!0),InstitutionFactory.isDepartmentsAlphabeticalOrder()&&TuProfileFactory.setUpdateDepartmentsGrid(!0)}},controller.isUpgradeDisabled=function(){return!controller.isValid($scope.department,!1)},controller.isValid=function(item,triggerValidators){triggerValidators=void 0===triggerValidators||triggerValidators;var isEdit=!!item.id;if(triggerValidators&&(isEdit?($scope.isInvalidDepartmentNameUpdate=!1,$scope.isInvalidBelongsToUpdate=!1):($scope.isInvalidNewDepartmentName=!1,$scope.isInvalidNewBelongsTo=!1)),!item.name||!item.name.length){if(!triggerValidators)return!1;isEdit?$scope.isInvalidDepartmentNameUpdate=!0:$scope.isInvalidNewDepartmentName=!0}if(!item.belongsTo||!item.belongsTo.length){if(!triggerValidators)return!1;isEdit?$scope.isInvalidBelongsToUpdate=!0:$scope.isInvalidNewBelongsTo=!0}if(!triggerValidators)return isEdit?!$scope.editInProgress||!$scope.forms.editDepartmentForm.$valid:!$scope.addInProgress||!$scope.forms.addDepartmentForm.$valid;if(isEdit){if($scope.editInProgress||!$scope.forms.editDepartmentForm||!$scope.forms.editDepartmentForm.$valid||$scope.isInvalidBelongsToUpdate||$scope.isInvalidDepartmentNameUpdate)return TuProfileFactory.setIsDepartmentRowSelected(!1),!1}else if($scope.addInProgress||!$scope.forms.addDepartmentForm||!$scope.forms.addDepartmentForm.$valid||$scope.isInvalidNewDepartmentName||$scope.isInvalidNewBelongsTo)return!1;return!0},$scope.handleDepartmentCreateClick=function(){controller.isValid($scope.newDepartment)&&($scope.addInProgress=!0,$scope.newDepartment[controller.modifiedAtField]=null,TuProfileDepartmentsService.create($scope.newDepartment).then(controller.createCallback))},$scope.setIsInvalidNewDepartmentName=function(value){$scope.isInvalidNewDepartmentName=value},$scope.setIsInvalidNewBelongsTo=function(value){$scope.isInvalidNewBelongsTo=value},controller.createCallback=function(response){if($scope.addInProgress=!1,NotifierFactory.show(response?"success":"error",response?"Saved successfully!":"Saving failed!","Department"),response){var department=angular.copy($scope.newDepartment);department.id=response.insertedId,department.typeName=response.typeName,department.typeId=response.typeId,TuProfileFactory.setDepartment(department),TuProfileFactory.announceNewDepartment(department.id)}},controller.resetAddForm=function(){$scope.newDepartment.name&&($scope.newDepartment.name=null),$scope.newDepartment.belongsTo&&($scope.newDepartment.belongsTo=null),$scope.newDepartment.primaryCampusId&&($scope.newDepartment.primaryCampusId=null),$scope.isInvalidNewDepartmentName=!1,$scope.isInvalidNewBelongsTo=!1},controller.toggleClientUpgradeForm=function(){TuProfileFactory.setDepartmentEditFormVisibility(!0)},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getCoreId,function(parentCoreId){$scope.newDepartmentBeforeChanges.parentCoreId=parentCoreId,$scope.newDepartment.parentCoreId=parentCoreId}),WatchService.create($scope,TuProfileFactory.getDepartment,function(newValue){$scope.department=newValue,$scope.isInvalidDepartmentNameUpdate=!1,$scope.isInvalidBelongsToUpdate=!1,$scope.isInvalidNewDepartmentName=!1,$scope.isInvalidNewBelongsTo=!1},!0),WatchService.create($scope,InstitutionFactory.getCampusData,function(newValue){newValue&&($scope.campusList=TuProfileDepartmentsService.formatCampusList(newValue))},!0),WatchService.create($scope,function(){return TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab)},function(visible){visible&&controller.resetAddForm()}),WatchService.create($scope,function(){return TuProfileFactory.getIsDepartmentRowSelected()},function(visible){visible&&($scope.isInvalidDepartmentNameUpdate=!1,$scope.isInvalidBelongsToUpdate=!1,$scope.isInvalidCampusUpdate=!1)})},controller.initialiseForm=function(){$scope.belongsToList=TuProfileDepartmentsService.getBelongsToList(),$scope.newDepartment=angular.copy($scope.newDepartmentBeforeChanges)},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isDepartmentsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0),isActive&&(controller.initialiseForm(),$scope.forms&&$scope.forms.addDepartmentForm&&$scope.forms.addDepartmentForm.$setUntouched())})},angular.module("qsHub").controller("TuProfileDepartmentForm",["$scope","$state","$rootScope","$resource","constants","NotifierFactory","TuProfileFactory","InstitutionFactory","UserFactory","TuProfileDepartmentsService","LoginService","ModalService","WatchService","InstitutionsListService",App.controllers.tuProfileDepartmentForm])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfileDepartmentsService=function($resource,$q,$log,constants,TuProfileService,TuProfileFactory){var service={deferred:{}};return service.allowUpgrade=function(department){return department&&department.typeId===constants.typeId.simpleDepartmentId},service.allowLoginAs=function(department){return department&&department.typeId===constants.typeId.clientDepartmentId},service.allowDowngrade=function(department){return department&&department.typeId===constants.typeId.clientDepartmentId},service.getDepartmentsListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/departments/core-id/:coreId")},service.getUpgradeModel=function(){return $resource(constants.api.institutions.url+"/v1/department/:id/upgrade")},service.getDowngradeModel=function(){return $resource(constants.api.institutions.url+"/v1/department/:id/downgrade")},service.getUpdateModel=function(){return $resource(constants.api.institutions.url+"/v1/department/:id",null,{update:{method:"PATCH"}})},service.getCreateModel=function(){return $resource(constants.api.institutions.url+"/v1/department")},service.getDeleteModel=function(){return $resource(constants.api.institutions.url+"/v1/delete-department",null,{delete:{method:"POST"}})},service.getOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/institution/:id/departmentsOrder",null,{update:{method:"PATCH"}})},service.getUpgradeRequestModel=function(){return $resource(constants.api.institutions.url+"/v1/department/:id/upgrade-request")},service.sendUpgradeRequest=function(departmentId,comments){if(!departmentId)throw"Missing Required";return service.getUpgradeRequestModel().save({id:departmentId},{comments:comments}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getBelongsToList=function(){return TuProfileService.getBelongsToList()},service.formatCampusList=function(campuses){var campusList=[];return angular.forEach(campuses,function(campus){campusList.push({id:campus.id,title:campus.name})}),campusList},service.upgrade=function(id){return service.getUpgradeModel().get({id:id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.downgrade=function(id){return service.getDowngradeModel().get({id:id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.update=function(department){var UpdateModel=service.getUpdateModel(),dataToUpdate={name:department.name,belongsTo:department.belongsTo,primaryCampusId:department.primaryCampusId};return UpdateModel.update({id:department.id},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.create=function(department){var CreateModel=service.getCreateModel(),dataToUpdate={name:department.name,belongsTo:department.belongsTo,primaryCampusId:department.primaryCampusId,parentCoreId:department.parentCoreId};return CreateModel.save(null,dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.typeName=service.getTypeName(constants.typeId.simpleDepartmentId),data.typeId=constants.typeId.simpleDepartmentId,data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.delete=function(ids){return service.getDeleteModel().delete({},ids).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getAllDepartmentsByCoreId=function(coreId){if(constants.dev)var endTime,startTime=(new Date).getTime();return service.getDepartmentsListModel().get({coreId:coreId}).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),TuProfileFactory.setDepartments(data.results),service.formatList(data.results)},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.updateOrder=function(institutionId,orderedIds){return service.getOrderingModel().update({id:institutionId},orderedIds).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getAllDepartments=function(institutionCoreId,queryParams,params){if(constants.dev)var endTime,startTime=(new Date).getTime();return queryParams.coreId=institutionCoreId,service.getDepartmentsListModel().get(queryParams).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),params&&(params.total(data.totalFiltered),params.totalEntries=data.totalMatching),TuProfileFactory.setDepartments(data.results),service.formatList(data.results)},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.getDepartmentNameById=function(departmentCoreId){var departmentsList=TuProfileFactory.getDepartments(),departmentName="";return angular.forEach(departmentsList,function(department){department.coreId===departmentCoreId&&(departmentName=department.name)}),departmentName},service.formatList=function(departmentsData){return departmentsData&&angular.forEach(departmentsData,function(departmentObject){departmentObject.fullname=departmentObject.parentName+" > "+departmentObject.name,departmentObject.typeName=service.getTypeName(departmentObject.typeId),departmentObject.typeId===service.simpleDepartmentId?departmentObject.clientDepartment=!1:departmentObject.typeId===service.clientDepartmentId&&(departmentObject.clientDepartment=!0),departmentObject.belongsToName=TuProfileService.getBelongsToName(departmentObject.belongsTo)}),departmentsData},service.getDepartmentTypes=function(grid){return grid=grid||!1,grid?[{value:constants.typeId.simpleDepartmentId,label:"Simple Department"},{value:constants.typeId.clientDepartmentId,label:"Client Department"}]:[{id:constants.typeId.simpleDepartmentId,title:"Simple Department"},{id:constants.typeId.clientDepartmentId,title:"Client Department"}]},service.getTypeName=function(typeId){switch(typeId=parseInt(typeId,10)){case constants.typeId.clientDepartmentId:return"Client Department";case constants.typeId.simpleDepartmentId:return"Simple Department";default:return""}},service.hasActiveSubscription=function(department){return!!(department&&department.subscriptions&&department.subscriptions.hasOwnProperty("tu")&&department.subscriptions.tu.hasOwnProperty("advanced")&&department.subscriptions.tu.advanced&&department.subscriptions.tu.hasOwnProperty("startDate")&&department.subscriptions.tu.hasOwnProperty("endDate")&&department.subscriptions.tu.startDate>0&&department.subscriptions.tu.endDate>0)},service},angular.module("qsHub").service("TuProfileDepartmentsService",["$resource","$q","$log","constants","TuProfileService","TuProfileFactory",App.services.TuProfileDepartmentsService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfileSubjects=function($scope,$rootScope,$state,constants,TuProfileSubjectsService,TuProfileFactory,NotifierFactory,WatchService,InstitutionFactory,UserFactory){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,$scope.forms={},$scope.subjectsTabSubmitInProgress=!1,$scope.isDatagridReloading=!0,$scope.handleSubjectTabSubmit=function(){if($scope.subjectsTabSubmitInProgress||!$scope.forms.subjectsForm||!$scope.forms.subjectsForm.$valid)return!1;$scope.subjectsTabSubmitInProgress=!0,TuProfileSubjectsService.saveSubjectsTab($scope.tuProfile).then(function(success){$scope.subjectsTabSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Selected Subjects"),$scope.tuProfileBeforeChanges=angular.copy(TuProfileFactory.getData())})},controller.reformatTuProfileSubjects=function(){if(angular.isDefined($state)&&InstitutionFactory.isTuSubscribed()&&!UserFactory.noAccess($state.current.name)){$scope.isDatagridReloading=!0;var data=TuProfileFactory.getData();data.ugSubjects&&(data.ugSubjects=TuProfileSubjectsService.formatSubjects(data.ugSubjects)),data.pgSubjects&&(data.pgSubjects=TuProfileSubjectsService.formatSubjects(data.pgSubjects)),$scope.isDatagridReloading=!1,controller.resetTuProfileSubjects()}else $scope.tuProfile={},controller.subjects={}},controller.resetTuProfileSubjects=function(){var data=angular.copy($scope.tuProfileBeforeChanges);data.hasPhdSubjects&&($scope.tuProfile.hasPhdSubjects=data.hasPhdSubjects),data.ugSubjects&&($scope.tuProfile.ugSubjects=angular.copy(TuProfileSubjectsService.formatSubjects(data.ugSubjects))),data.pgSubjects&&($scope.tuProfile.pgSubjects=angular.copy(TuProfileSubjectsService.formatSubjects(data.pgSubjects)))},controller.initData=function(){TuProfileSubjectsService.getSubjects().then(function(subjects){controller.subjects=TuProfileSubjectsService.splitObject(subjects,1),TuProfileFactory.setAvailableSubjects(subjects),controller.reformatTuProfileSubjects()})},controller.initEvents=function(){$scope.$on(constants.events.institutionTuProfileChanges,function(){alreadyInitialised=!1,TuProfileFactory.isSubjectsTabSelected()&&(controller.reformatTuProfileSubjects(),alreadyInitialised=!0)})},controller.destruct=function(){alreadyInitialised=!1},controller.init=function(){controller.initData(),controller.initEvents(),$rootScope.$on(constants.events.logout,controller.destruct)},WatchService.create($scope,TuProfileFactory.isSubjectsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0),isActive&&alreadyInitialised&&controller.resetTuProfileSubjects()})},angular.module("qsHub").controller("TuProfileSubjectsController",["$scope","$rootScope","$state","constants","TuProfileSubjectsService","TuProfileFactory","NotifierFactory","WatchService","InstitutionFactory","UserFactory",App.controllers.tuProfileSubjects])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfileSubjectsService=function($resource,$q,$log,constants){var service={overviewData:null,institutionData:null,subjects:null,deferred:{getOverviewData:null,getInstitutionData:null,getSubjects:null}};return service.getTuSubjectsModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id",null,{update:{method:"PATCH"}})},service.getSubjectsModel=function(){return $resource(constants.api.institutions.url+"/v1/list/subjects?sorting[groupName]=asc")},service.filterObject=function(filters,object){var filteredObject=angular.copy(filters);return angular.forEach(filters,function(value,key){value&&"object"==typeof value?angular.forEach(value,function(subValue,subKey){null===subValue&&object[key][subKey]&&(filteredObject[key][subKey]=object[key][subKey])}):null===value&&object[key]&&(filteredObject[key]=object[key])}),filteredObject},service.getSubjects=function(){if(service.deferred.getSubjects)return service.deferred.getSubjects.promise;service.deferred.getSubjects=$q.defer();var deferred=service.deferred.getSubjects;return service.roles?deferred.resolve(service.roles):service.getSubjectsModel().get(function(data){var groupedSubjects={};data&&data.results&&angular.forEach(data.results,function(subject){groupedSubjects[subject.groupName]||(groupedSubjects[subject.groupName]=[]),groupedSubjects[subject.groupName].push(subject)}),service.subjects=groupedSubjects,deferred.resolve(service.subjects),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.subjects=[],deferred.resolve(service.subjects),deferred=null}),deferred.promise},service.formatSubjects=function(subjects,justHandles){var formattedSubjects={};if(justHandles=justHandles||!1)angular.forEach(subjects,function(assigned,subjectHandle){assigned&&(formattedSubjects[subjectHandle]=subjectHandle)});else{var subjectKey;for(subjectKey in subjects){if(isNaN(subjectKey))return subjects;formattedSubjects[subjects[subjectKey]]=!0}}return formattedSubjects},service.saveSubjectsTab=function(profileData){var TuSubjectsModel=service.getTuSubjectsModel(),dataToUpdate={ugSubjects:profileData.ugSubjects,pgSubjects:profileData.pgSubjects,hasPhdSubjects:profileData.hasPhdSubjects};return dataToUpdate.ugSubjects&&(dataToUpdate.ugSubjects=service.formatSubjects(dataToUpdate.ugSubjects,!0)),dataToUpdate.pgSubjects&&(dataToUpdate.pgSubjects=service.formatSubjects(dataToUpdate.pgSubjects,!0)),TuSubjectsModel.update({id:profileData.id},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.splitObject=function(inputObject,size){var index=0,chunks={},inChunks=[];return angular.forEach(inputObject,function(value,key){index===size&&(index=0,chunks={}),index===size-1&&inChunks.push(chunks),chunks[key]=value,index++}),inChunks},service},angular.module("qsHub").service("TuProfileSubjectsService",["$resource","$q","$log","constants",App.services.TuProfileSubjectsService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfilePrograms=function($scope,$rootScope,$templateRequest,constants,NotifierFactory,TuProfileFactory,InstitutionFactory,TuProfileProgramsService,TuProfileService,uiGridConstants,WatchService,GridService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.upgradeEmailsTo=constants.emails.upgradeTu,controller.deleteField="delete",$scope.institutionId=InstitutionFactory.getId(),$scope.tuProfileId=TuProfileFactory.getId(),$scope.programsToDelete={},$scope.alphabeticalOrderingInProgress=!1,$scope.deleteInProgress=!1,$scope.isDatagridReloading=!1,$scope.isDatagridRendered=!1,controller.gridFilterNameSpace=TuProfileFactory.getIsProgramOverview()?constants.gridNameSpaces.programsOvGridFilters:constants.gridNameSpaces.programsGridFilters,controller.gridVisibilityNameSpace=TuProfileFactory.getIsProgramOverview()?constants.gridNameSpaces.programsOvGridVisibility:constants.gridNameSpaces.programsGridVisibility,controller.paginationOptions=GridService.getColumnsFilters(controller.gridFilterNameSpace,[]),controller.columnsVisibility=GridService.getColumnsVisibility(controller.gridVisibilityNameSpace),$scope.getTuProfileProgramsController=function(){return controller},WatchService.create($scope,InstitutionFactory.getId,function(id){$scope.institutionId=id}),WatchService.create($scope,TuProfileFactory.getId,function(id){$scope.tuProfileId=id,$scope.tuProfileData=TuProfileFactory.getData()}),$scope.handleDatagridRowClick=function(program){TuProfileFactory.resetProgramForm(),$scope.selectedProgramId=$scope.selectedProgramId===program.id?null:program.id,TuProfileFactory.setProgramBeforeChanges(program),program=angular.copy(program),TuProfileFactory.setProgramEditFormVisibility($scope.selectedProgramId===program.id&&"undefined"!==program.id),TuProfileFactory.setProgram(program)},controller.toggleColumns=function(hide){$scope.gridOptions&&(hide?angular.forEach($scope.gridOptions.columnDefs,function(column){column.field!==controller.deleteField?column.visible=!angular.isDefined(controller.columnsVisibility)||controller.columnsVisibility[column.field]:column.visible=!1}):angular.forEach($scope.gridOptions.columnDefs,function(column){column.field===controller.deleteField?column.visible=!0:column.visible=!angular.isDefined(controller.columnsVisibility)||controller.columnsVisibility[column.field]}),$scope.gridOptions.enableGridMenu=!hide)},$scope.handleAlphabeticalOrderClick=function(alphabetical){$scope.alphabeticalOrderingInProgress=!0,TuProfileService.updateTuProfile($scope.tuProfileId,{programsAlphabeticalOrder:alphabetical}).then(function(success){success&&controller.reloadDatagrid(),$scope.alphabeticalOrderingInProgress=!1})},$scope.handleAddProgramClick=function(){TuProfileFactory.setProgramAddFormVisibility(),TuProfileFactory.setProgram({})},controller.getProgramsToDelete=function(){var programsIds=[];return $scope.programsToDelete&&angular.forEach($scope.programsToDelete,function(remove,id){remove&&programsIds.push(id)}),programsIds},controller.hasProgramsToDelete=function(){return 0!==controller.getProgramsToDelete().length},$scope.isDeleteButtonDisabled=function(){return $scope.deleteInProgress||!$scope.institutionId||!controller.hasProgramsToDelete()},controller.clearProgramsToDelete=function(){$scope.programsToDelete={}},$scope.handleDeleteClick=function(){if($scope.deleteInProgress||!controller.hasProgramsToDelete())return!1;var programsIds=controller.getProgramsToDelete();$scope.deleteInProgress=!0,TuProfileProgramsService.delete(programsIds).then(function(success){if($scope.deleteInProgress=!1,success){$scope.programsToDelete={};var i=0,rows=$scope.gridOptions.data,total=rows.length;for(i;i<total;i++)rows[i]&&rows[i].id&&-1!==programsIds.indexOf(rows[i].id)&&delete $scope.gridOptions.data[i]}NotifierFactory.show(success?"success":"error",success?"Deleted successfully!":"Deletion failed!","Programs Deletion")})},$scope.handleDatagridDragAndDrop=function(){$scope.tuProfileData.programsAlphabeticalOrder=!1;var i=0,rows=$scope.gridApi.core.getVisibleRows(),total=rows.length,orderedIds=[];for(i;i<total;i++)orderedIds.push(rows[i].entity.coreId);TuProfileProgramsService.updateOrder($scope.tuProfileId,orderedIds).then(function(success){NotifierFactory.show(success?"success":"error",success?"Successfully updated!":"Update failed!","Programs Order")})},$scope.handleDatagridFiltersChanges=function(grid){GridService.resetConditions($scope.gridApi.grid.columns),angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.filters&&"undefined"!==column.filters[0].term&&(column.filters[0].type===uiGridConstants.filter.SELECT&&"object"==typeof column.filters[0].term&&null!==column.filters[0].term&&void 0!==column.filters[0].term.value?column.filters[0].term=column.filters[0].term.value:null!==column.filters[0].term&&void 0!==column.filters[0].term&&GridService.applyFilters(column));var filterColumn=column.filters[0].column?column.filters[0].column:column.field;void 0!==column.filters&&"undefined"!==column.filters[0].term&&(controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term)}),GridService.storeColumnsFilters(controller.gridFilterNameSpace,controller.paginationOptions)},controller.reloadDatagrid=function(coreId){return coreId||(coreId=InstitutionFactory.getCoreId()),!!coreId&&($scope.isDatagridReloading=!0,TuProfileProgramsService.getAllProgramsByCoreId(coreId).then(function(response){return $scope.isDatagridReloading=!1,$scope.gridOptions.data=response,response}))},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(controller.gridVisibilityNameSpace);columnsVisibility&&angular.forEach($scope.gridOptions.columnDefs,function(column,key){"delete"!==column.field&&!0===columnsVisibility[column.field]&&!1===column.visible&&($scope.gridOptions.columnDefs[key].filter.term=null,"modifiedAt"===column.field&&(delete $scope.gridOptions.columnDefs[key].filters[0].term,$scope.filters.lastLoginAtRange={startDate:null,endDate:null}))}),controller.columnsVisibility=GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs),GridService.storeColumnsVisibility(controller.gridVisibilityNameSpace,controller.columnsVisibility)},controller.initWatches=function(){WatchService.create($scope,TuProfileFactory.hasNewProgram,function(newProgramId){newProgramId&&controller.reloadDatagrid().then(function(programsList){if(programsList){var i=0,program=null,total=programsList.length;for(i;i<total;i++)if((program=programsList[i]).id===newProgramId){TuProfileFactory.setProgramBeforeChanges(program);break}}$scope.selectedProgramId=newProgramId,TuProfileFactory.setProgramEditFormVisibility(!0)})}),WatchService.create($scope,function(){return TuProfileFactory.isProgramAddFormVisible($scope.activeTab)},function(visible){visible=visible||TuProfileFactory.isProgramEditFormVisible($scope.activeTab),controller.toggleColumns(visible)}),WatchService.create($scope,TuProfileFactory.getIsDepartmentUpdated,function(isUpdated){isUpdated&&(void 0!==$scope.gridOptions.data&&$scope.gridOptions.data.length&&controller.reloadDatagrid(),TuProfileFactory.setIsDepartmentUpdated(!1))}),WatchService.create($scope,function(){return TuProfileFactory.isProgramEditFormVisible($scope.activeTab)},function(visible){$scope.selectedProgramId=visible?TuProfileFactory.getProgramId():null,visible=visible||TuProfileFactory.isProgramAddFormVisible($scope.activeTab),controller.toggleColumns(visible)}),WatchService.create($scope,InstitutionFactory.getCoreId,function(coreId){coreId&&controller.initDataGrid(coreId)}),WatchService.create($scope,TuProfileFactory.getUpdateProgramGrid,function(newValue,oldValue){newValue!==oldValue&&(controller.reloadDatagrid(),TuProfileFactory.setUpdateProgramGrid(!1))}),$rootScope.$on(constants.events.logout,controller.destruct)},controller.initEvents=function(){$scope.$on(constants.events.institutionTuProfileChanges,function(){alreadyInitialised=!1,TuProfileFactory.isProgramsTabSelected()&&(controller.initDataGrid(),alreadyInitialised=!0)})};$scope.gridOptions={enableSorting:!1,exporterMenuCsv:!1,enableGridMenu:!0,showGridFooter:!0,selectedItems:$scope.selectedProgramId,enableFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,rowTemplate:"/scripts/components/profiles/tu/programs/datagrid/rowTemplate.html",columnDefs:[{displayName:"Delete",field:controller.deleteField,enableSorting:!1,enableColumnResizing:!1,headerCellClass:"text-center vertical-align-middle",headerCellTemplate:"/scripts/components/profiles/tu/programs/datagrid/deleteHeaderCellTemplate.html",cellTemplate:"/scripts/components/profiles/tu/programs/datagrid/deleteCellTemplate.html",maxWidth:80},{displayName:"Program Name",field:"name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"name",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"name","")}},{displayName:"Belongs To",filter:{type:uiGridConstants.filter.SELECT,selectOptions:TuProfileService.getBelongsToList(!0),term:GridService.getFilterByField(controller.paginationOptions,"belongsTo")},field:"belongsTo",maxWidth:130,visible:GridService.getVisibilityByField(controller.columnsVisibility,"belongsTo",!0),filterHeaderTemplate:"/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html",cellTemplate:"/scripts/shared/ui-grid/templates/selectCellTemplate.html"},{displayName:"URL Landing Page",field:"url",visible:GridService.getVisibilityByField(controller.columnsVisibility,"url",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"url","")}},{displayName:"Department",field:"departmentName",visible:GridService.getVisibilityByField(controller.columnsVisibility,"departmentName",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"departmentName","")}}],onRegisterApi:function(gridApi){var columnsVisibilityBeforeChanges=angular.copy($scope.gridOptions.columnDefs);$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){$scope.handleDatagridRowClick(row.entity)}),gridApi.draggableRows.on.rowDropped($scope,function(){$scope.handleDatagridDragAndDrop()}),gridApi.core.on.rowsRendered($scope,function(){$scope.isDatagridRendered=!0}),gridApi.core.on.filterChanged($scope,function(){$scope.handleDatagridFiltersChanges(this.grid)}),gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),GridService.resetExtend(columnsVisibilityBeforeChanges,$scope.gridOptions.columnDefs)}},controller.initDataGrid=function(coreId){if(coreId||(coreId=InstitutionFactory.getCoreId()),!coreId)return!1;TuProfileProgramsService.getAllProgramsByCoreId(coreId).then(function(response){$scope.isDatagridReloading=!1,$scope.gridOptions.data=response,$scope.gridOptions.minRowsToShow=response.length<50?response.length:50,$scope.programsToDelete={}})},controller.destruct=function(){alreadyInitialised=!1},controller.init=function(){controller.initWatches(),controller.initEvents()},WatchService.create($scope,TuProfileFactory.isProgramsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuProfileProgramsController",["$scope","$rootScope","$templateRequest","constants","NotifierFactory","TuProfileFactory","InstitutionFactory","TuProfileProgramsService","TuProfileService","uiGridConstants","WatchService","UiGridService",App.controllers.tuProfilePrograms])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfileProgramForm=function($scope,constants,NotifierFactory,TuProfileFactory,InstitutionFactory,TuProfileService,TuProfileProgramsService,TuProfileDepartmentsService,UrlService,ObjectService,WatchService){var controller=this,alreadyInitialised=!1;$scope.getTuProfileProgramFormController=function(){return controller},$scope.InstitutionNameTuPrograms=null,controller.devMode=constants.dev,controller.upgradeProgramEmailsTo=constants.emails.upgradeTu,$scope.forms={},$scope.addInProgress=!1,$scope.editInProgress=!1,$scope.newProgram={belongsTo:null},$scope.newProgramBeforeChanges={institutionCoreId:null},$scope.departmentsList={},$scope.departmentsListArr=[],$scope.isClientDepartment=null,$scope.toggleProgramUpgradeForm=function(){TuProfileFactory.setProgramUpgradeFormVisibility()},$scope.toggleProgramAddForm=function(){controller.programFormVisibilityWatch(),TuProfileFactory.setProgramAddFormVisibility()},$scope.toggleProgramEditForm=function(){TuProfileFactory.setProgramEditFormVisibility()},$scope.isFetchInProgress=function(){return!$scope.program||!$scope.program.id},$scope.getHasErrors=function(){return TuProfileProgramsService.getHasErrors()},$scope.setHasErrors=function(value){TuProfileProgramsService.setHasErrors(value)},$scope.setIsInvalidName=function(value){$scope.isInvalidName=value},$scope.setIsInvalidUrl=function(value){$scope.isInvalidUrl=value},$scope.setIsInvalidDepartment=function(value){$scope.isInvalidDepartment=value},controller.restrictBelongsToOptions=function(departmentCoreId){if(!departmentCoreId)return!1;angular.isArray($scope.departmentsList)&&($scope.departmentsList=$scope.departmentsList.filter(function(){return!0}));var belongsTo,total=$scope.departmentsList.length,i=0;for(i;i<total;++i)if($scope.departmentsList[i].coreId===departmentCoreId){belongsTo=$scope.departmentsList[i].belongsTo;break}if(!belongsTo)return!1;$scope.belongsToList=TuProfileService.getBelongsToList(),angular.forEach($scope.belongsToList,function(item){"all"===belongsTo?item.disabled=!1:"ug"===belongsTo?item.disabled="ug"!==item.id:"pg"===belongsTo&&(item.disabled="pg"!==item.id)}),angular.forEach($scope.belongsToList,function(item){item.disabled&&$scope.program.belongsTo===item.id&&delete $scope.program.belongsTo})},controller.handleDepartmentChanges=function(coreId){$scope.isInvalidDepartment=!1,controller.restrictBelongsToOptions(coreId)},$scope.setIsInvalidBelongsTo=function(value){$scope.isInvalidBelongsTo=value},controller.departmentExists=function(departmentCoreId){var exists=!1;return angular.forEach($scope.departmentsList,function(item){item.coreId&&item.coreId===departmentCoreId&&(exists=!0)}),exists},controller.validateProgram=function(program){return $scope.isInvalidName=!1,$scope.isInvalidUrl=!1,$scope.isInvalidDepartment=!1,$scope.isInvalidBelongsTo=!1,angular.isDefined(program.name)&&angular.isDefined(program.name)&&program.name.length>0||($scope.isInvalidName=!0),(!angular.isDefined(program.url)||program.url.length<1||program.url.length>255)&&($scope.isInvalidUrl=!0),angular.isDefined(program.departmentCoreId)&&controller.departmentExists(program.departmentCoreId)||($scope.isInvalidDepartment=!0),angular.isDefined(program.belongsTo)||($scope.isInvalidBelongsTo=!0),$scope.isInvalidName||$scope.isInvalidUrl||$scope.isInvalidDepartment||$scope.isInvalidBelongsTo},controller.resetValidation=function(){$scope.isInvalidName=!1,$scope.isInvalidUrl=!1,$scope.isInvalidDepartment=!1,$scope.isInvalidBelongsTo=!1},$scope.handleProgramUpdateClick=function(){TuProfileProgramsService.setHasErrors(!1);var isInvalidProgram=controller.validateProgram($scope.program);if($scope.editInProgress||!$scope.forms.editProgramForm||!$scope.forms.editProgramForm.$valid||isInvalidProgram)return $scope.setHasErrors(!0),!1;$scope.editInProgress=!0,TuProfileProgramsService.update($scope.program).then(controller.updateCallback)},controller.updateCallback=function(success){if($scope.editInProgress=!1,NotifierFactory.show(success?"success":"error",success?"successfully!":"failure!","Program Updated"),success){var programInstance=TuProfileFactory.getProgramBeforeChanges();angular.forEach($scope.program,function(value,key){programInstance[key]=value}),$scope.isClientDepartment||(programInstance.departmentName=TuProfileDepartmentsService.getDepartmentNameById(programInstance.departmentCoreId)),TuProfileProgramsService.formatList([programInstance]),TuProfileFactory.isProgramsAlphabeticalOrder()&&TuProfileFactory.setUpdateProgramGrid(!0)}},$scope.handleProgramCreateClick=function(){TuProfileProgramsService.setHasErrors(!1);var isInvalidProgram=controller.validateProgram($scope.newProgram);if($scope.addInProgress||!$scope.forms.addProgramForm||!$scope.forms.addProgramForm.$valid||isInvalidProgram)return $scope.setHasErrors(!0),!1;$scope.addInProgress=!0,TuProfileProgramsService.create($scope.newProgram).then(controller.createCallback)},controller.onKeyUp=function($event){if(13!==$event.keyCode){var url=$event.target.value,variableName=$event.target.getAttribute("ng-model");url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),variableName&&ObjectService.set($scope,variableName,url))}},controller.createCallback=function(response){if($scope.addInProgress=!1,NotifierFactory.show(response?"success":"error",response?"successfully!":"failure!","Program Created"),response){var program=angular.copy($scope.newProgram);program.id=response.insertedId,TuProfileFactory.setProgram(program),controller.initForm(),TuProfileFactory.announceNewProgram(program.id)}},controller.programFormVisibilityWatch=function(){controller.resetValidation(),controller.initForm()},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getCoreId,function(newCoreId,oldCoreId){newCoreId&&((angular.equals($scope.departmentsList,{})||oldCoreId&&newCoreId!==oldCoreId)&&TuProfileDepartmentsService.getAllDepartments(InstitutionFactory.isClientDepartment()?InstitutionFactory.getParentCoreId():InstitutionFactory.getCoreId(),{page:1,count:1e3}),$scope.newProgram.institutionCoreId=newCoreId,$scope.newProgramBeforeChanges.institutionCoreId=newCoreId,$scope.isClientDepartment=InstitutionFactory.isClientDepartment(),$scope.isClientDepartment&&($scope.newProgram.departmentCoreId=newCoreId,$scope.departmentsList=[{coreId:newCoreId,name:InstitutionFactory.getDisplayName()}],$scope.newProgramBeforeChanges={institutionCoreId:newCoreId,departmentCoreId:newCoreId}))}),WatchService.create($scope,TuProfileFactory.getProgram,function(newValue,oldValue){controller.resetValidation(),newValue!==oldValue&&($scope.program=newValue,controller.restrictBelongsToOptions($scope.program.departmentCoreId))},!0),WatchService.create($scope,TuProfileFactory.getDepartments,function(departmentsList){InstitutionFactory.isClientDepartment()?"[object Array]"===Object.prototype.toString.call(departmentsList)&&($scope.departmentsListArr=TuProfileFactory.getDepartments(),$scope.departmentsList=angular.copy($scope.departmentsListArr),controller.handleDepartmentChanges(InstitutionFactory.getCoreId())):("[object Array]"===Object.prototype.toString.call(departmentsList)?($scope.departmentsListArr=TuProfileFactory.getDepartments(),controller.handleDepartmentChanges(InstitutionFactory.getCoreId())):$scope.departmentsList=TuProfileFactory.getDepartments(),$scope.departmentsList=departmentsList)},!0),WatchService.create($scope,function(){return TuProfileFactory.isProgramEditFormVisible($scope.activeTab)},controller.programFormVisibilityWatch),WatchService.create($scope,function(){return TuProfileFactory.isProgramAddFormVisible($scope.activeTab)},controller.programFormVisibilityWatch),WatchService.create($scope,TuProfileFactory.getIsDepartmentUpdated,function(isUpdated){InstitutionFactory.isClientDepartment()||($scope.departmentsList=TuProfileFactory.getDepartments(),$scope.belongsToList=[{}])})},controller.initForm=function(){$scope.newProgram=angular.copy($scope.newProgramBeforeChanges),$scope.program=TuProfileFactory.getProgram()},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isProgramsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0),isActive&&(controller.initForm(),$scope.forms&&$scope.forms.addProgramForm&&$scope.forms.addProgramForm.$setUntouched())})},angular.module("qsHub").controller("TuProfileProgramForm",["$scope","constants","NotifierFactory","TuProfileFactory","InstitutionFactory","TuProfileService","TuProfileProgramsService","TuProfileDepartmentsService","UrlService","ObjectService","WatchService",App.controllers.tuProfileProgramForm])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfileProgramsService=function($resource,$q,$log,constants,RequestsQueueService,TuProfileService){var service={deferred:{},departmentsList:{},belongsTo:{all:"all",ug:"ug",pg:"pg"},hasErrors:!1};return service.getProgramsListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/tu-programs/core-id/:coreId",{},{get:{cancellable:!0}})},service.getUpdateModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-program/:id",null,{update:{method:"PATCH"}})},service.getCreateModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-program")},service.getDeleteModel=function(){return $resource(constants.api.institutions.url+"/v1/delete-tu-programs",null,{delete:{method:"POST"}})},service.getBelongsToList=function(){return TuProfileService.getBelongsToList()},service.getOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/programsOrder",null,{update:{method:"PATCH"}})},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.update=function(program){var UpdateModel=service.getUpdateModel(),dataToUpdate={departmentCoreId:program.departmentCoreId,belongsTo:program.belongsTo,name:program.name,url:program.url};return UpdateModel.update({id:program.id},dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.create=function(program){if(!program||!program.institutionCoreId)throw"Missing Required";var UpdateModel=service.getCreateModel(),dataToUpdate={institutionCoreId:program.institutionCoreId,institutionCoreIdAsString:program.institutionCoreId.toString(),departmentCoreId:program.departmentCoreId,belongsTo:program.belongsTo,name:program.name,url:program.url};return UpdateModel.save(null,dataToUpdate).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.delete=function(ids){return service.getDeleteModel().delete({},ids).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.updateOrder=function(tuProfileId,orderedIds){return service.getOrderingModel().update({id:tuProfileId},orderedIds).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getAllProgramsByCoreId=function(coreId){if(constants.dev)var endTime,startTime=(new Date).getTime();return service.getProgramsListModel().get({coreId:coreId}).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),service.formatList(data.results)},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.getAllPrograms=function(params){var coreId=params.parameters().coreId;if(constants.dev)var endTime,startTime=(new Date).getTime();RequestsQueueService.cancelAll("getAllPrograms");var Api=service.getProgramsListModel().get(params.url(),{coreId:coreId});return RequestsQueueService.add(Api,"getAllPrograms"),Api.$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("getAllPrograms"),params.total(data.totalFiltered),params.totalEntries=data.totalMatching,service.formatList(data.results)},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.formatList=function(programsData){return programsData&&angular.forEach(programsData,function(programObject){programObject.belongsToName=service.getBelongsToName(programObject.belongsTo)}),programsData},service.getBelongsToName=function(belongsTo){return TuProfileService.getBelongsToName(belongsTo)},service},angular.module("qsHub").service("TuProfileProgramsService",["$resource","$q","$log","constants","RequestsQueueService","TuProfileService",App.services.TuProfileProgramsService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfileMediaService=function(){var service={types:{master:"master",ug:"ug",pg:"pg"}};return service.typeOverview=function(){return service.types.master},service.typeUndergraduate=function(){return service.types.ug},service.typePostgraduate=function(){return service.types.pg},service.getTypes=function(){return[service.typeOverview(),service.typeUndergraduate(),service.typePostgraduate()]},service.isValidType=function(item){for(var scopeTypes=service.getTypes(),valid=!1,typesIndex=0;typesIndex<scopeTypes.length;typesIndex++)item[scopeTypes[typesIndex]]&&(valid=!0);return valid},service.validateTypes=function(list){for(var i=0;i<list.length;i++)if(!service.isValidType(list[i]))return list[i];return!0},service.objectSearch=function(haystack,needle,column){column=column||"id";for(var i=0;i<haystack.length;i++)if(haystack[i]&&haystack[i][column]&&haystack[i][column]===needle)return i;return!1},service},angular.module("qsHub").service("TuMediaService",[App.services.TuProfileMediaService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuProfileMedia=function($scope,constants,InstitutionFactory,TuProfileFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.upgradeEmailsTo=constants.emails.upgradeTu,$scope.isMediaReloading=!0,controller.isImagesTabActive=function(){var selectedMediaTabId=TuProfileFactory.getSelectedMediaTabId();return 1===selectedMediaTabId||null===selectedMediaTabId},controller.isVideosTabActive=function(){return 2===TuProfileFactory.getSelectedMediaTabId()},controller.isBrochuresTabActive=function(){return 4===TuProfileFactory.getSelectedMediaTabId()},controller.isSocialMediaTabActive=function(){return 3===TuProfileFactory.getSelectedMediaTabId()},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.isAdvanced,function(newValue,oldValue){oldValue!==newValue&&($scope.isAdvanced=newValue)}),WatchService.create($scope,InstitutionFactory.getId,function(visible){$scope.isMediaReloading=!visible})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuProfileMediaController",["$scope","constants","InstitutionFactory","TuProfileFactory","WatchService",App.controllers.TuProfileMedia])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaCommonSidebar=function($scope,$resource,$location,constants,TuProfileFactory,InstitutionFactory,TuMediaService,TuMediaVideosService,TuMediaBrochuresService,TuMediaSocialMediasService,TuMediaImagesService){angular.isUndefined($scope.tabId)&&TuProfileFactory.setSelectedMediaTabId(1),$scope.setSelected=function(tabId){return $scope.tabId!==tabId&&($scope.tabId=tabId,TuProfileFactory.setSelectedMediaTabId(tabId),!0)},$scope.getSelected=function(){return TuProfileFactory.getSelectedMediaTabId()},$scope.getGeneralCounter=function(){var totalCount=0,videoItems=TuMediaVideosService.getVideoItems();angular.isArray(videoItems)&&(totalCount+=videoItems.length);var brochureItems=TuMediaBrochuresService.getBrochureItems();angular.isArray(brochureItems)&&(totalCount+=brochureItems.length);var socialMediaItems=TuMediaSocialMediasService.getSocialMediaItems();angular.isArray(socialMediaItems)&&(totalCount+=socialMediaItems.length);var imageItems=TuMediaImagesService.getImageItems();return angular.isArray(imageItems)&&(totalCount+=imageItems.length),totalCount}},angular.module("qsHub").controller("TuMediaCommonSidebarController",["$scope","$resource","$location","constants","TuProfileFactory","InstitutionFactory","TuMediaService","TuMediaVideosService","TuMediaBrochuresService","TuMediaSocialMediasService","TuMediaImagesService",App.controllers.TuMediaCommonSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.useTuSubtypes=function(constants,ngIfDirective){var ngIf=ngIfDirective[0];return{restrict:"A",transclude:ngIf.transclude,priority:ngIf.priority-1,terminal:ngIf.terminal,link:function($scope,$element,$attr){$attr.ngIf=function(){return!constants.noTuSubtypes},ngIf.link.apply(ngIf,arguments)}}},angular.module("qsHub").directive("useTuSubtypes",["constants","ngIfDirective",App.directives.useTuSubtypes])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaVideos=function($scope,constants,TuProfileFactory,NotifierFactory,TuMediaVideosService,TuMediaService,ModalService,$filter,orderBy,WatchService){var controller=this;controller.devMode=constants.dev,TuMediaVideosService.coreId=0,$scope.videoItems=[],$scope.itemVideo={},$scope.displayLocationDeletePopup=!0,$scope.type=TuMediaService.typeOverview(),TuMediaVideosService.setType(TuMediaService.typeOverview()),TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo()),WatchService.create($scope,function(){return TuProfileFactory.getData()},function(newValue){null!==newValue&&(angular.copy(newValue.videos,$scope.videoItems),TuMediaVideosService.coreId=newValue.id,TuMediaVideosService.setVideoItems($scope.videoItems),$scope.filteredVideoItems=$filter("filter")($scope.videoItems,{master:!0}),$scope.filteredVideoItems=orderBy($scope.filteredVideoItems,"orderType."+$scope.type,!1),TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo()))}),WatchService.create($scope,TuMediaVideosService.getVideoItems,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.videoItems=newValue)}),WatchService.create($scope,TuMediaVideosService.getTriggerChange,function(){var selectedVideo=TuMediaVideosService.getSelectedVideo();"ug"===$scope.type&&selectedVideo.ug||!selectedVideo.master&&selectedVideo.ug&&!selectedVideo.pg||!selectedVideo.master&&selectedVideo.ug&&selectedVideo.pg&&("ug"===$scope.type||"master"===$scope.type)?$scope.filter("ug"):"pg"===$scope.type&&selectedVideo.pg||!selectedVideo.master&&!selectedVideo.ug&&selectedVideo.pg?$scope.filter("pg"):$scope.filter("master"),angular.forEach($scope.videoItems,function(value,key){selectedVideo.id===value.id&&($scope.videoItems[key]=selectedVideo)}),$scope.filter($scope.type,!0)}),$scope.sortableOptions={disabled:!1,"ui-floating":!1,start:function(){controller.initialList=[],angular.copy($scope.filteredVideoItems,controller.initialList)},update:function(e,ui){!0!==TuMediaService.validateTypes($scope.videoItems)&&ui.item.sortable.cancel()},stop:function(){var validateItems=TuMediaService.validateTypes($scope.videoItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in video list"),TuMediaVideosService.setSelectedVideo(validateItems),TuMediaVideosService.displayTypesValid=!0,!1;for(var assignedOrder=1,index=0;index<$scope.filteredVideoItems.length;index++)$scope.filteredVideoItems[index][$scope.type]&&($scope.filteredVideoItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.sortableOptions.disabled=!1,TuMediaVideosService.saveOrder(TuMediaVideosService.coreId,$scope.videoItems).then(function(success){NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Video Order Save"),TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo())}).finally(function(){$scope.sortableOptions.disabled=!1})}},$scope.filter=function(type){var validateItems=TuMediaService.validateTypes($scope.videoItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in video list"),TuMediaVideosService.setSelectedVideo(validateItems),TuMediaVideosService.displayTypesValid=!0,!1;$scope.type=type;var params={};params[type]=!0,$scope.filteredVideoItems=$filter("filter")($scope.videoItems,params),$scope.filteredVideoItems=orderBy($scope.filteredVideoItems,"orderType."+type,!1)},$scope.selectVideo=function(item){item=angular.copy(item);var validateItems=TuMediaService.validateTypes($scope.videoItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in video list"),TuMediaVideosService.setSelectedVideo(validateItems),TuMediaVideosService.displayTypesValid=!0,!1;TuMediaVideosService.setHasErrors(!1),TuMediaVideosService.displayTypesValid=!1,$scope.itemVideo=TuMediaVideosService.getItemVideo(),angular.isDefined(item)?TuMediaVideosService.setSelectedVideo(item):(TuMediaVideosService.setHasErrors(!1),TuMediaVideosService.setHighlighted(!0),TuMediaVideosService.setSelectedVideo($scope.itemVideo))},$scope.selectedItem=function(){return TuMediaVideosService.getSelectedVideo()},$scope.deleteVideo=function(item){var modalOptions={closeButtonText:"No",actionButtonText:"Yes",headerText:"Delete Video"+(angular.isDefined(item.name)&&null!==item.name?": "+item.name:"")+" ?",bodyText:"Are you sure you wish to delete this video?"};ModalService.show({},modalOptions).then(function(result){TuMediaVideosService.deleteVideo(TuMediaVideosService.coreId,item).then(function(success){if($scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Delete Video"),success){TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo()),$scope.videoItems.splice(TuMediaService.objectSearch($scope.videoItems,item.id),1),$scope.filteredVideoItems.splice(TuMediaService.objectSearch($scope.filteredVideoItems,item.id),1);for(var assignedOrder=1,index=0;index<$scope.filteredVideoItems.length;index++)$scope.filteredVideoItems[index][$scope.type]&&($scope.filteredVideoItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.filteredVideoItems=orderBy($scope.filteredVideoItems,"orderType."+$scope.type,!1)}})})},$scope.typeOverview=function(){return TuMediaService.typeOverview()},$scope.typeUndergraduate=function(){return TuMediaService.typeUndergraduate()},$scope.typePostgraduate=function(){return TuMediaService.typePostgraduate()}},angular.module("qsHub").controller("TuMediaVideosController",["$scope","constants","TuProfileFactory","NotifierFactory","TuMediaVideosService","TuMediaService","ModalService","$filter","orderByFilter","WatchService",App.controllers.TuMediaVideos])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaVideosSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TuProfileFactory,TuMediaVideosService,TuMediaService,WebSocketsService,UrlService,WatchService,ObjectService){var controller=this,alreadyInitialised=!1;$scope.hasErrors=!0,TuMediaVideosService.displayTypesValid=!1,TuMediaVideosService.setHasErrors(!1),$scope.youtubeUrlPattern=UrlService.getYoutubePattern(),controller.onKeyUp=function($event){if(13!==$event.keyCode){var url=$event.target.value,variableName=$event.target.getAttribute("ng-model");url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),variableName&&ObjectService.set($scope,variableName,url))}},$scope.saveVideoForm=function(item){if(angular.isDefined(item.url)&&angular.isDefined(item.url)&&item.url.length>0||$scope.setHasErrors(!0),TuMediaService.isValidType(item)||(TuMediaVideosService.displayTypesValid=!0),TuMediaVideosService.displayTypesValid||$scope.getHasErrors())return!1;if(!$scope.forms.formVideo||!$scope.forms.formVideo.$valid)return TuMediaVideosService.setHasErrors(!0),!1;var videoItem=angular.copy(item);TuMediaVideosService.displayTypesValid=!1,TuMediaVideosService.setHasErrors(!1);var actionName="Added";if(videoItem.id.length>0&&(actionName="Updated"),$scope.submitInProgress||!$scope.forms.formVideo||!$scope.forms.formVideo.$valid)return NotifierFactory.show("error","Error: Please fill in all required fields",actionName+" Video"),!1;$scope.submitInProgress=!0;for(var currentVideos=TuProfileFactory.getMediaVideos(),i=0;i<currentVideos.length;i++)item.id===currentVideos[i].id&&(currentVideos[i].name=null,currentVideos[i].imageUrl=null);var youtubeId=UrlService.extractYoutubeIdFromUrl(item.url);WebSocketsService.subscribe(youtubeId,"VideoDetails"+youtubeId,function(response){item.name=response&&response.name||null,item.imageUrl=response&&response.imageUrl||null,$scope.selectedVideo=angular.copy(TuMediaVideosService.getSelectedVideo())}),TuMediaVideosService.saveVideo(TuMediaVideosService.coreId,videoItem).then(function(success){$scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Video "+actionName),success&&(0===videoItem.id.length&&(item.id=success,TuMediaVideosService.getVideoItems().unshift(item),TuMediaVideosService.setSelectedVideo(item),$scope.selectedVideo=angular.copy(TuMediaVideosService.getSelectedVideo())),TuMediaVideosService.setSelectedVideo(item),TuMediaVideosService.setHasErrors(!1)),TuMediaVideosService.setTriggerChange(Math.random())})},$scope.clearVideoForm=function(item){angular.isDefined(item)?$scope.itemVideo=item:$scope.itemVideo=TuMediaVideosService.getItemVideo(),$scope.itemVideo=TuMediaVideosService.resetItem($scope.itemVideo),TuMediaVideosService.setSelectedVideo($scope.itemVideo),$scope.setDisplayTypesValidation(!1),$scope.setHasErrors(!1)},$scope.getSelectedVideo=function(){return TuMediaVideosService.getSelectedVideo()},$scope.isEditMode=function(){return!(!$scope.selectedVideo||!$scope.selectedVideo.id)},$scope.getVideoItems=function(){return TuMediaVideosService.getVideoItems()},$scope.getHasErrors=function(){return TuMediaVideosService.getHasErrors()},$scope.setHasErrors=function(value){TuMediaVideosService.setHasErrors(value)},$scope.type=function(){return TuMediaVideosService.getType()},$scope.setDisplayTypesValidation=function(value){TuMediaVideosService.displayTypesValid=value},$scope.getDisplayTypesValidation=function(){return TuMediaVideosService.displayTypesValid},controller.initWatches=function(){WatchService.create($scope,TuMediaVideosService.getSelectedVideo,function(selectedVideo){$scope.selectedVideo=selectedVideo,$scope.selectedVideoBeforeChanges=angular.copy($scope.selectedVideo)}),WatchService.create($scope,TuMediaVideosService.getHasErrors,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.hasErrors=newValue)}),WatchService.create($scope,TuMediaVideosService.getHighlighted,function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TuMediaVideosService.setHighlighted(!1),$scope.isHighlighted=!1},200))}),WatchService.create($scope,TuProfileFactory.getSelectedMediaTabId,function(tabId){2===tabId?(void 0!==$scope.selectedVideoBeforeChanges&&($scope.selectedVideo=angular.copy($scope.selectedVideoBeforeChanges)),$timeout(function(){TuMediaVideosService.setHighlighted(!0)},200)):(delete TuMediaVideosService.displayTypesValid,$scope.setHasErrors(!1))})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuMediaVideosSidebarController",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TuProfileFactory","TuMediaVideosService","TuMediaService","WebSocketsService","UrlService","WatchService","ObjectService",App.controllers.TuMediaVideosSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuMediaVideosService=function($resource,$q,$log,constants,TuMediaService,TuProfileFactory){var service={triggerChange:null,selectedVideo:null};return service.getVideoModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/video/:videoId",null,{update:{method:"PATCH"}})},service.getVideosOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/videosOrder",null,{update:{method:"PATCH"}})},service.saveVideo=function(institutionId,video){var videoModel=service.getVideoModel(),videoSubmit=service.formatVideo(video);return angular.isDefined(videoSubmit.id)&&videoSubmit.id.length>0?videoModel.update({id:institutionId,videoId:video.id},{url:videoSubmit.url,orderType:videoSubmit.orderType,assignedTo:videoSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1}):videoModel.save({id:institutionId,videoId:videoSubmit.id},{url:videoSubmit.url,orderType:videoSubmit.orderType,assignedTo:videoSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.insertedId},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveOrder=function(id,videos){return service.getVideosOrderingModel().update({id:id},{videos:service.formatForOrdering(videos)}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.formatForOrdering=function(items){var formattedItems=[];return angular.forEach(items,function(item){formattedItems.push({id:item.id,orderType:item.orderType})}),formattedItems},service.deleteVideo=function(institutionId,video){return service.setHasErrors(!1),service.getVideoModel().delete({id:institutionId,videoId:video.id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setSelectedVideo=function(item){service.selectedVideo=item},service.getSelectedVideo=function(){return service.selectedVideo},service.setTriggerChange=function(triggerChange){service.triggerChange=parseFloat(triggerChange)},service.getTriggerChange=function(){return service.triggerChange},service.setVideoItems=function(items,transform){angular.isDefined(transform)||(transform=!0);var typeUg=TuMediaService.typeUndergraduate(),typePg=TuMediaService.typePostgraduate(),typeMaster=TuMediaService.typeOverview();transform&&angular.forEach(items,function(value,key){items[key][typeMaster]=!1,items[key][typeUg]=!1,items[key][typePg]=!1,angular.forEach(items[key].assignedTo,function(aValue){aValue===typeMaster?items[key][typeMaster]=!0:aValue===typeUg?items[key][typeUg]=!0:aValue===typePg&&(items[key][typePg]=!0)}),null===items[key].orderType&&(items[key].orderType={master:0,ug:0,pg:0});var orderOverview=0,orderUndergraduate=0,orderPostgraduate=0;angular.isDefined(items[key].orderType)&&(angular.isDefined(items[key].orderType[typeMaster])&&(orderOverview=items[key].orderType[typeMaster]),angular.isDefined(items[key].orderType[typeUg])&&(orderUndergraduate=items[key].orderType[typeUg]),angular.isDefined(items[key].orderType[typePg])&&(orderPostgraduate=items[key].orderType[typePg])),items[key].orderType={master:orderOverview,ug:orderUndergraduate,pg:orderPostgraduate},angular.isDefined(items[key]._id)&&(items[key].id=items[key]._id),delete items[key].assignedTo,delete items[key]._id}),TuProfileFactory.setMediaVideos(items),service.videoItems=items},service.getVideoItems=function(){return service.videoItems},service.getItemVideo=function(){var orderTypes={};return orderTypes[TuMediaService.typeOverview()]=0,orderTypes[TuMediaService.typeUndergraduate()]=0,orderTypes[TuMediaService.typePostgraduate()]=0,{id:"",name:"",description:"",master:!0,ug:!0,pg:!0,orderType:orderTypes,url:"",imageUrl:null}},service.resetItem=function(item){return item.master=!0,item.ug=!0,item.pg=!0,item.url="",item.name="",item.imageUrl=null,item},service.formatVideos=function(videos){return angular.forEach(videos,function(value,key){videos[key]=service.formatVideo(value)}),videos},service.formatVideo=function(video){return video.assignedTo=[],video.master&&video.assignedTo.push("master"),video.ug&&video.assignedTo.push("ug"),video.pg&&video.assignedTo.push("pg"),angular.isDefined(video.id)&&0===parseInt(video.id,10)&&delete video.id,delete video.master,delete video.ug,delete video.pg,delete video.order,video},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.setHighlighted=function(isHighlighted){service.isHighlighted=isHighlighted},service.getHighlighted=function(){return service.isHighlighted},service.coreId=function(coreId){service.coreId=coreId},service.setType=function(type){service.type=type},service.getType=function(){return service.type},service},angular.module("qsHub").service("TuMediaVideosService",["$resource","$q","$log","constants","TuMediaService","TuProfileFactory",App.services.TuMediaVideosService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmMediaVideosService=function($resource,$q,$log,constants,TuMediaService){var service={triggerChange:null,selectedVideo:null};return service.getVideoModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/video/:videoId",null,{update:{method:"PATCH"}})},service.getVideosOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/videosOrder",null,{update:{method:"PATCH"}})},service.saveVideo=function(institutionId,video){var videoModel=service.getVideoModel(),videoSubmit=service.formatVideo(video);return angular.isDefined(videoSubmit.id)&&videoSubmit.id.length>0?videoModel.update({id:institutionId,videoId:video.id},{url:videoSubmit.url,orderType:videoSubmit.orderType,assignedTo:videoSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1}):videoModel.save({id:institutionId,videoId:videoSubmit.id},{url:videoSubmit.url,orderType:videoSubmit.orderType,assignedTo:videoSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.insertedId},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveOrder=function(id,videos){return service.getVideosOrderingModel().update({id:id},{videos:service.formatForOrdering(videos)}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.formatForOrdering=function(items){var formattedItems=[];return angular.forEach(items,function(item){formattedItems.push({id:item.id,orderType:item.orderType})}),formattedItems},service.deleteVideo=function(institutionId,video){return service.setHasErrors(!1),service.getVideoModel().delete({id:institutionId,videoId:video.id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setSelectedVideo=function(item){service.selectedVideo=item},service.getSelectedVideo=function(){return service.selectedVideo},service.setTriggerChange=function(triggerChange){service.triggerChange=parseFloat(triggerChange)},service.getTriggerChange=function(){return service.triggerChange},service.setVideoItems=function(items,transform){angular.isDefined(transform)||(transform=!0);var typeUg=TuMediaService.typeUndergraduate(),typePg=TuMediaService.typePostgraduate(),typeMaster=TuMediaService.typeOverview();transform&&angular.forEach(items,function(value,key){items[key][typeMaster]=!0,angular.forEach(items[key].assignedTo,function(aValue){aValue===typeMaster&&(items[key][typeMaster]=!0)}),null===items[key].orderType&&(items[key].orderType={master:0,ug:0,pg:0});var orderOverview=0,orderUndergraduate=0,orderPostgraduate=0;angular.isDefined(items[key].orderType)&&(angular.isDefined(items[key].orderType[typeMaster])&&(orderOverview=items[key].orderType[typeMaster]),angular.isDefined(items[key].orderType[typeUg])&&(orderUndergraduate=items[key].orderType[typeUg]),angular.isDefined(items[key].orderType[typePg])&&(orderPostgraduate=items[key].orderType[typePg])),items[key].orderType={master:orderOverview,ug:orderUndergraduate,pg:orderPostgraduate},angular.isDefined(items[key]._id)&&(items[key].id=items[key]._id),delete items[key].assignedTo,delete items[key]._id}),service.videoItems=items},service.getVideoItems=function(){return service.videoItems},service.getItemVideo=function(){var orderTypes={};return orderTypes[TuMediaService.typeOverview()]=0,orderTypes[TuMediaService.typeUndergraduate()]=0,orderTypes[TuMediaService.typePostgraduate()]=0,{id:"",name:"",description:"",master:!0,ug:!0,pg:!0,orderType:orderTypes,url:"",imageUrl:null}},service.resetItem=function(item){return item.master=!0,item.ug=!0,item.pg=!0,item.url="",item.name="",item.imageUrl=null,item},service.formatVideos=function(videos){return angular.forEach(videos,function(value,key){videos[key]=service.formatVideo(value)}),videos},service.formatVideo=function(video){return video.assignedTo=[],video.master&&video.assignedTo.push("master"),video.ug&&video.assignedTo.push("ug"),video.pg&&video.assignedTo.push("pg"),angular.isDefined(video.id)&&0===parseInt(video.id,10)&&delete video.id,delete video.master,delete video.ug,delete video.pg,delete video.order,video},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.setHighlighted=function(isHighlighted){service.isHighlighted=isHighlighted},service.getHighlighted=function(){return service.isHighlighted},service.setCoreId=function(coreId){service.coreId=coreId},service.getCoreId=function(){return service.coreId},service.setType=function(type){service.type=type},service.getType=function(){return service.type},service},angular.module("qsHub").service("TmMediaVideosService",["$resource","$q","$log","constants","TuMediaService",App.services.TmMediaVideosService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaVideos=function($scope,constants,TmProfileFactory,NotifierFactory,TmMediaVideosService,TmMediaService,ModalService,$filter,orderBy,WatchService){var controller=this;controller.devMode=constants.dev,TmMediaVideosService.coreId=0,$scope.videoItems=[],$scope.itemVideo={},$scope.displayLocationDeletePopup=!0,$scope.type=TmMediaService.typeOverview(),TmMediaVideosService.setType(TmMediaService.typeOverview()),TmMediaVideosService.setSelectedVideo(TmMediaVideosService.getItemVideo()),WatchService.create($scope,TmProfileFactory.getData,function(newValue){null!==newValue&&(angular.copy(newValue.videos,$scope.videoItems),TmMediaVideosService.coreId=newValue.id,TmMediaVideosService.setVideoItems($scope.videoItems),$scope.filteredVideoItems=$filter("filter")($scope.videoItems,{master:!0}),$scope.filteredVideoItems=orderBy($scope.filteredVideoItems,"orderType."+$scope.type,!1))}),WatchService.create($scope,TmMediaVideosService.getVideoItems,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.videoItems=newValue)}),WatchService.create($scope,TmMediaVideosService.getTriggerChange,function(){var selectedVideo=TmMediaVideosService.getSelectedVideo();"ug"===$scope.type&&selectedVideo.ug||!selectedVideo.master&&selectedVideo.ug&&!selectedVideo.pg||!selectedVideo.master&&selectedVideo.ug&&selectedVideo.pg&&("ug"===$scope.type||"master"===$scope.type)?$scope.filter("ug"):"pg"===$scope.type&&selectedVideo.pg||!selectedVideo.master&&!selectedVideo.ug&&selectedVideo.pg?$scope.filter("pg"):$scope.filter("master"),angular.forEach($scope.videoItems,function(value,key){selectedVideo.id===value.id&&($scope.videoItems[key]=selectedVideo)}),$scope.filter($scope.type,!0)}),$scope.sortableOptions={disabled:!1,"ui-floating":!1,start:function(){controller.initialList=[],angular.copy($scope.filteredVideoItems,controller.initialList)},update:function(e,ui){!0!==TmMediaService.validateTypes($scope.videoItems)&&ui.item.sortable.cancel()},stop:function(){var validateItems=TmMediaService.validateTypes($scope.videoItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in video list"),TmMediaVideosService.setSelectedVideo(validateItems),TmMediaVideosService.displayTypesValid=!0,!1;for(var assignedOrder=1,index=0;index<$scope.filteredVideoItems.length;index++)$scope.filteredVideoItems[index][$scope.type]&&($scope.filteredVideoItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.sortableOptions.disabled=!1,TmMediaVideosService.saveOrder(TmMediaVideosService.coreId,$scope.videoItems).then(function(success){NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Video Order Save"),TmMediaVideosService.setSelectedVideo(TmMediaVideosService.getItemVideo())}).finally(function(){$scope.sortableOptions.disabled=!1})}},$scope.filter=function(type){var validateItems=TmMediaService.validateTypes($scope.videoItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in video list"),TmMediaVideosService.setSelectedVideo(validateItems),TmMediaVideosService.displayTypesValid=!0,!1;$scope.type=type;var params={};params[type]=!0,$scope.filteredVideoItems=$filter("filter")($scope.videoItems,params),$scope.filteredVideoItems=orderBy($scope.filteredVideoItems,"orderType."+type,!1)},$scope.selectVideo=function(item){item=angular.copy(item),TmMediaVideosService.setHasErrors(!1),$scope.itemVideo=TmMediaVideosService.getItemVideo(),angular.isDefined(item)?TmMediaVideosService.setSelectedVideo(item):(TmMediaVideosService.setHasErrors(!1),TmMediaVideosService.setHighlighted(!0),TmMediaVideosService.setSelectedVideo($scope.itemVideo))},$scope.selectedItem=function(){return TmMediaVideosService.getSelectedVideo()},$scope.deleteVideo=function(item){var modalOptions={closeButtonText:"No",actionButtonText:"Yes",headerText:"Delete Video"+(angular.isDefined(item.name)&&null!==item.name?": "+item.name:"")+" ?",bodyText:"Are you sure you wish to delete this video?"};ModalService.show({},modalOptions).then(function(result){TmMediaVideosService.deleteVideo(TmMediaVideosService.coreId,item).then(function(success){if($scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Delete Video"),success){TmMediaVideosService.setSelectedVideo(TmMediaVideosService.getItemVideo()),$scope.videoItems.splice(TmMediaService.objectSearch($scope.videoItems,item.id),1),$scope.filteredVideoItems.splice(TmMediaService.objectSearch($scope.filteredVideoItems,item.id),1);for(var assignedOrder=1,index=0;index<$scope.filteredVideoItems.length;index++)$scope.filteredVideoItems[index][$scope.type]&&($scope.filteredVideoItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.filteredVideoItems=orderBy($scope.filteredVideoItems,"orderType."+$scope.type,!1)}})})},$scope.typeOverview=function(){return TmMediaService.typeOverview()},$scope.typeUndergraduate=function(){return TmMediaService.typeUndergraduate()},$scope.typePostgraduate=function(){return TmMediaService.typePostgraduate()}},angular.module("qsHub").controller("TmMediaVideosController",["$scope","constants","TmProfileFactory","NotifierFactory","TmMediaVideosService","TmMediaService","ModalService","$filter","orderByFilter","WatchService",App.controllers.TmMediaVideos])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaVideosSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TmProfileFactory,TmMediaVideosService,TmMediaService,WebSocketsService,UrlService,WatchService,ObjectService){var controller=this,alreadyInitialised=!1;$scope.hasErrors=!0,TmMediaVideosService.displayTypesValid=!1,TmMediaVideosService.setHasErrors(!1),$scope.youtubeUrlPattern=UrlService.getYoutubePattern(),controller.onKeyUp=function($event){if(13!==$event.keyCode){var url=$event.target.value,variableName=$event.target.getAttribute("ng-model");url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),variableName&&ObjectService.set($scope,variableName,url))}},$scope.saveVideoForm=function(item){if(angular.isDefined(item.url)&&angular.isDefined(item.url)&&item.url.length>0||$scope.setHasErrors(!0),TmMediaService.isValidType(item)||(TmMediaVideosService.displayTypesValid=!0),TmMediaVideosService.displayTypesValid||$scope.getHasErrors())return!1;if(!$scope.forms.formVideo||!$scope.forms.formVideo.$valid)return TmMediaVideosService.setHasErrors(!0),!1;var videoItem=angular.copy(item);TmMediaVideosService.displayTypesValid=!1,TmMediaVideosService.setHasErrors(!1);var actionName="Added";if(videoItem.id.length>0&&(actionName="Updated"),$scope.submitInProgress||!$scope.forms.formVideo||!$scope.forms.formVideo.$valid)return NotifierFactory.show("error","Error: Please fill in all required fields",actionName+" Video"),!1;$scope.submitInProgress=!0;var youtubeId=UrlService.extractYoutubeIdFromUrl(item.url);WebSocketsService.subscribe(youtubeId,"VideoDetails"+youtubeId,function(response){item.name=response&&response.name||null,item.imageUrl=response&&response.imageUrl||null,$scope.selectedVideo=angular.copy(TmMediaVideosService.getSelectedVideo())}),TmMediaVideosService.saveVideo(TmMediaVideosService.getCoreId(),videoItem).then(function(success){$scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Video "+actionName),success&&(0===videoItem.id.length&&(item.id=success,TmMediaVideosService.getVideoItems().unshift(item),TmMediaVideosService.setSelectedVideo(item),$scope.selectedVideo=angular.copy(TmMediaVideosService.getSelectedVideo())),TmMediaVideosService.setSelectedVideo(item),TmMediaVideosService.setHasErrors(!1)),TmMediaVideosService.setTriggerChange(Math.random())})},$scope.clearVideoForm=function(item){angular.isDefined(item)?$scope.itemVideo=item:$scope.itemVideo=TmMediaVideosService.getItemVideo(),$scope.itemVideo=TmMediaVideosService.resetItem($scope.itemVideo),TmMediaVideosService.setSelectedVideo($scope.itemVideo),$scope.setDisplayTypesValidation(!1),$scope.setHasErrors(!1)},$scope.getSelectedVideo=function(){return TmMediaVideosService.getSelectedVideo()},$scope.isEditMode=function(){return!(!$scope.selectedVideo||!$scope.selectedVideo.id)},$scope.getVideoItems=function(){return TmMediaVideosService.getVideoItems()},$scope.getHasErrors=function(){return TmMediaVideosService.getHasErrors()},$scope.setHasErrors=function(value){TmMediaVideosService.setHasErrors(value)},$scope.type=function(){return TmMediaVideosService.getType()},$scope.setDisplayTypesValidation=function(value){TmMediaVideosService.displayTypesValid=value},$scope.getDisplayTypesValidation=function(){return TmMediaVideosService.displayTypesValid},controller.initWatches=function(){WatchService.create($scope,TmMediaVideosService.getSelectedVideo,function(selectedVideo){$scope.selectedVideo=selectedVideo}),WatchService.create($scope,TmMediaVideosService.getHasErrors,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.hasErrors=newValue)}),WatchService.create($scope,TmMediaVideosService.getHighlighted,function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TmMediaVideosService.setHighlighted(!1),$scope.isHighlighted=!1},200))}),WatchService.create($scope,TmProfileFactory.getSelectedMediaSubTabId,function(tabId){2===tabId?$timeout(function(){TmMediaVideosService.setHighlighted(!0)},200):(delete TmMediaVideosService.displayTypesValid,$scope.setHasErrors(!1))})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmMediaVideosSidebarController",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TmProfileFactory","TmMediaVideosService","TmMediaService","WebSocketsService","UrlService","WatchService","ObjectService",App.controllers.TmMediaVideosSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaBrochures=function($scope,constants,TuProfileFactory,NotifierFactory,TuMediaBrochuresService,TuMediaService,ModalService,$filter,orderBy,WatchService){var controller=this;controller.devMode=constants.dev,TuMediaBrochuresService.coreId=0,$scope.brochureItems=[],$scope.itemBrochure={},$scope.displayLocationDeletePopup=!0,$scope.type=TuMediaService.typeOverview(),TuMediaBrochuresService.setType(TuMediaService.typeOverview()),WatchService.create($scope,function(){return TuProfileFactory.getData()},function(newValue){TuMediaBrochuresService.setSelectedBrochure(TuMediaBrochuresService.getItemBrochure()),newValue&&void 0!==newValue.brochures?angular.copy(newValue.brochures,$scope.brochureItems):$scope.brochureItems=[],null!==newValue&&(TuMediaBrochuresService.coreId=newValue.id,TuMediaBrochuresService.setBrochureItems($scope.brochureItems),$scope.filteredBrochureItems=$filter("filter")($scope.brochureItems,{master:!0}),$scope.filteredBrochureItems=orderBy($scope.filteredBrochureItems,"orderType."+$scope.type,!1))}),WatchService.create($scope,TuMediaBrochuresService.getBrochureItems(),function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.brochureItems=newValue)}),WatchService.create($scope,TuMediaBrochuresService.getTriggerChange,function(){angular.isDefined($scope.selectedItemId())&&$scope.selectedItemId().length>0&&TuMediaBrochuresService.replaceByKey($scope.selectedItemId());var selectedBrochure=TuMediaBrochuresService.getSelectedBrochure();"ug"===$scope.type&&selectedBrochure.ug||!selectedBrochure.master&&selectedBrochure.ug&&!selectedBrochure.pg||!selectedBrochure.master&&selectedBrochure.ug&&selectedBrochure.pg&&("ug"===$scope.type||"master"===$scope.type)?$scope.filter("ug"):"pg"===$scope.type&&selectedBrochure.pg||!selectedBrochure.master&&!selectedBrochure.ug&&selectedBrochure.pg?$scope.filter("pg"):$scope.filter("master")}),$scope.sortableOptions={disabled:!1,"ui-floating":!1,start:function(){controller.initialList=[],angular.copy($scope.filteredBrochureItems,controller.initialList)},update:function(e,ui){!0!==TuMediaService.validateTypes($scope.brochureItems)&&ui.item.sortable.cancel()},stop:function(){var validateItems=TuMediaService.validateTypes($scope.brochureItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in brochure list"),TuMediaBrochuresService.setSelectedBrochure(validateItems),TuMediaBrochuresService.displayTypesValid=!0,!1;for(var assignedOrder=1,index=0;index<$scope.filteredBrochureItems.length;index++)$scope.filteredBrochureItems[index][$scope.type]&&($scope.filteredBrochureItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.sortableOptions.disabled=!1,TuMediaBrochuresService.saveOrder(TuMediaBrochuresService.coreId,$scope.brochureItems).then(function(success){NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Brochure Order Save"),TuMediaBrochuresService.setSelectedBrochure(TuMediaBrochuresService.getItemBrochure())}).finally(function(){$scope.sortableOptions.disabled=!1})}},$scope.filter=function(type){var validateItems=TuMediaService.validateTypes($scope.brochureItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in brochure list"),TuMediaBrochuresService.setSelectedBrochure(validateItems),TuMediaBrochuresService.displayTypesValid=!0,!1;$scope.type=type;var params={};params[type]=!0,$scope.filteredBrochureItems=$filter("filter")($scope.brochureItems,params),$scope.filteredBrochureItems=orderBy($scope.filteredBrochureItems,"orderType."+type,!1)},$scope.selectBrochure=function(item){item=angular.copy(item);var validateItems=TuMediaService.validateTypes($scope.brochureItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in brochure list"),TuMediaBrochuresService.setSelectedBrochure(validateItems),TuMediaBrochuresService.displayTypesValid=!0,!1;TuMediaBrochuresService.setHasErrors(!1),TuMediaBrochuresService.displayTypesValid=!1,$scope.itemBrochure=TuMediaBrochuresService.getItemBrochure(),angular.isDefined(item)?TuMediaBrochuresService.setSelectedBrochure(item):(TuMediaBrochuresService.setHasErrors(!1),TuMediaBrochuresService.setHighlighted(!0),TuMediaBrochuresService.setSelectedBrochure($scope.itemBrochure)),TuMediaBrochuresService.setTriggerReset(Math.random())},$scope.selectedItem=function(){return TuMediaBrochuresService.getSelectedBrochure()},$scope.selectedItemId=function(){return TuMediaBrochuresService.getSelectedBrochure().id},$scope.deleteBrochure=function(item){var modalOptions={closeButtonText:"No",actionButtonText:"Yes",headerText:"Delete Brochure"+(angular.isDefined(item.name)&&null!==item.name?": "+item.name:"")+" ?",bodyText:"Are you sure you wish to delete this brochure?"};ModalService.show({},modalOptions).then(function(result){TuMediaBrochuresService.deleteBrochure(TuMediaBrochuresService.coreId,item).then(function(success){if($scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Delete Brochure"),success){TuMediaBrochuresService.setSelectedBrochure(TuMediaBrochuresService.getItemBrochure()),$scope.brochureItems.splice(TuMediaService.objectSearch($scope.brochureItems,item.id),1),$scope.filteredBrochureItems.splice(TuMediaService.objectSearch($scope.filteredBrochureItems,item.id),1);for(var assignedOrder=1,index=0;index<$scope.filteredBrochureItems.length;index++)$scope.filteredBrochureItems[index][$scope.type]&&($scope.filteredBrochureItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.filteredBrochureItems=orderBy($scope.filteredBrochureItems,"orderType."+$scope.type,!1)}})})},$scope.typeOverview=function(){return TuMediaService.typeOverview()},$scope.typeUndergraduate=function(){return TuMediaService.typeUndergraduate()},$scope.typePostgraduate=function(){return TuMediaService.typePostgraduate()}},angular.module("qsHub").controller("TuMediaBrochuresController",["$scope","constants","TuProfileFactory","NotifierFactory","TuMediaBrochuresService","TuMediaService","ModalService","$filter","orderByFilter","WatchService",App.controllers.TuMediaBrochures])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaBrochuresSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TuProfileFactory,TuMediaBrochuresService,TuMediaService,WatchService,UrlService,ObjectService){var controller=this,alreadyInitialised=!1;$scope.hasErrors=!0,TuMediaBrochuresService.displayTypesValid=!1,TuMediaBrochuresService.setHasErrors(!1),controller.onKeyUp=function($event){if(13!==$event.keyCode){var url=$event.target.value,variableName=$event.target.getAttribute("ng-model");url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),variableName&&ObjectService.set($scope,variableName,url))}},controller.urlPattern=UrlService.getPattern(),$scope.saveBrochureForm=function(item){var brochureItem=angular.copy(item);TuMediaBrochuresService.displayTypesValid=!1,TuMediaBrochuresService.setHasErrors(!1),$scope.isInvalidTitle=!1,$scope.isInvalidUrl=!1;var actionName="Added";return brochureItem.id.length>0&&(actionName="Updated"),TuMediaService.isValidType(item)||(TuMediaBrochuresService.displayTypesValid=!0),angular.isDefined(item.name)&&angular.isDefined(item.name)&&item.name.length>0||($scope.isInvalidTitle=!0),angular.isDefined(item.url)&&angular.isDefined(item.url)&&item.url.length>0||($scope.isInvalidUrl=!0),$scope.isInvalidTitle||$scope.isInvalidUrl||TuMediaBrochuresService.displayTypesValid?($scope.setHasErrors(!0),!1):item.url.match(controller.urlPattern)?!$scope.submitInProgress&&$scope.forms.formBrochure&&$scope.forms.formBrochure.$valid?($scope.submitInProgress=!0,void TuMediaBrochuresService.saveBrochure(TuMediaBrochuresService.coreId,brochureItem).then(function(success){$scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Brochure "+actionName),success&&(0===brochureItem.id.length&&(item.id=success,TuMediaBrochuresService.getBrochureItems().unshift(item),TuMediaBrochuresService.setSelectedBrochure(item),$scope.selectedBrochure=angular.copy(TuMediaBrochuresService.getSelectedBrochure())),TuMediaBrochuresService.setSelectedBrochure(item),TuMediaBrochuresService.setHasErrors(!1),$scope.selectedBrochureBeforeChanges=item),TuMediaBrochuresService.setTriggerChange(Math.random())})):(NotifierFactory.show("error","Error: Please fill in all required fields",actionName+" Brochure"),!1):($scope.isInvalidUrl=!0,$scope.setHasErrors(!0),!1)},$scope.clearBrochureForm=function(item){angular.isDefined(item)?$scope.itemBrochure=item:$scope.itemBrochure=TuMediaBrochuresService.getItemBrochure(),$scope.itemBrochure=TuMediaBrochuresService.resetItem($scope.itemBrochure),$scope.setDisplayTypesValidation(!1),delete $scope.isInvalidTitle,delete $scope.isInvalidUrl},$scope.getSelectedBrochure=function(){return TuMediaBrochuresService.getSelectedBrochure()},$scope.getBrochureItems=function(){return TuMediaBrochuresService.getBrochureItems()},$scope.getHasErrors=function(){return TuMediaBrochuresService.getHasErrors()},$scope.setHasErrors=function(value){TuMediaBrochuresService.setHasErrors(value)},$scope.setIsInvalidTitle=function(value){$scope.isInvalidTitle=value},$scope.setIsInvalidUrl=function(value){$scope.isInvalidUrl=value},$scope.type=function(){return TuMediaBrochuresService.getType()},$scope.setDisplayTypesValidation=function(value){TuMediaBrochuresService.displayTypesValid=value},$scope.getDisplayTypesValidation=function(){return TuMediaBrochuresService.displayTypesValid},$scope.isEditMode=function(){return!(!$scope.selectedBrochure||!$scope.selectedBrochure.id)},controller.initWatches=function(){WatchService.create($scope,TuMediaBrochuresService.getSelectedBrochure,function(selectedBrochure){$scope.isInvalidUrl=!1,$scope.isInvalidTitle=!1,$scope.selectedBrochureBeforeChanges=angular.copy(selectedBrochure),$scope.selectedBrochure=selectedBrochure}),WatchService.create($scope,TuMediaBrochuresService.getHasErrors,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.hasErrors=newValue)}),WatchService.create($scope,TuMediaBrochuresService.getTriggerReset,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.selectedBrochure=angular.copy($scope.selectedBrochureBeforeChanges))}),WatchService.create($scope,TuMediaBrochuresService.getHighlighted,function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TuMediaBrochuresService.setHighlighted(!1),$scope.isHighlighted=!1},200))}),WatchService.create($scope,TuProfileFactory.getSelectedMediaTabId,function(tabId){4===tabId?(void 0!==$scope.selectedBrochureBeforeChanges&&($scope.selectedBrochure=angular.copy($scope.selectedBrochureBeforeChanges)),$timeout(function(){TuMediaBrochuresService.setHighlighted(!0)},200)):(delete $scope.isInvalidTitle,delete $scope.isInvalidUrl,delete TuMediaBrochuresService.displayTypesValid)})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuMediaBrochuresSidebarController",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TuProfileFactory","TuMediaBrochuresService","TuMediaService","WatchService","UrlService","ObjectService",App.controllers.TuMediaBrochuresSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuMediaBrochuresService=function($resource,$q,$log,constants,TuMediaService,TuMediaVideosService){var service={triggerChange:0};return service.getBrochureModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/brochure/:brochureId",null,{update:{method:"PATCH"}})},service.getBrochuresOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/brochuresOrder",null,{update:{method:"PATCH"}})},service.saveBrochure=function(institutionId,brochure){var brochureModel=service.getBrochureModel(),brochureSubmit=service.formatBrochure(brochure);return angular.isDefined(brochureSubmit.id)&&brochureSubmit.id.length>0?brochureModel.update({id:institutionId,brochureId:brochure.id},{name:brochureSubmit.name,url:brochureSubmit.url,orderType:brochureSubmit.orderType,assignedTo:brochureSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1}):brochureModel.save({id:institutionId,brochureId:brochureSubmit.id},{name:brochureSubmit.name,url:brochureSubmit.url,orderType:brochureSubmit.orderType,assignedTo:brochureSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.insertedId},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveOrder=function(id,brochures){return service.getBrochuresOrderingModel().update({id:id},{brochures:TuMediaVideosService.formatForOrdering(brochures)}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deleteBrochure=function(institutionId,brochure){return service.setHasErrors(!1),service.getBrochureModel().delete({id:institutionId,brochureId:brochure.id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setSelectedBrochure=function(item){service.selectedBrochure=item},service.replaceByKey=function(key){angular.forEach(service.getBrochureItems(),function(itemValue,itemKey){itemValue.id===key&&(service.getBrochureItems()[itemKey]=service.getSelectedBrochure())})},service.getSelectedBrochure=function(){return service.selectedBrochure},service.setTriggerChange=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerChange=function(){return service.triggerChange},service.setTriggerReset=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerReset=function(){return service.triggerChange},service.setBrochureItems=function(items,transform){if(angular.isDefined(transform)||(transform=!0),transform){var typeMaster=TuMediaService.typeOverview(),typeUg=TuMediaService.typeUndergraduate(),typePg=TuMediaService.typePostgraduate();angular.forEach(items,function(value,key){items[key][typeMaster]=!1,items[key][typeUg]=!1,items[key][typePg]=!1,angular.forEach(items[key].assignedTo,function(aValue){aValue===typeMaster?items[key][typeMaster]=!0:aValue===typeUg?items[key][typeUg]=!0:aValue===typePg&&(items[key][typePg]=!0)}),null===items[key].orderType&&(items[key].orderType={master:0,ug:0,pg:0});var orderOverview=0,orderUndergraduate=0,orderPostgraduate=0;angular.isDefined(items[key].orderType)&&(angular.isDefined(items[key].orderType[typeMaster])&&(orderOverview=items[key].orderType[typeMaster]),angular.isDefined(items[key].orderType[typeUg])&&(orderUndergraduate=items[key].orderType[typeUg]),angular.isDefined(items[key].orderType[typePg])&&(orderPostgraduate=items[key].orderType[typePg])),items[key].orderType={master:orderOverview,ug:orderUndergraduate,pg:orderPostgraduate},angular.isDefined(items[key]._id)&&(items[key].id=items[key]._id),delete items[key].assignedTo,delete items[key]._id})}service.brochureItems=items},service.getBrochureItems=function(){return service.brochureItems},service.getItemBrochure=function(){var orderTypes={};return orderTypes[TuMediaService.typeOverview()]=0,orderTypes[TuMediaService.typeUndergraduate()]=0,orderTypes[TuMediaService.typePostgraduate()]=0,{id:"",name:"",description:"",master:!0,ug:!0,pg:!0,orderType:orderTypes,url:"",imageUrl:null}},service.resetItem=function(item){return item.master=!0,item.ug=!0,item.pg=!0,item.url="",item.name="",item.imageUrl=null,item},service.formatBrochures=function(brochures){return angular.forEach(brochures,function(value,key){brochures[key]=service.formatBrochure(value)}),brochures},service.formatBrochure=function(brochure){return brochure.assignedTo=[],brochure.master&&brochure.assignedTo.push("master"),brochure.ug&&brochure.assignedTo.push("ug"),brochure.pg&&brochure.assignedTo.push("pg"),angular.isDefined(brochure.id)&&0===parseInt(brochure.id,10)&&delete brochure.id,delete brochure.master,delete brochure.ug,delete brochure.pg,delete brochure.order,brochure},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.setHighlighted=function(isHighlighted){service.isHighlighted=isHighlighted},service.getHighlighted=function(){return service.isHighlighted},service.coreId=function(coreId){service.coreId=coreId},service.setType=function(type){service.type=type},service.getType=function(){return service.type},service},angular.module("qsHub").service("TuMediaBrochuresService",["$resource","$q","$log","constants","TuMediaService","TuMediaVideosService",App.services.TuMediaBrochuresService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaSocialMedias=function($scope,constants,TuProfileFactory,NotifierFactory,TuMediaSocialMediasService,TuMediaService,WatchService){this.devMode=constants.dev,TuMediaSocialMediasService.coreId=0,$scope.socialMediaItems=TuMediaSocialMediasService.socialMediaItems(),$scope.itemSocialMedia={},$scope.displayLocationDeletePopup=!0,$scope.type=$scope.socialMediaItems[0],TuMediaSocialMediasService.setType($scope.type),WatchService.create($scope,function(){return TuProfileFactory.getData()},function(newValue){null!==newValue&&(TuMediaSocialMediasService.coreId=newValue.id,$scope.socialMediaItems=TuMediaSocialMediasService.processInput(newValue.socialMedia),TuMediaSocialMediasService.setSelectedSocialMedia(TuMediaSocialMediasService.flattenArray(newValue.socialMedia)))}),WatchService.create($scope,TuMediaSocialMediasService.getSocialMediaItems,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.socialMediaItems=newValue)}),WatchService.create($scope,TuMediaSocialMediasService.getChanges,function(newValue){angular.isDefined(newValue)&&($scope.socialMediaItems[$scope.type]=TuMediaSocialMediasService.flattenArray(newValue,!0))}),$scope.filter=function(type){return type},$scope.selectSocialMedia=function(type){$scope.type=type,TuMediaSocialMediasService.setType(type),TuMediaSocialMediasService.setTriggerChange(Math.random()),$scope.socialMediaItems[$scope.type].master||$scope.socialMediaItems[$scope.type].ug||$scope.socialMediaItems[$scope.type].pg||TuMediaSocialMediasService.setHighlighted(!0)},$scope.selectedItem=function(){return TuMediaSocialMediasService.getSelectedSocialMedia()},$scope.typeOverview=function(){return TuMediaService.typeOverview()},$scope.typeUndergraduate=function(){return TuMediaService.typeUndergraduate()},$scope.typePostgraduate=function(){return TuMediaService.typePostgraduate()}},angular.module("qsHub").controller("TuMediaSocialMediasController",["$scope","constants","TuProfileFactory","NotifierFactory","TuMediaSocialMediasService","TuMediaService","WatchService",App.controllers.TuMediaSocialMedias])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaSocialMediasSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TuProfileFactory,TuMediaSocialMediasService,WatchService,UrlService){var controller=this,alreadyInitialised=!1;$scope.hasErrors=!1,$scope.invalidCheckboxes=[],$scope.invalidFields=[],TuMediaSocialMediasService.displayTypesValid=!1,controller.onKeyUp=function($event,type,index){if(13!==$event.keyCode){var url=$event.target.value;url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),$scope.selectedSocialMedia[type][index].url=url)}},$scope.resetInvalidField=function(index){$scope.invalidFields[index]=!1},$scope.resetInvalidCheckbox=function(index){$scope.invalidCheckboxes[index]&&($scope.invalidCheckboxes[index]=!1),$scope.invalidFields=[]},controller.resetIfEmpty=function(){!$scope.selectedSocialMedia[$scope.type()][0].display||$scope.selectedSocialMedia[$scope.type()][0].master||$scope.selectedSocialMedia[$scope.type()][0].ug||$scope.selectedSocialMedia[$scope.type()][0].pg||!$scope.selectedSocialMedia[$scope.type()][1].display||$scope.selectedSocialMedia[$scope.type()][1].master||$scope.selectedSocialMedia[$scope.type()][1].ug||$scope.selectedSocialMedia[$scope.type()][1].pg||!$scope.selectedSocialMedia[$scope.type()][2].display||$scope.selectedSocialMedia[$scope.type()][2].master||$scope.selectedSocialMedia[$scope.type()][2].ug||$scope.selectedSocialMedia[$scope.type()][2].pg||$scope.clearSocialMediaForm()},controller.urlPattern=UrlService.getPattern(),$scope.saveSocialMediaForm=function(){$scope.invalidFields=[];var invalidItems=TuMediaSocialMediasService.socialMediaValidation(angular.copy($scope.selectedSocialMedia[$scope.type()]));if(void 0===invalidItems&&(invalidItems=TuMediaSocialMediasService.socialMediaFormValidation($scope.forms.formSocialMedia)),TuMediaSocialMediasService.displayTypesValid=!1,TuMediaSocialMediasService.setHasErrors(!1),$scope.submitInProgress||!$scope.forms.formSocialMedia||invalidItems&&invalidItems.length>0)return $scope.invalidCheckboxes=[],$scope.hasErrors=!0,angular.forEach(invalidItems,function(item){item.invalid?$scope.invalidCheckboxes[item.index]=item.invalid||!1:item.invalidUrl&&($scope.invalidFields[item.index]=item.invalidUrl||!1)}),!1;var socialMediaItem=TuMediaSocialMediasService.formatSocialMedia(angular.copy($scope.selectedSocialMedia[$scope.type()]));$scope.hasErrors=!1,$scope.invalidFields=[],$scope.invalidCheckboxes=[],$scope.submitInProgress=!0;var actionName=$scope.isEditMode($scope.type())?"Updated":"Added";TuMediaSocialMediasService.saveSocialMedia(TuMediaSocialMediasService.coreId,socialMediaItem).then(function(success){$scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Social Media "+actionName+" ("+$scope.type()+")"),success&&(controller.resetIfEmpty(),$scope.selectedSocialMediaBeforeChanges=angular.copy($scope.selectedSocialMedia),TuMediaSocialMediasService.setChanges(socialMediaItem))})},$scope.clearSocialMediaForm=function(){var setValue=!1;angular.forEach($scope.selectedSocialMedia[$scope.type()],function(value,key){setValue=0===key,$scope.selectedSocialMedia[$scope.type()][key].master=setValue,$scope.selectedSocialMedia[$scope.type()][key].ug=setValue,$scope.selectedSocialMedia[$scope.type()][key].pg=setValue,$scope.selectedSocialMedia[$scope.type()][key].url=""}),$scope.invalidCheckboxes=[],$scope.invalidFields=[],$scope.checkCheckboxes()},$scope.getSelectedSocialMedia=function(){return TuMediaSocialMediasService.getSelectedSocialMedia()},$scope.getSocialMediaItems=function(){return TuMediaSocialMediasService.getSocialMediaItems()},$scope.getHasErrors=function(){return TuMediaSocialMediasService.getHasErrors()},$scope.setHasErrors=function(value){TuMediaSocialMediasService.setHasErrors(value)},$scope.type=function(){return TuMediaSocialMediasService.getType()},$scope.setDisplayTypesValidation=function(value){TuMediaSocialMediasService.displayTypesValid=value},$scope.getDisplayTypesValidation=function(){return TuMediaSocialMediasService.displayTypesValid},$scope.checkCheckboxes=function(){var checked=0,displayValue=!0,valueChanged=!1,prevValueChanged=!1;angular.forEach($scope.selectedSocialMedia[$scope.type()],function(item,key){item.master&&(checked++,valueChanged=!0),item.ug&&(checked++,valueChanged=!0),item.pg&&(checked++,valueChanged=!0),(!valueChanged&&!prevValueChanged&&checked>1||3===checked&&!valueChanged)&&(displayValue=!1),$scope.selectedSocialMedia[$scope.type()][key].display=displayValue,displayValue||(delete $scope.invalidCheckboxes[key],delete $scope.invalidFields[key]),prevValueChanged=valueChanged,valueChanged=!1})},$scope.checkboxChanged=function(selectedSocialMedia,index,itemChanged){var checkedOnChanged=0;!0===$scope.selectedSocialMedia[$scope.type()][index].master&&checkedOnChanged++,!0===$scope.selectedSocialMedia[$scope.type()][index].ug&&checkedOnChanged++,!0===$scope.selectedSocialMedia[$scope.type()][index].pg&&checkedOnChanged++,3===checkedOnChanged&&angular.forEach($scope.selectedSocialMedia[$scope.type()],function(value,key){key!==index&&(value.url=null)});var uniqueItems=[];angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){$scope.selectedSocialMedia[$scope.type()][totalKey].master&&-1===uniqueItems.indexOf("master")&&uniqueItems.push("master"),$scope.selectedSocialMedia[$scope.type()][totalKey].ug&&-1===uniqueItems.indexOf("ug")&&uniqueItems.push("ug"),$scope.selectedSocialMedia[$scope.type()][totalKey].pg&&-1===uniqueItems.indexOf("pg")&&uniqueItems.push("pg")});var totalChecked=uniqueItems.length,visibleCount=0;angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){$scope.selectedSocialMedia[$scope.type()][totalKey].display&&visibleCount++}),angular.forEach($scope.selectedSocialMedia[$scope.type()],function(items,key){key!==index&&($scope.selectedSocialMedia[$scope.type()][index][itemChanged]&&$scope.selectedSocialMedia[$scope.type()][key][itemChanged]&&($scope.selectedSocialMedia[$scope.type()][key].master||$scope.selectedSocialMedia[$scope.type()][key].ug||$scope.selectedSocialMedia[$scope.type()][key].pg||($scope.selectedSocialMedia[$scope.type()][key].display=!0)),$scope.selectedSocialMedia[$scope.type()][index][itemChanged]?($scope.selectedSocialMedia[$scope.type()][key][itemChanged]?($scope.selectedSocialMedia[$scope.type()][key][itemChanged]=!$scope.selectedSocialMedia[$scope.type()][index][itemChanged],3===visibleCount&&(totalChecked<2||totalChecked===visibleCount)&&($scope.selectedSocialMedia[$scope.type()][key].display=!1,delete $scope.invalidCheckboxes[key],delete $scope.invalidFields[key])):checkedOnChanged===totalChecked?checkedOnChanged>1&&checkedOnChanged<visibleCount?($scope.selectedSocialMedia[$scope.type()][key].display=!1,delete $scope.invalidCheckboxes[key],delete $scope.invalidFields[key],visibleCount--):1===checkedOnChanged&&angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){$scope.selectedSocialMedia[$scope.type()][totalKey].display=!0}):angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){totalKey!==index&&(totalChecked===visibleCount||totalChecked<visibleCount||3===totalChecked)&&($scope.selectedSocialMedia[$scope.type()][totalKey].master||$scope.selectedSocialMedia[$scope.type()][totalKey].ug||$scope.selectedSocialMedia[$scope.type()][totalKey].pg||($scope.selectedSocialMedia[$scope.type()][totalKey].display=!1,delete $scope.invalidCheckboxes[key],delete $scope.invalidFields[key],visibleCount--),2===totalChecked&&checkedOnChanged!==totalChecked&&($scope.selectedSocialMedia[$scope.type()][totalKey].display=!0))}),3===checkedOnChanged&&($scope.selectedSocialMedia[$scope.type()][key].display=!1,delete $scope.invalidCheckboxes[key],delete $scope.invalidFields[key])):(0===totalChecked&&angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){$scope.selectedSocialMedia[$scope.type()][totalKey].display=!0}),1===totalChecked&&angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){$scope.selectedSocialMedia[$scope.type()][totalKey].display=!0}),2===totalChecked&&(checkedOnChanged===totalChecked&&checkedOnChanged>visibleCount?angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){totalKey!==index&&checkedOnChanged>visibleCount&&($scope.selectedSocialMedia[$scope.type()][totalKey].display=!0,visibleCount++)}):checkedOnChanged!==totalChecked&&2===totalChecked&&visibleCount<3&&checkedOnChanged>0&&angular.forEach($scope.selectedSocialMedia[$scope.type()],function(totalItems,totalKey){$scope.selectedSocialMedia[$scope.type()][totalKey].display=!0,visibleCount++}))))})},$scope.isEditMode=function(type){return!(!$scope.selectedSocialMedia||!$scope.selectedSocialMedia[type])},controller.initWatches=function(){WatchService.create($scope,TuMediaSocialMediasService.getSelectedSocialMedia,function(selectedSocialMedia){selectedSocialMedia&&($scope.selectedSocialMediaBeforeChanges=selectedSocialMedia,$scope.selectedSocialMedia=angular.copy(selectedSocialMedia),$scope.checkCheckboxes())}),WatchService.create($scope,TuMediaSocialMediasService.getTriggerChange,function(){angular.isDefined($scope.selectedSocialMediaBeforeChanges)&&($scope.selectedSocialMedia=angular.copy($scope.selectedSocialMediaBeforeChanges),$scope.checkCheckboxes()),$scope.invalidFields=[],$scope.invalidCheckboxes=[]}),WatchService.create($scope,TuMediaSocialMediasService.getType,function(socialMediaType){socialMediaType&&(controller.selectedSocialMediaUrl=TuMediaSocialMediasService.getSelectedSocialMediaUrl(socialMediaType))}),WatchService.create($scope,TuMediaSocialMediasService.getHighlighted,function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TuMediaSocialMediasService.setHighlighted(!1),$scope.isHighlighted=!1},200))}),WatchService.create($scope,TuProfileFactory.getSelectedMediaTabId,function(tabId){3===tabId?(void 0!==$scope.selectedSocialMediaBeforeChanges&&($scope.selectedSocialMedia=angular.copy($scope.selectedSocialMediaBeforeChanges)),$timeout(function(){TuMediaSocialMediasService.setHighlighted(!0)},200)):($scope.invalidFields=[],$scope.invalidCheckboxes=[])})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuMediaSocialMediasSidebarController",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TuProfileFactory","TuMediaSocialMediasService","WatchService","UrlService",App.controllers.TuMediaSocialMediasSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuMediaSocialMediasService=function($resource,$q,$log,constants,TuMediaService,UrlService){var service={},imageUrl="/images/media/media-social-media.png",socialMediaItems=["facebook","youtube","linkedin","twitter","other"];return service.getSocialMediaModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/social-media/:socialMediaId",null,{update:{method:"PATCH"}})},service.getInstitutionModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id",null,{update:{method:"PATCH"}})},service.saveSocialMedia=function(institutionId,socialMedia){return service.getSocialMediaModel().update({id:institutionId,socialMediaId:service.getType()},socialMedia).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setSelectedSocialMedia=function(item){service.selectedSocialMedia=item},service.getSelectedSocialMedia=function(){return service.selectedSocialMedia},service.setTriggerChange=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerChange=function(){return service.triggerChange},service.getSocialMediaItems=function(){return service.socialMediaItems},service.setSocialMediaItems=function(items){service.socialMediaItems=items},service.getItemSocialMedia=function(){var orderTypes={};return orderTypes[TuMediaService.typeOverview()]=0,orderTypes[TuMediaService.typeUndergraduate()]=0,orderTypes[TuMediaService.typePostgraduate()]=0,{id:"",name:"",description:"",master:!0,ug:!0,pg:!0,orderType:orderTypes,url:"",imageUrl:imageUrl}},service.getSelectedSocialMediaUrl=function(type){switch(type){case"facebook":return"https://www.facebook.com/universityrankings";case"youtube":return"https://www.youtube.com/topuniversities";case"linkedin":return"https://www.linkedin.com/company/qs";case"twitter":return"https://twitter.com/worlduniranking";default:return"http://www.yourwebsite.com"}},service.resetItem=function(item){return item.master=!0,item.ug=!0,item.pg=!0,item.url="",item.name="",item.imageUrl=imageUrl,item},service.formatSocialMedias=function(socialMedias){return angular.forEach(socialMedias,function(value,key){socialMedias[key]=service.formatSocialMedia(value)}),socialMedias},service.socialMediaValidation=function(socialMediaItem){var invalidItems=[];if(socialMediaItem&&3===socialMediaItem.length&&!0===socialMediaItem[0].display&&!0===socialMediaItem[0].master&&!0===socialMediaItem[0].ug&&!0===socialMediaItem[0].pg&&!socialMediaItem[0].url.length)return invalidItems;var checkboxesChecked=0;return angular.forEach(socialMediaItem,function(item){item.master&&checkboxesChecked++,item.ug&&checkboxesChecked++,item.pg&&checkboxesChecked++}),angular.forEach(socialMediaItem,function(item,key){""===item.url||item.master||item.pg||item.ug||3!==checkboxesChecked?""===item.url||item.master||item.pg||item.ug||3===checkboxesChecked?""!==item.url&&void 0!==item.url||!(item.master||item.pg||item.ug)?!item.url.match(UrlService.getPattern())&&(item.master||item.pg||item.ug)&&invalidItems.push({invalidUrl:!0,index:key}):invalidItems.push({invalidUrl:!0,index:key}):invalidItems.push({invalid:!0,index:key}):socialMediaItem[key].url=""}),invalidItems.length>0?invalidItems:void 0},service.socialMediaFormValidation=function(socialMediaItem){var invalidItems=[];return angular.isDefined(socialMediaItem)&&angular.forEach(socialMediaItem.$error.url,function(error){var key=error.$name.charAt(error.$name.length-1);invalidItems.push({invalidUrl:!0,index:key})}),invalidItems},service.formatSocialMedia=function(socialMediaItem){var output=[];return angular.forEach(socialMediaItem,function(item,key){if((item.master||item.pg||item.ug)&&""!==item.url){var tmpOutput={};tmpOutput.url=item.url,tmpOutput.assignedTo=[],item.master&&tmpOutput.assignedTo.push("master"),item.ug&&tmpOutput.assignedTo.push("ug"),item.pg&&tmpOutput.assignedTo.push("pg"),output.push(tmpOutput)}}),output},service.setChanges=function(changes){service.changes=changes},service.getChanges=function(){return service.changes},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.setHighlighted=function(isHighlighted){service.isHighlighted=isHighlighted},service.getHighlighted=function(){return service.isHighlighted},service.coreId=function(coreId){service.coreId=coreId},service.setType=function(type){service.type=type},service.getType=function(){return service.type},service.socialMediaItems=function(){return socialMediaItems},service.getSocialMediaObject=function(){var socialMedia={};return angular.forEach(socialMediaItems,function(mediaType){socialMedia[mediaType]={},angular.forEach(TuMediaService.getTypes(),function(profileType){socialMedia[mediaType][profileType]=!1})}),socialMedia},service.assignData=function(inputData,socialMedia){return angular.forEach(inputData,function(mediaType,mediaTypeValue){angular.forEach(mediaType,function(objectData){angular.isDefined(objectData.assignedTo)&&angular.forEach(objectData.assignedTo,function(assignedType){socialMedia[mediaTypeValue][assignedType]=!0})})}),socialMedia},service.processInput=function(inputData){var socialMedia=service.getSocialMediaObject();return socialMedia=service.assignData(inputData,socialMedia)},service.flattenArray=function(inputData,forType){angular.isUndefined(forType)&&(forType=!1);var typeUg=TuMediaService.typeUndergraduate(),typePg=TuMediaService.typePostgraduate(),typeMaster=TuMediaService.typeOverview();if(forType){var outputData={};outputData[typeUg]=!1,outputData[typePg]=!1,outputData[typeMaster]=!1,angular.forEach(inputData,function(inputDataValue,inputDataKey){angular.isDefined(inputDataValue.assignedTo)&&angular.forEach(inputData[inputDataKey].assignedTo,function(assignedType){assignedType===typeMaster?outputData[typeMaster]=!0:assignedType===typeUg?outputData[typeUg]=!0:assignedType===typePg&&(outputData[typePg]=!0)})}),inputData=outputData}else angular.forEach(socialMediaItems,function(mediaType){angular.isDefined(inputData)&&angular.isDefined(inputData[mediaType])?(angular.forEach(inputData[mediaType],function(objectData,dataKey){inputData[mediaType][dataKey][typeMaster]=!1,inputData[mediaType][dataKey][typeUg]=!1,inputData[mediaType][dataKey][typePg]=!1,inputData[mediaType][dataKey].display=!0,angular.isDefined(inputData[mediaType][dataKey].assignedTo)&&(angular.forEach(inputData[mediaType][dataKey].assignedTo,function(assignedType){assignedType===typeMaster?inputData[mediaType][dataKey][typeMaster]=!0:assignedType===typeUg?inputData[mediaType][dataKey][typeUg]=!0:assignedType===typePg&&(inputData[mediaType][dataKey][typePg]=!0)}),delete inputData[mediaType][dataKey].assignedTo)}),0===inputData[mediaType].length&&(inputData[mediaType][0]=service.getEmpty(!0,!0),inputData[mediaType][1]=service.getEmpty(!1,!1),inputData[mediaType][2]=service.getEmpty(!1,!1)),1===inputData[mediaType].length&&(inputData[mediaType][1]=service.getEmpty(!1,!0),inputData[mediaType][2]=service.getEmpty(!1,!1)),2===inputData[mediaType].length&&(inputData[mediaType][2]=service.getEmpty(!1,!0))):((angular.isUndefined(inputData)||angular.isArray(inputData))&&(inputData={}),inputData[mediaType]=[],inputData[mediaType].push(service.getEmpty(!0,!0)),inputData[mediaType].push(service.getEmpty(!1,!1)),inputData[mediaType].push(service.getEmpty(!1,!1)))});return inputData},service.getEmpty=function(initialValue,displayValue){return{url:"",display:displayValue,master:initialValue,ug:initialValue,pg:initialValue}},service.resetDataForType=function(data,type){return angular.forEach(data,function(dataValue,dataKey){dataKey===type&&angular.forEach(data[dataKey],function(dataSubValue,dataSubKey){data[dataKey][dataSubKey].master=!1,data[dataKey][dataSubKey].ug=!1,data[dataKey][dataSubKey].pg=!1,data[dataKey][dataSubKey].url=""})}),data},service.assignNewData=function(values,type,currentlySelected){var outputValues=angular.copy(values);angular.forEach(values,function(objectData,valueKey){angular.isDefined(objectData.assignedTo)&&(outputValues[valueKey][TuMediaService.typeOverview()]=!1,outputValues[valueKey][TuMediaService.typeUndergraduate()]=!1,outputValues[valueKey][TuMediaService.typePostgraduate()]=!1,angular.forEach(objectData.assignedTo,function(assignedType){outputValues[valueKey][assignedType]=!0}),delete outputValues[valueKey].assignedTo)}),1===outputValues.length&&(outputValues[1]=service.getEmpty(!1,!0),outputValues[2]=service.getEmpty(!1,!1)),2===outputValues.length&&(outputValues[2]=service.getEmpty(!1,!0));var copySelected=angular.copy(currentlySelected);return angular.forEach(copySelected,function(mediaType,mediaTypeKey){mediaTypeKey===type&&(copySelected[mediaTypeKey]=outputValues)}),copySelected},service.applyUpdate=function(type,values){var currentlySelected=service.getSelectedSocialMedia();return service.assignNewData(values,type,currentlySelected)},service},angular.module("qsHub").service("TuMediaSocialMediasService",["$resource","$q","$log","constants","TuMediaService","UrlService",App.services.TuMediaSocialMediasService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaImages=function($scope,constants,Lightbox,TuProfileFactory,NotifierFactory,TuMediaImagesService,TuMediaService,ModalService,$filter,orderBy,AuthenticationService,WatchService){var controller=this;controller.devMode=constants.dev,TuMediaImagesService.coreId=0,$scope.imageItems=[],$scope.itemImage={},$scope.displayLocationDeletePopup=!0,$scope.type=TuMediaService.typeOverview(),$scope.uploadedImagesCount={},$scope.uploadedImagesCount[TuMediaService.typeOverview()]=0,$scope.uploadedImagesCount[TuMediaService.typeUndergraduate()]=0,$scope.uploadedImagesCount[TuMediaService.typePostgraduate()]=0,controller.maxImages=TuMediaImagesService.getMaxImages(),controller.dropZoneImageInstance=null,TuMediaImagesService.setType(TuMediaService.typeOverview()),WatchService.create($scope,function(){return TuProfileFactory.getData()},function(newValue){null!==newValue&&(angular.copy(newValue.images,$scope.imageItems),TuMediaImagesService.coreId=newValue.id,TuMediaImagesService.setImageItems($scope.imageItems),controller.recalculateImages(),$scope.filteredImageItems=$filter("filter")($scope.imageItems,{master:!0}),$scope.filteredImageItems=orderBy($scope.filteredImageItems,"orderType."+$scope.type,!1),$scope.filter($scope.type,!0))}),WatchService.create($scope,TuMediaImagesService.getImageItems,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.imageItems=newValue,controller.recalculateImages())}),WatchService.create($scope,TuMediaImagesService.getTriggerChange,function(){angular.isDefined($scope.selectedItemId())&&$scope.selectedItemId().length>0&&TuMediaImagesService.replaceByKey($scope.selectedItemId());var selectedImage=TuMediaImagesService.getSelectedImage();"ug"===$scope.type&&selectedImage.ug||!selectedImage.master&&selectedImage.ug&&!selectedImage.pg||!selectedImage.master&&selectedImage.ug&&selectedImage.pg&&("ug"===$scope.type||"master"===$scope.type)?$scope.filter("ug"):"pg"===$scope.type&&selectedImage.pg||!selectedImage.master&&!selectedImage.ug&&selectedImage.pg?$scope.filter("pg"):$scope.filter("master");for(var assignedOrder=1,index=0;index<$scope.filteredImageItems.length;index++)$scope.filteredImageItems[index][$scope.type]&&($scope.filteredImageItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.item=TuMediaImagesService.getItemImage(0)}),$scope.sortableOptions={disabled:!1,"ui-floating":!1,start:function(){controller.initialList=[],angular.copy($scope.filteredImageItems,controller.initialList)},update:function(e,ui){!0!==TuMediaService.validateTypes($scope.imageItems)&&ui.item.sortable.cancel()},stop:function(){var validateItems=TuMediaService.validateTypes($scope.imageItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in image list"),TuMediaImagesService.setSelectedImage(validateItems),TuMediaImagesService.displayIsValidType=!1,!1;for(var assignedOrder=1,index=0;index<$scope.filteredImageItems.length;index++)$scope.filteredImageItems[index][$scope.type]&&($scope.filteredImageItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.sortableOptions.disabled=!1,TuMediaImagesService.saveOrder(TuMediaImagesService.coreId,$scope.imageItems).then(function(success){NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Image Order Save"),TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage())}).finally(function(){$scope.sortableOptions.disabled=!1})}},$scope.filter=function(type,setDefault){angular.isUndefined(setDefault)&&(setDefault=!1);var validateItems=TuMediaService.validateTypes($scope.imageItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in image list"),TuMediaImagesService.setSelectedImage(validateItems),TuMediaImagesService.displayIsValidType=!1,controller.recalculateImages(),!1;$scope.type=type;var params={};if(params[type]=!0,controller.recalculateImages(),$scope.filteredImageItems=$filter("filter")($scope.imageItems,params),$scope.filteredImageItems=orderBy($scope.filteredImageItems,"orderType."+type,!1),setDefault){var selectedImage=TuMediaImagesService.getItemImage();$scope.uploadedImagesCount[$scope.type]>0&&(selectedImage=$scope.filteredImageItems[0]),TuMediaImagesService.setSelectedImage(selectedImage)}},$scope.selectImage=function(item){if(angular.isDefined(item)&&"temporary"!==item.id){var validateItems=TuMediaService.validateTypes($scope.imageItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in image list"),TuMediaImagesService.setSelectedImage(validateItems),TuMediaImagesService.displayIsValidType=!1,!1;TuMediaImagesService.setHasErrors(!1),TuMediaImagesService.displayIsValidType=!1,$scope.itemImage=TuMediaImagesService.getItemImage(),angular.isDefined(item)?TuMediaImagesService.setSelectedImage(item):(TuMediaImagesService.setHasErrors(!0),TuMediaImagesService.setSelectedImage($scope.itemImage)),TuMediaImagesService.setTriggerReset(Math.random())}},$scope.selectedItem=function(){return TuMediaImagesService.getSelectedImage()},$scope.deleteImage=function(item){if(angular.isDefined($scope.item)&&($scope.item.thumbnailUrl=null),angular.isDefined(item)&&"temporary"!==item.id){var modalOptions={closeButtonText:"No",actionButtonText:"Yes",headerText:"Delete Image"+(angular.isDefined(item.name)&&null!==item.name?": "+item.name:""),bodyText:"Are you sure you wish to delete this image?"};ModalService.show({},modalOptions).then(function(result){TuMediaImagesService.deleteImage(TuMediaImagesService.coreId,item).then(function(success){if($scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Image Deleted"),success){TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage()),$scope.imageItems.splice(TuMediaService.objectSearch($scope.imageItems,item.id),1),$scope.filteredImageItems.splice(TuMediaService.objectSearch($scope.filteredImageItems,item.id),1);for(var assignedOrder=1,index=0;index<$scope.filteredImageItems.length;index++)$scope.filteredImageItems[index][$scope.type]&&($scope.filteredImageItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.filteredImageItems=orderBy($scope.filteredImageItems,"orderType."+$scope.type,!1),controller.recalculateImages()}})})}else TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage(0))},$scope.typeOverview=function(){return TuMediaService.typeOverview()},$scope.typeUndergraduate=function(){return TuMediaService.typeUndergraduate()},$scope.typePostgraduate=function(){return TuMediaService.typePostgraduate()},$scope.selectedItemId=function(){return TuMediaImagesService.getSelectedImage().id},controller.recalculateImages=function(){$scope.uploadedImagesCount.master=0,$scope.uploadedImagesCount.ug=0,$scope.uploadedImagesCount.pg=0,angular.forEach(TuMediaImagesService.getImageItems(),function(value){value.master&&$scope.uploadedImagesCount.master++,value.ug&&$scope.uploadedImagesCount.ug++,value.pg&&$scope.uploadedImagesCount.pg++}),TuMediaImagesService.uploadedImagesCount=$scope.uploadedImagesCount,controller.setOptionsMaxFiles()},controller.dropZoneImageInit=function(){controller.dropZoneImageInstance=this,controller.setOptionsMaxFiles()},controller.getUploadUrl=function(){return controller.setOptionsMaxFiles(),constants.api.institutions.url+"/v1/tu-profile/"+TuProfileFactory.getId()+"/images"},controller.setOptionsMaxFiles=function(){null!==controller.dropZoneImageInstance&&(controller.dropZoneImageInstance.options.maxFiles=TuMediaImagesService.getMaxImages()-$scope.uploadedImagesCount[$scope.type])},controller.uploadImage=function(item){var imageItem=angular.copy(item);TuMediaImagesService.displayIsValidType=!1,TuMediaImagesService.setHasErrors(!1);var actionName="Added";if("temporary"!==imageItem.id&&(actionName="Updated"),!angular.isDefined(item.url)||!(angular.isDefined(item.url)&&item.url.length>0))return TuMediaImagesService.setHasErrors(!0),!1;"temporary"===imageItem.id&&NotifierFactory.show("success","Image upload is processing, please wait...",""),TuMediaImagesService.setImageUploadingInProgress(!0),TuMediaImagesService.saveImage(TuMediaImagesService.coreId,imageItem).then(function(success){TuMediaImagesService.setImageUploadingInProgress(!1),success&&("temporary"===imageItem.id&&(item.id=success,TuMediaImagesService.getImageItems().unshift(item)),TuMediaImagesService.setSelectedImage(item),TuMediaImagesService.setHasErrors(!1),$scope.selectedImageBeforeChanges=item,TuMediaImagesService.setHighlighted(!0),TuMediaImagesService.displayIsValidType=!1),NotifierFactory.show(success?"success":"error",success?"Add a title, description and click Update":"Failure!",success?" Image "+actionName+" Successfully!":" Image "+actionName+"Failure!"),TuMediaImagesService.setTriggerChange(Math.random())})},controller.handleImageSuccess=function(file,response){controller.dropZoneImageInstance.removeAllFiles();var item=TuMediaImagesService.getItemImage(0);if(angular.isDefined(response.status)&&response.status&&angular.isDefined(response.path)&&response.path)TuMediaImagesService.setSelectedImage(item),$scope.uploadedImagesCount.master>=controller.maxImages&&delete item.master,$scope.uploadedImagesCount.ug>=controller.maxImages&&delete item.ug,$scope.uploadedImagesCount.pg>=controller.maxImages&&delete item.pg,(item.master||item.ug||item.pg)&&(item.id="temporary",item.thumbnailUrl=response.path,item.url=response.path,$scope.item=item,controller.setOptionsMaxFiles(),controller.uploadImage(item)),item.id="temporary",item.thumbnailUrl=response.path,item.url=response.path,$scope.item=item,controller.setOptionsMaxFiles();else{var message="Bad response, please try again later";null!==response&&response.hasOwnProperty("code")&&(message=response.message),NotifierFactory.show("error",message,"Error!")}$scope.$apply()},controller.handleImageError=function(file,response){controller.dropZoneImageInstance.removeAllFiles();var message=response;file.accepted&&"error"===file.status&&(message="Upload error, please try again later"),"error"===response.status&&(message=response.message),controller.setOptionsMaxFiles(),file.size>1e3*$scope.imageConfig.dropzone.maxFilesize*1e3&&(message=$scope.imageConfig.dropzone.dictFileTooBig),NotifierFactory.show("error",message),$scope.$apply()},$scope.imageConfig={dropzone:{url:controller.getUploadUrl(),maxFilesize:.4,parallelUploads:1,autoProcessQueue:!0,addRemoveLinks:!1,previewsContainer:null,clickable:".upload-image",init:controller.dropZoneImageInit,acceptedFiles:"image/jpeg,image/pjpeg,image/jpeg,image/pjpeg",dictFileTooBig:"Uploaded Image is greater than the limit. Please upload less than 400KB.",dictMaxFilesExceeded:"Profiles have reached the limit. Please delete an image and try again",dictInvalidFileType:"Uploaded image has incorrect format. Please upload images in jpg, jpeg format.",headers:AuthenticationService.getAuthorizationHeader()},eventHandlers:{success:controller.handleImageSuccess,error:controller.handleImageError}},$scope.isSelected=function(){return $scope.selectedItem()&&""===$scope.selectedItem().id||$scope.isTemporary()},$scope.isTemporary=function(){return $scope.selectedItem()&&"temporary"===$scope.selectedItem().id},$scope.getImageUploadingInProgress=function(){return TuMediaImagesService.getImageUploadingInProgress()},$scope.openLightboxModal=function(index){Lightbox.openModal($scope.filteredImageItems,index)}},angular.module("qsHub").controller("TuMediaImagesController",["$scope","constants","Lightbox","TuProfileFactory","NotifierFactory","TuMediaImagesService","TuMediaService","ModalService","$filter","orderByFilter","AuthenticationService","WatchService",App.controllers.TuMediaImages])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TuMediaImagesSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TuProfileFactory,TuMediaImagesService,TuMediaService,WatchService){var controller=this,alreadyInitialised=!1;controller.uploadedImagesCount={},$scope.hasErrors=!0,TuMediaImagesService.displayIsValidType=!1,TuMediaImagesService.setHasErrors(!1),$scope.saveImageForm=function(item){if(!$scope.forms.formImage||!$scope.forms.formImage.$valid||$scope.submitInProgress)return!1;var imageItem=angular.copy(item);TuMediaImagesService.displayIsValidType=!1,TuMediaImagesService.setHasErrors(!1);var actionName="Added";if("temporary"!==imageItem.id&&(actionName="Updated"),!TuMediaService.isValidType(item))return TuMediaImagesService.displayIsValidType=!0,!1;if(!angular.isDefined(item.url)||!(angular.isDefined(item.url)&&item.url.length>0))return $scope.setHasErrors(!0),!1;if(!$scope.forms.formImage||!$scope.forms.formImage.$valid)return NotifierFactory.show("error","Error: Please fill in all required fields",actionName+" Image"),!1;"temporary"===imageItem.id&&NotifierFactory.show("success","Image upload is processing, please wait...","");var checkAssigned=controller.checkAssigned(imageItem,item);if(imageItem=checkAssigned.imageItem,item=checkAssigned.item,!checkAssigned.actionAllowed)return!1;$scope.submitInProgress=!0,TuMediaImagesService.saveImage(TuMediaImagesService.coreId,imageItem).then(function(success){$scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!"," Image "+actionName),success&&("temporary"===imageItem.id&&(item.id=success,TuMediaImagesService.getImageItems().unshift(item)),TuMediaImagesService.setSelectedImage(item),TuMediaImagesService.setHasErrors(!1),$scope.selectedImageBeforeChanges=item),TuMediaImagesService.setTriggerChange(Math.random())})},controller.checkAssigned=function(imageItem,item){var actionAllowed=!0,result=null;return"temporary"===imageItem.id?(result=angular.copy(TuMediaImagesService.getImageItems())).unshift(item):(result=angular.copy(TuMediaImagesService.getImageItems()),angular.forEach(result,function(itemValue,itemKey){itemValue.id===item.id&&(result[itemKey]=item)})),controller.uploadedImagesCount.master=0,controller.uploadedImagesCount.ug=0,controller.uploadedImagesCount.pg=0,angular.forEach(result,function(value){value.master&&controller.uploadedImagesCount.master++,value.ug&&controller.uploadedImagesCount.ug++,value.pg&&controller.uploadedImagesCount.pg++}),item.master&&controller.uploadedImagesCount.master>TuMediaImagesService.getMaxImages()&&(item.master=!1,imageItem.master=!1,controller.assignError("overview")),item.ug&&controller.uploadedImagesCount.ug>TuMediaImagesService.getMaxImages()&&(item.ug=!1,imageItem.ug=!1,controller.assignError("undergraduate")),item.pg&&controller.uploadedImagesCount.pg>TuMediaImagesService.getMaxImages()&&(item.pg=!1,imageItem.pg=!1,controller.assignError("postgraduate")),item.master||item.ug||item.pg||(actionAllowed=!1),{actionAllowed:actionAllowed,imageItem:imageItem,item:item}},controller.assignError=function(type){NotifierFactory.show("error","Please delete an image and try again",type+" profile has reached the limit ")},$scope.clearImageForm=function(item){angular.isDefined(item)?$scope.itemImage=item:$scope.itemImage=TuMediaImagesService.getItemImage(),"temporary"===$scope.itemImage.id?TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage(0)):$scope.itemImage=TuMediaImagesService.resetItem($scope.itemImage),$scope.setDisplayIsValidType(!1)},$scope.getSelectedImage=function(){return TuMediaImagesService.getSelectedImage()},$scope.getImageItems=function(){return TuMediaImagesService.getImageItems()},$scope.getHasErrors=function(){return TuMediaImagesService.getHasErrors()},$scope.setHasErrors=function(value){TuMediaImagesService.setHasErrors(value)},$scope.type=function(){return TuMediaImagesService.getType()},$scope.setDisplayIsValidType=function(value){TuMediaImagesService.displayIsValidType=value},$scope.getDisplayIsValidType=function(){return TuMediaImagesService.displayIsValidType},$scope.isEditMode=function(){return!(!$scope.selectedImage||"temporary"===$scope.selectedImage.id)},$scope.getImageUploadingInProgress=function(){return TuMediaImagesService.getImageUploadingInProgress()},controller.getSelectedImageWatch=function(selectedImage){$scope.selectedImageBeforeChanges=angular.copy(selectedImage),$scope.selectedImage=angular.copy(selectedImage)},controller.getHasErrorsWatch=function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.hasErrors=newValue)},controller.getTriggerResetWatch=function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.selectedImage=angular.copy($scope.selectedImageBeforeChanges))},controller.getHighlightedWatch=function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TuMediaImagesService.setHighlighted(!1),$scope.isHighlighted=!1},200))},controller.getSelectedMediaTabIdWatch=function(tabId){1===tabId&&(void 0!==$scope.selectedImageBeforeChanges&&($scope.selectedImage=angular.copy($scope.selectedImageBeforeChanges)),$timeout(function(){TuMediaImagesService.setHighlighted(!0)},200))},controller.initWatches=function(){WatchService.create($scope,TuMediaImagesService.getSelectedImage,controller.getSelectedImageWatch,!0),WatchService.create($scope,TuMediaImagesService.getHasErrors,controller.getHasErrorsWatch),WatchService.create($scope,TuMediaImagesService.getTriggerReset,controller.getTriggerResetWatch),WatchService.create($scope,TuMediaImagesService.getHighlighted,controller.getHighlightedWatch),WatchService.create($scope,TuProfileFactory.getSelectedMediaTabId,controller.getSelectedMediaTabIdWatch)},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuMediaImagesSidebarController",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TuProfileFactory","TuMediaImagesService","TuMediaService","WatchService",App.controllers.TuMediaImagesSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuMediaImagesService=function($resource,$q,$log,constants,TuMediaService){var service={triggerChange:0};return service.getImageModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/image/:imageId",null,{update:{method:"PATCH"}})},service.getImagesOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/imagesOrder",null,{update:{method:"PATCH"}})},service.saveImage=function(institutionId,image){var imageModel=service.getImageModel(),imageSubmit=service.formatImage(image);return angular.isDefined(imageSubmit.id)&&"temporary"!==imageSubmit.id?imageModel.update({id:institutionId,imageId:image.id},{name:imageSubmit.name,description:imageSubmit.description,thumbnailUrl:imageSubmit.thumbnailUrl,url:imageSubmit.url,orderType:imageSubmit.orderType,assignedTo:imageSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1}):imageModel.save({id:institutionId},{name:imageSubmit.name,description:imageSubmit.description,url:imageSubmit.url,orderType:imageSubmit.orderType,assignedTo:imageSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.insertedId},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveOrder=function(id,images){return service.getImagesOrderingModel().update({id:id},{images:service.formatForOrdering(images)}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.formatForOrdering=function(items){var formattedItems=[];return angular.forEach(items,function(item){formattedItems.push({id:item.id,orderType:item.orderType})}),formattedItems},service.deleteImage=function(institutionId,image){return service.setHasErrors(!1),service.getImageModel().delete({id:institutionId,imageId:image.id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setImageUploadingInProgress=function(value){service.imageUploadingInProgress=value},service.getImageUploadingInProgress=function(){return service.imageUploadingInProgress},service.setSelectedImage=function(item){service.selectedImage=item},service.getSelectedImage=function(){return service.selectedImage},service.setTriggerChange=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerChange=function(){return service.triggerChange},service.setImageItems=function(items,transform){angular.isDefined(transform)||(transform=!0),transform&&angular.forEach(items,function(value,key){items[key][TuMediaService.typeOverview()]=!1,items[key][TuMediaService.typeUndergraduate()]=!1,items[key][TuMediaService.typePostgraduate()]=!1,angular.forEach(items[key].assignedTo,function(aValue){aValue===TuMediaService.typeOverview()?items[key][TuMediaService.typeOverview()]=!0:aValue===TuMediaService.typeUndergraduate()?items[key][TuMediaService.typeUndergraduate()]=!0:aValue===TuMediaService.typePostgraduate()&&(items[key][TuMediaService.typePostgraduate()]=!0)}),null===items[key].orderType&&(items[key].orderType={master:0,ug:0,pg:0});var orderOverview=0,orderUndergraduate=0,orderPostgraduate=0;angular.isDefined(items[key].orderType)&&(angular.isDefined(items[key].orderType[TuMediaService.typeOverview()])&&(orderOverview=items[key].orderType[TuMediaService.typeOverview()]),angular.isDefined(items[key].orderType[TuMediaService.typeUndergraduate()])&&(orderUndergraduate=items[key].orderType[TuMediaService.typeUndergraduate()]),angular.isDefined(items[key].orderType[TuMediaService.typePostgraduate()])&&(orderPostgraduate=items[key].orderType[TuMediaService.typePostgraduate()])),items[key].orderType={master:orderOverview,ug:orderUndergraduate,pg:orderPostgraduate},angular.isDefined(items[key]._id)&&(items[key].id=items[key]._id),delete items[key].assignedTo,delete items[key]._id}),service.imageItems=items},service.getImageItems=function(){return service.imageItems},service.getItemImage=function(defaultValue){angular.isUndefined(defaultValue)&&(defaultValue=0);var orderTypes={};return orderTypes[TuMediaService.typeOverview()]=defaultValue,orderTypes[TuMediaService.typeUndergraduate()]=defaultValue,orderTypes[TuMediaService.typePostgraduate()]=defaultValue,{id:"",name:"",description:"",master:!0,ug:!0,pg:!0,orderType:orderTypes,url:""}},service.resetItem=function(item){return item.master=!0,item.ug=!0,item.pg=!0,item.name="",item.description="",item},service.formatImages=function(images){return angular.forEach(images,function(value,key){images[key]=service.formatImage(value)}),images},service.formatImage=function(image){return image.assignedTo=[],image.master&&image.assignedTo.push("master"),image.ug&&image.assignedTo.push("ug"),image.pg&&image.assignedTo.push("pg"),angular.isDefined(image.id)&&0===parseInt(image.id,10)&&delete image.id,delete image.master,delete image.ug,delete image.pg,delete image.order,image},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.setHighlighted=function(isHighlighted){service.isHighlighted=isHighlighted},service.getHighlighted=function(){return service.isHighlighted},service.coreId=function(coreId){service.coreId=coreId},service.setType=function(type){service.type=type},service.getType=function(){return service.type},service.replaceByKey=function(key){angular.forEach(service.getImageItems(),function(itemValue,itemKey){itemValue.id===key&&(service.getImageItems()[itemKey]=service.getSelectedImage())})},service.setTriggerReset=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerReset=function(){return service.triggerChange},service.setUploadedImagesCount=function(uploadedImagesCount){service.uploadedImagesCount=uploadedImagesCount},service.getUploadedImagesCount=function(){return service.uploadedImagesCount},service.getMaxImages=function(){return 48},service},angular.module("qsHub").service("TuMediaImagesService",["$resource","$q","$log","constants","TuMediaService",App.services.TuMediaImagesService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmProfileMediaService=function(){var service={types:{master:"master"}};return service.typeOverview=function(){return service.types.master},service.getTypes=function(){return[service.typeOverview()]},service.isValidType=function(item){for(var scopeTypes=service.getTypes(),valid=!1,typesIndex=0;typesIndex<scopeTypes.length;typesIndex++)item[scopeTypes[typesIndex]]&&(valid=!0);return valid},service.validateTypes=function(list){for(var i=0;i<list.length;i++)if(!service.isValidType(list[i]))return list[i];return!0},service.objectSearch=function(haystack,needle,column){column=column||"id";for(var i=0;i<haystack.length;i++)if(haystack[i]&&haystack[i][column]&&haystack[i][column]===needle)return i;return!1},service},angular.module("qsHub").service("TmMediaService",[App.services.TmProfileMediaService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmProfileMedia=function($scope,constants,InstitutionFactory,TmProfileFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.upgradeEmailsTo=constants.emails.upgradeTu,$scope.isMediaReloading=!0,controller.isImagesTabActive=function(){var selectedMediaTabId=TmProfileFactory.getSelectedMediaSubTabId();return 1===selectedMediaTabId||null===selectedMediaTabId},controller.isVideosTabActive=function(){return TmProfileFactory.isMediaVideosSubTabSelected()},controller.isBrochuresTabActive=function(){return TmProfileFactory.isMediaBrochuresSubTabSelected()},controller.isSocialMediaTabActive=function(){return TmProfileFactory.isMediaSocialSubTabSelected()},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.isAdvanced,function(newValue,oldValue){oldValue!==newValue&&($scope.isAdvanced=newValue)}),WatchService.create($scope,InstitutionFactory.getId,function(visible){$scope.isMediaReloading=!visible})},controller.isRightSidePanelActive=function(){return!!TmProfileFactory.isMediaTabSelected()},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfileMediaController",["$scope","constants","InstitutionFactory","TmProfileFactory","WatchService",App.controllers.TmProfileMedia])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaCommonSidebar=function($scope,$resource,$location,constants,TmProfileFactory,InstitutionFactory,TmMediaService,TmMediaVideosService,TmMediaBrochuresService,TmMediaSocialMediasService,TmMediaImagesService){angular.isUndefined($scope.tabId)&&TmProfileFactory.setSelectedMediaSubTabId(1),$scope.setSelected=function(tabId){return $scope.tabId!==tabId&&($scope.tabId=tabId,TmProfileFactory.setSelectedMediaSubTabId(tabId),!0)},$scope.getSelected=function(){return TmProfileFactory.getSelectedMediaSubTabId()},$scope.getGeneralCounter=function(){var totalCount=0,videoItems=TmMediaVideosService.getVideoItems();angular.isArray(videoItems)&&(totalCount+=videoItems.length);var brochureItems=TmMediaBrochuresService.getBrochureItems();angular.isArray(brochureItems)&&(totalCount+=brochureItems.length);var socialMediaItems=TmMediaSocialMediasService.getSocialMediaItems();angular.isArray(socialMediaItems)&&(totalCount+=socialMediaItems.length);var imageItems=TmMediaImagesService.getImageItems();return angular.isArray(imageItems)&&(totalCount+=imageItems.length),totalCount}},angular.module("qsHub").controller("TmMediaCommonSidebarController",["$scope","$resource","$location","constants","TmProfileFactory","InstitutionFactory","TmMediaService","TmMediaVideosService","TmMediaBrochuresService","TmMediaSocialMediasService","TmMediaImagesService",App.controllers.TmMediaCommonSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaImages=function($scope,constants,Lightbox,TmProfileFactory,NotifierFactory,TmMediaImagesService,TmMediaService,ModalService,$filter,orderBy,AuthenticationService,WatchService){var controller=this;controller.devMode=constants.dev,TmMediaImagesService.coreId=0,$scope.imageItems=[],$scope.itemImage={},$scope.displayLocationDeletePopup=!0,$scope.type=TmMediaService.typeOverview(),$scope.uploadedImagesCount={},$scope.uploadedImagesCount[TmMediaService.typeOverview()]=0,controller.maxImages=TmMediaImagesService.getMaxImages(),controller.dropZoneImageInstance=null,TmMediaImagesService.setType(TmMediaService.typeOverview()),$scope.sortableOptions={disabled:!1,"ui-floating":!1,start:function(){controller.initialList=[],angular.copy($scope.imageItems,controller.initialList)},update:function(e,ui){},stop:function(){for(var assignedOrder=1,index=0;index<$scope.imageItems.length;index++)$scope.imageItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++;$scope.sortableOptions.disabled=!1,TmMediaImagesService.saveOrder(TmMediaImagesService.coreId,$scope.imageItems).then(function(success){NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Image Order Save"),TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage())}).finally(function(){$scope.sortableOptions.disabled=!1,TmMediaImagesService.setImageItems($scope.imageItems)})}},$scope.selectImage=function(item){angular.isDefined(item)&&"temporary"!==item.id&&(TmMediaImagesService.setHasErrors(!1),TmMediaImagesService.displayIsValidType=!1,$scope.itemImage=TmMediaImagesService.getItemImage(),angular.isDefined(item)?TmMediaImagesService.setSelectedImage(item):(TmMediaImagesService.setHasErrors(!0),TmMediaImagesService.setSelectedImage($scope.itemImage)))},$scope.selectedItem=function(){return TmMediaImagesService.getSelectedImage()},$scope.deleteImage=function(item){if(TmMediaImagesService.getSubmitInProgress())return!1;if(angular.isDefined($scope.item)&&($scope.item.thumbnailUrl=null),angular.isDefined(item)&&"temporary"!==item.id){var modalOptions={closeButtonText:"No",actionButtonText:"Yes",headerText:"Delete Image"+(angular.isDefined(item.name)&&null!==item.name?": "+item.name:""),bodyText:"Are you sure you wish to delete this image?"};ModalService.show({},modalOptions).then(function(){TmMediaImagesService.deleteImage(TmMediaImagesService.coreId,item).then(function(success){if(TmMediaImagesService.getSubmitInProgress(!1),NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Image Deleted"),success){TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage()),$scope.imageItems.splice(TmMediaService.objectSearch($scope.imageItems,item.id),1),TmMediaImagesService.setImageItems($scope.imageItems);for(var assignedOrder=1,index=0;index<$scope.imageItems.length;index++)$scope.imageItems[index][$scope.type]&&assignedOrder++;controller.recalculateImages()}})})}else TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage(0))},$scope.selectedItemId=function(){if(TmMediaImagesService.getSelectedImage())return TmMediaImagesService.getSelectedImage().id},controller.recalculateImages=function(){$scope.imageItems=orderBy($scope.imageItems,"orderType."+$scope.type,!1),$scope.uploadedImagesCount.master=0,angular.forEach(TmMediaImagesService.getImageItems(),function(){$scope.uploadedImagesCount.master++}),TmMediaImagesService.uploadedImagesCount=$scope.uploadedImagesCount,controller.setOptionsMaxFiles()},controller.dropZoneImageInit=function(){controller.dropZoneImageInstance=this,controller.setOptionsMaxFiles()},controller.getUploadUrl=function(){return controller.setOptionsMaxFiles(),constants.api.institutions.url+"/v1/tm-profile/"+TmProfileFactory.getId()+"/images"},controller.setOptionsMaxFiles=function(){null!==controller.dropZoneImageInstance&&(controller.dropZoneImageInstance.options.maxFiles=TmMediaImagesService.getMaxImages()-$scope.uploadedImagesCount[$scope.type])},controller.uploadImage=function(item){var imageItem=angular.copy(item);TmMediaImagesService.displayIsValidType=!1,TmMediaImagesService.setHasErrors(!1);var actionName="Added";if("temporary"!==imageItem.id&&(actionName="Updated"),!angular.isDefined(item.url)||!(angular.isDefined(item.url)&&item.url.length>0))return TmMediaImagesService.setHasErrors(!0),!1;"temporary"===imageItem.id&&NotifierFactory.show("success","Image upload is processing, please wait...",""),TmMediaImagesService.setImageUploadingInProgress(!0),TmMediaImagesService.saveImage(TmProfileFactory.getId(),imageItem).then(function(success){if(TmMediaImagesService.setImageUploadingInProgress(!1),success){if("temporary"===imageItem.id){item.id=success;var imageItems=TmMediaImagesService.getImageItems();imageItems.unshift(item),TmMediaImagesService.setImageItems(angular.copy(imageItems))}TmMediaImagesService.setSelectedImage(item),TmMediaImagesService.setHasErrors(!1),$scope.selectedImageBeforeChanges=item,TmMediaImagesService.setHighlighted(!0),TmMediaImagesService.displayIsValidType=!1}NotifierFactory.show(success?"success":"error",success?"Add a title, description and click Update":"Failure!",success?" Image "+actionName+" Successfully!":" Image "+actionName+"Failure!"),TmMediaImagesService.setTriggerChange(Math.random())})},controller.handleImageSuccess=function(file,response){controller.dropZoneImageInstance.removeAllFiles();var item=TmMediaImagesService.getItemImage(0);if(angular.isDefined(response.status)&&response.status&&angular.isDefined(response.path)&&response.path)item.id="temporary",item.thumbnailUrl=response.path,item.url=response.path,$scope.item=item,controller.uploadImage(item),controller.setOptionsMaxFiles();else{var message="Bad response, please try again later";null!==response&&response.hasOwnProperty("code")&&(message=response.message),NotifierFactory.show("error",message,"Error!")}$scope.$apply()},controller.handleImageError=function(file,response){controller.dropZoneImageInstance.removeAllFiles();var message=response;file.accepted&&"error"===file.status&&(message="Upload error, please try again later"),"error"===response.status&&(message=response.message),controller.setOptionsMaxFiles(),file.size>1e3*$scope.imageConfig.dropzone.maxFilesize*1e3&&(message=$scope.imageConfig.dropzone.dictFileTooBig),NotifierFactory.show("error",message),$scope.$apply()},$scope.imageConfig={dropzone:{url:controller.getUploadUrl(),maxFilesize:.4,parallelUploads:1,autoProcessQueue:!0,addRemoveLinks:!1,previewsContainer:null,clickable:".upload-image",init:controller.dropZoneImageInit,acceptedFiles:"image/jpeg,image/pjpeg,image/jpeg,image/pjpeg",dictFileTooBig:"Uploaded Image is greater than the limit. Please upload less than 400KB.",dictMaxFilesExceeded:"Profiles have reached the limit. Please delete an image and try again",dictInvalidFileType:"Uploaded image has incorrect format. Please upload images in jpg, jpeg format.",headers:AuthenticationService.getAuthorizationHeader()},eventHandlers:{success:controller.handleImageSuccess,error:controller.handleImageError}},$scope.isSelected=function(){return $scope.selectedItem()&&""===$scope.selectedItem().id||$scope.isTemporary()},$scope.isTemporary=function(){return $scope.selectedItem()&&"temporary"===$scope.selectedItem().id},$scope.getImageUploadingInProgress=function(){return TmMediaImagesService.getImageUploadingInProgress()},$scope.openLightboxModal=function(index){Lightbox.openModal($scope.imageItems,index)},controller.initWatches=function(){WatchService.create($scope,TmProfileFactory.getData,function(profileData){profileData&&profileData.id&&(angular.copy(profileData.images,$scope.imageItems),TmMediaImagesService.coreId=profileData.id,TmMediaImagesService.setImageItems($scope.imageItems),controller.recalculateImages(),$scope.imageItems=orderBy($scope.imageItems,"orderType."+$scope.type,!1),TmMediaImagesService.setSelectedImage($scope.imageItems[0]))}),WatchService.create($scope,TmMediaImagesService.getImageItems,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.imageItems=newValue,controller.recalculateImages())}),WatchService.create($scope,TmMediaImagesService.getTriggerChange,function(){angular.isDefined($scope.selectedItemId())&&$scope.selectedItemId().length>0&&TmMediaImagesService.replaceByKey($scope.selectedItemId());for(var assignedOrder=1,index=0;index<$scope.imageItems.length;index++)$scope.imageItems[index][$scope.type]&&($scope.imageItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);controller.recalculateImages(),$scope.item=TmMediaImagesService.getItemImage(0)})},controller.init=function(){controller.initWatches()},controller.init()},angular.module("qsHub").controller("TmMediaImagesController",["$scope","constants","Lightbox","TmProfileFactory","NotifierFactory","TmMediaImagesService","TmMediaService","ModalService","$filter","orderByFilter","AuthenticationService","WatchService",App.controllers.TmMediaImages])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaImagesSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TmProfileFactory,TmMediaImagesService,WatchService){var controller=this,alreadyInitialised=!1;controller.uploadedImagesCount={},$scope.hasErrors=!0,TmMediaImagesService.displayIsValidType=!1,TmMediaImagesService.setHasErrors(!1),$scope.saveImageForm=function(item){if(!$scope.forms.formImage||!$scope.forms.formImage.$valid||TmMediaImagesService.getSubmitInProgress())return!1;var imageItem=angular.copy(item);TmMediaImagesService.setHasErrors(!1);var actionName="Added";return"temporary"!==imageItem.id&&(actionName="Updated"),angular.isDefined(item.url)&&angular.isDefined(item.url)&&item.url.length>0?$scope.forms.formImage&&$scope.forms.formImage.$valid?("temporary"===imageItem.id&&NotifierFactory.show("success","Image upload is processing, please wait...",""),TmMediaImagesService.setSubmitInProgress(!0),void TmMediaImagesService.saveImage(TmMediaImagesService.coreId,imageItem).then(function(success){TmMediaImagesService.setSubmitInProgress(!1),NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!"," Image "+actionName),success&&(TmMediaImagesService.setSelectedImage(item),TmMediaImagesService.setHasErrors(!1),$scope.selectedImageBeforeChanges=item),TmMediaImagesService.setTriggerChange(Math.random())})):(NotifierFactory.show("error","Error: Please fill in all required fields",actionName+" Image"),!1):($scope.setHasErrors(!0),!1)},controller.checkAssigned=function(imageItem,item){var result=null;return"temporary"===imageItem.id?(result=angular.copy(TmMediaImagesService.getImageItems())).unshift(item):(result=angular.copy(TmMediaImagesService.getImageItems()),angular.forEach(result,function(itemValue,itemKey){itemValue.id===item.id&&(result[itemKey]=item)})),controller.uploadedImagesCount.master=0,angular.forEach(result,function(value){value.master&&controller.uploadedImagesCount.master++}),item.master&&controller.uploadedImagesCount.master>TmMediaImagesService.getMaxImages()&&(item.master=!1,imageItem.master=!1,controller.assignError("overview")),{actionAllowed:!0,imageItem:imageItem,item:item}},controller.assignError=function(type){NotifierFactory.show("error","Please delete an image and try again",type+" profile has reached the limit ")},$scope.clearImageForm=function(item){if(TmMediaImagesService.getSubmitInProgress())return!1;angular.isDefined(item)?$scope.itemImage=item:$scope.itemImage=TmMediaImagesService.getItemImage(),"temporary"===$scope.itemImage.id?TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage(0)):($scope.itemImage=TmMediaImagesService.resetItem($scope.itemImage),TmMediaImagesService.setSelectedImage($scope.itemImage)),$scope.setDisplayIsValidType(!1)},$scope.getSelectedImage=function(){return TmMediaImagesService.getSelectedImage()},$scope.getImageItems=function(){return TmMediaImagesService.getImageItems()},$scope.getHasErrors=function(){return TmMediaImagesService.getHasErrors()},$scope.setHasErrors=function(value){TmMediaImagesService.setHasErrors(value)},$scope.type=function(){return TmMediaImagesService.getType()},$scope.setDisplayIsValidType=function(value){TmMediaImagesService.displayIsValidType=value},$scope.getDisplayIsValidType=function(){return TmMediaImagesService.displayIsValidType},$scope.submitInProgress=function(){return TmMediaImagesService.getSubmitInProgress()},$scope.isEditMode=function(){return!(!$scope.selectedImage||"temporary"===$scope.selectedImage.id)},$scope.getImageUploadingInProgress=function(){return TmMediaImagesService.getImageUploadingInProgress()},controller.initWatches=function(){WatchService.create($scope,TmMediaImagesService.getSelectedImage,function(selectedImage){$scope.selectedImageBeforeChanges=angular.copy(selectedImage),$scope.selectedImage=angular.copy(selectedImage)}),WatchService.create($scope,TmMediaImagesService.getHasErrors,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.hasErrors=newValue)}),WatchService.create($scope,TmMediaImagesService.getTriggerReset,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.selectedImage=angular.copy($scope.selectedImageBeforeChanges))}),WatchService.create($scope,TmMediaImagesService.getHighlighted,function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TmMediaImagesService.setHighlighted(!1),$scope.isHighlighted=!1},200))}),WatchService.create($scope,TmProfileFactory.getSelectedMediaSubTabId,function(tabId){1===tabId&&$timeout(function(){TmMediaImagesService.setHighlighted(!0)},200)})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmMediaImagesSidebarController",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TmProfileFactory","TmMediaImagesService","WatchService",App.controllers.TmMediaImagesSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmMediaImages=function($resource,$q,$log,constants,TmMediaService){var serviceMediaImages=this,service={};return serviceMediaImages.triggerChange=0,serviceMediaImages.submitInProgress=!1,service.getImageModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/image/:imageId",null,{update:{method:"PATCH"}})},service.getImagesOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/imagesOrder",null,{update:{method:"PATCH"}})},service.saveImage=function(institutionId,image){var imageModel=service.getImageModel(),imageSubmit=service.formatImage(image);return angular.isDefined(imageSubmit.id)&&"temporary"!==imageSubmit.id?imageModel.update({id:institutionId,imageId:image.id},{name:imageSubmit.name,description:imageSubmit.description,thumbnailUrl:imageSubmit.thumbnailUrl,url:imageSubmit.url,orderType:imageSubmit.orderType,assignedTo:imageSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1}):imageModel.save({id:institutionId},{name:imageSubmit.name,description:imageSubmit.description,url:imageSubmit.url,assignedTo:imageSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.insertedId},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveOrder=function(id,images){return service.getImagesOrderingModel().update({id:id},{images:service.formatForOrdering(images)}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.formatForOrdering=function(items){var formattedItems=[];return angular.forEach(items,function(item){formattedItems.push({id:item.id,orderType:item.orderType})}),formattedItems},service.deleteImage=function(institutionId,image){return service.setHasErrors(!1),service.getImageModel().delete({id:institutionId,imageId:image.id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setImageUploadingInProgress=function(value){serviceMediaImages.imageUploadingInProgress=value},service.getImageUploadingInProgress=function(){return serviceMediaImages.imageUploadingInProgress},service.setSelectedImage=function(item){serviceMediaImages.selectedImage=item},service.getSelectedImage=function(){return serviceMediaImages.selectedImage},service.setTriggerChange=function(triggerChange){serviceMediaImages.triggerChange=triggerChange},service.getTriggerChange=function(){return serviceMediaImages.triggerChange},service.setImageItems=function(items,transform){angular.isDefined(transform)||(transform=!0),transform&&angular.forEach(items,function(value,key){items[key][TmMediaService.typeOverview()]=!1,angular.forEach(items[key].assignedTo,function(aValue){aValue===TmMediaService.typeOverview()&&(items[key][TmMediaService.typeOverview()]=!0)}),null===items[key].orderType&&(items[key].orderType={master:0});var orderOverview=0;angular.isDefined(items[key].orderType)&&angular.isDefined(items[key].orderType[TmMediaService.typeOverview()])&&(orderOverview=items[key].orderType[TmMediaService.typeOverview()]),items[key].orderType={master:orderOverview},angular.isDefined(items[key]._id)&&(items[key].id=items[key]._id),delete items[key].assignedTo,delete items[key]._id}),serviceMediaImages.imageItems=items},service.getImageItems=function(){return serviceMediaImages.imageItems},service.getItemImage=function(defaultValue){angular.isUndefined(defaultValue)&&(defaultValue=0);var orderTypes={};return orderTypes[TmMediaService.typeOverview()]=defaultValue,{id:"",name:"",description:"",master:!0,orderType:orderTypes,url:""}},service.resetItem=function(item){return item.master=!0,item.name="",item.description="",item},service.formatImages=function(images){return angular.forEach(images,function(value,key){images[key]=service.formatImage(value)}),images},service.formatImage=function(image){return image.assignedTo=[],image.master&&image.assignedTo.push("master"),angular.isDefined(image.id)&&0===parseInt(image.id,10)&&delete image.id,delete image.master,delete image.order,image},service.setHasErrors=function(hasErrors){serviceMediaImages.hasErrors=hasErrors},service.getHasErrors=function(){return serviceMediaImages.hasErrors},service.setHighlighted=function(isHighlighted){serviceMediaImages.isHighlighted=isHighlighted},service.getHighlighted=function(){return serviceMediaImages.isHighlighted},service.coreId=function(coreId){serviceMediaImages.coreId=coreId},service.setType=function(type){serviceMediaImages.type=type},service.getType=function(){return serviceMediaImages.type},service.replaceByKey=function(key){var imageItems=[];angular.copy(service.getImageItems(),imageItems),angular.forEach(imageItems,function(itemValue,itemKey){itemValue.id===key&&(imageItems[itemKey]=service.getSelectedImage())}),service.setImageItems(imageItems)},service.setTriggerReset=function(triggerChange){serviceMediaImages.triggerChange=triggerChange},service.getTriggerReset=function(){return serviceMediaImages.triggerChange},service.setSubmitInProgress=function(submitInProgress){serviceMediaImages.submitInProgress=submitInProgress},service.getSubmitInProgress=function(){return serviceMediaImages.submitInProgress},service.setUploadedImagesCount=function(uploadedImagesCount){serviceMediaImages.uploadedImagesCount=uploadedImagesCount},service.getUploadedImagesCount=function(){return serviceMediaImages.uploadedImagesCount},service.getMaxImages=function(){return 48},service},angular.module("qsHub").service("TmMediaImagesService",["$resource","$q","$log","constants","TmMediaService",App.services.TmMediaImages])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaSocialMedias=function($scope,constants,TmProfileFactory,NotifierFactory,TmMediaSocialMediasService,TmMediaService,WatchService){this.devMode=constants.dev,TmMediaSocialMediasService.coreId=0,$scope.socialMediaItems=TmMediaSocialMediasService.socialMediaItems(),$scope.itemSocialMedia={},$scope.displayLocationDeletePopup=!0,$scope.type=$scope.socialMediaItems[0],TmMediaSocialMediasService.setType($scope.type),WatchService.create($scope,TmProfileFactory.getData,function(newValue){null!==newValue&&(TmMediaSocialMediasService.coreId=newValue.id,$scope.socialMediaItems=TmMediaSocialMediasService.processInput(newValue.socialMedia),TmMediaSocialMediasService.setSelectedSocialMedia(TmMediaSocialMediasService.flattenArray(newValue.socialMedia)))}),WatchService.create($scope,TmMediaSocialMediasService.getSocialMediaItems,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.socialMediaItems=newValue)}),WatchService.create($scope,TmMediaSocialMediasService.getChanges,function(newValue){angular.isDefined(newValue)&&($scope.socialMediaItems[$scope.type]=TmMediaSocialMediasService.flattenArray(newValue,!0))}),$scope.filter=function(type){return type},$scope.selectSocialMedia=function(type){$scope.type=type,TmMediaSocialMediasService.setType(type),TmMediaSocialMediasService.setTriggerChange(Math.random()),$scope.socialMediaItems[$scope.type].master||$scope.socialMediaItems[$scope.type].ug||$scope.socialMediaItems[$scope.type].pg||TmMediaSocialMediasService.setHighlighted(!0)},$scope.selectedItem=function(){return TmMediaSocialMediasService.getSelectedSocialMedia()},$scope.typeOverview=function(){return TmMediaService.typeOverview()},$scope.typeUndergraduate=function(){return TmMediaService.typeUndergraduate()},$scope.typePostgraduate=function(){return TmMediaService.typePostgraduate()}},angular.module("qsHub").controller("TmMediaSocialMediasController",["$scope","constants","TmProfileFactory","NotifierFactory","TmMediaSocialMediasService","TmMediaService","WatchService",App.controllers.TmMediaSocialMedias])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaSocialMediasSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TmProfileFactory,TmMediaSocialMediasService,WatchService,UrlService){var controller=this,alreadyInitialised=!1;$scope.hasErrors=!1,$scope.invalidFields=[],TmMediaSocialMediasService.displayTypesValid=!1,controller.onKeyUp=function($event,type,index){if(13!==$event.keyCode){var url=$event.target.value;url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),$scope.selectedSocialMedia[type][index].url=url)}},$scope.resetInvalidField=function(index){$scope.invalidFields[index]=!1},$scope.resetInvalidCheckbox=function(index){$scope.invalidCheckboxes[index]&&($scope.invalidCheckboxes[index]=!1)},controller.urlPattern=UrlService.getPattern(),$scope.saveSocialMediaForm=function(){$scope.invalidFields=[];var invalidItems=[],socialMediaItem=TmMediaSocialMediasService.formatSocialMedia(angular.copy($scope.selectedSocialMedia[$scope.type()]));if(angular.isArray(socialMediaItem)&&socialMediaItem.length>0&&void 0===(invalidItems=TmMediaSocialMediasService.socialMediaValidation(angular.copy($scope.selectedSocialMedia[$scope.type()])))&&(invalidItems=TmMediaSocialMediasService.socialMediaFormValidation($scope.forms.formSocialMedia)),TmMediaSocialMediasService.displayTypesValid=!1,TmMediaSocialMediasService.setHasErrors(!1),$scope.submitInProgress||!$scope.forms.formSocialMedia||!$scope.forms.formSocialMedia.$valid||invalidItems&&invalidItems.length>0)return $scope.hasErrors=!0,angular.forEach(invalidItems,function(item){item.invalid?$scope.invalidCheckboxes[item.index]=item.invalid||!1:item.invalidUrl&&($scope.invalidFields[item.index]=item.invalidUrl||!1)}),!1;$scope.hasErrors=!1,$scope.invalidFields=[],$scope.submitInProgress=!0;var actionName=$scope.isEditMode($scope.type())?"Updated":"Added";TmMediaSocialMediasService.saveSocialMedia(TmMediaSocialMediasService.coreId,socialMediaItem).then(function(success){$scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Social Media "+actionName+" ("+$scope.type()+")"),success&&($scope.selectedSocialMediaBeforeChanges=angular.copy($scope.selectedSocialMedia),TmMediaSocialMediasService.setChanges(socialMediaItem))})},$scope.clearSocialMediaForm=function(){$scope.selectedSocialMedia[$scope.type()][0].master=!0,$scope.selectedSocialMedia[$scope.type()][0].url="",$scope.invalidFields=[]},$scope.getSelectedSocialMedia=function(){return TmMediaSocialMediasService.getSelectedSocialMedia()},$scope.getSocialMediaItems=function(){return TmMediaSocialMediasService.getSocialMediaItems()},$scope.getHasErrors=function(){return TmMediaSocialMediasService.getHasErrors()},$scope.setHasErrors=function(value){TmMediaSocialMediasService.setHasErrors(value)},$scope.type=function(){return TmMediaSocialMediasService.getType()},$scope.setDisplayTypesValidation=function(value){TmMediaSocialMediasService.displayTypesValid=value},$scope.getDisplayTypesValidation=function(){return TmMediaSocialMediasService.displayTypesValid},$scope.isEditMode=function(type){return!(!$scope.selectedSocialMedia||!$scope.selectedSocialMedia[type])},controller.initWatches=function(){WatchService.create($scope,TmMediaSocialMediasService.getSelectedSocialMedia,function(selectedSocialMedia){selectedSocialMedia&&($scope.selectedSocialMediaBeforeChanges=selectedSocialMedia,$scope.selectedSocialMedia=angular.copy(selectedSocialMedia))}),WatchService.create($scope,TmMediaSocialMediasService.getTriggerChange,function(){angular.isDefined($scope.selectedSocialMediaBeforeChanges)&&($scope.selectedSocialMedia=angular.copy($scope.selectedSocialMediaBeforeChanges)),$scope.invalidFields=[]}),WatchService.create($scope,TmMediaSocialMediasService.getType,function(socialMediaType){socialMediaType&&(controller.selectedSocialMediaUrl=TmMediaSocialMediasService.getSelectedSocialMediaUrl(socialMediaType))}),WatchService.create($scope,TmMediaSocialMediasService.getHighlighted,function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TmMediaSocialMediasService.setHighlighted(!1),$scope.isHighlighted=!1},200))}),WatchService.create($scope,TmProfileFactory.getSelectedMediaSubTabId,function(tabId){3===tabId?$timeout(function(){TmMediaSocialMediasService.setHighlighted(!0)},200):$scope.invalidFields=[]})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmMediaSocialMediasSidebar",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TmProfileFactory","TmMediaSocialMediasService","WatchService","UrlService",App.controllers.TmMediaSocialMediasSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmMediaSocialMediasService=function($resource,$q,$log,constants,TmMediaService,UrlService){var service={},imageUrl="/images/media/media-social-media.png",socialMediaItems=["facebook","youtube","linkedin","twitter","other"];return service.getSocialMediaModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/social-media/:socialMediaId",null,{update:{method:"PATCH"}})},service.getInstitutionModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id",null,{update:{method:"PATCH"}})},service.saveSocialMedia=function(institutionId,socialMedia){return service.getSocialMediaModel().update({id:institutionId,socialMediaId:service.getType()},socialMedia).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setSelectedSocialMedia=function(item){service.selectedSocialMedia=item},service.getSelectedSocialMedia=function(){return service.selectedSocialMedia},service.setTriggerChange=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerChange=function(){return service.triggerChange},service.getSocialMediaItems=function(){return service.socialMediaItems},service.setSocialMediaItems=function(items){service.socialMediaItems=items},service.getItemSocialMedia=function(){return{id:"",name:"",description:"",master:!0,url:"",imageUrl:imageUrl}},service.getSelectedSocialMediaUrl=function(type){switch(type){case"facebook":return"https://www.facebook.com/universityrankings";case"youtube":return"https://www.youtube.com/topuniversities";case"linkedin":return"https://www.linkedin.com/company/qs";case"twitter":return"https://twitter.com/worlduniranking";default:return"http://www.yourwebsite.com"}},service.resetItem=function(item){return item.master=!0,item.url="",item.name="",item.imageUrl=imageUrl,item},service.formatSocialMedias=function(socialMedias){return angular.forEach(socialMedias,function(value,key){socialMedias[key]=service.formatSocialMedia(value)}),socialMedias},service.socialMediaValidation=function(socialMediaItem){var invalidItems=[];if(angular.forEach(socialMediaItem,function(item,key){""===item.url||item.master?""===item.url||item.master?""!==item.url&&void 0!==item.url||!item.master?!item.url.match(UrlService.getPattern())&&(item.master||item.pg||item.ug)&&invalidItems.push({invalidUrl:!0,index:key}):invalidItems.push({invalidUrl:!0,index:key}):invalidItems.push({invalid:!0,index:key}):socialMediaItem[key].url=""}),invalidItems.length>0)return invalidItems},service.socialMediaFormValidation=function(socialMediaItem){var invalidItems=[];return angular.isDefined(socialMediaItem)&&angular.forEach(socialMediaItem.$error.url,function(error){var key=error.$name.charAt(error.$name.length-1);invalidItems.push({invalidUrl:!0,index:key})}),invalidItems},service.formatSocialMedia=function(socialMediaItem){var output=[];return angular.forEach(socialMediaItem,function(item,key){if(item.master&&""!==item.url){var tmpOutput={};tmpOutput.url=item.url,tmpOutput.assignedTo=[],item.master&&tmpOutput.assignedTo.push("master"),output.push(tmpOutput)}}),output},service.setChanges=function(changes){service.changes=changes},service.getChanges=function(){return service.changes},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.setHighlighted=function(isHighlighted){service.isHighlighted=isHighlighted},service.getHighlighted=function(){return service.isHighlighted},service.coreId=function(coreId){service.coreId=coreId},service.setType=function(type){service.type=type},service.getType=function(){return service.type},service.socialMediaItems=function(){return socialMediaItems},service.getSocialMediaObject=function(){var socialMedia={};return angular.forEach(socialMediaItems,function(mediaType){socialMedia[mediaType]={},angular.forEach(TmMediaService.getTypes(),function(profileType){socialMedia[mediaType][profileType]=!1})}),socialMedia},service.assignData=function(inputData,socialMedia){return angular.forEach(inputData,function(mediaType,mediaTypeValue){angular.forEach(mediaType,function(){socialMedia[mediaTypeValue][TmMediaService.typeOverview()]=!0})}),socialMedia},service.processInput=function(inputData){var socialMedia=service.getSocialMediaObject();return socialMedia=service.assignData(inputData,socialMedia)},service.flattenArray=function(inputData,forType){angular.isUndefined(forType)&&(forType=!1);var typeMaster=TmMediaService.typeOverview();if(forType){var outputData={};angular.forEach(inputData,function(inputDataValue,inputDataKey){angular.isDefined(inputDataValue.assignedTo)&&angular.forEach(inputData[inputDataKey].assignedTo,function(assignedType){assignedType===typeMaster&&(outputData[typeMaster]=!0)})}),inputData=outputData}else angular.forEach(socialMediaItems,function(mediaType){angular.isDefined(inputData)&&angular.isDefined(inputData[mediaType])?(angular.forEach(inputData[mediaType],function(objectData,dataKey){inputData[mediaType][dataKey][typeMaster]=!0,inputData[mediaType][dataKey].display=!0,angular.isDefined(inputData[mediaType][dataKey].assignedTo)&&(angular.forEach(inputData[mediaType][dataKey].assignedTo,function(assignedType){assignedType===typeMaster&&(inputData[mediaType][dataKey][typeMaster]=!0)}),delete inputData[mediaType][dataKey].assignedTo)}),0===inputData[mediaType].length&&(inputData[mediaType]=[],inputData[mediaType].push(service.getEmpty(!0,!0)))):((angular.isUndefined(inputData)||angular.isArray(inputData))&&(inputData={}),inputData[mediaType]=[],inputData[mediaType].push(service.getEmpty(!0,!0)))});return inputData},service.getEmpty=function(initialValue,displayValue){return{url:"",display:displayValue,master:initialValue}},service.resetDataForType=function(data,type){return angular.forEach(data,function(dataValue,dataKey){dataKey===type&&angular.forEach(data[dataKey],function(dataSubValue,dataSubKey){data[dataKey][dataSubKey].master=!1,data[dataKey][dataSubKey].url=""})}),data},service.assignNewData=function(values,type,currentlySelected){var outputValues=angular.copy(values);angular.forEach(values,function(objectData,valueKey){angular.isDefined(objectData.assignedTo)&&(outputValues[valueKey][TmMediaService.typeOverview()]=!1,outputValues[valueKey][TmMediaService.typeUndergraduate()]=!1,outputValues[valueKey][TmMediaService.typePostgraduate()]=!1,angular.forEach(objectData.assignedTo,function(assignedType){outputValues[valueKey][assignedType]=!0}),delete outputValues[valueKey].assignedTo)});var copySelected=angular.copy(currentlySelected);return angular.forEach(copySelected,function(mediaType,mediaTypeKey){mediaTypeKey===type&&(copySelected[mediaTypeKey]=outputValues)}),copySelected},service.applyUpdate=function(type,values){var currentlySelected=service.getSelectedSocialMedia();return service.assignNewData(values,type,currentlySelected)},service},angular.module("qsHub").service("TmMediaSocialMediasService",["$resource","$q","$log","constants","TmMediaService","UrlService",App.services.TmMediaSocialMediasService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaBrochures=function($scope,constants,TmProfileFactory,NotifierFactory,TmMediaBrochuresService,TmMediaService,ModalService,$filter,orderBy,WatchService){var controller=this;controller.devMode=constants.dev,TmMediaBrochuresService.coreId=0,$scope.brochureItems=[],$scope.itemBrochure={},$scope.displayLocationDeletePopup=!0,$scope.type=TmMediaService.typeOverview(),TmMediaBrochuresService.setType(TmMediaService.typeOverview()),WatchService.create($scope,TmProfileFactory.getData,function(newValue){null!==newValue&&(TmMediaBrochuresService.setSelectedBrochure(TmMediaBrochuresService.getItemBrochure()),angular.copy(newValue.brochures,$scope.brochureItems),TmMediaBrochuresService.coreId=newValue.id,TmMediaBrochuresService.setBrochureItems($scope.brochureItems),$scope.filteredBrochureItems=$filter("filter")($scope.brochureItems,{master:!0}),$scope.filteredBrochureItems=orderBy($scope.filteredBrochureItems,"orderType."+$scope.type,!1))}),WatchService.create($scope,TmMediaBrochuresService.getBrochureItems,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.brochureItems=newValue)}),WatchService.create($scope,TmMediaBrochuresService.getTriggerChange,function(){angular.isDefined($scope.selectedItemId())&&$scope.selectedItemId().length>0&&TmMediaBrochuresService.replaceByKey($scope.selectedItemId());TmMediaBrochuresService.getSelectedBrochure();$scope.filter("master")}),$scope.sortableOptions={disabled:!1,"ui-floating":!1,start:function(){controller.initialList=[],angular.copy($scope.filteredBrochureItems,controller.initialList)},update:function(e,ui){!0!==TmMediaService.validateTypes($scope.brochureItems)&&ui.item.sortable.cancel()},stop:function(){var validateItems=TmMediaService.validateTypes($scope.brochureItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in brochure list"),TmMediaBrochuresService.setSelectedBrochure(validateItems),TmMediaBrochuresService.displayTypesValid=!0,!1;for(var assignedOrder=1,index=0;index<$scope.filteredBrochureItems.length;index++)$scope.filteredBrochureItems[index][$scope.type]&&($scope.filteredBrochureItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.sortableOptions.disabled=!1,TmMediaBrochuresService.saveOrder(TmMediaBrochuresService.coreId,$scope.brochureItems).then(function(success){NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Brochure Order Save"),TmMediaBrochuresService.setSelectedBrochure(TmMediaBrochuresService.getItemBrochure())}).finally(function(){$scope.sortableOptions.disabled=!1})}},$scope.filter=function(type){var validateItems=TmMediaService.validateTypes($scope.brochureItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in brochure list"),TmMediaBrochuresService.setSelectedBrochure(validateItems),TmMediaBrochuresService.displayTypesValid=!0,!1;$scope.type=type;var params={};params[type]=!0,$scope.filteredBrochureItems=$filter("filter")($scope.brochureItems,params),$scope.filteredBrochureItems=orderBy($scope.filteredBrochureItems,"orderType."+type,!1)},$scope.selectBrochure=function(item){item=angular.copy(item);var validateItems=TmMediaService.validateTypes($scope.brochureItems);if(!0!==validateItems)return NotifierFactory.show("error","Failure!","Invalid items in brochure list"),TmMediaBrochuresService.setSelectedBrochure(validateItems),TmMediaBrochuresService.displayTypesValid=!0,!1;TmMediaBrochuresService.setHasErrors(!1),TmMediaBrochuresService.displayTypesValid=!1,$scope.itemBrochure=TmMediaBrochuresService.getItemBrochure(),angular.isDefined(item)?TmMediaBrochuresService.setSelectedBrochure(item):(TmMediaBrochuresService.setHasErrors(!1),TmMediaBrochuresService.setHighlighted(!0),TmMediaBrochuresService.setSelectedBrochure($scope.itemBrochure)),TmMediaBrochuresService.setTriggerReset(Math.random())},$scope.selectedItem=function(){return TmMediaBrochuresService.getSelectedBrochure()},$scope.selectedItemId=function(){return TmMediaBrochuresService.getSelectedBrochure().id},$scope.deleteBrochure=function(item){var modalOptions={closeButtonText:"No",actionButtonText:"Yes",headerText:"Delete Brochure"+(angular.isDefined(item.name)&&null!==item.name?": "+item.name:"")+" ?",bodyText:"Are you sure you wish to delete this brochure?"};ModalService.show({},modalOptions).then(function(result){TmMediaBrochuresService.deleteBrochure(TmMediaBrochuresService.coreId,item).then(function(success){if($scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Success!":"Failure!","Delete Brochure"),success){TmMediaBrochuresService.setSelectedBrochure(TmMediaBrochuresService.getItemBrochure()),$scope.brochureItems.splice(TmMediaService.objectSearch($scope.brochureItems,item.id),1),$scope.filteredBrochureItems.splice(TmMediaService.objectSearch($scope.filteredBrochureItems,item.id),1);for(var assignedOrder=1,index=0;index<$scope.filteredBrochureItems.length;index++)$scope.filteredBrochureItems[index][$scope.type]&&($scope.filteredBrochureItems[index].orderType[$scope.type]=assignedOrder,assignedOrder++);$scope.filteredBrochureItems=orderBy($scope.filteredBrochureItems,"orderType."+$scope.type,!1)}})})},$scope.typeOverview=function(){return TmMediaService.typeOverview()}},angular.module("qsHub").controller("TmMediaBrochuresController",["$scope","constants","TmProfileFactory","NotifierFactory","TmMediaBrochuresService","TmMediaService","ModalService","$filter","orderByFilter","WatchService",App.controllers.TmMediaBrochures])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.TmMediaBrochuresSidebar=function($scope,$resource,$location,$timeout,constants,NotifierFactory,TmProfileFactory,TmMediaBrochuresService,TmMediaService,WatchService,UrlService,ObjectService){var controller=this,alreadyInitialised=!1;$scope.hasErrors=!0,TmMediaBrochuresService.displayTypesValid=!1,TmMediaBrochuresService.setHasErrors(!1),controller.onKeyUp=function($event){if(13!==$event.keyCode){var url=$event.target.value,variableName=$event.target.getAttribute("ng-model");url&&url.length>5&&(0!==url.indexOf("http")||-1===url.indexOf("http"))&&(url=UrlService.prependHttp(url),variableName&&ObjectService.set($scope,variableName,url))}},controller.urlPattern=UrlService.getPattern(),$scope.saveBrochureForm=function(item){var brochureItem=angular.copy(item);TmMediaBrochuresService.displayTypesValid=!1,TmMediaBrochuresService.setHasErrors(!1),$scope.isInvalidTitle=!1,$scope.isInvalidUrl=!1;var actionName="Added";return brochureItem.id.length>0&&(actionName="Updated"),TmMediaService.isValidType(item)||(TmMediaBrochuresService.displayTypesValid=!0),angular.isDefined(item.name)&&angular.isDefined(item.name)&&item.name.length>0||($scope.isInvalidTitle=!0),angular.isDefined(item.url)&&angular.isDefined(item.url)&&item.url.length>0||($scope.isInvalidUrl=!0),$scope.isInvalidTitle||$scope.isInvalidUrl||TmMediaBrochuresService.displayTypesValid?($scope.setHasErrors(!0),!1):item.url.match(controller.urlPattern)?!$scope.submitInProgress&&$scope.forms.formBrochure&&$scope.forms.formBrochure.$valid?($scope.submitInProgress=!0,void TmMediaBrochuresService.saveBrochure(TmMediaBrochuresService.coreId,brochureItem).then(function(success){$scope.submitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Successfully!":"Failure!","Brochure "+actionName),success&&(0===brochureItem.id.length&&(item.id=success,TmMediaBrochuresService.getBrochureItems().unshift(item),TmMediaBrochuresService.setSelectedBrochure(item),$scope.selectedBrochure=angular.copy(TmMediaBrochuresService.getSelectedBrochure())),TmMediaBrochuresService.setSelectedBrochure(item),TmMediaBrochuresService.setHasErrors(!1),$scope.selectedBrochureBeforeChanges=item),TmMediaBrochuresService.setTriggerChange(Math.random())})):(NotifierFactory.show("error","Error: Please fill in all required fields",actionName+" Brochure"),!1):($scope.isInvalidUrl=!0,$scope.setHasErrors(!0),!1)},$scope.clearBrochureForm=function(item){angular.isDefined(item)?$scope.itemBrochure=item:$scope.itemBrochure=TmMediaBrochuresService.getItemBrochure(),$scope.itemBrochure=TmMediaBrochuresService.resetItem($scope.itemBrochure),TmMediaBrochuresService.setSelectedBrochure($scope.itemBrochure),$scope.setDisplayTypesValidation(!1),delete $scope.isInvalidTitle,delete $scope.isInvalidUrl},$scope.getSelectedBrochure=function(){return TmMediaBrochuresService.getSelectedBrochure()},$scope.getBrochureItems=function(){return TmMediaBrochuresService.getBrochureItems()},$scope.getHasErrors=function(){return TmMediaBrochuresService.getHasErrors()},$scope.setHasErrors=function(value){TmMediaBrochuresService.setHasErrors(value)},$scope.setIsInvalidTitle=function(value){$scope.isInvalidTitle=value},$scope.setIsInvalidUrl=function(value){$scope.isInvalidUrl=value},$scope.type=function(){return TmMediaBrochuresService.getType()},$scope.setDisplayTypesValidation=function(value){TmMediaBrochuresService.displayTypesValid=value},$scope.getDisplayTypesValidation=function(){return TmMediaBrochuresService.displayTypesValid},$scope.isEditMode=function(){return!(!$scope.selectedBrochure||!$scope.selectedBrochure.id)},controller.initWatches=function(){WatchService.create($scope,TmMediaBrochuresService.getSelectedBrochure,function(selectedBrochure){$scope.isInvalidUrl=!1,$scope.isInvalidTitle=!1,$scope.selectedBrochureBeforeChanges=angular.copy(selectedBrochure),$scope.selectedBrochure=selectedBrochure}),WatchService.create($scope,TmMediaBrochuresService.getHasErrors,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.hasErrors=newValue)}),WatchService.create($scope,TmMediaBrochuresService.getTriggerReset,function(newValue,oldValue){angular.equals(oldValue,newValue)||($scope.selectedBrochure=angular.copy($scope.selectedBrochureBeforeChanges))}),WatchService.create($scope,TmMediaBrochuresService.getHighlighted,function(newValue){newValue&&($scope.isHighlighted=newValue,$timeout(function(){TmMediaBrochuresService.setHighlighted(!1),$scope.isHighlighted=!1},200))}),WatchService.create($scope,TmProfileFactory.getSelectedMediaSubTabId,function(tabId){4===tabId?$timeout(function(){TmMediaBrochuresService.setHighlighted(!0)},200):(delete $scope.isInvalidTitle,delete $scope.isInvalidUrl,delete TmMediaBrochuresService.displayTypesValid)})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isMediaTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmMediaBrochuresSidebarController",["$scope","$resource","$location","$timeout","constants","NotifierFactory","TmProfileFactory","TmMediaBrochuresService","TmMediaService","WatchService","UrlService","ObjectService",App.controllers.TmMediaBrochuresSidebar])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmMediaBrochuresService=function($resource,$q,$log,constants,TmMediaService,TmMediaVideosService){var service={};return service.triggerChange=0,service.getBrochureModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/brochure/:brochureId",null,{update:{method:"PATCH"}})},service.getBrochuresOrderingModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/brochuresOrder",null,{update:{method:"PATCH"}})},service.saveBrochure=function(institutionId,brochure){var brochureModel=service.getBrochureModel(),brochureSubmit=service.formatBrochure(brochure);return angular.isDefined(brochureSubmit.id)&&brochureSubmit.id.length>0?brochureModel.update({id:institutionId,brochureId:brochure.id},{name:brochureSubmit.name,url:brochureSubmit.url,orderType:brochureSubmit.orderType,assignedTo:brochureSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1}):brochureModel.save({id:institutionId,brochureId:brochureSubmit.id},{name:brochureSubmit.name,url:brochureSubmit.url,orderType:brochureSubmit.orderType,assignedTo:brochureSubmit.assignedTo}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.insertedId},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.saveOrder=function(id,brochures){return service.getBrochuresOrderingModel().update({id:id},{brochures:TmMediaVideosService.formatForOrdering(brochures)}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deleteBrochure=function(institutionId,brochure){return service.setHasErrors(!1),service.getBrochureModel().delete({id:institutionId,brochureId:brochure.id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setSelectedBrochure=function(item){service.selectedBrochure=item},service.replaceByKey=function(key){angular.forEach(service.getBrochureItems(),function(itemValue,itemKey){itemValue.id===key&&(service.getBrochureItems()[itemKey]=service.getSelectedBrochure())})},service.getSelectedBrochure=function(){return service.selectedBrochure},service.setTriggerChange=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerChange=function(){return service.triggerChange},service.setTriggerReset=function(triggerChange){service.triggerChange=triggerChange},service.getTriggerReset=function(){return service.triggerChange},service.setBrochureItems=function(items,transform){if(angular.isDefined(transform)||(transform=!0),transform){var typeMaster=TmMediaService.typeOverview();angular.forEach(items,function(value,key){items[key][typeMaster]=!0,angular.forEach(items[key].assignedTo,function(aValue){aValue===typeMaster&&(items[key][typeMaster]=!0)}),null===items[key].orderType&&(items[key].orderType={master:0});var orderOverview=0;angular.isDefined(items[key].orderType)&&angular.isDefined(items[key].orderType[typeMaster])&&(orderOverview=items[key].orderType[typeMaster]),items[key].orderType={master:orderOverview},angular.isDefined(items[key]._id)&&(items[key].id=items[key]._id),delete items[key].assignedTo,delete items[key]._id})}service.brochureItems=items},service.getBrochureItems=function(){return service.brochureItems},service.getItemBrochure=function(){var orderTypes={};return orderTypes[TmMediaService.typeOverview()]=0,{id:"",name:"",description:"",master:!0,orderType:orderTypes,url:"",imageUrl:null}},service.resetItem=function(item){return item.master=!0,item.url="",item.name="",item.imageUrl=null,item},service.formatBrochures=function(brochures){return angular.forEach(brochures,function(value,key){brochures[key]=service.formatBrochure(value)}),brochures},service.formatBrochure=function(brochure){return brochure.assignedTo=[],brochure.master&&brochure.assignedTo.push("master"),angular.isDefined(brochure.id)&&0===parseInt(brochure.id,10)&&delete brochure.id,delete brochure.master,delete brochure.order,brochure},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.setHighlighted=function(isHighlighted){service.isHighlighted=isHighlighted},service.getHighlighted=function(){return service.isHighlighted},service.coreId=function(coreId){service.coreId=coreId},service.setType=function(type){service.type=type},service.getType=function(){return service.type},service},angular.module("qsHub").service("TmMediaBrochuresService",["$resource","$q","$log","constants","TmMediaService","TmMediaVideosService",App.services.TmMediaBrochuresService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfilePublish=function($scope,constants,PublishService,InstitutionFactory,TuProfileFactory,TuProfileHistoryLogFactory,UserFactory,WebSocketsService,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.subscribedTo=[],$scope.institutionData={},$scope.sections={},$scope.institutionId=null,$scope.handlePublish=function(section){section.publishDisabled=!0,section.status=constants.publishStatus.pending,section.statusMessage="",PublishService.publish($scope.institutionId,section.type).then(function(response){controller.publishCallback(section,response)})},controller.publishCallback=function(section,response){if(!response||!angular.isDefined(response.feedId))return section.status=constants.publishStatus.failure,!1;PublishService.setStatus(constants.publishStatus.pending),section.feedId=response.feedId,section.status=constants.publishStatus.pending},controller.publishSubscribe=function(){angular.forEach($scope.sections,function(section){var subscribeType=$scope.institutionId+section.type;-1===controller.subscribedTo.indexOf(subscribeType)&&(controller.subscribedTo.push(subscribeType),WebSocketsService.subscribe(subscribeType,"PublishStatus"+subscribeType,function(response){controller.sectionPublishStatusCallback(section,response)}))})},controller.sectionPublishStatusCallback=function(section,response){section.publishDisabled=!0;var status=response&&response.status||constants.publishStatus.failure;switch(section.status=status,status){case constants.publishStatus.failure:section.publishDisabled=!1,section.statusMessage=PublishService.convertErrorMessage(response.statusMessage,UserFactory.isClient()),TuProfileHistoryLogFactory.setReload(!0);break;case constants.publishStatus.success:section.publishDisabled=!1,section.statusMessage=response.statusMessage,section.viewDisabled=!response.nodeId,section.url=constants.drupal.tu.url+"/node/"+response.nodeId,TuProfileHistoryLogFactory.setReload(!0),"master"===section.type&&controller.updateStarsSection(response)}},controller.updateStarsSection=function(response){for(var i=0;i<$scope.sections.length;i++)"stars"===$scope.sections[i].type&&($scope.sections[i].viewDisabled=!response.nodeId,$scope.sections[i].url=constants.drupal.tu.url+"/node/"+response.nodeId)},controller.publishStatusCallback=function(publishStatus){angular.forEach($scope.sections,function(section){section.publishDisabled=!0,angular.isDefined(publishStatus[section.type])&&(section.status=publishStatus[section.type].status,0!==section.status.length&&section.status!==constants.publishStatus.success&&section.status!==constants.publishStatus.failure||(section.publishDisabled=!1),section.statusMessage=PublishService.convertErrorMessage(publishStatus[section.type].message,UserFactory.isClient()))})},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getData,function(newValue){newValue&&($scope.institutionData=newValue,$scope.institutionId=newValue.id,$scope.sections=PublishService.getSections(!UserFactory.isClient(),$scope.institutionData),controller.publishSubscribe($scope.sections),PublishService.getPublishStatus($scope.institutionId).then(function(response){controller.publishStatusCallback(response)}))})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isPublishTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuProfilePublishController",["$scope","constants","TuProfilePublishService","InstitutionFactory","TuProfileFactory","TuProfileHistoryLogFactory","UserFactory","WebSocketsService","WatchService",App.controllers.tuProfilePublish])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfilePublishLogs=function($scope,PublishService,InstitutionFactory,TuProfileFactory,TuProfileHistoryLogFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.updatePublishLogs=function(){PublishService.getPublishLogs(InstitutionFactory.getId()).then(function(response){$scope.publishLogs=response})},$scope.fetchingPublishLog=function(){return!1},controller.getPublishStatusMapped=function(status){return PublishService.getPublishStatusMapped(status)},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getData,function(newValue){newValue&&controller.updatePublishLogs()}),WatchService.create($scope,TuProfileHistoryLogFactory.isReloadRequired,function(newValue){newValue&&(TuProfileHistoryLogFactory.setReload(!1),controller.updatePublishLogs())}),WatchService.create($scope,PublishService.getStatus,function(value){value&&controller.updatePublishLogs()})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isPublishTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuProfilePublishLogsController",["$scope","TuProfilePublishService","InstitutionFactory","TuProfileFactory","TuProfileHistoryLogFactory","WatchService",App.controllers.tuProfilePublishLogs])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tuProfileResubscribe=function($scope,TuProfileResubscribeService,InstitutionFactory,TuProfileFactory,UserFactory,NotifierFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.profileId="",controller.expiresDate="",controller.isAdvanced=!1,controller.displayResubscribeForm=!1,controller.inProgress=!1,controller.formData={comments:"",name:"",email:"",to:"tusupport@qs.com",subject:"I would like more information about Resubscribing an Advance Profile"},controller.initFormData=function(){controller.formData.comments=""},controller.resubscribeClick=function(){controller.initFormData(),controller.displayResubscribeForm=!controller.displayResubscribeForm},controller.cancelClick=function(){controller.initFormData(),controller.resubscribeClick()},controller.createCallback=function(response){response&&(controller.initFormData(),controller.resubscribeClick()),controller.inProgress=!1,NotifierFactory.show(response?"success":"error",response?"Request sent successfully!":"Request sending failed!","Resubscribe Request")},controller.submitClick=function(){controller.inProgress=!0,TuProfileResubscribeService.create(controller.profileId,controller.formData.comments,controller.formData.name,controller.formData.email).then(controller.createCallback)},controller.showResubscribeButton=function(){if(controller.expiresDate){var expiresDate,todayDate,daysLeft,leftMs;return expiresDate=new Date(parseInt(controller.expiresDate,10)),todayDate=new Date,leftMs=expiresDate.getTime()-todayDate.getTime(),daysLeft=Math.ceil(Math.abs(leftMs))/864e5,leftMs>0&&daysLeft<31}return!1},controller.initWatches=function(){WatchService.create($scope,TuProfileFactory.getData,function(newValue){controller.profileId=newValue&&newValue.id?newValue.id:""}),WatchService.create($scope,InstitutionFactory.getData,function(newValue){newValue&&(controller.isAdvanced=InstitutionFactory.isTuAdvanced(),controller.expiresDate=angular.isDefined(newValue.subscriptions.tu)?newValue.subscriptions.tu.endDate:"",controller.formData.name=UserFactory.getFullName(),controller.formData.email=UserFactory.getUserName())})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TuProfileFactory.isPublishTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TuProfileResubscribeController",["$scope","TuProfileResubscribeService","InstitutionFactory","TuProfileFactory","UserFactory","NotifierFactory","WatchService",App.controllers.tuProfileResubscribe])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfileResubscribeService=function($resource,$log,constants){var service={deferred:{}};return service.getResubscribeModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-profile/:id/resubscribe-request")},service.create=function(profileId,comments,fromName,fromEmail){return comments=void 0===comments?"":comments,fromName=void 0===fromName?"":fromName,fromEmail=void 0===fromEmail?"":fromEmail,service.getResubscribeModel().save({id:profileId},{comments:comments,name:fromName,email:fromEmail}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("TuProfileResubscribeService",["$resource","$log","constants",App.services.TuProfileResubscribeService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TuProfilePublishService=function($resource,$q,$log,constants){var service={deferred:{},isStatus:null,publishStatus:{failure:"failure",success:"success",progress:"progress",pending:"pending"}};return service.getPublishModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-feed/publish/:id/:type")},service.getPublishStatusModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-feed/publish-status/:id")},service.getLogsModel=function(){return $resource(constants.api.institutions.url+"/v1/tu-feed/publish-logs/:id?sorting[createdAt]=desc&fieldName=type,status,createdAt,createdByFullName")},service.getNodeId=function(institutionData,nodeType){return institutionData&&institutionData.nids&&institutionData.nids[nodeType]?institutionData.nids[nodeType]:null},service.getSections=function(qsUser,institutionData){qsUser=qsUser||!1;var tuUrl=constants.drupal.tu.url,masterNid=service.getNodeId(institutionData,"master"),ugNid=service.getNodeId(institutionData,"ug"),pgNid=service.getNodeId(institutionData,"pg"),institutionCoreId=(service.getNodeId(institutionData,"status"),institutionData.coreId),sections=[{type:"master",name:"Overview",url:tuUrl+"/node/"+masterNid,feedPreviewUrl:constants.api.institutions.url+"/v1/tu-feed/core-id/"+institutionCoreId+"/master",viewDisabled:!masterNid},{type:"ug",name:"Undergraduate",url:tuUrl+"/node/"+ugNid,feedPreviewUrl:constants.api.institutions.url+"/v1/tu-feed/core-id/"+institutionCoreId+"/ug",viewDisabled:!ugNid},{type:"pg",name:"Postgraduate",url:tuUrl+"/node/"+pgNid,feedPreviewUrl:constants.api.institutions.url+"/v1/tu-feed/core-id/"+institutionCoreId+"/pg",viewDisabled:!pgNid}];return qsUser&&sections.push({type:"stars",name:"QS Stars",publishDisabled:!1,viewDisabled:!masterNid,url:tuUrl+"/node/"+masterNid}),sections},service.publish=function(institutionId,profileType){if(!institutionId||!profileType){var deferred=$q.defer();return deferred.resolve(!1),deferred.promise}return service.getPublishModel().get({id:institutionId,type:profileType}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.toJSON()},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getPublishLogs=function(institutionId){if(!institutionId){var deferred=$q.defer();return deferred.resolve(!1),deferred.promise}return service.getLogsModel().get({id:institutionId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getPublishStatus=function(institutionId){return service.getPublishStatusModel().get({id:institutionId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.convertErrorMessage=function(errorMessage,isClient){if(!isClient)return errorMessage;if(-1!==errorMessage.indexOf("Could not resolve host")||-1!==errorMessage.indexOf("Gateway Time-out")||-1!==errorMessage.indexOf("Connection timed out"))return"Unable to publish to Topuniversities.com due to technical reasons. Please try again later.";switch(errorMessage){case"":case null:return null;case"Missing basic overview":case"Missing advanced overview":return"Missing overview";default:return"Please contact tuonlinesupport@qs.com"}},service.getPublishStatusMapped=function(status){switch(status){case service.publishStatus.failure:return"Failed";case service.publishStatus.progress:return"Progress";case service.publishStatus.pending:return"Pending";default:return"Published"}},service.setStatus=function(status){service.isStatus=status},service.getStatus=function(){return service.isStatus},service},angular.module("qsHub").service("TuProfilePublishService",["$resource","$q","$log","constants",App.services.TuProfilePublishService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmProfile=function($scope,$rootScope,$location,$state,constants,TmProfileService,NotifierFactory,TmProfileFactory,InstitutionFactory,UserFactory,TuProfileFactory,TuProfileService,TmProfileProgramsService,TmProfileOverviewService,TmProfileOverviewHistoryLogFactory,WatchService){var controller=this;controller.devMode=constants.dev,controller.showFaqHistory=!1,controller.showOverviewHistory=!1,controller.isLoadMoreHistoryLogsInProgress=!1,controller.upgradeInProgress=!1,controller.maxFaqItems=TmProfileOverviewService.maxFaqItems,$scope.tmIsAdvanced=!1,$scope.upgradeEmailsTo=constants.emails.upgradeTm,$scope.activeTab=TmProfileFactory.getOverviewTabId(),$scope.institutionDataLoaded=!1,$scope.profileDataLoaded=!1,$scope.tmProfile={},$scope.upgradeRequest={},$scope.upgradeProgramRequest={},$scope.deleteRequest={},$scope.tmProfileBeforeChanges={},$scope.forms={},$scope.showUpgradeForm=!1,$scope.showHistory=!1,$scope.showDeleteForm=!1,$scope.showProgramSubscribeForm=!1,controller.loadInProgress=function(){return!$scope.institutionDataLoaded||!$scope.profileDataLoaded},controller.loadTmProfileData=function(coreId){TmProfileService.getTmProfileData(coreId).then(function(data){$scope.profileDataLoaded=!0,$scope.tmProfile=data,TmProfileFactory.setData(data),$scope.tmProfileBeforeChanges=angular.copy(data),$scope.$broadcast(constants.events.institutionTmProfileChanges)})},controller.isRightSidePanelActive=function(){return TmProfileFactory.isPublishTabSelected()?(TmProfileFactory.setUpgradeFormVisibility(!1),!0):!(!$scope.showUpgradeForm&&!$scope.showUpgradeProgramRequest||!(TmProfileFactory.isOverviewTabSelected()||TmProfileFactory.isProgramsTabSelected()||TmProfileFactory.isMediaTabSelected()))||(TmProfileFactory.isOverviewTabSelected()&&controller.showOverviewHistory?(TmProfileFactory.setUpgradeFormVisibility(!1),!0):TmProfileFactory.isOverviewTabSelected()&&controller.showFaqHistory?(TmProfileFactory.setUpgradeFormVisibility(!1),!0):!(!TmProfileFactory.isProgramsTabSelected()||!$scope.showProgramEditForm&&!$scope.showProgramAddForm)||(TmProfileFactory.isMediaTabSelected()?(TmProfileFactory.setUpgradeFormVisibility(!1),!0):!(!TmProfileFactory.isProgramsTabSelected()||!$scope.showDeleteForm)))},$scope.isMediaTabActive=function(){return TmProfileFactory.isMediaTabSelected()},$scope.isPublishTabActive=function(){return TmProfileFactory.isPublishTabSelected()},controller.toggleUpgradeForm=function(){TmProfileFactory.setUpgradeFormVisibility(),TmProfileFactory.isUpgradeFormVisible($scope.activeTab)&&TmProfileOverviewHistoryLogFactory.setOverviewVisible(!1)},controller.toggleUpgradeProgramForm=function(){TmProfileFactory.setProgramUpgradeFormVisibility()},controller.handleCloseDeleteForm=function(){TmProfileFactory.setProgramEditFormVisibility(!0)},controller.handleSendDeleteRequestClick=function(){controller.deleteRequestInProgress=!0,TmProfileProgramsService.deleteRequest($scope.deleteRequest.program.id,$scope.deleteRequest.comments).then(controller.deleteCallback)},controller.deleteCallback=function(response){controller.deleteRequestInProgress=!1,NotifierFactory.show(response?"success":"error",response?"Deleted successfully!":"Delete failed!","Delete Program"),response&&(TmProfileFactory.setProgramEditFormVisibility(!1),TmProfileFactory.announceProgramDeletion($scope.deleteRequest.program.id))},controller.handleUpgradeClick=function(){if(!($scope.forms.upgradeProfile&&$scope.forms.upgradeProfile.$valid&&$scope.tmProfile.id&&$scope.upgradeRequest))return!1;controller.upgradeInProgress=!0;var comments=$scope.upgradeRequest.comments||null;TmProfileService.sendUpgradeRequest($scope.tmProfile.id,comments).then(function(success){controller.upgradeInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Inquiry sent successfully!":"Processing inquiry failed!","Upgrade To Advanced"),success&&($scope.upgradeRequest.comments=null,controller.toggleUpgradeForm())})},controller.handleProgramUpgradeRequestClick=function(){TmProfileProgramsService.upgrade(TmProfileFactory.getProgram().id,$scope.upgradeRequest.comments).then(controller.upgradeCallback)},controller.upgradeCallback=function(success){NotifierFactory.show(success?"success":"error",success?"Upgrade request successfully sent!":"Upgrade request failed!","Basic Program"),TmProfileFactory.setProgramUpgradeFormVisibility(!1)},controller.handleLoadMoreHistoryLogs=function(){TmProfileOverviewHistoryLogFactory.loadMore()},controller.closeHistoryLogs=function(){TmProfileOverviewHistoryLogFactory.closeAll(),controller.overviewLog={}},controller.isMoreLogsAvailable=function(){return!(!controller.overviewLog||!controller.overviewLog.totalMatching)&&TmProfileOverviewHistoryLogFactory.getLimit()<controller.overviewLog.totalMatching},controller.isFaqHistoryLogsVisibleWatch=function(isVisible,wasVisible){isVisible=isVisible||!1,controller.showFaqHistory=isVisible,!isVisible&&wasVisible&&(controller.overviewLog={},TmProfileOverviewHistoryLogFactory.setLimit(null))},controller.isOverviewHistoryLogsVisibleWatch=function(isVisible,wasVisible){isVisible=isVisible||!1,controller.showOverviewHistory=isVisible,!isVisible&&wasVisible&&(controller.overviewLog={},TmProfileOverviewHistoryLogFactory.setLimit(null))},controller.getHistoryLogsDataWatch=function(data){controller.overviewLog=data},controller.isHistoryLogsLoadMoreInProgressWatch=function(isInProgress){controller.isLoadMoreHistoryLogsInProgress=isInProgress},controller.activeTabWatch=function(tabId){TmProfileFactory.setSelectedTabId(tabId),TmProfileFactory.closeRightSidePanels()},controller.getCoreIdWatch=function(coreId){if(coreId){if(TmProfileFactory.closeRightSidePanels(),InstitutionFactory.isEmpty())return!1;if($scope.institutionDataLoaded=!0,$scope.institutionId=InstitutionFactory.getId(),$scope.institutionData=InstitutionFactory.getData(),$scope.tmIsAdvanced=InstitutionFactory.isTmAdvanced(),!InstitutionFactory.isTmSubscribed()&&!UserFactory.isClient())return $location.path(constants.defaultClientPage),!1;controller.showProgramStasTab=InstitutionFactory.isAdvancedProgram(),InstitutionFactory.isTmSubscribed()&&!UserFactory.noAccess($state.current.name)?controller.loadTmProfileData(InstitutionFactory.getCoreId()):($scope.profileDataLoaded=!0,TmProfileFactory.setData(null))}},controller.initWatches=function(){WatchService.create($scope,function(){return TmProfileFactory.isProgramUpgradeFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.upgradeRequest={comments:null,program:TmProfileFactory.getProgram(),name:UserFactory.getFullName(),email:UserFactory.getUserName()},$scope.showUpgradeProgramRequest=newValue)}),WatchService.create($scope,function(){return TmProfileFactory.isUpgradeFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.upgradeRequest={name:UserFactory.getFullName(),email:UserFactory.getUserName(),comments:null},$scope.showUpgradeForm=newValue)}),WatchService.create($scope,function(){return TmProfileFactory.isDeleteFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.deleteRequest={comments:null,program:TmProfileFactory.getProgram(),name:UserFactory.getFullName(),email:UserFactory.getUserName()},$scope.showDeleteForm=newValue)}),WatchService.create($scope,function(){return TmProfileFactory.isProgramEditFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&($scope.showProgramEditForm=newValue)}),WatchService.create($scope,function(){return TmProfileFactory.isProgramAddFormVisible($scope.activeTab)},function(newValue,oldValue){newValue!==oldValue&&(TmProfileFactory.setReadOnly(!1),$scope.showProgramAddForm=newValue)}),WatchService.create($scope,"activeTab",controller.activeTabWatch),WatchService.create($scope,TmProfileOverviewHistoryLogFactory.isFaqVisible,controller.isFaqHistoryLogsVisibleWatch),WatchService.create($scope,TmProfileOverviewHistoryLogFactory.isOverviewVisible,controller.isOverviewHistoryLogsVisibleWatch),WatchService.create($scope,TmProfileOverviewHistoryLogFactory.getLogs,controller.getHistoryLogsDataWatch),WatchService.create($scope,TmProfileOverviewHistoryLogFactory.isLoadMoreInProgress,controller.isHistoryLogsLoadMoreInProgressWatch),WatchService.create($scope,InstitutionFactory.getCoreId,controller.getCoreIdWatch),WatchService.create($scope,InstitutionFactory.isTmAdvanced,function(newValue){$scope.tmIsAdvanced=newValue}),$rootScope.$on(constants.events.logout,controller.destruct)},controller.destruct=function(){TmProfileFactory.reset(),$scope.showDepartmentEditForm=!1,$scope.showDepartmentAddForm=!1,$scope.showProgramEditForm=!1,$scope.showDProgramAddForm=!1},controller.init=function(){controller.initWatches(),TmProfileFactory.setProgramUpgradeFormVisibility(!1)},controller.init()},angular.module("qsHub").controller("TmProfileController",["$scope","$rootScope","$location","$state","constants","TmProfileService","NotifierFactory","TmProfileFactory","InstitutionFactory","UserFactory","TuProfileFactory","TuProfileService","TmProfileProgramsService","TmProfileOverviewService","TmProfileOverviewHistoryLogFactory","WatchService",App.controllers.tmProfile])}(window.angular),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmProfile=function($resource,$q,$log,constants,InstitutionsService,InstitutionFactory){var service={deferred:{},status:{approved:"approved",pendingDeletion:"pending-deletion",editApproved:"edit-approved",pendingApprove:"requested",pendingEdit:"pending-edit"},cache:{}};return service.getProfileModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/core-id/:id",null,{update:{method:"PATCH"},get:{cancellable:!0}})},service.getUpgradeRequestModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/upgrade-request")},service.getProgramTypesList=function(){return[{value:"omba",label:"Online MBA/Distance learning"},{value:"pt",label:"Part time MBA"},{value:"ft",label:"Full time MBA"},{value:"emba",label:"Executive MBA"}]},service.getFeesRangesList=function(){return[{value:"",label:"N/A"},{value:"<20000 USD",label:"<20000 USD"},{value:"20000 - 30000 USD",label:"20000 - 30000 USD"},{value:"30000 - 40000 USD",label:"30000 - 40000 USD"},{value:"40000 - 50000 USD",label:"40000 - 50000 USD"},{value:"50000 - 60000 USD",label:"50000 - 60000 USD"},{value:"60000 - 70000 USD",label:"60000 - 70000 USD"},{value:"70000 - 80000 USD",label:"70000 - 80000 USD"},{value:"80000 - 90000 USD",label:"80000 - 90000 USD"},{value:"90000 - 100000 USD",label:"90000 - 100000 USD"},{value:"100000 - 110000 USD",label:"100000 - 110000 USD"},{value:"110000 - 120000 USD",label:"110000 - 120000 USD"},{value:">120000 USD",label:">120000 USD"}]},service.getLengthList=function(){for(var list=[{value:"",label:"N/A"}],i=1;i<=40;i++)list.push({value:i+" months",label:i+" months"});return list},service.getPercentList=function(){for(var list=[{value:"",label:"N/A"}],i=0;i<=100;i++)list.push({value:i,label:i+" %"});return list},service.getYearList=function(startYear,endYear){for(var list=[{value:"",label:"N/A"}],i=startYear;i<=endYear;i++)list.push({value:i,label:i+" years"});return list},service.getMonthsList=function(){for(var name,count=0,months=[];count<12;)name=moment().month(count++).format("MMMM"),months.push({value:name,label:name});return months},service.getAccreditationsList=function(){return[{value:"",label:"N/A"},{value:"AACSB",label:"AACSB"},{value:"ACBSP",label:"ACBSP"},{value:"ACQUIN",label:"ACQUIN"},{value:"AMBA",label:"AMBA"},{value:"BPS",label:"BPS"},{value:"CIM",label:"CIM"},{value:"CIPD",label:"CIPD"},{value:"EPAS",label:"EPAS"},{value:"EQUIS",label:"EQUIS"},{value:"FIBAA",label:"FIBAA"},{value:"IACBE",label:"IACBE"},{value:"ISO",label:"ISO"},{value:"MSA",label:"MSA"},{value:"NASPAA",label:"NASPAA"},{value:"NEASC",label:"NEASC"},{value:"NVAO",label:"NVAO"},{value:"SIMT",label:"SIMT"},{value:"ZEVA",label:"ZEVA"}]},service.getProgramStatusList=function(){return[{value:"requested",label:"Requested (New)"},{value:"pending-edit",label:"Pending (Edit)"},{value:"pending-deletion",label:"Pending (Deletion)"},{value:service.status.approved,label:"Approved"},{value:"edit-approved",label:"Edited-Approved"}]},service.isProgramApproved=function(status){return status===service.status.approved},service.isProgramPendingDeletion=function(status){return status===service.status.pendingDeletion},service.isProgramPendingApprove=function(status){return status===service.status.pendingApprove},service.isProgramPendingEdit=function(status){return status===service.status.pendingEdit},service.isProgramEditApproved=function(status){return status===service.status.editApproved},service.getCampusesKeyValuePairs=function(useCache,coreId){useCache=useCache||!1;var campusList=[],cacheKey="getCampusesList:"+(coreId=coreId||InstitutionFactory.getCoreId()),deferred=null;return useCache&&service.cache[cacheKey]?((deferred=$q.defer()).resolve(service.cache[cacheKey]),deferred.promise):service.getCampuses(useCache,coreId).then(function(campuses){return angular.forEach(campuses,function(campus){campusList.push({value:campus.id,label:campus.name})}),campusList})},service.clearCache=function(){service.cache=[]},service.getCampuses=function(useCache,coreId){var campuses=[],cacheKey="getCampuses:"+coreId,deferred=null;if(useCache=useCache||!1){if(deferred=$q.defer(),service.cache[cacheKey])return deferred.resolve(service.cache[cacheKey]),deferred.promise;if(InstitutionFactory.getCoreId()===coreId)return service.cache[cacheKey]=InstitutionFactory.getCampusData(),deferred.resolve(service.cache[cacheKey]),deferred.promise}return InstitutionsService.getInstitutionData(coreId,["campus"]).then(function(data){return data.results&&data.results[0]&&data.results[0].campus&&(campuses=data.results[0].campus,service.cache[cacheKey]=campuses,InstitutionFactory.getCoreId()===coreId&&InstitutionFactory.setCampuses(campuses)),campuses})},service.getTmProfileData=function(coreId){if(!coreId){var deferred=$q.defer();return deferred.resolve(!1),deferred.promise}if(constants.dev)var endTime,startTime=(new Date).getTime();return service.getProfileModel().get({id:coreId}).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),data.toJSON()},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getSpecialisationsList=function(){if(service.deferred.getSpecialisationsList)return service.deferred.getSpecialisationsList.promise;service.deferred.getSpecialisationsList=$q.defer();var deferred=service.deferred.getSpecialisationsList;return service.specialisationsList?deferred.resolve(service.specialisationsList):$resource(constants.api.institutions.url+"/v1/list/specialisations").get(function(data){constants.dev&&$log.log("success, got data: ",data),service.specialisationsList=data.results,deferred.resolve(service.specialisationsList),deferred=null},function(error){constants.dev&&$log.log("request failed"+error),service.specialisationsList=[],deferred.resolve(service.specialisationsList),deferred=null}),deferred.promise},service.sendUpgradeRequest=function(tmProfileId,comments){if(!tmProfileId)throw"Missing Required";return service.getUpgradeRequestModel().save({id:tmProfileId},{comments:comments}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("TmProfileService",["$resource","$q","$log","constants","InstitutionsService","InstitutionFactory",App.services.TmProfile])}(window.angular,window.moment),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.TmProfile=function(TmProfileOverviewHistoryLogFactory){var data={},program={},backend=!1,readOnly=!1,selectedTabId=null,selectedMediaSubTabId=null,upgradeFormVisible=!1,deletedProgramId=null,directoryVal=!1,updatedProgramId=null,programAddFormVisible=!1,programEditFormVisible=!1,programSubscribeFormVisible=!1,deleteFormVisible=!1,programUpgradeFormVisible=!1,programBeforeChanges={},newProgram=!1,programsDatagridReload=!1,isUpgraded=!1,profileTabs={overview:0,programs:1,media:2,publish:3,programStats:4},mediaTabs={images:1,video:2,social:3,brochures:4},activeOverviewSubTabs={overview:!0,faq:!1};return{setData:function(newData){data=newData},getData:function(){return data},getProfileTabs:function(){return profileTabs},setBackend:function(isBackend){backend=isBackend},isBackend:function(){return!!backend},setReadOnly:function(isReadOnly){readOnly=isReadOnly},isReadOnly:function(){return!!readOnly},reset:function(){data={},program={},newProgram=!1,selectedMediaSubTabId=null,selectedTabId=null},getId:function(){return null!==data&&data.id||""},getProgram:function(){return program},setProgram:function(selectedProgram){program=selectedProgram},getProgramId:function(){return program&&program.id?program.id:null},setSelectedTabId:function(newSelectedTabId){selectedTabId=newSelectedTabId},isProgramsTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.programs},isStatsTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.programStats},isPublishTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.publish},isOverviewTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.overview},isMediaTabSelected:function(){return void 0!==selectedTabId&&selectedTabId===profileTabs.media},getOverviewTabId:function(){return profileTabs.overview},setActiveOverviewSubTabs:function(newSubTabs){angular.isDefined(newSubTabs)&&(angular.equals(0,newSubTabs)&&(activeOverviewSubTabs.overview=!0),angular.equals(1,newSubTabs)&&(activeOverviewSubTabs.overview=!1))},getActiveOverviewSubTabs:function(){return activeOverviewSubTabs},isMediaImagesSubTabSelected:function(){return void 0!==selectedMediaSubTabId&&selectedMediaSubTabId===mediaTabs.images},isMediaVideosSubTabSelected:function(){return void 0!==selectedMediaSubTabId&&selectedMediaSubTabId===mediaTabs.video},isMediaSocialSubTabSelected:function(){return void 0!==selectedMediaSubTabId&&selectedMediaSubTabId===mediaTabs.social},isMediaBrochuresSubTabSelected:function(){return void 0!==selectedMediaSubTabId&&selectedMediaSubTabId===mediaTabs.brochures},getSelectedMediaSubTabId:function(){return selectedMediaSubTabId},setSelectedMediaSubTabId:function(newSelectedSubTabId){selectedMediaSubTabId=newSelectedSubTabId},setMediaImagesSubTabSelected:function(){selectedMediaSubTabId=mediaTabs.images},announceNewProgram:function(newProgramId){newProgram=newProgramId},hasNewProgram:function(){return newProgram},announceProgramDeletion:function(newProgramId){deletedProgramId=newProgramId},hasDeletedProgram:function(){return!!deletedProgramId},clearDeletedProgram:function(){deletedProgramId=null},announceProgramUpdate:function(newProgramId){updatedProgramId=newProgramId},hasUpdatedProgram:function(){return!!updatedProgramId},clearProgramUpdate:function(){updatedProgramId=null},isRightSidePanelActive:function(){return programEditFormVisible||programAddFormVisible||deleteFormVisible||programUpgradeFormVisible},setProgramBeforeChanges:function(programInstance){programBeforeChanges=programInstance},getProgramBeforeChanges:function(){return programBeforeChanges},setUpgradeSubscription:function(val){isUpgraded=val},isUpgradedSubscriptions:function(){return isUpgraded},setProgramEditFormVisibility:function(visibility){void 0===visibility&&(visibility=!programEditFormVisible),programEditFormVisible=visibility,programAddFormVisible=!1,programSubscribeFormVisible=!1,upgradeFormVisible=!1,deleteFormVisible=!1,programUpgradeFormVisible=!1,TmProfileOverviewHistoryLogFactory.closeAll()},isProgramEditFormVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.programs&&programEditFormVisible)},getProgramEditFormVisibility:function(){return programEditFormVisible},setProgramAddFormVisibility:function(visibility){void 0===visibility&&(visibility=!programAddFormVisible),programAddFormVisible=visibility,programEditFormVisible=!1,programSubscribeFormVisible=!1,upgradeFormVisible=!1,deleteFormVisible=!1,programUpgradeFormVisible=!1,TmProfileOverviewHistoryLogFactory.closeAll()},isProgramAddFormVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.programs&&programAddFormVisible)},setProgramSubscribeFormVisibility:function(visibility){void 0===visibility&&(visibility=!programSubscribeFormVisible),programSubscribeFormVisible=visibility},getProgramSubscribeFormVisibility:function(){return programSubscribeFormVisible},getProgramAddFormVisibility:function(){return programAddFormVisible},setUpgradeFormVisibility:function(visibility){void 0===visibility&&(visibility=!upgradeFormVisible),upgradeFormVisible=visibility,programEditFormVisible=!1,programAddFormVisible=!1,deleteFormVisible=!1,programUpgradeFormVisible=!1},isUpgradeFormVisible:function(activeTab){return void 0!==activeTab&&((activeTab===profileTabs.programs||activeTab===profileTabs.media||activeTab===profileTabs.overview)&&upgradeFormVisible)},setDeleteFormVisibility:function(visibility){void 0===visibility&&(visibility=!deleteFormVisible),deleteFormVisible=visibility,programEditFormVisible=!1,programAddFormVisible=!1,upgradeFormVisible=!1,programUpgradeFormVisible=!1,TmProfileOverviewHistoryLogFactory.closeAll()},isDeleteFormVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.programs&&deleteFormVisible)},setProgramUpgradeFormVisibility:function(visibility){void 0===visibility&&(visibility=!programUpgradeFormVisible),programUpgradeFormVisible=visibility,programEditFormVisible=!1,programAddFormVisible=!1,upgradeFormVisible=!1,deleteFormVisible=!1,TmProfileOverviewHistoryLogFactory.closeAll()},isProgramUpgradeFormVisible:function(activeTab){return void 0!==activeTab&&(activeTab===profileTabs.programs&&programUpgradeFormVisible)},closeRightSidePanels:function(){TmProfileOverviewHistoryLogFactory.closeAll(),upgradeFormVisible=!1,programEditFormVisible=!1,programAddFormVisible=!1},resetProgramsDatagridReload:function(){programsDatagridReload=!1},requestProgramsDatagridReload:function(){programsDatagridReload=!0},isProgramsDatagridReload:function(){return programsDatagridReload},setDirectory:function(newVal){directoryVal=newVal},isDirectory:function(){return directoryVal}}},angular.module("qsHub").factory("TmProfileFactory",["TmProfileOverviewHistoryLogFactory",App.factories.TmProfile])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.TmProfileHistoryLog=function(){var data={},limit=1,profileType=null,inProgress=!1,loadMoreInProgress=!1,reload=!1,isAdvanced=!1,triggeredBy=null;return{getData:function(){return data},setData:function(newData){data=newData},setLogLimit:function(logLimit){(!logLimit||logLimit<1||void 0===logLimit)&&(logLimit=1),limit=logLimit},getLogLimit:function(){return limit},setProfileType:function(newProfileType){profileType=newProfileType},getProfileType:function(){return profileType},isInProgress:function(){return inProgress},setInProgress:function(status){inProgress=status},isLoadMoreInProgress:function(){return loadMoreInProgress},setLoadMoreInProgress:function(status){loadMoreInProgress=status},isVisible:function(){return!1},setTriggeredBy:function(trigger){triggeredBy=trigger},shouldBeVisible:function(trigger){return triggeredBy!==trigger||(triggeredBy=null,!1)},resetTriggeredBy:function(){triggeredBy=""},setAdvanced:function(advanced){isAdvanced=advanced},isAdvanced:function(){return isAdvanced},setReload:function(triggerReload){reload=triggerReload},isReloadRequired:function(){return reload}}},angular.module("qsHub").factory("TmProfileHistoryLogFactory",["$resource","$q","$log","constants",App.factories.TmProfileHistoryLog])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmProfileResubscribe=function($scope,TmProfileResubscribeService,InstitutionFactory,TmProfileFactory,UserFactory,NotifierFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.profileId="",controller.expiresDate="",controller.isAdvanced=!1,controller.displayResubscribeForm=!1,controller.inProgress=!1,controller.formData={comments:"",name:"",email:"",to:"tmsupport@qs.com",subject:"I would like more information about Resubscribing an Advance Profile"},controller.initFormData=function(){controller.formData.comments=""},controller.resubscribeClick=function(){controller.initFormData(),controller.displayResubscribeForm=!controller.displayResubscribeForm},controller.cancelClick=function(){controller.initFormData(),controller.resubscribeClick()},controller.createCallback=function(response){response&&(controller.initFormData(),controller.resubscribeClick()),controller.inProgress=!1,NotifierFactory.show(response?"success":"error",response?"Request sent successfully!":"Request sending failed!","Resubscribe Request")},controller.submitClick=function(){controller.inProgress=!0,TmProfileResubscribeService.create(controller.profileId,controller.formData.comments,controller.formData.name,controller.formData.email).then(controller.createCallback)},controller.showResubscribeButton=function(){if(controller.expiresDate){var expiresDate,todayDate,daysLeft,leftMs;return expiresDate=new Date(parseInt(controller.expiresDate,10)),todayDate=new Date,leftMs=expiresDate.getTime()-todayDate.getTime(),daysLeft=Math.ceil(Math.abs(leftMs))/864e5,leftMs>0&&daysLeft<31}return!1},controller.initWatches=function(){WatchService.create($scope,TmProfileFactory.getData,function(newValue){null!==newValue&&(controller.profileId=newValue.id)}),WatchService.create($scope,InstitutionFactory.getData,function(newValue){controller.isAdvanced=InstitutionFactory.isTmAdvanced(),null!==newValue&&(controller.expiresDate=angular.isDefined(newValue.subscriptions.tm)?newValue.subscriptions.tm.endDate:""),controller.formData.name=UserFactory.getFullName(),controller.formData.email=UserFactory.getUserName()})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isPublishTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfileResubscribeController",["$scope","TmProfileResubscribeService","InstitutionFactory","TmProfileFactory","UserFactory","NotifierFactory","WatchService",App.controllers.tmProfileResubscribe])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmProfileResubscribeService=function($resource,$log,constants){var service={deferred:{}};return service.getResubscribeModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-profile/:id/resubscribe-request")},service.create=function(profileId,comments,fromName,fromEmail){return comments=void 0===comments?"":comments,fromName=void 0===fromName?"":fromName,fromEmail=void 0===fromEmail?"":fromEmail,service.getResubscribeModel().save({id:profileId},{comments:comments,name:fromName,email:fromEmail}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("TmProfileResubscribeService",["$resource","$log","constants",App.services.TmProfileResubscribeService])}(window.angular),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmProfilePrograms=function($scope,$rootScope,$state,constants,uiGridConstants,NotifierFactory,TmProfileFactory,InstitutionFactory,UserFactory,TmProfileProgramsService,TmProfileService,InstitutionsService,InstitutionsListService,WatchService,GridService){var controller=this,alreadyInitialised=!1;controller.isDatagridReloading=!0,controller.isDatagridRendered=!1,controller.devMode=constants.dev,controller.programsPackage=[{value:"false",label:"Basic"},{value:"true",label:"Advanced"}],$scope.isAdvanced=!1,controller.institution={},controller.paginationOptions=GridService.getColumnsFilters(constants.gridNameSpaces.programsTmGridFilters,[]),controller.columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.programsTmGridVisibility),controller.handleDatagridRowClick=function(program){TmProfileFactory.setProgramUpgradeFormVisibility(!1),$scope.selectedProgramId===program.id?($scope.selectedProgramId=null,TmProfileFactory.setProgramEditFormVisibility(!1),TmProfileFactory.setProgram({})):($scope.selectedProgramId=program.id,TmProfileFactory.setProgramEditFormVisibility(!0),TmProfileFactory.setProgram(program),TmProfileFactory.setReadOnly(TmProfileService.isProgramPendingDeletion(program.status)||program.advanced))},controller.handleDatagridFiltersChanges=function(grid){GridService.resetConditions($scope.gridApi.grid.columns),angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.filters&&"undefined"!==column.filters[0].term&&(column.filters[0].type===uiGridConstants.filter.SELECT&&"object"==typeof column.filters[0].term&&null!==column.filters[0].term&&void 0!==column.filters[0].term.value?column.filters[0].term=column.filters[0].term.value:null!==column.filters[0].term&&void 0!==column.filters[0].term&&GridService.applyFilters(column));var filterColumn=column.filters[0].column?column.filters[0].column:column.field;void 0!==column.filters&&"undefined"!==column.filters[0].term&&(controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term)}),GridService.storeColumnsFilters(constants.gridNameSpaces.programsTmGridFilters,controller.paginationOptions)},controller.isClient=function(){return UserFactory.isClient()},controller.reloadDatagrid=function(){var coreId=InstitutionFactory.getCoreId();return!!coreId&&(controller.isDatagridReloading=!0,TmProfileProgramsService.getAllProgramsByCoreId(coreId).then(controller.handleProgramsListResponse))},controller.handleAddProgramClick=function(){$scope.selectedProgramId=null,TmProfileFactory.setProgramAddFormVisibility(),TmProfileFactory.setProgram({})},controller.getProgramsToDelete=function(){var programsIds=[];return $scope.programsToDelete&&angular.forEach($scope.programsToDelete,function(remove,id){remove&&programsIds.push(id)}),programsIds},controller.handleProgramsListResponse=function(response){controller.isDatagridReloading=!1,angular.isDefined($scope.gridOptions)&&($scope.gridOptions.data=response,$scope.gridOptions.minRowsToShow=response&&response.length<50?response.length:50),$scope.selectedProgramId&&angular.forEach($scope.gridOptions.data,function(item){angular.equals(item.id,$scope.selectedProgramId)&&(TmProfileFactory.setProgram(item),TmProfileFactory.setReadOnly(!!item.advanced))})},controller.linkSubscriptions=function(coreId){InstitutionsService.getInstitutionData(coreId).then(function(data){var institutionData=data&&data.results?data.results[0]:null;institutionData.linkedWithAdvancedPrograms&&InstitutionsListService.getAllSubscriptions(coreId).then(function(res){res.forEach(function(item){controller.institution=angular.copy(institutionData),item>=institutionData.subscriptions.tm.endDate&&(controller.institution.subscriptions.tm.endDate=item),InstitutionsListService.saveSubscription(controller.institution).then(function(success){if(success){controller.institution.subscriptions&&angular.forEach(controller.institution.subscriptions,function(subscription){subscription.subscribed&&subscription.advanced&&subscription.endDate<moment().format("x")&&(subscription.advanced=!1),subscription.subscribed&&subscription.advanced&&subscription.startDate>moment().format("x")&&(subscription.advanced=!1)}),$scope.institutionBeforeChanges=angular.copy(controller.institution),InstitutionsListService.appendSubscriptionsData([controller.institution]);var currentCoreId=controller.institution.coreId;if(currentCoreId){var activeCoreId=InstitutionFactory.getCoreId();activeCoreId&&currentCoreId===activeCoreId&&InstitutionFactory.setSubscriptions(angular.copy(controller.institution.subscriptions))}}})})})})},controller.hasDeletedProgramsWatch=function(deleted){deleted&&(controller.initDataGrid(!1),TmProfileFactory.clearDeletedProgram(),$scope.selectedProgramId=null)},controller.hasUpdatedProgramWatch=function(updated){updated&&(controller.initDataGrid(!1),TmProfileFactory.clearProgramUpdate())},controller.isRightSidePanelActiveWatch=function(active){active||($scope.selectedProgramId=null)},controller.getCoreIdWatch=function(coreId){coreId&&($scope.selectedProgramId=null,controller.initDataGrid(!0),controller.linkSubscriptions(coreId))},controller.hasNewProgramWatch=function(added){added&&($scope.selectedProgramId=added,controller.initDataGrid(!1))},controller.hasNewProgramUpgradeWatch=function(upgraded){if(upgraded){var core_id=InstitutionFactory.getCoreId();controller.linkSubscriptions(core_id)}},controller.isProgramsDatagridReloadWatch=function(reload){reload&&(controller.initDataGrid(!1),TmProfileFactory.resetProgramsDatagridReload())},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.programsTmGridVisibility);columnsVisibility&&angular.forEach($scope.gridOptions.columnDefs,function(column,key){!0===columnsVisibility[column.field]&&!1===column.visible&&($scope.gridOptions.columnDefs[key].filter.term=null)}),controller.columnsVisibility=GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs),GridService.storeColumnsVisibility(constants.gridNameSpaces.programsTmGridVisibility,controller.columnsVisibility)},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getCoreId,controller.getCoreIdWatch),WatchService.create($scope,TmProfileFactory.hasDeletedProgram,controller.hasDeletedProgramsWatch),WatchService.create($scope,TmProfileFactory.hasUpdatedProgram,controller.hasUpdatedProgramWatch),WatchService.create($scope,TmProfileFactory.isProgramsDatagridReload,controller.isProgramsDatagridReloadWatch),WatchService.create($scope,TmProfileFactory.isRightSidePanelActive,controller.isRightSidePanelActiveWatch),WatchService.create($scope,TmProfileFactory.hasNewProgram,controller.hasNewProgramWatch),WatchService.create($scope,TmProfileFactory.isUpgradedSubscriptions,controller.hasNewProgramUpgradeWatch),$rootScope.$on(constants.events.logout,controller.destruct)},controller.initDataGrid=function(useCache){var selectTemplate="/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html",selectCellTemplate="/scripts/shared/ui-grid/templates/selectCellTemplate.html",coreId=InstitutionFactory.getCoreId();if(!coreId)return!1;controller.isDatagridReloading=!0,TmProfileService.getCampusesKeyValuePairs(useCache).then(function(campusesList){controller.campusesList=campusesList,$scope.gridOptions={enableSorting:!0,exporterMenuCsv:!1,enableGridMenu:!0,showGridFooter:!0,selectedItems:$scope.selectedProgramId,enableFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,rowTemplate:"/scripts/components/profiles/tm/programs/datagrid/rowTemplate.html",columnDefs:[{displayName:"Advanced",field:"advanced",enableSorting:!0,enableFiltering:!0,enableColumnResizing:!1,cellTemplate:"/scripts/components/profiles/tm/programs/datagrid/advancedCellTemplate.html",maxWidth:108,filter:{type:uiGridConstants.filter.SELECT,selectOptions:controller.programsPackage,term:GridService.getFilterByField(controller.paginationOptions,"advanced")},visible:GridService.getVisibilityByField(controller.columnsVisibility,"advanced",!0),filterHeaderTemplate:selectTemplate},{displayName:"Program Name",field:"name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"name",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"name","")}},{displayName:"Program Type",field:"type",filter:{type:uiGridConstants.filter.SELECT,selectOptions:TmProfileService.getProgramTypesList(),term:GridService.getFilterByField(controller.paginationOptions,"type")},visible:GridService.getVisibilityByField(controller.columnsVisibility,"type",!0),filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{enableFiltering:!0,displayName:"Campus",field:"campus",filter:{type:uiGridConstants.filter.SELECT,selectOptions:controller.campusesList,term:GridService.getFilterByField(controller.paginationOptions,"campus")},visible:GridService.getVisibilityByField(controller.columnsVisibility,"campus",!0),filterHeaderTemplate:selectTemplate,cellTemplate:"/scripts/components/tmDirectory/datagrid/campusCellTemplate.html"},{displayName:"Status",filter:{type:uiGridConstants.filter.SELECT,selectOptions:TmProfileService.getProgramStatusList(),term:GridService.getFilterByField(controller.paginationOptions,"status")},visible:GridService.getVisibilityByField(controller.columnsVisibility,"status",!0),field:"status",maxWidth:130,filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate}],onRegisterApi:function(gridApi){var columnsVisibilityBeforeChanges=angular.copy($scope.gridOptions.columnDefs);$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){controller.handleDatagridRowClick(row.entity)}),gridApi.core.on.rowsRendered($scope,function(){controller.isDatagridRendered=!0}),gridApi.core.on.filterChanged($scope,function(){controller.handleDatagridFiltersChanges(this.grid)}),gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),GridService.resetExtend(columnsVisibilityBeforeChanges,$scope.gridOptions.columnDefs)}},InstitutionFactory.isTmSubscribed()&&!UserFactory.noAccess($state.current.name)&&TmProfileProgramsService.getAllProgramsByCoreId(coreId).then(controller.handleProgramsListResponse)})},controller.destruct=function(){alreadyInitialised=!1},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isProgramsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive?alreadyInitialised&&isActive&&!wasActive&&($scope.selectedProgramId=null):(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfileProgramsController",["$scope","$rootScope","$state","constants","uiGridConstants","NotifierFactory","TmProfileFactory","InstitutionFactory","UserFactory","TmProfileProgramsService","TmProfileService","InstitutionsService","InstitutionsListService","WatchService","UiGridService",App.controllers.tmProfilePrograms])}(window.angular,window.moment),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmProfileProgramsService=function($resource,$q,$log,constants,RequestsQueueService,TmProfileService){var service={deferred:{},hasErrors:!1};return service.getProgramsListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/tm-programs?filter[parentInstitutionCoreId]==:coreId&page=1&limit=500&sorting[createdAt]=desc",{},{get:{cancellable:!0}})},service.getUpdateModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-program/:id",null,{update:{method:"PATCH"}})},service.getCreateModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-program")},service.getDowngradeModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-program/:id/downgrade")},service.getUpgradeModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-program/:id/upgrade",null,{update:{method:"PATCH"}})},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.update=function(program){return service.getUpdateModel().update({id:program.id},program).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.delete=function(id){return service.getUpdateModel().delete({id:id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.deleteRequest=function(id,comments){return service.getUpdateModel().delete({id:id,comments:comments}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.create=function(program){return service.getCreateModel().save(null,program).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.downgrade=function(id){return service.getDowngradeModel().get({id:id}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.upgrade=function(id,comments,startDate,endDate){var dataRequest={};return startDate&&(dataRequest.startDate=startDate),endDate&&(dataRequest.endDate=endDate),comments&&(dataRequest.comments=comments),service.getUpgradeModel().update({id:id},dataRequest).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!data.insertedCoreId||data.insertedCoreId},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getAllProgramsByCoreId=function(coreId){if(constants.dev)var endTime,startTime=(new Date).getTime();return service.getProgramsListModel().get({coreId:coreId}).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),data.results},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.getAllPrograms=function(params){var coreId=params.parameters().coreId;if(constants.dev)var endTime,startTime=(new Date).getTime();RequestsQueueService.cancelAll("getAllPrograms");var Api=service.getProgramsListModel().get(params.url(),{coreId:coreId});return RequestsQueueService.add(Api,"getAllPrograms"),Api.$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("getAllPrograms"),params.total(data.totalFiltered),params.totalEntries=data.totalMatching,data.results},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service.getTmpCampusId=function(){return"tmp_"+moment()},service.isTmpCampusId=function(id){return 0===id.indexOf("tmp_")},service},angular.module("qsHub").service("TmProfileProgramsService",["$resource","$q","$log","constants","RequestsQueueService","TmProfileService",App.services.TmProfileProgramsService])}(window.angular,window.moment),function(angular,moment){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmProfileProgramForm=function($scope,$state,constants,$uibModal,NotifierFactory,CampusesService,TmProfileFactory,InstitutionFactory,TmProfileProgramsService,UserFactory,InstitutionsListService,TmProfileService,InstitutionsService,LoginService,ModalService,TmProfileProgramValidationService,WatchService,TmDirectoryService,UiSelectService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.programDescriptionWordLimit=200,controller.typesList=TmProfileService.getProgramTypesList(),controller.feesRangesList=TmProfileService.getFeesRangesList(),controller.monthsList=TmProfileService.getMonthsList(),controller.accreditationsList=TmProfileService.getAccreditationsList(),controller.lengthList=TmProfileService.getLengthList(),controller.percentList=TmProfileService.getPercentList(),controller.yearList1850=TmProfileService.getYearList(18,50),controller.yearList020=TmProfileService.getYearList(0,20),controller.offerScholarshipsList=UiSelectService.getYesNoOptions(),controller.isNewCampus=!1,controller.isEditCampus=!1,controller.campusSubmitInProgress=!1,controller.programSubmitInProgress=!1,controller.downgradeInProgress=!1,controller.upgradeInProgress=!1,controller.addInProgress=!1,controller.deleteInProgress=!1,controller.editInProgress=!1,controller.forms={},controller.newCampus={autoGenerate:!1},controller.oldCampus={},controller.newProgram={},controller.program={},controller.oldProgramCampuses=[],controller.isBackend=!1,controller.isReadOnly=!1,controller.subscription={},controller.institution=null,controller.programCampuses=[],controller.isDirectory=!1,controller.submitted=!1,controller.campusSubmitted=!1,controller.campusesWithChanges=[],controller.campusesFullList=[],controller.isSchoolUser=null,controller.tmSupportEmail=constants.support.tm,$scope.showResubscribeBanner=!1,$scope.showSubscriptionForm=!1,$scope.showEdiProgramForm=!0,$scope.datePickerTm={date:{startDate:null,endDate:null},options:{ranges:{"6 months from today":[moment(),moment().add(6,"months")],"12 months from today":[moment(),moment().add(12,"months")]},eventHandlers:{"apply.daterangepicker":function(ev){$scope.handleDateRangePickerApplyClick(ev)}},opens:"left",alwaysShowCalendars:!0}},$scope.handleDateRangePickerApplyClick=function(element){element.model.startDate||(element.model.startDate=moment()),element.model.endDate||(element.model.endDate=moment()),controller.subscription.startDate=element.model.startDate.format("x"),controller.subscription.endDate=element.model.endDate.format("x")},$scope.specialisationsList=[],controller.programHistory={},controller.isDirectory=!1,controller.submitted=!1,controller.campusSubmitted=!1,controller.isAddMode=function(){return!!$scope.showProgramAddForm},controller.isEditMode=function(){return!!$scope.showProgramEditForm},controller.isValidName=function(){return TmProfileProgramValidationService.isValidName(controller.isAddMode()?controller.forms.addProgramDetailsForm:controller.forms.editProgramDetailsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidType=function(){return TmProfileProgramValidationService.isValidType(controller.isAddMode()?controller.forms.addProgramDetailsForm:controller.forms.editProgramDetailsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidDescription=function(){return TmProfileProgramValidationService.isValidDescription(controller.isAddMode()?controller.forms.addProgramDetailsForm:controller.forms.editProgramDetailsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidCampusAssigned=function(){return!controller.submitted||TmProfileProgramValidationService.isValidCampusAssigned(controller.isAddMode()?controller.forms.addProgramDetailsForm:controller.forms.editProgramDetailsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValid=function(isAdvanced){return TmProfileProgramValidationService.isValid(controller.isAddMode()?controller.forms.addProgramDetailsForm:controller.forms.editProgramDetailsForm,controller.isAddMode()?controller.forms.addProgramStatsForm:controller.forms.editProgramStatsForm,controller.isAddMode()?controller.newProgram:controller.program,isAdvanced)},controller.isValidStats=function(){return TmProfileProgramValidationService.isValidStats(controller.isAddMode()?controller.forms.addProgramStatsForm:controller.forms.editProgramStatsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidDetails=function(){return TmProfileProgramValidationService.isValidDetails(controller.isAddMode()?controller.forms.addProgramDetailsForm:controller.forms.editProgramDetailsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidAddCampus=function(){return TmProfileProgramValidationService.isValidCampus(controller.forms.addCampusForm,controller.newCampus)},controller.isValidEditCampus=function(){return TmProfileProgramValidationService.isValidCampus(controller.forms.editCampusForm,controller.oldCampus)},controller.isValidAverageGmat=function(){return TmProfileProgramValidationService.isValidAverageGmat(controller.isAddMode()?controller.forms.addProgramStatsForm:controller.forms.editProgramStatsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidClassSize=function(){return TmProfileProgramValidationService.isValidClassSize(controller.isAddMode()?controller.forms.addProgramStatsForm:controller.forms.editProgramStatsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidAverageSalaryAfterGraduation=function(){return TmProfileProgramValidationService.isValidAverageSalaryAfterGraduation(controller.isAddMode()?controller.forms.addProgramStatsForm:controller.forms.editProgramStatsForm,controller.isAddMode()?controller.newProgram:controller.program)},controller.isValidCampusName=function(){return TmProfileProgramValidationService.isValidCampusName(controller.isEditCampus?controller.forms.editCampusForm:controller.forms.addCampusForm,controller.isEditCampus?controller.oldCampus:controller.newCampus)},controller.isValidCampusCountry=function(){return TmProfileProgramValidationService.isValidCampusCountry(controller.isEditCampus?controller.forms.editCampusForm:controller.forms.addCampusForm,controller.isEditCampus?controller.oldCampus:controller.newCampus)},controller.isValidCampusAddressLine1=function(){return TmProfileProgramValidationService.isValidCampusAddressLine1(controller.isEditCampus?controller.forms.editCampusForm:controller.forms.addCampusForm,controller.isEditCampus?controller.oldCampus:controller.newCampus)},controller.isValidCampusCity=function(){return TmProfileProgramValidationService.isValidCampusCity(controller.isEditCampus?controller.forms.editCampusForm:controller.forms.addCampusForm,controller.isEditCampus?controller.oldCampus:controller.newCampus)},controller.setValid=function(fieldName,stats,campus){controller.submitted=null,campus&&(controller.campusSubmitted=null),controller.isAddMode()?fieldName?stats?controller.forms.addProgramStatsForm[fieldName].$setPristine():campus?controller.isEditCampus?controller.forms.editCampusForm[fieldName].$setPristine():controller.forms.addCampusForm[fieldName].$setPristine():controller.forms.addProgramDetailsForm[fieldName].$setPristine():(controller.forms.addProgramDetailsForm&&controller.forms.addProgramDetailsForm.$setPristine(),controller.forms.addProgramStatsForm&&controller.forms.addProgramStatsForm.$setPristine()):fieldName?stats?controller.forms.editProgramStatsForm[fieldName].$setPristine():campus?controller.isEditCampus?controller.forms.editCampusForm[fieldName].$setPristine():controller.forms.addCampusForm[fieldName].$setPristine():controller.forms.editProgramDetailsForm[fieldName].$setPristine():(controller.forms.editProgramStatsForm&&controller.forms.editProgramDetailsForm.$setPristine(),controller.forms.editProgramStatsForm&&controller.forms.editProgramStatsForm.$setPristine())},controller.handleAddCampusClick=function(){controller.isNewCampus=!controller.isNewCampus,controller.isEditCampus=!1,controller.newCampus={displayInFrontEnd:!0},controller.forms.addCampusForm&&(controller.forms.addCampusForm.$setPristine(),controller.forms.addCampusForm.name.$setPristine(),controller.forms.addCampusForm.country.$setPristine(),controller.forms.addCampusForm.addressLine1.$setPristine(),controller.forms.addCampusForm.city.$setPristine())},controller.handleCancelCampusClick=function(){controller.isEditCampus=!controller.isEditCampus},controller.handleNewCampusSubmit=function(){if(controller.campusSubmitted=!0,controller.forms.addCampusForm.$setDirty(),controller.forms.addCampusForm.name.$setDirty(),controller.forms.addCampusForm.country.$setDirty(),controller.forms.addCampusForm.addressLine1.$setDirty(),controller.forms.addCampusForm.city.$setDirty(),controller.campusSubmitInProgress||!controller.forms.addCampusForm||!controller.isValidAddCampus())return!1;controller.campusSubmitInProgress=!0,controller.newCampus.id=TmProfileProgramsService.getTmpCampusId(),!controller.newCampus.primary&&controller.program.primaryCampusId||(controller.program.primaryCampusId=controller.newCampus.id,angular.forEach(controller.programCampuses,function(campus){campus.primary=!1})),controller.program.campus||(controller.program.campus=[]),controller.isAddMode()?controller.newProgram.campus.push(controller.newCampus.id):controller.program.campus.push(controller.newCampus.id),controller.programCampuses.push(controller.newCampus),controller.campusesList.push({value:controller.newCampus.id,label:controller.newCampus.name}),controller.handleAddCampusClick(),controller.campusSubmitInProgress=!1},controller.handleUpdateCampus=function(){if(controller.campusSubmitted=!0,controller.forms.editCampusForm.$setDirty(),controller.forms.editCampusForm.name.$setDirty(),controller.forms.editCampusForm.country.$setDirty(),controller.forms.editCampusForm.addressLine1.$setDirty(),controller.forms.editCampusForm.city.$setDirty(),controller.campusSubmitInProgress||!controller.forms.editCampusForm||!controller.isValidEditCampus())return!1;controller.campusSubmitInProgress=!0,controller.oldCampus.primary&&(controller.program.primaryCampusId=controller.oldCampus.id);var i=0,total=controller.programCampuses.length;for(i;i<total;i++)if(controller.programCampuses[i].id===controller.oldCampus.id){controller.programCampuses[i]=angular.copy(controller.oldCampus);break}for(i=0,total=controller.campusesList.length,i;i<total;i++)if(controller.campusesList[i].value===controller.oldCampus.id){controller.campusesList[i]={value:controller.oldCampus.id,label:controller.oldCampus.name};break}controller.handleCancelCampusClick(),controller.campusSubmitInProgress=!1},controller.isCampusFormVisible=function(){return controller.isNewCampus},controller.isEditCampusFormVisible=function(){return controller.isEditCampus},controller.showStatistics=function(){return!controller.isValidStats()&&controller.submitted},controller.showDetails=function(){return!controller.isValidDetails()&&controller.submitted},controller.showCampus=function(){return!controller.isValidCampusAssigned()&&controller.submitted},controller.handleProgramCreateClick=function(){if(controller.submitted=!0,controller.forms.addProgramDetailsForm.$setDirty(),controller.forms.addProgramDetailsForm.name.$setDirty(),controller.forms.addProgramDetailsForm.type.$setDirty(),controller.forms.addProgramDetailsForm.description.$setDirty(),controller.forms.addProgramStatsForm.$setDirty(),controller.forms.addProgramStatsForm.avgGmat.$setDirty(),controller.forms.addProgramStatsForm.classSize.$setDirty(),controller.forms.addProgramStatsForm.avgSalaryAfterGraduation.$setDirty(),controller.programSubmitInProgress||!controller.forms.addProgramDetailsForm||!controller.forms.addProgramStatsForm||!controller.isValid())return!1;controller.programSubmitInProgress=!0,controller.newProgram.parentInstitutionCoreId=InstitutionFactory.getCoreId(),controller.newProgram.primaryCampusId=controller.program.primaryCampusId,TmProfileProgramsService.create(controller.newProgram).then(controller.createCallback)},controller.createCallback=function(response){if(response&&response.insertedId){controller.totalProcessedCampuses=0,controller.createdProgram=angular.copy(controller.newProgram);var campusData,campusId,newCampusId,isTmp,institutionId=controller.institutionId||InstitutionFactory.getId(),hasTmp=!1;controller.createdProgram.id=response.insertedId,angular.forEach(controller.programCampuses,function(campus){campusData=angular.copy(campus),campusId=angular.copy(campus.id),(isTmp=TmProfileProgramsService.isTmpCampusId(campusId))&&(hasTmp=!0,delete campusData.id,campusData.primary=!1),isTmp||-1!==controller.campusesWithChanges.indexOf(campusId)?InstitutionsListService.saveCampus(institutionId,campusData).then(function(response){controller.totalProcessedCampuses++,isTmp&&(newCampusId=response.insertedId,delete controller.createdProgram.campus[controller.createdProgram.campus.indexOf(campusId)],controller.createdProgram.campus.push(newCampusId),controller.createdProgram.primaryCampusId===campusId&&(controller.createdProgram.primaryCampusId=newCampusId),angular.forEach(controller.campusesList,function(item){item.value===campus.id&&(item.value=newCampusId)}),campus.id=newCampusId,TmProfileService.clearCache(),InstitutionFactory.addCampus(campus)),controller.programCampuses.length===controller.totalProcessedCampuses&&(controller.createdProgram.campus=controller.createdProgram.campus.filter(function(item){return null!==item}),controller.createdProgram.skipStatus=!0,TmProfileProgramsService.update(controller.createdProgram).then(controller.newProgramUpdateCallback))}):controller.totalProcessedCampuses++}),hasTmp||controller.campusesWithChanges.length||controller.newProgramUpdateCallback(!0)}else controller.newProgramUpdateCallback(!1)},controller.newProgramUpdateCallback=function(success){controller.programSubmitInProgress=!1,controller.setValid(),NotifierFactory.show(success?"success":"error",success?UserFactory.isClient()?"Request sent":"Created successfully!":"Saving failed!","New Program"),success&&(controller.initForms(),TmProfileFactory.announceNewProgram(controller.createdProgram.id),TmProfileFactory.setProgramEditFormVisibility(!0),TmProfileFactory.setProgram(controller.createdProgram))},controller.handleProgramEditClick=function(){if(controller.submitted=!0,controller.forms.editProgramDetailsForm.$setDirty(),controller.forms.editProgramDetailsForm.name.$setDirty(),controller.forms.editProgramDetailsForm.description.$setDirty(),controller.forms.editProgramStatsForm.$setDirty(),controller.forms.editProgramStatsForm.avgGmat.$setDirty(),controller.forms.editProgramStatsForm.classSize.$setDirty(),controller.forms.editProgramStatsForm.avgSalaryAfterGraduation.$setDirty(),controller.editInProgress||!controller.forms.editProgramDetailsForm||!controller.forms.editProgramStatsForm||!controller.isValid())return!1;controller.editInProgress=!0,controller.totalProcessedCampuses=0;var institutionId=controller.institutionId||InstitutionFactory.getId(),hasTmp=!1;angular.forEach(controller.programCampuses,function(campus){var campusData=angular.copy(campus),isTmp=TmProfileProgramsService.isTmpCampusId(campus.id);isTmp&&(hasTmp=!0,delete campusData.id,campusData.primary=!1),isTmp||-1!==controller.campusesWithChanges.indexOf(campus.id)?InstitutionsListService.saveCampus(institutionId,campusData).then(function(response){controller.totalProcessedCampuses++,TmProfileProgramsService.isTmpCampusId(campus.id)&&(delete controller.program.campus[controller.program.campus.indexOf(campus.id)],controller.program.campus.push(response.insertedId),controller.program.primaryCampusId===campus.id&&(controller.program.primaryCampusId=response.insertedId)),controller.programCampuses.length===controller.totalProcessedCampuses&&(controller.program.campus=controller.program.campus.filter(function(item){return null!==item}),TmProfileProgramsService.update(controller.program).then(controller.updateCallback))}):controller.totalProcessedCampuses++}),hasTmp||controller.campusesWithChanges.length||TmProfileProgramsService.update(controller.program).then(controller.updateCallback)},controller.updateCallback=function(response){NotifierFactory.show(response?"success":"error",response?UserFactory.isClient()?"Request sent successfully!":"Approved successfully!":"Update failed!","Edit Program"),response&&(TmProfileFactory.setProgramEditFormVisibility(!1),TmProfileFactory.announceProgramUpdate(controller.program.id)),controller.editInProgress=!1},controller.handleDeleteClick=function(){if(UserFactory.isClient())TmProfileFactory.setDeleteFormVisibility();else{var modalOptions={closeButtonText:"Cancel",actionButtonText:"Delete",actionButtonClass:"danger",headerText:"Program Deletion",bodyText:'Are you sure you wish to delete "'+controller.program.name+'" program?'};ModalService.show({},modalOptions).then(function(){controller.deleteInProgress=!0,TmProfileProgramsService.delete(controller.program.id).then(controller.deleteCallback)})}},controller.deleteCallback=function(response){controller.deleteInProgress=!1,NotifierFactory.show(response?"success":"error",response?"Deleted successfully!":"Delete failed!","Delete Program"),response&&(TmProfileFactory.setProgramEditFormVisibility(!1),TmProfileFactory.announceProgramDeletion(controller.program.id))},controller.closeAddProgramForm=function(){TmProfileFactory.setProgramAddFormVisibility(!1)},controller.closeEditProgramForm=function(){TmProfileFactory.setProgramEditFormVisibility(!1),$scope.showEdiProgramForm=!0,$scope.showSubscriptionForm=!1,TmProfileFactory.setProgram({}),controller.subscription.startDate=null,controller.subscription.endDate=null},controller.closeSubscribeProgramForm=function(){TmProfileFactory.setProgramEditFormVisibility(!0),$scope.showSubscriptionForm=!1,$scope.showEdiProgramForm=!0,controller.subscription.startDate=null,controller.subscription.endDate=null},controller.allowUpgrade=function(){return!controller.program.advanced&&!controller.isReadOnly},controller.allowDowngrade=function(){return!UserFactory.isClient()&&controller.program.advanced},controller.allowDelete=function(){return!controller.program.advanced&&(UserFactory.isClient()&&!controller.isReadOnly||!UserFactory.isClient())},controller.allowUpdate=function(){return!controller.isReadOnly},controller.allowLoginAs=function(){return controller.program.advanced},controller.isAllowedToLogin=function(){return UserFactory.isClient()&&UserFactory.isAllowedToLogin(controller.program.institutionCoreId)||!UserFactory.isClient()},controller.handleLoginAsClick=function(){LoginService.getTuProfilesRedirect({coreId:controller.program.institutionCoreId}),controller.closeEditProgramForm()},controller.isUndefined=function(value){return void 0===value},controller.getEditTitle=function(){return UserFactory.isClient()?controller.program.advanced?"Request to Edit Advanced Program":"Request to Edit Basic Program":controller.program.advanced?"Edit Advanced Program":"Edit Basic Program"},controller.getSubscriptionTitle=function(){return UserFactory.isClient()?controller.program.advanced?"Request to Edit Advanced Program":"Request to Edit Basic Program":controller.program.advanced?"Edit Advanced Program":"Upgrade to Advanced Program"},controller.getEditButtonTitle=function(){return UserFactory.isClient()?"Send":"Update"},controller.getDeleteButtonTitle=function(){return UserFactory.isClient()?controller.program.advanced?"Request to Delete Advanced Program":"Request to Delete Basic Program":"Delete"},controller.getUpgradeButtonTitle=function(){return UserFactory.isClient()?"Request to Upgrade to Advanced Program":"Upgrade to Advanced Program"},controller.getAllSubscriptionsCallback=function(tmSubscription){var modalOptions={closeButtonText:"Cancel",headerText:"Current Subscription(s)",institutionCoreId:controller.program.institutionCoreId,tmSubscription:tmSubscription,showContent:function(){return!!(tmSubscription&&tmSubscription.startDate&&tmSubscription.advanced&&tmSubscription.subscribed)},completeDowngradeClick:function(){this.close(),modalOptions.tmSubscription&&modalOptions.tmSubscription.startDate&&modalOptions.tmSubscription.advanced&&modalOptions.tmSubscription.subscribed?$state.go("staff.institutions.list",{coreId:controller.program.institutionCoreId}):TmProfileProgramsService.downgrade(controller.program.id).then(controller.downgradeCallback)}},modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"/scripts/components/profiles/tm/programs/modalDowngradeProgramView.html"};ModalService.show(modalDefaults,modalOptions),controller.downgradeInProgress=!1},controller.handleDowngradeClick=function(){controller.downgradeInProgress=!0,InstitutionsListService.getTmSubscriptions(controller.program.institutionCoreId).then(controller.getAllSubscriptionsCallback)},controller.downgradeCallback=function(success){controller.downgradeInProgress=!1,TmProfileService.getCampusesKeyValuePairs(!1,InstitutionFactory.getCoreId()).then(function(campusesList){controller.campusesList=campusesList}).then(function(){TmProfileService.getCampuses(!1,InstitutionFactory.getCoreId()).then(function(campuses){if(controller.campusesFullList=campuses,controller.programCampuses=[],controller.program.campus&&controller.campusesList){var i,total=campuses.length;angular.forEach(controller.program.campus,function(campusId){for(i=0;i<total;i++)if(campusId===campuses[i].id){controller.programCampuses.push(campuses[i]);break}})}})}).then(function(){TmProfileFactory.requestProgramsDatagridReload()}).then(function(){NotifierFactory.show(success?"success":"error",success?"Downgraded successfully!":"Downgrade failed!","Advanced Program")})},controller.handleUpgradeClick=function(){UserFactory.isClient()?TmProfileFactory.setProgramUpgradeFormVisibility(!0):TmProfileFactory.setProgramSubscribeFormVisibility(!0)},controller.handleUpgradeSubmit=function(){TmProfileProgramsService.upgrade(controller.program.id,null,controller.subscription.startDate,controller.subscription.endDate).then(controller.upgradeCallback)},controller.upgradeCallback=function(success){controller.upgradeInProgress=!1,TmProfileFactory.setProgramSubscribeFormVisibility(!1),success&&(TmProfileFactory.setReadOnly(!0),controller.program.advanced=!0,isNaN(success)||(controller.program.institutionCoreId=success),TmProfileFactory.setProgram(controller.program),TmProfileFactory.setUpgradeSubscription(!0),TmProfileFactory.requestProgramsDatagridReload()),NotifierFactory.show(success?"success":"error",success?"Upgraded successfully!":"Upgrade failed!","Basic Program")},controller.editCampus=function(id){if(void 0===id||!controller.programCampuses.length||!controller.programCampuses[id])return!1;controller.oldProgramCampuses=angular.copy(controller.programCampuses),controller.oldCampus=controller.oldProgramCampuses[id],controller.oldCampus.primary=controller.oldCampus.id===controller.program.primaryCampusId,controller.isEditCampus=!0,controller.isNewCampus=!1,controller.campusesWithChanges.push(controller.programCampuses[id].id)},controller.isProgramSubmitDisabled=function(){return controller.isEditCampus||controller.isNewCampus||controller.editInProgress||controller.addInProgress},controller.getCampusById=function(campusId){var total=controller.campusesFullList.length,i=0;for(i;i<total;i++)if(campusId===controller.campusesFullList[i].id)return controller.campusesFullList[i]},controller.clearTmpCampuses=function(campusId){angular.forEach(controller.campusesList,function(campus,key){TmProfileProgramsService.isTmpCampusId(campus.value)&&(campusId?campusId===campus.value&&(controller.campusesList[key]=null):controller.campusesList[key]=null)}),controller.campusesList&&(controller.campusesList=controller.campusesList.filter(function(item){return!!item}))},controller.resetCampusList=function(campusId){var campusObject;angular.forEach(controller.campusesList,function(campus){campusId?campusId===campus.value&&(campusObject=controller.getCampusById(campus.value),campus.label=campusObject.name):(campusObject=controller.getCampusById(campus.value),campus.label=campusObject.name)})},controller.newProgramCampusWatch=function(selectedCampusesIds){controller.isAddMode()&&controller.programCampusWatch(selectedCampusesIds)},controller.existingProgramCampusWatch=function(selectedCampusesIds){controller.isEditMode()&&controller.programCampusWatch(selectedCampusesIds)},controller.programCampusWatch=function(selectedCampusesIds){var index,campus,existingIds=[];if(selectedCampusesIds&&selectedCampusesIds.length){angular.forEach(controller.programCampuses,function(campus,index){-1!==selectedCampusesIds.indexOf(campus.id)?existingIds.push(campus.id):(controller.program.primaryCampusId===controller.programCampuses[index].id&&(controller.program.primaryCampusId=null),controller.programCampuses[index]=null,controller.clearTmpCampuses(campus.id),TmProfileProgramsService.isTmpCampusId(campus.id)||controller.resetCampusList(campus.id))}),controller.programCampuses=controller.programCampuses.filter(function(item){return!!item}),angular.forEach(selectedCampusesIds,function(campusId){index=existingIds.indexOf(campusId),(campus=controller.getCampusById(campusId))&&-1===index&&controller.programCampuses.push(campus)}),controller.programCampuses=controller.programCampuses.filter(function(item){return!!item});var totalAssignedCampuses=controller.programCampuses.length;totalAssignedCampuses&&!controller.program.primaryCampusId&&(controller.program.primaryCampusId=controller.programCampuses[totalAssignedCampuses-1].id)}else controller.programCampuses=[],controller.program.primaryCampusId=null,controller.clearTmpCampuses(),controller.resetCampusList();controller.isEditCampus=!1},controller.programHistoryCallback=function(data){angular.equals("{}",data)||(controller.programHistory=data,angular.forEach(controller.programHistory,function(item,key){if(angular.isArray(item))if("specialisations"===key){var humanReadable=[];angular.forEach(item,function(itemValue){angular.forEach(controller.specialisationsList,function(specListItem){angular.equals(specListItem.handle,itemValue)&&humanReadable.push(specListItem.name)})}),0===item.length&&humanReadable.push("No previous value"),controller.programHistory[key]=humanReadable.join(", ")}else controller.programHistory[key]=item.join(", "),0===item.length&&(controller.programHistory[key]="No previous value");angular.isObject(item)&&angular.forEach(item,function(subItem,subKey){angular.isArray(subItem)?(controller.programHistory[key][subKey]=subItem.join(", "),0===subItem.length&&(controller.programHistory[key][subKey]="No previous value")):angular.isString(subItem)&&0===subItem.length&&(controller.programHistory[key][subKey]="No previous value")}),"type"===key&&angular.forEach(controller.typesList,function(typeListItem){angular.equals(typeListItem.value,item)&&(controller.programHistory[key]=typeListItem.label)})}))},controller.loadProgramCampuses=function(){TmProfileService.getCampusesKeyValuePairs(controller.isDirectory||controller.programInstitutionCoreId===InstitutionFactory.getCoreId(),controller.programInstitutionCoreId).then(function(campusesList){controller.campusesList=campusesList;var exists;angular.forEach(controller.program.campus,function(assignedCampus,key){exists=!1,angular.forEach(controller.campusesList,function(availableCampus){availableCampus.value===assignedCampus&&(exists=!0)}),exists||delete controller.program.campus[key]}),controller.program.campus&&(controller.program.campus=controller.program.campus.filter(function(item){return void 0!==item}))}).then(function(){TmProfileService.getCampuses(controller.isDirectory||controller.programInstitutionCoreId===InstitutionFactory.getCoreId(),controller.programInstitutionCoreId).then(function(campuses){if(controller.campusesFullList=campuses,controller.programCampuses=[],controller.program.campus&&controller.campusesList){var i,total=campuses.length;angular.forEach(controller.program.campus,function(campusId){for(i=0;i<total;i++)if(campusId===campuses[i].id){controller.programCampuses.push(campuses[i]);break}})}})})},controller.getProgramWatch=function(program){controller.isEditCampus=!1,controller.isNewCampus=!1,!program||!controller.isAddMode()&&!controller.isEditMode()||controller.isEditMode()&&void 0!==program&&angular.equals({},program)||(controller.program=angular.copy(program),controller.isProgramAdvanced=program.advanced,controller.programInstitutionCoreId=controller.program.advanced?controller.program.institutionCoreId:controller.program.parentInstitutionCoreId||InstitutionFactory.getCoreId(),controller.isProgramAdvanced||controller.loadProgramCampuses(),controller.program.coreId&&!1===controller.isSchoolUser&&TmDirectoryService.getProgramHistory(controller.program.coreId).then(controller.programHistoryCallback))},controller.changeValidateRange=function(targetVar,target,min,max){null===controller[targetVar].stats&&(controller[targetVar].stats={}),controller[targetVar].stats.hasOwnProperty(target)&&void 0!==controller[targetVar].stats[target]||(controller[targetVar].stats[target]=min),controller[targetVar].stats[target]<min&&(controller[targetVar].stats[target]=min),controller[targetVar].stats[target]>max&&(controller[targetVar].stats[target]=max)},controller.formVisibilityWatch=function(isVisible,wasVisible){isVisible&&!wasVisible&&(controller.initForms(),controller.setValid(),controller.program.primaryCampusId=null)},controller.autoGenerateCordinates=function(){controller.newCampus.autoGenerate&&CampusesService.getCoordinatesByCampus(controller.newCampus).then(controller.getCoordinatesByCampusCallback)},controller.getCoordinatesByCampusCallback=function(response){response?!angular.isArray(response)||angular.isObject(response[0])||angular.isObject(response[1])?controller.coordinatesUpdated("warning","Address not found!"):(controller.newCampus.latitude=response[0],controller.newCampus.longitude=response[1],controller.coordinatesUpdated("success","Coordinates updated!")):controller.coordinatesUpdated("error","Error requesting coordinates!")},controller.autoGenerateCordinatesEdit=function(){controller.oldCampus.autoGenerate&&CampusesService.getCoordinatesByCampus(controller.oldCampus).then(controller.getCoordinatesByEditCampusCallback)},controller.getCoordinatesByEditCampusCallback=function(response){response?!angular.isArray(response)||angular.isObject(response[0])||angular.isObject(response[1])?controller.coordinatesUpdated("warning","Address not found!"):(controller.oldCampus.latitude=response[0],controller.oldCampus.longitude=response[1],controller.coordinatesUpdated("success","Coordinates updated!")):controller.coordinatesUpdated("error","Error requesting coordinates!")},controller.coordinatesUpdated=function(success,message){NotifierFactory.show(success,message,"Address Search")},controller.initForms=function(){controller.newProgram={parentInstitutionCoreId:null,campus:[],specialisations:[]},controller.newCampus={}},controller.initWatches=function(){WatchService.create($scope,TmProfileFactory.getProgramAddFormVisibility,controller.formVisibilityWatch),WatchService.create($scope,TmProfileFactory.getProgramEditFormVisibility,controller.formVisibilityWatch),WatchService.create($scope,TmProfileFactory.getProgramSubscribeFormVisibility,function(isVisible,wasVisible){isVisible&&!wasVisible?($scope.showEdiProgramForm=!1,$scope.showSubscriptionForm=!0):($scope.showEdiProgramForm=!0,$scope.showSubscriptionForm=!1)}),WatchService.create($scope,TmProfileFactory.getProgram,controller.getProgramWatch),WatchService.create($scope,TmProfileFactory.isReadOnly,function(isReadOnly){controller.isReadOnly=isReadOnly}),WatchService.create($scope,TmProfileFactory.isDirectory,function(isDirectory){controller.isDirectory=isDirectory}),WatchService.create($scope,function(){return controller.newProgram.campus},controller.newProgramCampusWatch),WatchService.create($scope,function(){return controller.program.campus},controller.existingProgramCampusWatch),WatchService.create($scope,function(){return controller.newCampus.autoGenerate},controller.autoGenerateCordinates),WatchService.create($scope,function(){return controller.oldCampus.autoGenerate},function(newValue,oldValue){void 0!==newValue&&void 0!==oldValue&&controller.autoGenerateCordinatesEdit()})},controller.init=function(){controller.initWatches(),TmProfileService.getSpecialisationsList().then(function(list){controller.specialisationsList=list}),InstitutionsListService.getCountries().then(function(list){controller.countryList=list}),controller.isSchoolUser=UserFactory.isClient()},WatchService.create($scope,TmProfileFactory.isProgramsTabSelected,function(isActive,wasActive){if(!isActive)return!1;alreadyInitialised||wasActive||(controller.init(),alreadyInitialised=!0),controller.initForms()}),WatchService.create($scope,TmProfileFactory.isBackend,function(isBackend){controller.isBackend=isBackend,!alreadyInitialised&&isBackend&&(controller.init(),controller.initForms(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfileProgramFormController",["$scope","$state","constants","$uibModal","NotifierFactory","CampusesService","TmProfileFactory","InstitutionFactory","TmProfileProgramsService","UserFactory","InstitutionsListService","TmProfileService","InstitutionsService","LoginService","ModalService","TmProfileProgramValidationService","WatchService","TmDirectoryService","UiSelectService",App.controllers.tmProfileProgramForm])}(window.angular,window.moment),function(angular){"use strict";function TmProgramValidation(){function isNotEmpty(form,programObject,fieldName){return!!(form&&(form.$pristine||form[fieldName]&&form[fieldName].$pristine)||programObject&&programObject[fieldName]&&programObject[fieldName].trim().length)}function isFloat(n){return Number(n)===n&&n%1!=0}function isValidStatsRange(form,programObject,fieldName,min,max){if(form&&(form.$pristine||form[fieldName]&&form[fieldName].$pristine))return!0;if(programObject&&programObject.stats&&programObject.stats[fieldName]){var value=programObject.stats[fieldName];return!isNaN(value)&&!isFloat(value)&&-1===String(value).indexOf(".")&&((value=parseInt(value,10))>=min&&value<=max)}return!0}var service={};return service.isValidName=function(form,programObject){return isNotEmpty(form,programObject,"name")},service.isValidCampusName=function(form,programObject){return isNotEmpty(form,programObject,"name")},service.isValidCampusCountry=function(form,programObject){return isNotEmpty(form,programObject,"country")},service.isValidCampusAddressLine1=function(form,programObject){return isNotEmpty(form,programObject,"addressLine1")},service.isValidCampusCity=function(form,programObject){return isNotEmpty(form,programObject,"city")},service.isValidType=function(form,programObject){return isNotEmpty(form,programObject,"type")},service.isValidDescription=function(form,programObject){return isNotEmpty(form,programObject,"description")},service.isValidCampusAssigned=function(form,programObject){return form&&form.$pristine||programObject&&programObject.campus&&programObject.campus.length},service.isValidAverageGmat=function(form,programObject){return isValidStatsRange(form,programObject,"avgGmat",400,800)},service.isValidClassSize=function(form,programObject){return isValidStatsRange(form,programObject,"classSize",1,2e3)},service.isValidAverageSalaryAfterGraduation=function(form,programObject){return isValidStatsRange(form,programObject,"avgSalaryAfterGraduation",0,2e5)},service.isValid=function(form,statsForm,programObject,isAdvanced){return isAdvanced=void 0!==isAdvanced&&isAdvanced,service.isValidDetails(form,programObject)&&service.isValidStats(statsForm,programObject)&&(!isAdvanced&&service.isValidCampusAssigned(form,programObject)||isAdvanced)},service.isValidDetails=function(form,programObject){return service.isValidName(form,programObject)&&service.isValidType(form,programObject)&&service.isValidDescription(form,programObject)},service.isValidStats=function(form,programObject){return service.isValidAverageGmat(form,programObject)&&service.isValidClassSize(form,programObject)&&service.isValidAverageSalaryAfterGraduation(form,programObject)},service.isValidCampus=function(form,programObject){return service.isValidCampusName(form,programObject)&&service.isValidCampusCountry(form,programObject)&&service.isValidCampusAddressLine1(form,programObject)&&service.isValidCampusCity(form,programObject)},service}angular.module("qsHub").service("TmProfileProgramValidationService",[TmProgramValidation])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmProfilePublish=function($scope,constants,PublishService,InstitutionFactory,TmProfileFactory,TmProfileHistoryLogFactory,UserFactory,WebSocketsService,WatchService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.subscribedTo=[],$scope.institutionData={},$scope.sections={},$scope.institutionId=null,$scope.handlePublish=function(section,publishProgramsBasic,publishProgramsAdvanced){section.publishDisabled=!0,section.status=constants.publishStatus.pending,section.statusMessage="";var publishBasicPrograms=publishProgramsBasic?"yes":"no",publishAdvancedPrograms=publishProgramsAdvanced?"yes":"no";PublishService.publish($scope.institutionId,publishBasicPrograms,publishAdvancedPrograms).then(function(response){controller.publishCallback(section,response)})},controller.isProfileEnabled=function(){return!InstitutionFactory.isTmEnabled()},controller.publishCallback=function(section,response){if(!response||!angular.isDefined(response.feedId))return section.status=constants.publishStatus.failure,!1;PublishService.setStatus(constants.publishStatus.pending),section.feedId=response.feedId,section.status=constants.publishStatus.pending},$scope.isTm=function(type){return"tm"===type},$scope.institutionHasAdvancedPrograms=function(){return $scope.institutionData.typeId===constants.typeId.topLevelInstitutionId||$scope.institutionData.typeId===constants.typeId.clientDepartmentId},controller.publishSubscribe=function(){angular.forEach($scope.sections,function(section){var subscribeType=$scope.institutionId+"tm";-1===controller.subscribedTo.indexOf(subscribeType)&&(controller.subscribedTo.push(subscribeType),WebSocketsService.subscribe(subscribeType,"PublishStatus"+subscribeType,function(response){controller.sectionPublishStatusCallback(section,response)}))})},controller.sectionPublishStatusCallback=function(section,response){section.publishDisabled=!0;var status=response&&response.status||constants.publishStatus.failure;switch(section.status=status,status){case constants.publishStatus.failure:case constants.publishStatus.success:section.publishDisabled=!1,section.statusMessage=response.statusMessage,TmProfileHistoryLogFactory.setReload(!0)}status===constants.publishStatus.success&&(section.viewDisabled=!response.nodeId,section.url=constants.drupal.tm.url+"/node/"+response.nodeId)},controller.publishStatusCallback=function(publishStatus){angular.forEach($scope.sections,function(section){section.publishDisabled=!0,publishStatus.hasOwnProperty("tm")&&angular.isDefined(publishStatus.tm)&&(section.status=publishStatus.tm.status,section.statusMessage=publishStatus.tm.message,0!==section.status.length&&section.status!==constants.publishStatus.success&&section.status!==constants.publishStatus.failure||(section.publishDisabled=!1))})},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getData,function(newValue){newValue&&($scope.institutionData=newValue,$scope.institutionId=newValue.id,$scope.sections=PublishService.getSections(!UserFactory.isClient(),$scope.institutionData),controller.publishSubscribe(),PublishService.getPublishStatus($scope.institutionId).then(function(response){controller.publishStatusCallback(response)}))})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isPublishTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfilePublishController",["$scope","constants","TmProfilePublishService","InstitutionFactory","TmProfileFactory","TmProfileHistoryLogFactory","UserFactory","WebSocketsService","WatchService",App.controllers.tmProfilePublish])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmProfilePublishLogs=function($scope,$state,PublishService,InstitutionFactory,TmProfileFactory,TmProfileHistoryLogFactory,UserFactory,WatchService){var controller=this,alreadyInitialised=!1;controller.updatePublishLogs=function(){PublishService.getPublishLogs(InstitutionFactory.getId()).then(function(response){$scope.publishLogs=response})},$scope.fetchingPublishLog=function(){return!1},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getData,function(newValue){newValue&&(InstitutionFactory.isTmSubscribed()&&!UserFactory.noAccess($state.current.name)?controller.updatePublishLogs():$scope.publishLogs=null)}),WatchService.create($scope,TmProfileHistoryLogFactory.isReloadRequired,function(newValue){newValue&&(InstitutionFactory.isTmSubscribed()&&!UserFactory.noAccess($state.current.name)?(TmProfileHistoryLogFactory.setReload(!1),controller.updatePublishLogs()):$scope.publishLogs=null)}),WatchService.create($scope,PublishService.getStatus,function(value){value&&controller.updatePublishLogs()})},controller.init=function(){controller.initWatches()},WatchService.create($scope,TmProfileFactory.isPublishTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfilePublishLogsController",["$scope","$state","TmProfilePublishService","InstitutionFactory","TmProfileFactory","TmProfileHistoryLogFactory","UserFactory","WatchService",App.controllers.tmProfilePublishLogs])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmProfilePublishService=function($resource,$q,$log,constants,InstitutionService){var service={deferred:{},isStatus:null};return service.getPublishModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-feed/publish/:id/include-basic/:basic/include-advanced/:advanced")},service.getPublishStatusModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-feed/publish-status/:id")},service.getLogsModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-feed/publish-logs/:id?sorting[createdAt]=desc&fieldName=type,status,createdAt,createdByFullName")},service.getNodeId=function(institutionData,nodeType){return institutionData&&institutionData.nids&&institutionData.nids[nodeType]?institutionData.nids[nodeType]:null},service.getSections=function(qsUser,institutionData){qsUser=qsUser||!1;var tmUrl=constants.drupal.tm.url,nodeId=service.getNodeId(institutionData,"tm"),institutionCoreId=institutionData.coreId;return[{type:institutionData.typeId!==constants.typeId.advancedProgramId?"tm":"advanced-program-profile",name:"MBA",url:tmUrl+"/node/"+nodeId,feedPreviewUrl:constants.api.institutions.url+"/v1/tm-feed/core-id/"+institutionCoreId,viewDisabled:!InstitutionService.isTmViewingEnabled(institutionData),publishProgramsBasic:!0,publishProgramsAdvanced:!1}]},service.publish=function(institutionId,publishBasicPrograms,publishAdvancedPrograms){if(!institutionId||!publishBasicPrograms||!publishAdvancedPrograms){var deferred=$q.defer();return deferred.resolve(!1),deferred.promise}return service.getPublishModel().get({id:institutionId,basic:publishBasicPrograms,advanced:publishAdvancedPrograms}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.toJSON()},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getPublishLogs=function(institutionId){if(!institutionId){var deferred=$q.defer();return deferred.resolve(!1),deferred.promise}return service.getLogsModel().get({id:institutionId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getPublishStatus=function(institutionId){return service.getPublishStatusModel().get({id:institutionId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.setStatus=function(statusValue){service.isStatus=statusValue},service.getStatus=function(){return service.isStatus},service},angular.module("qsHub").service("TmProfilePublishService",["$resource","$q","$log","constants","InstitutionService",App.services.TmProfilePublishService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmProfileProgramStats=function($scope,constants,NotifierFactory,TmProfileFactory,InstitutionFactory,UserFactory,TmProfileService,TmProfileProgramStatsService,TmProfileProgramValidationService,WatchService,UiSelectService){var controller=this,alreadyInitialised=!1;controller.devMode=constants.dev,controller.feesRangesList=TmProfileService.getFeesRangesList(),controller.monthsList=TmProfileService.getMonthsList(),controller.accreditationsList=TmProfileService.getAccreditationsList(),controller.lengthList=TmProfileService.getLengthList(),controller.isSchoolUser=UserFactory.isClient(),controller.forms={},controller.editInProgress=!1,controller.percentList=TmProfileService.getPercentList(),controller.yearList1850=TmProfileService.getYearList(18,50),controller.yearList020=TmProfileService.getYearList(0,20),controller.offerScholarshipsList=UiSelectService.getYesNoOptions(),$scope.stats={},$scope.specialisations=[],$scope.program={},controller.getEditButtonTitle=function(){return UserFactory.isClient()?"Request Edit Advanced Program":"Update"},controller.handleUpdateClick=function(){if(controller.forms.addProgramStatsForm.$setDirty(),controller.forms.addProgramStatsForm.avgGmat.$setDirty(),controller.forms.addProgramStatsForm.classSize.$setDirty(),controller.forms.addProgramStatsForm.avgSalaryAfterGraduation.$setDirty(),controller.editInProgress||!controller.forms.addProgramStatsForm||!controller.isValid())return!1;controller.editInProgress=!0,controller.programStatisticObject={stats:$scope.stats,specialisations:$scope.specialisations},TmProfileProgramStatsService.update($scope.programId,controller.programStatisticObject).then(controller.updateCallback)},controller.isValid=function(){return controller.isValidAverageGmat()&&controller.isValidClassSize()&&controller.isValidAverageSalaryAfterGraduation()},controller.setValid=function(fieldName,stats){controller.forms.addProgramStatsForm&&(fieldName?stats&&controller.forms.addProgramStatsForm[fieldName].$setPristine():controller.forms.addProgramStatsForm.$setPristine())},controller.updateCallback=function(response){NotifierFactory.show(response?"success":"error",response?"Updated successfully!":"Update failed!","Edit Program"),controller.editInProgress=!1},controller.isValidAverageGmat=function(){return TmProfileProgramValidationService.isValidAverageGmat(controller.forms.addProgramStatsForm,$scope.program)},controller.isValidClassSize=function(){return TmProfileProgramValidationService.isValidClassSize(controller.forms.addProgramStatsForm,$scope.program)},controller.isValidAverageSalaryAfterGraduation=function(){return TmProfileProgramValidationService.isValidAverageSalaryAfterGraduation(controller.forms.addProgramStatsForm,$scope.program)},controller.getCoreIdWatch=function(coreId){if(!coreId)return!1;TmProfileProgramStatsService.getStats(coreId).then(function(data){$scope.program=data,$scope.stats=data.stats,data.hasOwnProperty("specialisations")&&angular.isArray(data.specialisations)&&data.specialisations.length>0&&($scope.specialisations=data.specialisations),$scope.programId=data.id,angular.forEach(TmProfileService.getProgramStatusList(),function(item){item.value===data.status&&(data.status=item.label)})})},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getCoreId,controller.getCoreIdWatch)},controller.init=function(){controller.initWatches(),TmProfileService.getSpecialisationsList().then(function(list){controller.specialisationsList=list})},WatchService.create($scope,TmProfileFactory.isStatsTabSelected,function(isActive,wasActive){alreadyInitialised||!isActive||wasActive||(controller.init(),alreadyInitialised=!0)})},angular.module("qsHub").controller("TmProfileProgramStatsController",["$scope","constants","NotifierFactory","TmProfileFactory","InstitutionFactory","UserFactory","TmProfileService","TmProfileProgramStatsService","TmProfileProgramValidationService","WatchService","UiSelectService",App.controllers.tmProfileProgramStats])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.TmProfileProgramsStatsService=function($resource,$log,constants){var service={};return service.getFetchModel=function(){return $resource(constants.api.institutions.url+"/v1/list/tm-programs?filter[institutionCoreId]==:coreId&page=1&limit=1",{},{get:{cancellable:!0}})},service.getStatsModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-program/:id/stats",null,{update:{method:"PATCH"}})},service.getStats=function(coreId){if(!coreId)throw"Missing Required";return service.getFetchModel().get({coreId:coreId}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data.results?{id:data.results[0].id,stats:data.results[0].stats,specialisations:data.results[0].specialisations,coreId:data.results[0].coreId,institutionCoreId:data.results[0].institutionCoreId,nodeId:data.results[0].nodeId,status:data.results[0].status}:{}},function(error){return constants.dev&&$log.log("request failed"+error),{}})},service.update=function(id,stats){if(!id)throw"Missing Required";return service.getStatsModel().update({id:id},stats).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service},angular.module("qsHub").service("TmProfileProgramStatsService",["$resource","$log","constants",App.services.TmProfileProgramsStatsService])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.tmDirectory=function($scope,$timeout,constants,uiGridConstants,uiGridExporterConstants,uiGridExporterService,TmProfileService,TmDirectoryService,TmProfileProgramsService,InstitutionsListService,TmDirectoryFactory,TmProfileFactory,NotifierFactory,InstitutionFactory,GridService,WatchService,TimeService){var controller=this;controller.isDatagridRendered=!1,controller.showInfoBlock=!1,controller.showProgramEditForm=!1,controller.editInProgress=!1,controller.defaultPaginationOptions={page:1,limit:25},controller.paginationOptions=GridService.getColumnsFilters(constants.gridNameSpaces.tmDirectoryGridFilters,[]),controller.columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.tmDirectoryGridVisibility),controller.sendEmailToClient=!0,controller.programStatus=null,controller.TmProfileProgramFormController=null,$scope.selectedProgramId=null,controller.closeEditForm=function(){TmDirectoryFactory.setEditMode(!1),controller.showInfoBlock=!1,controller.toggleDatagridSettings(),$scope.selectedProgramId=null,TmProfileFactory.setDirectory(!1)},controller.handleDeleteAndPublishClick=function(){TmDirectoryService.delete($scope.selectedProgramId,!0,controller.sendEmailToClient).then(function(success){controller.closeEditForm(),NotifierFactory.show(success?"success":"error",success?"Deleted successfully! Publishing is in the queue.":"Deletion failed!","Program Deletion & Publishing"),controller.reloadDatagrid()})},controller.getFormTitle=function(){return TmProfileService.isProgramPendingApprove(controller.programStatus)?"Requested (New)":TmProfileService.isProgramPendingEdit(controller.programStatus)?"Requested (Edit)":TmProfileService.isProgramPendingDeletion(controller.programStatus)?"Pending (Deletion)":"Edit Program"},controller.handleCancelDeletionClick=function(){TmDirectoryService.revertStatus($scope.selectedProgramId,controller.sendEmailToClient).then(function(success){controller.closeEditForm(),NotifierFactory.show(success?"success":"error",success?"Status reverted successfully!":"Status revert failed!","Program Status Revert"),controller.reloadDatagrid()})},controller.handleProgramApproveClick=function(TmProfileProgramFormController,publish){if(controller.publish=publish||!1,controller.TmProfileProgramFormController=TmProfileProgramFormController,controller.TmProfileProgramFormController.submitted=!0,controller.TmProfileProgramFormController.forms.editProgramDetailsForm.$setDirty(),controller.TmProfileProgramFormController.forms.editProgramDetailsForm.name.$setDirty(),controller.TmProfileProgramFormController.forms.editProgramDetailsForm.type.$setDirty(),controller.TmProfileProgramFormController.forms.editProgramDetailsForm.description.$setDirty(),controller.TmProfileProgramFormController.forms.editProgramStatsForm.$setDirty(),controller.TmProfileProgramFormController.forms.editProgramStatsForm.avgGmat.$setDirty(),controller.TmProfileProgramFormController.forms.editProgramStatsForm.classSize.$setDirty(),controller.TmProfileProgramFormController.forms.editProgramStatsForm.avgSalaryAfterGraduation.$setDirty(),controller.editInProgress||!controller.TmProfileProgramFormController.forms.editProgramDetailsForm||!controller.TmProfileProgramFormController.forms.editProgramStatsForm||!controller.TmProfileProgramFormController.isValid(controller.isProgramAdvanced))return!1;if(controller.editInProgress=!0,controller.totalProcessedCampuses=0,controller.isAdvancedProgram)TmDirectoryService.approve(controller.TmProfileProgramFormController.program,controller.publish,controller.sendEmailToClient).then(controller.approveCallback);else{var institutionCoreId=controller.TmProfileProgramFormController.programInstitutionCoreId,hasTmp=!1;angular.forEach(controller.TmProfileProgramFormController.programCampuses,function(campus){var campusData=angular.copy(campus),isTmp=TmProfileProgramsService.isTmpCampusId(campus.id);isTmp&&(hasTmp=!0,delete campusData.id),isTmp||-1!==controller.TmProfileProgramFormController.campusesWithChanges.indexOf(campus.id)?InstitutionsListService.saveCampus(institutionCoreId,campusData).then(function(response){controller.totalProcessedCampuses++,TmProfileProgramsService.isTmpCampusId(campus.id)&&(delete controller.TmProfileProgramFormController.program.campus[controller.TmProfileProgramFormController.program.campus.indexOf(campus.id)],controller.TmProfileProgramFormController.program.campus.push(response.insertedId),controller.TmProfileProgramFormController.program.primaryCampusId===campus.id&&(controller.TmProfileProgramFormController.program.primaryCampusId=response.insertedId),institutionCoreId===InstitutionFactory.getCoreId()&&(campus.id=response.insertedId,InstitutionFactory.addCampus(campus))),controller.TmProfileProgramFormController.programCampuses.length===controller.totalProcessedCampuses&&(controller.TmProfileProgramFormController.program.campus=controller.TmProfileProgramFormController.program.campus.filter(function(item){return null!==item}),TmDirectoryService.approve(controller.TmProfileProgramFormController.program,publish,controller.sendEmailToClient).then(controller.approveCallback))}):controller.totalProcessedCampuses++}),hasTmp||controller.TmProfileProgramFormController.campusesWithChanges.length||TmDirectoryService.approve(controller.TmProfileProgramFormController.program,controller.publish,controller.sendEmailToClient).then(controller.approveCallback)}},controller.approveCallback=function(response){controller.closeEditForm();var succeed="success",publishMessage="Approved successfully! Publishing is in the queue.";if(controller.publish&&angular.isObject(response)){var publishSuccess=response.published;succeed=publishSuccess?succeed:"warning",publishMessage=publishSuccess?publishMessage:"Edit approved successfully, but unable to publish. Parent institution needs to be published first"}NotifierFactory.show(response?succeed:"error",response?controller.publish?publishMessage:"Approved successfully!":"Approving failed!",controller.publish?"Program Approve & Publishing":"Program Approve","warning"===succeed),controller.editInProgress=!1,controller.reloadDatagrid(),response&&TmProfileService.clearCache()},controller.reloadDatagrid=function(){controller.getPage()},controller.handleDatagridRowClick=function(program){TmProfileService.isProgramPendingApprove(program.status)||TmProfileService.isProgramPendingEdit(program.status)?controller.approveButtonTitle="Approve":controller.approveButtonTitle="Update",TmProfileFactory.setDirectory(!0),controller.TmProfileProgramFormController&&(controller.TmProfileProgramFormController.submitted=!1),$scope.selectedProgramId&&program.id!==$scope.selectedProgramId?TmDirectoryFactory.setEditMode(!0):!$scope.selectedProgramId&&program.id?(TmDirectoryFactory.setEditMode(!0),$scope.showProgramAddForm=!1,$scope.showProgramEditForm=!0):(TmDirectoryFactory.setEditMode(!1),$scope.showProgramAddForm=!1,$scope.showProgramEditForm=!1),controller.showInfoBlock=TmDirectoryFactory.isEditMode(),controller.toggleDatagridSettings(),$scope.selectedProgramId=controller.showInfoBlock?program.id:null,controller.programStatus=program.status,controller.isProgramAdvanced=program.advanced,controller.showProgramEditForm=controller.showInfoBlock,controller.pendingDeletion=TmProfileService.isProgramPendingDeletion(program.status),controller.approved=TmProfileService.isProgramApproved(program.status)||TmProfileService.isProgramEditApproved(program.status),controller.readOnly=controller.pendingDeletion,controller.sendEmailToClient=!controller.approved,TmProfileFactory.setProgram(angular.copy(program)),TmProfileFactory.setReadOnly(controller.readOnly)},controller.toggleDatagridSettings=function(){$scope.gridOptions.enableGridMenu=!controller.showInfoBlock,$scope.gridOptions.enableColumnResizing=!controller.showInfoBlock,$scope.gridOptions.enablePaginationControls=!controller.showInfoBlock},controller.getSortColumn=function(column){return(column.name||column.field).replace("AsString","")},controller.handleGridFiltersChanges=function(){var latestSortKey,filterColumn,sortKeys=[];angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.filters&&void 0!==column.filters[0].term&&column.filters[0].type===uiGridConstants.filter.SELECT&&"object"==typeof column.filters[0].term&&null!==column.filters[0].term&&void 0!==column.filters[0].term.value&&(column.filters[0].term=column.filters[0].term.value),void 0!==column.sort.priority&&(sortKeys[column.sort.priority]=controller.getSortColumn(column))}),sortKeys.length>1&&(latestSortKey=sortKeys.pop(),angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.sort.priority&&controller.getSortColumn(column)!==latestSortKey&&(column.sort={})})),controller.paginationOptions=angular.copy(controller.defaultPaginationOptions),angular.forEach($scope.gridApi.grid.columns,function(column){void 0!==column.filters&&"undefined"!==column.filters[0].term&&""!==column.filters[0].term&&(filterColumn=column.filters[0].column?column.filters[0].column:column.field,controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term),void 0!==column.sort.direction&&(controller.paginationOptions["sorting["+controller.getSortColumn(column)+"]"]=column.sort.direction)}),GridService.storeColumnsFilters(constants.gridNameSpaces.tmDirectoryGridFilters,controller.paginationOptions),angular.isDefined($scope.filterTimeout)&&$timeout.cancel($scope.filterTimeout),$scope.filterTimeout=$timeout(function(){controller.getPage()},500)},controller.getPage=function(){return TmDirectoryService.getAllPrograms(angular.merge({},controller.paginationOptions,controller.defaultPaginationOptions)).then(function(response){$scope.gridOptions||($scope.gridOptions={}),$scope.gridOptions.totalItems=response.totalMatching,$scope.gridOptions.data=response.results,$scope.gridOptions.minRowsToShow=response.totalFiltered.length<25?response.totalFiltered:25})};var selectTemplate="/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html",selectCellTemplate="/scripts/shared/ui-grid/templates/selectCellTemplate.html";controller.initDataGrid=function(){controller.getPage().then(function(){$scope.gridOptions=angular.extend({},$scope.gridOptions,{enableSorting:!0,exporterMenuCsv:!0,exporterMenuAllData:!1,exporterMenuPdf:!1,enableGridMenu:!0,showGridFooter:!1,selectedItems:$scope.selectedProgramId,enableFiltering:!0,useExternalFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,paginationPageSizes:[25,50,100],paginationPageSize:25,useExternalPagination:!0,useExternalSorting:!0,exporterCsvFilename:"tm-directory-export."+TimeService.now()+".csv",gridMenuCustomItems:[{title:" Export all data as csv",action:function(){return TmDirectoryService.getAllPrograms(angular.merge({},controller.paginationOptions,{page:1,limit:25e4})).then(function(response){var exportColumnHeaders=uiGridExporterService.getColumnHeaders($scope.gridApi.grid,uiGridExporterConstants.VISIBLE),exportData=TmDirectoryService.getCsvData($scope.gridApi.grid.columns,response.results),csvContent=uiGridExporterService.formatAsCsv(exportColumnHeaders,exportData,$scope.gridOptions.exporterCsvColumnSeparator);uiGridExporterService.downloadFile($scope.gridOptions.exporterCsvFilename,csvContent,$scope.gridOptions.exporterOlderExcelCompatibility)})},order:210}],rowTemplate:"/scripts/components/profiles/tm/programs/datagrid/rowTemplate.html",columnDefs:[{displayName:"ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"coreIdAsString",!0),field:"coreIdAsString",maxWidth:80,filter:{term:GridService.getFilterByField(controller.paginationOptions,"coreIdAsString","")}},{displayName:"Name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"name",!0),field:"name",name:"nameLowerCase",filter:{term:GridService.getFilterByField(controller.paginationOptions,"name","")}},{displayName:"Type",visible:GridService.getVisibilityByField(controller.columnsVisibility,"type",!0),field:"type",filter:{type:uiGridConstants.filter.SELECT,selectOptions:TmProfileService.getProgramTypesList(),term:GridService.getFilterByField(controller.paginationOptions,"type")},filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Advanced",visible:GridService.getVisibilityByField(controller.columnsVisibility,"advanced",!0),field:"advanced",filter:{type:uiGridConstants.filter.SELECT,selectOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],term:GridService.getFilterByField(controller.paginationOptions,"advanced")},maxWidth:100,filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate},{displayName:"Institution ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"institutionCoreIdAsString",!0),field:"institutionCoreIdAsString",filter:{term:GridService.getFilterByField(controller.paginationOptions,"institutionCoreIdAsString")}},{displayName:"Institution Name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"institutionName",!0),field:"institutionName",name:"institutionNameLowerCase",filter:{term:GridService.getFilterByField(controller.paginationOptions,"institutionName")}},{displayName:"Parent Institution ID",visible:GridService.getVisibilityByField(controller.columnsVisibility,"parentInstitutionCoreIdAsString",!0),field:"parentInstitutionCoreIdAsString",filter:{term:GridService.getFilterByField(controller.paginationOptions,"parentInstitutionCoreIdAsString")}},{displayName:"Parent Institution Name",visible:GridService.getVisibilityByField(controller.columnsVisibility,"parentInstitutionName",!0),field:"parentInstitutionName",name:"parentInstitutionNameLowerCase",filter:{term:GridService.getFilterByField(controller.paginationOptions,"parentInstitutionName")}},{displayName:"Status",visible:GridService.getVisibilityByField(controller.columnsVisibility,"status",!0),filter:{type:uiGridConstants.filter.SELECT,selectOptions:TmProfileService.getProgramStatusList(),term:GridService.getFilterByField(controller.paginationOptions,"status")},field:"status",maxWidth:130,filterHeaderTemplate:selectTemplate,cellTemplate:selectCellTemplate}],onRegisterApi:function(gridApi){var columnsVisibilityBeforeChanges=angular.copy($scope.gridOptions.columnDefs);$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){controller.handleDatagridRowClick(row.entity)}),gridApi.core.on.rowsRendered($scope,function(){controller.isDatagridRendered=!0}),gridApi.pagination.on.paginationChanged($scope,function(newPage,limit){controller.defaultPaginationOptions.page=newPage,controller.defaultPaginationOptions.limit=limit,controller.getPage()}),$scope.gridApi.core.on.filterChanged($scope,controller.handleGridFiltersChanges),$scope.gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),$scope.gridApi.core.on.sortChanged($scope,controller.handleGridFiltersChanges),GridService.resetExtend(columnsVisibilityBeforeChanges,$scope.gridOptions.columnDefs)}})})},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.tmDirectoryGridVisibility),reload=!1;columnsVisibility&&angular.forEach($scope.gridOptions.columnDefs,function(column,key){!0===columnsVisibility[column.field]&&!1===column.visible&&($scope.gridOptions.columnDefs[key].filter.term=null,controller.paginationOptions["filter["+column.field+"]"]=null,reload=!0)}),controller.columnsVisibility=GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs),GridService.storeColumnsVisibility(constants.gridNameSpaces.tmDirectoryGridVisibility,controller.columnsVisibility),reload&&controller.getPage()},controller.init=function(){controller.initDataGrid(),TmProfileFactory.setBackend(!0)},controller.init()},angular.module("qsHub").controller("TmDirectoryController",["$scope","$timeout","constants","uiGridConstants","uiGridExporterConstants","uiGridExporterService","TmProfileService","TmDirectoryService","TmProfileProgramsService","InstitutionsListService","TmDirectoryFactory","TmProfileFactory","NotifierFactory","InstitutionFactory","UiGridService","WatchService","TimeService",App.controllers.tmDirectory])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.tmDirectory=function($resource,$q,$log,constants){var service={tmProgramHistory:null,deferred:{getTmProgramHistory:null}};return service.getProgramsListModel=function(){return $resource(constants.api.institutions.url+"/v1/list/tm-programs",null,{get:{cancellable:!0}})},service.getProgramStatusRevertModel=function(){return $resource(constants.api.institutions.url+"/v1/admin/tm-program/:id/revert-status")},service.getUpdateModel=function(){return $resource(constants.api.institutions.url+"/v1/admin/tm-program/:id",null,{update:{method:"PATCH"}})},service.getProgramHistoryModel=function(){return $resource(constants.api.institutions.url+"/v1/tm-program-history/:id")},service.revertStatus=function(id,sendEmailToClient){if(constants.dev)var endTime,startTime=(new Date).getTime();return service.getProgramStatusRevertModel().get({id:id,sendEmailToClient:sendEmailToClient}).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.delete=function(id,publish,sendEmailToClient){return publish=publish||!1,sendEmailToClient=sendEmailToClient||!1,service.getUpdateModel().delete({id:id,publish:publish,sendEmailToClient:sendEmailToClient}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!0},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.approve=function(program,publish,sendEmailToClient){return publish=publish||!1,sendEmailToClient=sendEmailToClient||!1,service.getUpdateModel().update({id:program.id,publish:publish,sendEmailToClient:sendEmailToClient},program).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),!publish||!angular.isDefined(data.published)||{published:data.published}},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getAllPrograms=function(params){if(constants.dev)var endTime,startTime=(new Date).getTime();var hasSorting=!1;if(params)for(var key in params)if(-1!==key.indexOf("sorting")){hasSorting=!0;break}return hasSorting||(params["sorting[createdAt]"]="desc"),service.getProgramsListModel().get(params).$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getCsvData=function(columns,rows){var cellValue,extractedRow,data=[];return rows.forEach(function(row){extractedRow=[],columns.forEach(function(gridCol){if(gridCol.visible&&!0!==gridCol.colDef.exporterSuppressExport){cellValue="",gridCol.colDef.field&&row[gridCol.colDef.field]&&(cellValue=row[gridCol.colDef.field]);var extractedField={value:cellValue};extractedRow.push(extractedField)}}),data.push(extractedRow)}),data},service.getProgramHistory=function(id){if(service.deferred.getTmProgramHistory)return service.deferred.getTmProgramHistory.promise;service.deferred.getTmProgramHistory=$q.defer();var deferred=service.deferred.getTmProgramHistory;return service.tmProgramHistory?deferred.resolve(service.tmProgramHistory):service.getProgramHistoryModel().get({id:id},function(data){constants.dev&&$log.log("success, got data: ",data),service.tmProgramHistory=data,deferred.resolve(service.tmProgramHistory),deferred=null,service.tmProgramHistory=null,service.deferred.getTmProgramHistory=null},function(error){constants.dev&&$log.log("request failed"+error),service.tmProgramHistory=[],deferred.resolve(service.tmProgramHistory),deferred=null,service.tmProgramHistory=null,service.deferred.getTmProgramHistory=null}),deferred.promise},service},angular.module("qsHub").service("TmDirectoryService",["$resource","$q","$log","constants",App.services.tmDirectory])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{factories:{}})).factories.TmDirectory=function(){var editMode;return{isEditMode:function(){return!!editMode},setEditMode:function(enabled){editMode=enabled}}},angular.module("qsHub").factory("TmDirectoryFactory",[App.factories.TmDirectory])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.contactsList=function($scope,constants,ContactsService,InstitutionsUsersFactory,InstitutionFactory,WatchService){var controller=this;controller.devMode=constants.dev,controller.getCoreIdWatch=function(coreId){coreId&&ContactsService.getDepartmentsCoreIds(coreId).then(function(departmentsCoreIds){departmentsCoreIds.push(coreId),InstitutionsUsersFactory.setRequestFilters({"filter[primaryInstitutionCoreId][]":departmentsCoreIds})})},controller.initWatches=function(){WatchService.create($scope,InstitutionFactory.getCoreId,controller.getCoreIdWatch)},controller.$onInit=function(){controller.initWatches()}},angular.module("qsHub").controller("ContactsListController",["$scope","constants","ContactsService","InstitutionsUsersFactory","InstitutionFactory","WatchService",App.controllers.contactsList])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Contacts=function($log,constants,RequestsQueueService,InstitutionsListService){var service={};return service.getDepartmentsCoreIds=function(parentInstitutionCoreId){if(constants.dev)var endTime,startTime=(new Date).getTime();RequestsQueueService.cancelAll("getDepartmentsCoreIds");var Api=InstitutionsListService.getInstitutionListModel().get({"filter[parentCoreId]":"="+parentInstitutionCoreId,"filter[typeId][]":[constants.typeId.clientDepartmentId,constants.typeId.advancedProgramId],"columns[]":"coreId"});return RequestsQueueService.add(Api,"getDepartmentsCoreIds"),Api.$promise.then(function(data){return constants.dev&&(endTime=(new Date).getTime(),$log.log("success, got data: ",data,"in "+(endTime-startTime)+" ms")),RequestsQueueService.cancelAll("getDepartmentsCoreIds"),service.formatList(data.results)},function(error){if(!constants.dev)return[];$log.log("request failed"+error)})},service.formatList=function(list){var formattedList=[];return angular.forEach(list,function(value){value&&value.coreId&&formattedList.push(value.coreId)}),formattedList},service},angular.module("qsHub").service("ContactsService",["$log","constants","RequestsQueueService","InstitutionsListService",App.services.Contacts])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.institutionsUsersListClone=function($scope,$resource,$timeout,constants,uiGridConstants,InstitutionsUsersListService,UsersListService,NotifierFactory,InstitutionsUsersListFactory,InstitutionsUsersFactory,WatchService,UserTypesService,PasswordService,GridService,UserFactory){var controller=this;controller.devMode=constants.dev,controller.defaultFilters={lastLoginAtRange:{startDate:null,endDate:null}},controller.showDatagrid=!1,controller.grid={},controller.defaultPaginationOptions={page:1,limit:constants.datagrid.contacts.defaultRowsNumber},controller.paginationOptions=GridService.getColumnsFilters(constants.gridNameSpaces.contactsGridFilters,[]),controller.columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.contactsGridVisibility),controller.isDatagridReloading=!1,controller.isDatagridRendered=!1,controller.rolesBeforeChanges=[],$scope.user={},$scope.newUser={},$scope.newUserPanelNotClosed=!1,$scope.userBeforeChanges={},$scope.forms={},$scope.filterActive=!0,$scope.disabledInstitutionsUserListSubTabs={personalDetails:!1,permissions:!0,institutions:!0},$scope.filters=null,$scope.columnsBeforeHide=[],$scope.visible={},controller.hasWriteAccess=UserFactory.hasInstitutionsUsersAccess(),controller.userTypes=UserTypesService.getUserTypes(),controller.initSelectedItem=function(){$scope.selectedItem={},$scope.selectedItem.selectedOptionType=controller.userTypes[1]},controller.initSelectedItem(),controller.contactTypesList=[],InstitutionsUsersListService.getContactTypes().then(function(contactTypes){controller.contactTypes=contactTypes,angular.forEach(contactTypes,function(item){controller.contactTypesList.push({value:item.handle,label:item.name})})}),InstitutionsUsersListService.getRoles().then(function(rolesList){controller.rolesList=rolesList}),InstitutionsUsersListService.getSections().then(function(sectionsList){controller.sectionsList=sectionsList}),$scope.handleLastLoginAtDateRange=function(event){event.model.startDate&&event.model.endDate&&(controller.grid.options.columnDefs[7].filters[0].term=event.model.startDate.format("x"),controller.grid.options.columnDefs[7].filters[1].term=event.model.endDate.format("x"))},controller.handleGridVisibleChanges=function(){var columnsVisibility=GridService.getColumnsVisibility(constants.gridNameSpaces.contactsGridVisibility),reload=!1;columnsVisibility&&$scope.filterActive&&angular.forEach(controller.grid.options.columnDefs,function(column,key){!0===columnsVisibility[column.field]&&!1===column.visible&&(controller.grid.options.columnDefs[key].filter.term=null,controller.paginationOptions["filter["+controller.convertVisibleColumnsField(column.field)+"]"]=null,reload=!0,"lastLoginAt"===column.field&&(delete controller.grid.options.columnDefs[key].filters[0].term,$scope.filters.lastLoginAtRange={startDate:null,endDate:null},controller.paginationOptions["filter["+column.field+"]"]=$scope.filters.lastLoginAtRange))}),$scope.filterActive&&(controller.columnsVisibility=GridService.getGridColumnsVisibility(controller.grid.options.columnDefs),GridService.storeColumnsVisibility(constants.gridNameSpaces.contactsGridVisibility,controller.columnsVisibility)),reload&&controller.getPage()},controller.handleGridFiltersChanges=function(){controller.paginationOptions=angular.copy(controller.defaultPaginationOptions);var filterColumn,sortColumn;angular.forEach($scope.gridApi.grid.columns,function(column){filterColumn=column.filters[0].column?column.filters[0].column:column.field,"lastLoginAt"===column.field?void 0!==column.filters&&void 0!==column.filters[0].term&&void 0!==column.filters[1].term?controller.paginationOptions["filter["+filterColumn+"]"]={startDate:column.filters[0].term&&isNaN(column.filters[0].term)?column.filters[0].term.format("x"):column.filters[0].term,endDate:column.filters[1].term&&isNaN(column.filters[1].term)?column.filters[1].term.format("x"):column.filters[1].term}:controller.paginationOptions["filter["+filterColumn+"]"]=null:("contactTypesAsString"===column.field||"contactTypes.handle"===column.field)&&void 0!==column.filters&&"undefined"!==column.filters[0].term&&column.filters[0].term&&column.filters[0].term.value?controller.paginationOptions["filter[contactTypes.handle]"]=column.filters[0].term.value:void 0!==column.filters&&"undefined"!==column.filters[0].term&&(controller.paginationOptions["filter["+filterColumn+"]"]=column.filters[0].term),void 0!==column.sort.direction&&(sortColumn=column.sort.column?column.sort.column:column.field,controller.paginationOptions["sorting["+sortColumn+"]"]=column.sort.direction)}),null===controller.paginationOptions["filter[lastLoginAt]"]&&(controller.paginationOptions["filter[lastLoginAt]"]=$scope.filters.lastLoginAtRange),null===controller.paginationOptions["filter[lastLoginAt]"].startDate&&(controller.paginationOptions["filter[lastLoginAt]"].endDate=null,$scope.filters.lastLoginAtRange={startDate:null,endDate:null}),angular.forEach(controller.paginationOptions,function(value,key){"filter[contactTypesAsString]"===key&&(controller.paginationOptions["filter[contactTypes.handle]"]=value,delete controller.paginationOptions["filter[contactTypesAsString]"])}),GridService.storeColumnsFilters(constants.gridNameSpaces.contactsGridFilters,controller.paginationOptions),angular.isDefined($scope.filterTimeout)&&$timeout.cancel($scope.filterTimeout),$scope.filterTimeout=$timeout(function(){controller.getPage()},500)},$scope.handleDatagridRowClick=function(user){if(PasswordService.setHasErrors(!0),$scope.disabledInstitutionsUserListSubTabs.permissions=!1,$scope.disabledInstitutionsUserListSubTabs.institutions=!1,$scope.selectedUserId===user.id)$scope.selectedUserId=null,$scope.showInfoBlock=!1,$scope.filterActive=!0,InstitutionsUsersListFactory.resetActiveUserId(),controller.toggleColumns(!1);else{$scope.selectedUserId=user.id,$scope.showInfoBlock=!0,$scope.filterActive=!1,$scope.user=angular.copy(user),$scope.userBeforeChanges=user,$scope.user=UsersListService.updateRolesWithAll($scope.user,controller.rolesList),$scope.user=UsersListService.updateSectionsAndPages($scope.user,controller.rolesList),controller.rolesBeforeChanges=[];for(var role in user.roles)user.roles[role]&&(controller.rolesBeforeChanges[role]=!0);InstitutionsUsersListFactory.setActiveUserId($scope.selectedUserId),controller.toggleColumns(!0)}},controller.updateInDatagrid=function(){controller.reloadDatagrid()},controller.toggleColumns=function(hide){controller.grid.options&&(hide?(angular.forEach(controller.grid.options.columnDefs,function(column){angular.isDefined(column.visible)&&!0===column.visible&&$scope.columnsBeforeHide.push(column),$scope.visible[column.field]=column.visible}),angular.forEach(controller.grid.options.columnDefs,function(column){column.visible="email"===column.field}),$scope.filterActive=!1):(angular.forEach($scope.columnsBeforeHide,function(column){column.visible=!0}),$scope.columnsBeforeHide=[],$scope.$broadcast(constants.events.closingInstitutionsUsers),$scope.filterActive=!0),controller.grid.options.enableGridMenu=!hide,controller.grid.options.enableColumnMenus=!hide,controller.grid.options.enableColumnResizing=!hide,controller.grid.options.enablePaginationControls=!hide)},$scope.handleResetClick=function(){$scope.user=angular.copy($scope.userBeforeChanges)},$scope.handleDeactivateClick=function(user){if(!user||!user.id||$scope.deactivateInProgress)return!1;$scope.deactivateInProgress=!0,InstitutionsUsersListService.deactivate(user.id).then(controller.deactivationCallback)},$scope.handleActivateClick=function(user){if(!user.id||$scope.activateInProgress)return!1;$scope.activateInProgress=!0,InstitutionsUsersListService.activate(user.id).then(controller.activationCallback)},controller.deactivationCallback=function(success){$scope.user.active=!success,success&&($scope.userBeforeChanges.active=$scope.user.active,controller.updateInDatagrid($scope.userBeforeChanges)),$scope.deactivateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Deactivated successfully!":"Deactivation failed!","Deactivation")},controller.activationCallback=function(success){$scope.user.active=!!success,success&&($scope.userBeforeChanges.active=$scope.user.active,controller.updateInDatagrid($scope.userBeforeChanges)),$scope.activateInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Activated successfully!":"Activation failed!","Activation")},$scope.handleNewUserResponse=function(response){response.hasOwnProperty("insertedId")&&response.insertedId.length>0&&($scope.user.id=response.insertedId,$scope.user.active=!0,angular.copy($scope.user,$scope.userBeforeChanges),$scope.activeTab=1,$scope.disabledInstitutionsUserListSubTabs.permissions=!1,$scope.disabledInstitutionsUserListSubTabs.institutions=!1,angular.copy($scope.user,$scope.newUser),$scope.selectedUserId=$scope.user.id,$scope.newUserPanelNotClosed=!0,controller.reloadDatagrid())},$scope.handlePersonalDetailsSubmit=function(){$scope.forms.personalDetailsForm.firstname.$setDirty(),$scope.forms.personalDetailsForm.lastname.$setDirty(),$scope.forms.personalDetailsForm.email.$setDirty(),PasswordService.setHasErrors(!(!$scope.user.id&&!$scope.forms.personalDetailsForm.password.$viewValue));var newUser=void 0===$scope.user.id;return!!(!$scope.personalDetailsSubmitInProgress&&$scope.forms.personalDetailsForm&&$scope.forms.personalDetailsForm.$valid&&PasswordService.isValid($scope.forms.personalDetailsForm,$scope.user)&&PasswordService.getHasErrors())&&(newUser&&!PasswordService.isPasswordValid($scope.user.password)||!newUser&&void 0!==$scope.user.password&&!PasswordService.isPasswordValid($scope.user.password)?(NotifierFactory.show("error","Please set a valid password"),!1):($scope.personalDetailsSubmitInProgress=!0,void InstitutionsUsersListService.savePersonalDetails($scope.user).then(function(response){var message="Personal Details",success=!1;response&&((success=!response.error)?($scope.user.primaryInstitutionCoreId=null,$scope.user.fullname=InstitutionsUsersListService.getFullName($scope.user),response.hasOwnProperty("insertedId")&&response.insertedId.length&&($scope.user.id=response.insertedId,$scope.user.active=!0,angular.copy($scope.user,$scope.userBeforeChanges),$scope.activeTab=1,$scope.disabledInstitutionsUserListSubTabs.permissions=!1,$scope.disabledInstitutionsUserListSubTabs.institutions=!1,angular.copy($scope.user,$scope.newUser),$scope.selectedUserId=$scope.user.id),controller.resetPersonalDetailsForm()):response.hasOwnProperty("message")&&response.message.length&&(message=response.message),success&&$scope.user.contactTypes&&InstitutionsUsersListService.getContactTypes().then(function(contactTypesList){if(!contactTypesList)return!1;var contactTypeNames=[],contactTypeName=null;for(var contactType in $scope.user.contactTypes)$scope.user.contactTypes[contactType].assigned&&(contactTypeName=UsersListService.getContactTypeNameByHandle(contactType,contactTypesList),contactTypeNames.push(contactTypeName));$scope.user.contactTypesAsString=contactTypeNames.join(", ")}),success&&(delete $scope.user.password,$scope.userBeforeChanges=angular.copy($scope.user),controller.reloadDatagrid()),$scope.personalDetailsSubmitInProgress=!1,NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!",message))})))},$scope.handlePermissionsSubmit=function(){$scope.permissionsSubmitInProgress=!0,InstitutionsUsersListService.savePermissions($scope.user).then(function(success){$scope.permissionsSubmitInProgress=!1,$scope.userBeforeChanges=angular.copy($scope.user),controller.rolesBeforeChanges=[];for(var role in $scope.user.roles)$scope.user.roles[role]&&(controller.rolesBeforeChanges[role]=!0);success&&controller.updateInDatagrid($scope.user),NotifierFactory.show(success?"success":"error",success?"Saved successfully!":"Saving failed!","Permissions")})},$scope.handlePrimaryContactTypeClick=function(handle){$scope.user.contactTypes[handle].assigned=!0},$scope.handleContactTypeClick=function(handle){$scope.user.contactTypes[handle]&&$scope.user.contactTypes[handle].primary&&!$scope.user.contactTypes[handle].assigned&&($scope.user.contactTypes[handle].primary=!1)},$scope.handleAssignedContactTypeClick=function(handle){!1===$scope.user.contactTypes[handle].assigned&&($scope.user.contactTypes[handle].primary=!1)},$scope.handleRoleClick=function(clickedRole){if(!$scope.user.roles.custom&&void 0!==clickedRole){$scope.user.accessTo={};var clickedRoleAssigned=$scope.user.roles[clickedRole.roleHandle],parentRoleClicked=clickedRole.all,childrenRolesHandles=UsersListService.getChildrenRoles(clickedRole.groupHandle,controller.rolesList),parentRoleHandle=null;if(clickedRoleAssigned){if(parentRoleClicked)childrenRolesHandles&&angular.forEach(childrenRolesHandles,function(childrenRoleHandle){$scope.user.roles[childrenRoleHandle]=!0});else if(childrenRolesHandles){var allDepartments=!0;angular.forEach(childrenRolesHandles,function(childrenRoleHandle){!1!==$scope.user.roles[childrenRoleHandle]&&void 0!==$scope.user.roles[childrenRoleHandle]||(allDepartments=!1)}),allDepartments&&(parentRoleHandle=UsersListService.getParentRoleHandle(clickedRole.groupHandle,controller.rolesList))&&($scope.user.roles[parentRoleHandle]=!0)}}else parentRoleClicked?childrenRolesHandles&&angular.forEach(childrenRolesHandles,function(childrenRoleHandle){$scope.user.roles[childrenRoleHandle]=!1}):(parentRoleHandle=UsersListService.getParentRoleHandle(clickedRole.groupHandle,controller.rolesList))&&($scope.user.roles[parentRoleHandle]=!1);$scope.user=UsersListService.updateSectionsAndPages($scope.user,controller.rolesList)}},$scope.activateCustomRole=function(){angular.isDefined($scope.user.roles)||($scope.user.roles={}),$scope.user.roles.custom=!0},$scope.handleColumnClick=function(){var columnsVisibility={};angular.forEach($scope.columns,function(column){columnsVisibility[column.field]=column.show}),InstitutionsUsersListService.storeColumnsVisibility(columnsVisibility)},controller.handleAddInstitutionsUserClick=function(){controller.resetPersonalDetailsForm(),$scope.selectedUserId=null,$scope.user={},InstitutionsUsersListFactory.resetActiveUserId(),$scope.activeTab=0,$scope.disabledInstitutionsUserListSubTabs.permissions=!0,$scope.disabledInstitutionsUserListSubTabs.institutions=!0,controller.toggleColumns(!0),$scope.showInfoBlock=!0},controller.resetPersonalDetailsForm=function(){$scope.forms.personalDetailsForm&&$scope.forms.personalDetailsForm.$setPristine()},controller.handleEditCloseClick=function(){controller.toggleColumns(!1),$scope.showInfoBlock=!1,$scope.selectedUserId=null,$scope.activeTab=0,$scope.filterActive=!0},controller.loadDatagridColumnsVisibility=function(){var columnsVisibility=InstitutionsUsersListService.getColumnsVisibility();columnsVisibility&&angular.forEach($scope.columns,function(column){"undefined"!==columnsVisibility[column.field]&&(column.show=!!columnsVisibility[column.field])})},controller.reloadDatagrid=function(){controller.getPage()},controller.getPage=function(){return controller.isDatagridReloading=!0,InstitutionsUsersListService.getAllUsers(angular.merge({},controller.paginationOptions,controller.defaultPaginationOptions,$scope.filters)).then(function(response){controller.grid.options.totalItems=response.totalMatching,controller.grid.options.data=response.results,controller.grid.options.minRowsToShow=response.totalFiltered,controller.isDatagridReloading=!1,controller.showDatagrid=!0})},controller.reloadDatagrid=function(){controller.getPage()},controller.initDataGridOptions=function(){controller.grid.options={data:[],enableSorting:!0,exporterMenuCsv:!1,enableGridMenu:!0,showGridFooter:!1,selectedItems:$scope.selectedUserId,enableFiltering:!0,enableColumnResize:!0,enableFullRowSelection:!0,enableRowSelection:!0,multiSelect:!1,enableRowHeaderSelection:!1,paginationPageSizes:[constants.datagrid.contacts.defaultRowsNumber,50,100],paginationPageSize:constants.datagrid.contacts.defaultRowsNumber,useExternalPagination:!0,useExternalSorting:!0,useExternalFiltering:!0,rowTemplate:"/scripts/components/users/list/institutions/datagrid/rowTemplate.html",columnDefs:[{displayName:"Email",field:"email",visible:!0,cellFilter:"lowercase",filter:{term:GridService.getFilterByField(controller.paginationOptions,"email","")}},{displayName:"Fullname",field:"fullname",visible:GridService.getVisibilityByField(controller.columnsVisibility,"fullname",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"fullname","")}},{displayName:"Position",field:"position",visible:GridService.getVisibilityByField(controller.columnsVisibility,"position",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"position","")}},{displayName:"Phone",field:"phone",visible:GridService.getVisibilityByField(controller.columnsVisibility,"phone",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"phone","")}},{displayName:"Primary Institution Core Id",field:"primaryInstitutionCoreIdAsString",visible:GridService.getVisibilityByField(controller.columnsVisibility,"primaryInstitutionCoreIdAsString",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"primaryInstitutionCoreIdAsString","")}},{displayName:"Primary Institution",field:"primaryInstitutionName",visible:GridService.getVisibilityByField(controller.columnsVisibility,"primaryInstitutionName",!0),filter:{term:GridService.getFilterByField(controller.paginationOptions,"primaryInstitutionName","")}},{displayName:"Contact Types",filter:{type:uiGridConstants.filter.SELECT,selectOptions:controller.contactTypesList,term:GridService.getFilterByField(controller.paginationOptions,"contactTypes.handle",null)},field:"contactTypesAsString",maxWidth:130,visible:GridService.getVisibilityByField(controller.columnsVisibility,"contactTypes.handle",!0),filterHeaderTemplate:"/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html"},{displayName:"Last Login",field:"lastLoginAt",filterCellFiltered:!0,filters:[{visible:!0,condition:uiGridConstants.filter.GREATER_THAN},{condition:uiGridConstants.filter.LESS_THAN}],filter:{term:GridService.getFilterByField(controller.paginationOptions,"lastLoginAt",""),applyTextFilter:controller.applyDateFilter("lastLoginAt","")},cellTemplate:"/scripts/shared/ui-grid/templates/dateCellTemplate.html",filterHeaderTemplate:"/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html",visible:GridService.getVisibilityByField(controller.columnsVisibility,"lastLoginAt",!0)}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){$scope.handleDatagridRowClick(row.entity)}),gridApi.core.on.rowsRendered($scope,function(){controller.isDatagridRendered=!0}),gridApi.core.on.filterChanged($scope,controller.handleGridFiltersChanges),gridApi.core.on.rowsVisibleChanged($scope,controller.handleGridVisibleChanges),gridApi.pagination.on.paginationChanged($scope,function(newPage,limit){controller.defaultPaginationOptions.page=newPage,controller.defaultPaginationOptions.limit=limit,controller.getPage()}),$scope.gridApi.core.on.sortChanged($scope,controller.handleGridFiltersChanges)}};var lastLogin=GridService.getFilterByField(controller.paginationOptions,"lastLoginAt","");null!==lastLogin&&null!==controller.paginationOptions["filter[lastLoginAt]"]&&angular.isDefined(lastLogin)&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"])&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"].startDate)&&angular.isDefined(controller.paginationOptions["filter[lastLoginAt]"].endDate)&&(controller.grid.options.columnDefs[7].filters[0].term=controller.paginationOptions["filter[lastLoginAt]"].startDate,controller.grid.options.columnDefs[7].filters[1].term=controller.paginationOptions["filter[lastLoginAt]"].endDate)},controller.applyDateFilter=function(filterName,defaultValue){var filter=GridService.getFilterByField(controller.paginationOptions,filterName,defaultValue);angular.isDefined(filter)&&null!==filter&&angular.isDefined(filter.startDate)&&angular.isDefined(filter.endDate)&&(null!==filter.startDate&&null!==filter.startDate?controller.defaultFilters.lastLoginAtRange={startDate:parseInt(filter.startDate,10),endDate:parseInt(filter.endDate,10)}:controller.defaultFilters.lastLoginAtRange={startDate:null,endDate:null})},controller.initDataGrid=function(){controller.getPage().then(function(){InstitutionsUsersListService.getContactTypesFilter().then(function(options){var list=[];angular.forEach(options,function(option){list.push({value:option.id,label:option.title})}),controller.grid.options.columnDefs[6].filter.selectOptions=list})})},controller.convertVisibleColumnsField=function(value){switch(value){case"contactTypesAsString":return"contactTypes.handle";default:return value}},controller.isValidFirstName=function(){return PasswordService.isValidFirstName($scope.forms.personalDetailsForm,$scope.user)},controller.isValidLastName=function(){return PasswordService.isValidLastName($scope.forms.personalDetailsForm,$scope.user)},controller.isValidEmail=function(){return PasswordService.isValidEmail($scope.forms.personalDetailsForm,$scope.user)},controller.setValid=function(fieldName){return PasswordService.setValid($scope.forms.personalDetailsForm,fieldName)},controller.initWatches=function(){WatchService.create($scope,InstitutionsUsersFactory.getRequestFilters,function(filters){filters&&($scope.filters=angular.extend({},controller.defaultFilters,filters),InstitutionsUsersFactory.resetRequestFilters(),controller.getPage())}),WatchService.create($scope,"activeTab",function(newValue){InstitutionsUsersListFactory.setSelectedTabId(newValue)}),$scope.$on(constants.events.institutionsUserPrimaryInstitutionChanges,function(){$scope.userBeforeChanges=angular.copy($scope.user),controller.updateInDatagrid($scope.user)})},controller.$onInit=function(){controller.initDataGridOptions(),controller.initWatches(),controller.loadDatagridColumnsVisibility()}},angular.module("qsHub").controller("InstitutionsUsersListCloneController",["$scope","$resource","$timeout","constants","uiGridConstants","InstitutionsUsersListService","UsersListService","NotifierFactory","InstitutionsUsersListFactory","InstitutionsUsersFactory","WatchService","UserTypesService","PasswordService","UiGridService","UserFactory",App.controllers.institutionsUsersListClone])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.Password=function($resource,$log,constants){function isNotEmpty(form,userObj,fieldName){return!!(form&&(form.$pristine||form[fieldName]&&form[fieldName].$pristine)||userObj&&userObj[fieldName]&&userObj[fieldName].trim().length)}var service={};return service.getPasswordModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/password-reset/:requestId",null,{update:{method:"PATCH"}})},service.create=function(email){return service.getPasswordModel().save({email:email}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.update=function(id,password){return service.getPasswordModel().update({requestId:id},{password:password}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),!1})},service.getPasswordValidator=function(){return[{name:"Minimum 8 characters",status:!1},{name:"Maximum 32 characters",status:!1},{name:"Lowercase letter (a-z)",status:!1},{name:"Uppercase letter (A-Z)",status:!1},{name:"Number (0-9)",status:!1},{name:"Special characters",status:!1},{name:"Both passwords match",status:!1}]},service.validatePassword=function(password){if(!angular.isDefined(password)||null===password)return!1;var validationItems=service.getPasswordValidator().splice(0,service.getPasswordValidator().length-1);return password.length>7&&(validationItems[0].status=!0),password.length<33&&password.length>0&&(validationItems[1].status=!0),new RegExp(/(?=.*?[a-z])/).test(password)&&(validationItems[2].status=!0),new RegExp(/(?=.*?[A-Z])/).test(password)&&(validationItems[3].status=!0),new RegExp(/(?=.*?[0-9])/).test(password)&&(validationItems[4].status=!0),new RegExp(/(?=.*?[\s\!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\:\;<\=\>\?\@\[\\\]\^\_\`\{\|\}\~\£\¬\€])/).test(password)&&(validationItems[5].status=!0),validationItems},service.isPasswordValid=function(password){if(angular.isUndefined(password)||null===password||0===password.length)return!1;var validationItems=service.validatePassword(password),invalidCount=0;return angular.forEach(validationItems,function(item){item.status||invalidCount++}),0===invalidCount},service.setHasErrors=function(hasErrors){service.hasErrors=hasErrors},service.getHasErrors=function(){return service.hasErrors},service.isValidFirstName=function(form,userObj,fieldName){return fieldName=fieldName||"firstname",isNotEmpty(form,userObj,fieldName)},service.isValidLastName=function(form,userObj,fieldName){return fieldName=fieldName||"lastname",isNotEmpty(form,userObj,fieldName)},service.isValidEmail=function(form,userObj){return isNotEmpty(form,userObj,"email")},service.isValid=function(form,userObj){return service.isValidFirstName(form,userObj)&&service.isValidLastName(form,userObj)&&service.isValidEmail(form,userObj)},service.setValid=function(form,fieldName){fieldName?form&&form[fieldName]&&form[fieldName].$setPristine():form.$setPristine()},service},angular.module("qsHub").service("PasswordService",["$resource","$log","constants",App.services.Password])}(window.angular),function(angular,socketIo){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.WebSockets=function($rootScope,constants){var socket,service=this,hostname=constants.webSockets.host;return constants.webSockets.port&&!isNaN(constants.webSockets.port)&&(hostname+=":"+constants.webSockets.port),socket=socketIo.connect(hostname),service.listen=function(eventName,callback){socket.on(eventName,function(){if(callback){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})}})},service.send=function(eventName,data,callback){socket.emit(eventName,data,function(){if(callback){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})}})},service.subscribe=function(room,eventName,callback){service.send("subscribe",room),eventName&&service.listen(eventName,callback)},service},angular.module("qsHub").factory("WebSocketsService",["$rootScope","constants",App.services.WebSockets])}(window.angular,io),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{controllers:{}})).controllers.masterPassword=function($interval,MasterPasswordService){var timer,controller=this;controller.masterPassword={loaded:!1,ttl:0,enabled:!1,success:!1,expired:!1,password:null,from:null,to:null,currentDate:(new Date).getTime()},controller.timeLeftPercentage=function(){return controller.isExpired()?0:Math.round(100*controller.secondsLeft()/controller.masterPassword.ttl)},controller.getTime=function(){return MasterPasswordService.getTime()},controller.secondsLeft=function(){return controller.masterPassword.to?controller.masterPassword.to-controller.getTime():null},controller.isExpired=function(){return controller.secondsLeft()<=0},controller.getMasterPasswordCallback=function(response){controller.masterPassword.loaded=!0,response&&response.hasOwnProperty("password")&&response.hasOwnProperty("createdAt")&&response.hasOwnProperty("enabled")&&response.hasOwnProperty("ttl")&&(controller.masterPassword.password=atob(response.password),controller.masterPassword.enabled=response.enabled,controller.masterPassword.ttl=1e3*response.ttl,controller.masterPassword.from=new Date(response.createdAt),controller.masterPassword.to=new Date(response.createdAt+controller.masterPassword.ttl),controller.masterPassword.success=!0,controller.initTimers())},controller.updateTime=function(){controller.isExpired()&&$interval.cancel(timer)},controller.initTimers=function(){controller.isExpired()||(timer=$interval(controller.updateTime,1e3))},controller.getMasterPassword=function(){MasterPasswordService.get().then(controller.getMasterPasswordCallback)},controller.init=function(){controller.getMasterPassword()},controller.init()},angular.module("qsHub").controller("MasterPasswordController",["$interval","MasterPasswordService",App.controllers.masterPassword])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{services:{}})).services.MasterPassword=function($resource,$log,constants){var service={};return service.getMasterPasswordModel=function(){return $resource(constants.api.usersPermissions.url+"/v1/master-password")},service.getTime=function(){return(new Date).getTime()},service.get=function(){return service.getMasterPasswordModel().get({limit:1}).$promise.then(function(data){return constants.dev&&$log.log("success, got data: ",data),data},function(error){return constants.dev&&$log.log("request failed"+error),[]})},service},angular.module("qsHub").service("MasterPasswordService",["$resource","$log","constants",App.services.MasterPassword])}(window.angular),function(angular){"use strict";var App=App||{};(App=angular.extend({},App,{directives:{}})).directives.selectOnClick=function($window){return{restrict:"A",link:function(scope,element){element.on("click",function(){$window.getSelection().toString()||"text"!==element[0].type||this.setSelectionRange(0,this.value.length)})}}},angular.module("qsHub").directive("selectOnClick",["$window",App.directives.selectOnClick])}(window.angular);
//# sourceMappingURL=scripts.b4e33e6a.js.map