{"version":3,"sources":["scripts/scripts.b4e33e6a.js"],"names":["$","document","ready","fix_height","heightWithoutNavbar","height","css","navbarHeigh","wrapperHeigh","window","hasClass","bind","setTimeout","this","width","addClass","removeClass","angular","module","env","shared","globalAdminRole","gridNameSpaces","qsUserGridFilters","schoolUserGridFilters","institutionsGridFilters","tmDirectoryGridFilters","departmentsGridFilters","departmentsOvGridFilters","programsGridFilters","programsOvGridFilters","programsTmGridFilters","contactsGridFilters","qsUserGridVisibility","schoolUserGridVisibility","institutionsGridVisibility","departmentsGridVisibility","departmentsOvGridVisibility","programsGridVisibility","programsOvGridVisibility","programsTmGridVisibility","tmDirectoryGridVisibility","contactsGridVisibility","coreFlag","value","drupal","tu","url","tm","customRole","events","institutionTuProfileChanges","institutionSharedProfileChanges","loadMoreHistoryLogs","logout","closingInstitutionsUsers","institutionsUserPrimaryInstitutionChanges","publicPages","profileTypes","ug","pg","master","typeId","topLevelInstitutionId","clientDepartmentId","simpleDepartmentId","advancedProgramId","internalId","airbrake","enabled","projectId","key","urls","core","datagrid","contacts","defaultRowsNumber","defaultClientPage","noTuSubtypes","support","xStorage","activeSource","allowedSources","keys","source","data","sendToSession","publishStatus","pending","progress","success","failure","constants","local","api","usersPermissions","institutions","dev","emails","upgradeTu","upgradeTm","webSockets","host","port","dev2","qa_test","qa_prod","staging","live","location","hostname","constant","extend","Pace","App","cancelMessage","errors","401","403","organisationId","services","authInterceptor","$q","$location","$localStorage","service","lastError","request","config","timeout","cancel","defer","promise","resetUrl","hasErrors","getOrganisationId","setOrganisationId","parseInt","equals","responseError","rejection","$$state","status","currentUser","redirectUrl","decodeURIComponent","replace","search","coreId","length","path","reject","$stateProvider","$urlRouterProvider","$httpProvider","ngTableFilterConfigProvider","gravatarServiceProvider","LightboxProvider","options","ajax","trackWebSockets","defaults","useXDomain","interceptors","push","otherwise","state","templateUrl","login","page","controller","$scope","$stateParams","requestId","id","abstract","pageTitle","label","template","name","resolve","security","TuProfileFactory","setIsDepartmentOverview","setIsProgramOverview","UserFactory","AuthenticationService","setData","getUserData","hasData","hasContactsAccess","hasQsUsersAccess","hasInstitutionsUsersAccess","params","hasInstitutionsListAccess","hasDepartmentsOverviewAccess","hasTuProgramsOverviewAccess","hasTmDirectoryAccess","hasMasterPasswordAccess","filterAliasUrls","date-range-picker","filterPath","setConfig","aliasUrls","protocol","default","run","$rootScope","$state","$http","$window","$timeout","dataLayer","setAuthorizationHeader","token","$on","event","localStorage","indexOf","preventDefault","go","hasUserData","userData","fromJson","e","setUserData","attributes","route","restrictedPage","getPublicPages","isClientPage","includes","pendingRequests","forEach","pendingRequest","info","isClient","primaryInstitution","hasAccessTo","currentInstitutionId","passwordReset","userHasAccessTo","accessTo","current","toState","toParams","fromState","fromParams","error","directives","restrict","link","scope","element","listener","title","text","iCheckbox","$parse","require","$attrs","ngModel","$watch","iCheck","checkboxClass","radioClass","on","attr","$apply","$setViewValue","target","checked","touchSpin","spinOptions","attrs","render","TouchSpin","iboxTools","$element","show","expand","showHide","ibox","closest","icon","find","content","slideDown","toggleClass","slideToggle","resize","closebox","remove","toggleClassOnClick","sparkline","sparkData","sparkOptions","currentDate","$filter","Date","fixedElementWhileScrolling","handleVisibiliyChanges","elementHeight","scroll","handleWindowScroll","centerElement","targetHeight","querySelector","windowScroll","scrollTop","windowHeight","targetElementTopOffset","offset","top","marginTop","stop","animate","$watchCollection","convertToNumber","$parsers","val","$formatters","waveSpinner","customPopover","$animateCss","el","popover","trigger","popoverTrigger","html","popoverHtml","container","popoverContainer","placement","popoverPlacement","popoverVisibility","newValue","oldValue","next","switch","transclude","class","ngDisabled","ngChange","off","includeReplace","replaceWith","children","upgradeBanner","upgradeEmail","basicProfile","upgradeClick","infoBlockClass","buttonsBlockClass","getInfoBlockClass","getButtonsBlockClass","datagridTotals","tableParams","verifyPassword","elem","ctrl","password","add","isEmpty","invalidLen","$setValidity","directive","filters","htmlToPlaintext","String","boolToText","option","campusArrayToText","campusArray","campuses","join","dotToDash","input","toString","split","filter","factories","Notifier","toaster","type","body","sticky","notification","showCloseButton","extendedTimeOut","pop","TuProfile","program","profileTabs","overview","subjects","programs","media","publish","departments","programBeforeChanges","videos","upgradeFormVisible","historyLogVisible","programAddFormVisible","programEditFormVisible","departmentAddFormVisible","departmentEditFormVisible","newProgram","triggerResetProgramForm","department","departmentBeforeChanges","isDepartmentNameUpdated","newDepartment","selectedMediaTabId","selectedTabId","availableSubjects","isProgramUpdated","updateDepartmentsGrid","rowSelected","activeOverviewSubTabs","clientDepartmentUpgradeFormVisible","isDepartmentOverview","isProgramOverview","closeSidebars","resetProgramForm","getProfileTabs","getData","newData","reset","getId","getProgram","setProgram","selectedProgram","getIsDepartmentOverview","getIsProgramOverview","getProgramId","IsResetProgramForm","isHistoryLogVisible","activeTab","setHistoryLogVisibility","visibility","isUpgradeFormVisible","setUpgradeFormVisibility","isProgramAddFormVisible","setProgramAddFormVisibility","isProgramEditFormVisible","setProgramEditFormVisibility","isClientDepartmentUpgradeFormVisible","setClientDepartmentUpgradeFormVisibility","isDepartmentAddFormVisible","setDepartmentAddFormVisibility","isDepartmentEditFormVisible","setDepartmentEditFormVisibility","setIsDepartmentRowSelected","getIsDepartmentRowSelected","announceNewProgram","newProgramId","hasNewProgram","setProgramBeforeChanges","programInstance","getProgramBeforeChanges","getDepartment","setDepartment","selectedDepartment","getDepartmentId","setIsDepartmentUpdated","getIsDepartmentUpdated","announceNewDepartment","newDepartmentId","hasNewDepartment","setDepartmentBeforeChanges","departmentInstance","getDepartmentBeforeChanges","getDepartments","setDepartments","departmentsList","getSelectedMediaTabId","setSelectedMediaTabId","newSelectedMediaTabId","setSelectedTabId","newSelectedTabId","getSelectedTabId","isOverviewTabSelected","isDepartmentsTabSelected","isSubjectsTabSelected","isProgramsTabSelected","isMediaTabSelected","setMediaVideos","NewVideos","getMediaVideos","isPublishTabSelected","setAvailableSubjects","newSubjects","getAvailableSubjects","setActiveOverviewSubTabs","newSubTabs","isDefined","getActiveOverviewSubTabs","setUpdateProgramGrid","getUpdateProgramGrid","setUpdateDepartmentsGrid","getUpdateDepartmentsGrid","isProgramsAlphabeticalOrder","programsAlphabeticalOrder","SharedProfile","SharedProfileTabs","general","loadInProgress","hasCampusesChanges","campusFormVisible","campusAddFormVisible","campusEditFormVisible","editMode","campus","rootShowCampusInfoBlock","columns","mapUpdateRequest","loadMoreInProgress","limit","getActiveTabs","isCampusFormVisible","isCampusEditForm","setCampusFormVisibility","setCampusAddFormVisibility","setCampusEditFormVisibility","getCampus","setCampus","getInstitutionListShowCampusInfoBlock","setInstitutionListShowCampusInfoBlock","showCampusInfoBlock","setColumns","getColumns","announceCampusesChanges","campusId","hasChanges","copy","setLoadInProgress","hasSelectedTab","isCampusesTabSelected","isGeneralTabSelected","setMapUpdateRequest","setLogLimit","logLimit","getLogLimit","isLoadMoreInProgress","setLoadMoreInProgress","Institution","TimeService","defaultData","departmentOverview","institutionId","isSubscriptionTabActive","tuProgramsOverview","isProfileAdvanced","subscriptions","profile","isAdvanced","subsProfile","advanced","active","today","getMiliSeconds","now","weekLater","startDate","endDate","result","range","isDepartmentsAlphabeticalOrder","departmentsAlphabeticalOrder","setCampuses","addCampus","getCampusData","setSubscriptions","getSubscriptions","hasOwnProperty","getCoreId","getDisplayName","getParentCoreId","parentCoreId","getDefaultCoreId","isTuAdvanced","isTmAdvanced","isTuSubscribed","subscribed","isTuEnabled","isUgEnabled","isPgEnabled","isTmSubscribed","isTmEnabled","isClientDepartment","isAdvancedProgram","hasNoDepartments","getCampuses","isActive","deleted","getInstitutionIdTuProgramsOverview","setInstitutionIdTuProgramsOverview","setDataDepartmentOverview","getDataDepartmentOverview","getCampusDataDepartmentOverview","getInstitutionIdDepartmentOverview","setInstitutionIdDepartmentOverview","resetDepartmentOverview","setActiveTab","getActiveTab","User","DataHandlerFactory","handles","clients.profiles.shared","clients.profiles.tu","clients.profiles.tm","clients.statistics","staff.users.qs","staff.users.institutions","staff.institutions.list","staff.master-password","staff.tm-directory","defaultPages","getFullName","fullName","getFirstName","firstName","getLastName","lastName","setFullName","setFirstName","setLastName","setTitle","setPhone","phone","setPosition","position","getUserName","userName","getProfileLogo","profileLogo","setProfileLogo","getPrimaryInstitutionCoreId","getPosition","getAllowedInstitutions","isAllowedToLogin","institutionCoreId","allowed","hasAccess","isObject","userHasAccessToPage","noAccess","getHandles","hasAccessToInstitutionDetails","getFirstAllowedState","subscriptionsPrimaryInstitution","firstAllowedState","notImplementedAccessTo","getDiffArray","sort","bestStateForUser","getBestStateForUser","states","hasTu","hasTm","i","isPasswordReset","clearPasswordReset","TuProfileHistoryLog","profileType","inProgress","reload","triggeredBy","setProfileType","newProfileType","getProfileType","isInProgress","setInProgress","isVisible","setTriggeredBy","shouldBeVisible","resetTriggeredBy","setAdvanced","setReload","triggerReload","isReloadRequired","MapInitializer","loaded","mapsDefer","asyncLoad","asyncUrl","callbackName","script","createElement","src","appendChild","googleMapsInitialized","initStart","mapsInitialized","DataHandler","objectToArray","obj","isArray","array1","array2","factory","InstitutionsService","$resource","$log","RequestsQueueService","getInstitutionListModel","get","cancellable","getInstitutionData","columnsToFetch","queueName","filter[coreId]","toJson","cancelAll","Api","$promise","then","log","RequestsQueue","queue","$cancelRequest","$templateCache","put","username","deferred","getAuthenticationModel","response","email","primaryInstitutionName","roles","handleSuccess","message","handleFailure","clearXLocalStorage","setItem","save","headers","common","Authorization","$emit","itemKey","removeItem","setXLocalStorageLogout","getAuthorizationHeader","$provide","decorator","$delegate","prototype","renderingComplete","isFunction","onRegisterApi","raise","$viewport","querySelectorAll","eventName","unbind","uiGridSelectedLabel","$select","selected","total","items","components","uiGridInfo","component","UiGrid","Grid","exploded","clear","clearAllFilters","getKey","nameSpace","storeColumnsFilters","columnsFilters","getColumnsFilters","dateFilters","filterName","storeColumnsVisibility","columnsVisibility","filterNameSpace","getColumnsVisibility","getGridColumnsVisibility","column","visible","field","getVisibilityByField","fieldName","defaultValue","getFilterByField","defaultVal","removeByNameSpace","applyFilters","term","condition","RegExp","values","resetConditions","resetExtend","columnBefore","columnDefs","defaultFilters","apply","index","lastLoginAtRange","createdAt","x","UiSelect","getYesNoOptions","excludeNa","animatedHighlight","colorBefore","colorAfter","opacityBefore","opacityAfter","delay","highlightOpacityBefore","highlightOpacityAfter","highlightColorBefore","highlightColorAfter","highlightDelay","from","background","opacity","z-index","to","duration","start","sideNavigation","InstitutionFactory","WatchService","metisMenu","tuEnabledForInstitution","tuEnabledForUser","tmEnabledForInstitution","tmEnabledForUser","watches","toggleTuAccess","toggleTmAccess","create","is","initWatches","watch","minimalizeSidebar","minimalize","hide","fadeIn","removeAttr","mouseScrollHorizontal","$swipe","pointX","pointY","startX","startY","isMouseDraged","isMouseDown","coords","y","move","delta","scrollLeft","end","originalEvent","Math","max","min","wheelDelta","detail","returnValue","displayFiltering","callback","click","stopPropagation","displayFilteringSelectAll","closeDisplayFiltering","InstitutionSwitchService","getInstitutionSearchModel","getClientInstitutionsModel","searchInstitutions","searchPhrase","results","getClientInstitutions","LoginService","allowLoginAs","institution","getTuProfilesRedirect","parameters","Url","youtubeIdPattern","youtubePattern","pattern","prependHttp","test","extractYoutubeIdFromUrl","match","getPattern","getYoutubePattern","Text","countWords","trim","cleanHtmlTags","Object","set","prop","substring","substr","moment","Time","unix","format","nowUnix","number","unit","formatInUnix","date","getInUnix","isValid","momentObject","mDate","isTmViewingEnabled","nids","handleMain","version","WebSocketsService","SharedProfileFactory","AppUpdateMessageFactory","ModalService","AuthInterceptor","institutionsDropdownList","searchInProgress","handleSearchInstitutionClick","$current","staff","handleGoToParentInstitution","isInstitutionAllowed","institutionData","resetInstitutionAndSendToQsDashboard","isAllowed","allowParent","allowedInsitutes","item","isDisabled","helpIcon","size","modalOptions","closeButtonText","headerText","modalDefaults","backdrop","keyboard","modalFade","coreIdWatch","newCoreId","oldCoreId","institutionsList","displayName","parentName","parentInstitutionName","releaseVersionWatch","releaseVersion","setVisible","subscribe","init","controllers","Login","PasswordService","NotifierFactory","InstitutionsListService","forms","credentials","forgottenPassword","showForgotPassword","showResetPassword","showResetPasswordConfirmation","showAfterResetPasswordConfirmation","loginInProgress","getPasswordValidator","isPasswordValid","validationItems","missingRequired","invalidUsername","incorrectCredentials","accountNotComplete","repeatPassword","validatePassword","resetPasswordForm","$viewValue","handleForgotPasswordClick","resetSubmitInProgress","showError","errorMessage","resetErrors","handleLogin","loginForm","$setSubmitted","$valid","$error","loginCallback","getInstitution","allowState","urlStates","map","href","resultUrlStates","keyResult","displayMessage","handleResetPasswordSubmitClick","forgottenPasswordError","forgotPasswordForm","resetPasswordCallback","responseObject","forgottenPasswordErrorMessage","updateResetCallback","loginPassword","handleResetSubmitPasswordSubmitClick","$modelValue","update","toggleForgottenPasswordForm","$setPristine","destruct","Sidebar","coreUrl","getCoreFlag","usersList","getContactTypeNameByHandle","handle","contactTypesList","contactTypeName","contactType","formatSections","sectionsList","firstElement","flatArray","section","pages","sectionName","pageName","pageHandle","disabled","assigned","updateSectionsAndPages","roleList","custom","userRole","role","roleHandle","sections","updateRolesWithAll","childrenRolesHandles","groupHandle","getChildrenRoles","childrenRoleHandle","rolesList","childrenRoles","all","getParentRoleHandle","parentRoleHandle","userTypes","uniqueId","getUserTypes","Password","defaultConfig","resetOnLogin","labelClass","blockClass","setHasErrors","user","isRequired","handleChanges","validators","initValidators","splice","userWatch","resetValidators","getHasErrors","isPassLen","$onInit","cnf","userPassword","bindings","Profile","profilePassword","ProfilePasswordService","devMode","passwordFieldsVisible","updateInProgress","confirmPassword","submitted","getForm","togglePasswordFields","isPasswordFieldsVisible","updatePasswordCallback","getUpdateModel","method","dataToUpdate","ProfilePersonalDetails","ProfilePersonalDetailsService","personalDetails","isValidFirstName","isValidLastName","setValid","$setDirty","updateDetailsCallback","userObject","copyScopeUserToControllerUser","profilePersonalDetailsService","UpdateModel","ProfileLogoService","gravatar","uploadEnabled","acceptedFiles","generalSubmitDisabled","displayRemoveLink","profilePic","handleRemoveLogoClick","logoType","updateDetailsInProgress","announceNameChanges","handleLogoRemoved","handleGeneralSubmit","displaySpinner","imageForm","updateProfilePicture","undefined","removeUploaderImage","removeDropZoneUploadedImage","dropZoneImageInstance","file","removeFile","files","removeAllFiles","handleInit","globalAccept","localAccept","handleAccept","done","acceptFile","handleImageUploaded","handleImageUploadError","xhr","JSON","parse","responseText","handleImageAdded","rejectExtension","handleThumbnail","rejectDimensions","rejectSize","imageConfig","dropzone","getUrl","maxFilesize","maxFiles","uploadMultiple","parallelUploads","autoProcessQueue","addRemoveLinks","previewsContainer","thumbnailWidth","thumbnailHeight","clickable","paramName","accept","eventHandlers","addedfile","thumbnail","ProfileLogo","logoUrl","userImage","$resolved","appUpdate","AppUpdate","airbrakeJs","AppUpdateMessage","qsUsersList","uiGridConstants","QsUsersService","UsersListService","GridService","grid","defaultPaginationOptions","paginationOptions","userBeforeChanges","filterActive","isDatagridReloading","showQsSections","showClientSections","activeQsUserListSubTabs","disabledQsUserListSubTabs","permissions","newUser","newUserPanelNotClosed","columnsBeforeHide","updateInDatagrid","totalItems","columnsBeforeEdit","handleLastLoginAtDateRange","model","handleDatagridRowClick","addUser","selectedUserId","showInfoBlock","toggleColumns","rolesBeforeChanges","$broadcast","enableGridMenu","enableColumnMenus","enableColumnResizing","enablePaginationControls","handleResetClick","handleDeactivateClick","deactivateInProgress","deactivate","deactivationCallback","handleActivateClick","activateInProgress","activate","activationCallback","handleNewUserResponse","insertedId","reloadDatagrid","handlePersonalDetailsSubmit","personalDetailsForm","firstname","lastname","personalDetailsSubmitInProgress","savePersonalDetails","fullname","contactTypes","getContactTypes","contactTypeNames","contactTypeData","contactTypesAsString","resetPersonalDetailsForm","handlePermissionsSubmit","permissionsSubmitInProgress","savePermissions","handlePrimaryContactTypeClick","handleAssignedContactTypeClick","primary","handleRoleClick","clickedRole","admin_dashboard.dashboard","clickedRoleAssigned","parentRoleClicked","globalAdminRoleClicked","allDepartments","toggleQsSections","toggleClientSections","activateCustomRole","loadData","getRoles","getSections","qsSectionsList","clientSectionsList","handleColumnClick","loadDatagridColumnsVisibility","handleGridFiltersChanges","filterColumn","sortColumn","gridApi","isNaN","direction","filterTimeout","getPage","getAllUsers","merge","totalMatching","minRowsToShow","totalFiltered","initDataGrid","enableSorting","exporterMenuCsv","showGridFooter","selectedItems","enableFiltering","enableColumnResize","enableFullRowSelection","enableRowSelection","multiSelect","enableRowHeaderSelection","paginationPageSizes","paginationPageSize","useExternalPagination","useExternalSorting","useExternalFiltering","rowTemplate","cellFilter","SELECT","selectOptions","maxWidth","filterHeaderTemplate","filterCellFiltered","GREATER_THAN","LESS_THAN","applyTextFilter","applyDateFilter","cellTemplate","columnsVisibilityBeforeChanges","selection","rowSelectionChanged","row","entity","rowsRendered","isDatagridRendered","filterChanged","rowsVisibleChanged","handleGridVisibleChanges","pagination","paginationChanged","newPage","sortChanged","lastLogin","getContactTypesFilter","list","saveStateVisibility","handleAddQsUserClick","handleEditCloseClick","convertVisibleColumnsField","isValidEmail","QsUsers","InstitutionsUsersListService","getUsersListModel","endTime","startTime","getTime","hasSorting","allowedFilters","formatList","appendAccessData","appendContactsData","formateDate","formatedDate","systemRoles","hasCustomRole","originalRoles","globalAdmin","originalContactTypes","contactTypesAsArray","contactTypeFilters","formatRoles","rolesGroup","groupName","roleName","client","Boolean","getUserModel","initQsUser","qs","UserModel","formattedContactTypes","qsUsersGridColumnsVisibility","adminDashboard","QsUsersListService","AdminDashboardService","userRoles","getUserRoleNames","AdminDashboard","totalUserRoles","totalRoles","usersInstitutions","InstitutionsUsersFactory","setRequestFilters","InstitutionsUsers","requestFilters","getRequestFilters","newRequestFilters","resetRequestFilters","institutionsUsersList","InstitutionsUsersListFactory","UserTypesService","showDatagrid","disabledInstitutionsUserListSubTabs","hasWriteAccess","initSelectedItem","selectedItem","selectedOptionType","resetActiveUserId","setActiveUserId","handleContactTypeClick","handleAddInstitutionsUserClick","initDataGridOptions","$onDestroy","getInstitutionsUsersListModel","getUserInstitutionModel","initInstitutionsUser","institutionUsersGridColumnsVisibility","activeUserId","tabs","personal","isInstitutionsTabSelected","newActiveUserId","getActiveUserId","tuProfilePrograms","InstitutionsUsersListInstitutionsService","alreadyInitialised","submitInProgress","selectedInstitutionsNamesLoaded","userInstitutions","newAssignedValues","institutionsSearchResults","disallowSubmit","primaryInstitutionCoreId","isProgressBarVisible","handleInstitutionSubmit","getInstitutionsGroups","institutionsGroups","institutionsGroupsFormatted","institutionsGroup","saveInstitutions","primaryInstitutionCoreIdAsString","saveInstitutionsCallback","assignedIds","getObjectColumn","userInstitutionsBeforeChanges","searchInstitutionsCallback","getInstitutionsNamesCallback","addPrimary","r","handleItemSelect","handleItemRemove","handlePrimaryInstitutionChanges","initUserInstitutions","getInstitutionNames","userId","isSelected","wasActive","institutionsNames","getInstitutionNamesByCoreIdsModel","getInstitutionsGroupsModel","columns[]","getInstitutionsSearchModel","sorting[coreId]","field[]","assignedInstitutionsCoreIds","queryString","filter[name]","exclude[coreIdAsString][]","dataObject","filteredData","sourceOne","sourceTwo","institutionsData","primaryInstitutionData","modifiedCount","groupMembers","coreIds","names","cacheKey","filter[coreId][]","$controller","TuProfileService","TuProfileDepartmentsService","departmentControllerAs","getTuProfileDepartmentController","showDepartmentEditForm","showDepartmentAddForm","showInstitutionDeps","searchInstitution","isAddButtonDisabled","isInstitutionSelected","isRightSidePanelActive","isDeleteButtonDisabled","deleteInProgress","hasDepartmentsToDelete","clearDepartmentsToDelete","getAllDepartmentsByCoreId","gridOptions","hasNewDepartmentWatch","selectedDepartmentId","finally","isDepartmentAddFormVisibleWatch","getInstitutionIdDepartmentOverviewWatch","showInstitutionDepartments","activeInstitutionCoreId","departmentOverviewForm","TuProfileDepartmentFormController","departmentFormControllerAs","getTuProfileDepartmentForm","handleUpgradeClick","isUpgradeDisabled","tuSupportEmail","isLoginRestricted","toggleDepartmentEditForm","toggleDepartmentAddForm","resetAddForm","campusList","formatCampusList","newDepartmentBeforeChanges","isInvalidDepartmentNameUpdate","isInvalidBelongsToUpdate","isInvalidNewDepartmentName","isInvalidNewBelongsTo","initialiseForm","addDepartmentForm","$setUntouched","InstitutionsTuPrograms","programsControllerAs","getTuProfileProgramsController","showProgramEditForm","showProgramAddForm","loadTuProfileData","getTuProfileData","profileDataLoaded","tuProfile","tuProfileBeforeChanges","clearProgramsToDelete","getInstitutionIdTuProgramsOverviewWatch","hasNewProgramWatch","programsList","selectedProgramId","isProgramAddFormVisibleWatch","isProgramEditFormVisibleWatch","InstitutionsTuProgramsForm","programFormControllerAs","getTuProfileProgramFormController","getAllDepartments","count","newProgramBeforeChanges","InstitutionNameTuPrograms","departmentCoreId","initForm","addProgramForm","InstitutionsListFactory","orderBy","TmProfileProgramsService","InstitutionService","InstitutionsListSubscriptionsFactory","newInstitution","isSimple","subscriptionDates","isDisplayDepartmentEnabled","institutionBeforeChanges","isSelectReloading","basicDetailsSubmitInProgress","subscriptionProfilesSubmitInProgress","subscriptionStatisticsSubmitInProgress","drupalSubmitInProgress","institutionGroupSubmitInProgress","institutionsWithoutGroup","isProgramDowngradeDisabled","noChanges","datePickerTu","ranges","6 months from today","12 months from today","apply.daterangepicker","ev","handleDateRangePickerApplyClick","opens","alwaysShowCalendars","setSelectedItem","typesList","datePickerTm","disabledInstitutionListTabs","basicDetails","institutionGroups","similarNames","display","loading","showDepartments","disabledSubmit","populateSubscriptionsDateDatepickers","formatSubscriptionDate","forceClose","isUndefined","comesFromProfile","getTuWarningMessage","hasTuWarning","getTmWarningMessage","hasTmWarning","isTuSubscriptionDatesInvalid","isTmSubscriptionDatesInvalid","resetBasicDetailsForm","resetDrupalForm","isSimpleDepartment","selectedInstitutionId","excludeGroupMember","allowedInstitutionTypes","array","isProgramDowngradeEnabled","isTopLevelInstitution","allowProgramDowngrade","programDowngradeInProgress","handleProgramDowngradeClick","actionButtonText","actionButtonClass","bodyText","downgrade","programDowngradeCallback","isFutureTmSubscription","downgradeProgramTooltipText","handleLoginAsClick","basicDetailsSubmitCallback","insertedCoreId","coreIdAsString","tuAdvanced","tmAdvanced","handleBasicDetailsSubmit","basicDetailsForm","isInvalidNewSchoolName","isInvalidType","countryCode","isInvalidCountry","belongsTo","isInvalidBelongsTo","isInvalidParentInstitution","saveBasicDetails","insertBasicDetails","setIsInvalidNewSchoolName","flag","setIsInvalidBelongsTo","setIsInvalidParentInstitution","handleDrupalSubmit","drupalForm","tuRegion","isInvalidTuRegion","tmRegion","isInvalidTmRegion","saveDrupal","setIsInvalidTuRegion","setIsInvalidTmRegion","disallowGroupsSubmit","handleInstitutionGroupSubmit","saveInstitutionGroup","searchInstitutionsWithoutGroup","handleSubscriptionSubmit","subscriptionForm","saveSubscription","subscriptionsAsArray","subscriptionsAsString","getAllSubscriptions","res","Infinity","v","k","setInvalidDates","subscription","appendSubscriptionsData","currentCoreId","activeCoreId","setHasSubscriptionsChanges","updateCountryName","getCountryNameByCode","countryName","getAll","found","unshift","sortKeys","priority","latestSortKey","allowViewTuSite","allowViewTmSite","isViewTuSiteEnabled","isClientDepartmentDowngradeDisabled","allowViewTmSiteButtonEnabled","getTypeFilterData","rankingsOptions","subscriptionsList","isStatisticsSubscription","countriesList","getCountries","selectTemplate","selectCellTemplate","searchEnabled","handleAddInstitutionClick","setSelectedOptionType","selectedType","findSimilar","stripInstitutionId","institutionName","selectedSearchResult","initialiseBelongsTo","belongsToList","getBelongsToList","institutionTypeId","showParentInstitution","searchTopLevelInstitutions","parentInstitutionSearchResults","handleDepartmentsListCloseClick","handleGetCampusesWatch","newCampuses","handleDowngradeClick","downgradeInProgress","downgradeCallback","hasMissingFields","uni","drupalTmRegionId","drupalTuRegionId","isUpgradeButtonDisabled","upgradeInProgress","upgrade","upgradeCallback","isAllStatistic","isInstitutionListReload","setReloadInstitutionList","dataLoadWatch","leftToLoad","dataToLoad","getTypes","getTuRegions","tuRegionsList","getTmRegions","tmRegionsList","invalidDates","tabIds","isReload","isSubscriptionsTabSelected","isStatusTabSelected","isInvalidDates","campusesList","NgTableParams","CampusesService","MapInitializerFactory","newlyAdded","refreshMapInProgress","selectedCampusId","resetColumns","campusesToDelete","headerTemplateURL","campusMap","hiddenColumns","renderMap","latitude","longitude","campusLatitude","campusLongitude","googleMapsLatLng","google","maps","LatLng","lat","parseFloat","lng","panTo","setOptions","zoom","mapTypeId","MapTypeId","ROADMAP","draggable","googleMapsMarker","setMap","Marker","addListener","latLng","autoGenerate","setCenter","initialiseMap","Map","getElementById","handleDataGridRowClickCampus","campusCopy","displayMap","handleCampusSubmit","campusSubmitInProgress","campusDetailsForm","saveCampus","coordinates","random","addressLine","getCampusAddress","primaryName","getCampusIsPrimary","country","syncCampuses","sortableOptions","ui-floating","initialList","reOrderCampuses","saveOrder","getCampusesToDelete","campusIds","hasCampusesToDelete","handleDeleteClick","deleteCampuses","assignedOrder","order","getMode","handleAddClick","displayInFrontEnd","coordinatesChanged","coordinatesUpdated","getCoordinatesByCampusCallback","refreshMap","getCoordinatesByCampus","filterDelay","intLatitude","intLongitude","newId","oldId","cancelInitWatch","displayOnFrontEndClick","InstitutionsList","types","tuRegions","countries","tmRegions","institutionGroupsRequest","getCampusesOrderingModel","getInstitutionModel","getInstitutionGroupsSaveModel","getInstitutionGroupsModel","getCampusModel","delete","getDeleteCampusesModel","getTopLevelInstitutionSearchModel","getDepartmentsListModel","getDepartmentModel","filter[parentCoreId]","reduce","getTmSubscriptions","subscriptionName","getSubscriptionNameByHandle","formattedDate","typesFilterData","getTypeNameById","typeName","processInstitution","processCampuses","enabledUg","enabledPg","enabledTm","validTid","tid","unCheckAll","primaryCount","filterObject","object","filteredObject","subValue","subKey","filterObjectForSubscriptions","subValue2","subKey2","EndpointModel","dataToInsert","businessSchool","filemakerId","localName","InstitutionModel","linkedWithAdvancedPrograms","aw","brics","aur","eeca","wur","ger","lau","InstitutionGroupsModel","getCountryFilterData","countriesFilterData","CampusModel","addressLine1","addressLine2","postcode","city","region","primaryInPrograms","createdCount","deleteCampus","formatForOrdering","formattedItems","groupMembersClone","institutionGridColumnsVisibility","institutionsSubscriptions","InstitutionsSubscriptionsService","isLogVisible","subscriptionsLog","subscriptionsLogLoading","downgradeCheckInProgress","maxDate","getCurrentDate","initDowngradeAllowed","downgradeAllowed","handleHistoryLogClick","loadSubscriptions","toggleSubscriptionsLog","getLog","isSubscriptionsLogLoading","getSubscriptionsLog","isProfilesLoading","isDowngradeAllowed","isNumber","isDowngradeAllowedTu","isSubscribed","isDowngradeAllowedTm","handleInstitutionChange","maxDateWatch","subscriptionsWatch","allowTu","hasSubscriptionsChangesWatch","has","hasSubscriptionsChanges","cancelSubscriptionTabWatch","getModel","getDowngradeAllowedModel","filterByDate","subscritpions","filtered","subscritpion","filter[type]","institutionsListSubscriptions","institutionsListStatus","setType","setCountry","setBelongsTo","setTuRegion","setTmRegion","countryList","belongsToName","initLists","cancelTabWatch","ExceptionHandler","exception","Client","projectKey","addFilter","notice","context","environment","cause","notify","angular_cause","Modal","$uibModal","customModalDefaults","customModalOptions","tempModalDefaults","tempModalOptions","$uibModalInstance","ok","close","dismiss","open","Watch","watchExpression","objectEquality","prettyPrintExpression","stopWatch","progressCircle","getParams","percent","colour","sharedProfile","SharedProfileService","generalHistoryDisabled","fetchingHistory","showGeneralHistoryBlock","showCampusForm","historyLog","totalReturned","loadHistoryLog","getGeneralHistory","generalHistoryLog","handleLoadMoreHistoryLog","fetchingMoreHistoryLog","handleGeneralHistoryCloseClick","isGeneralTabActive","isCampusesTabActive","handleHistoryLogVisibility","getSharedProfile","generalHistory","getSharedProfilesCoreModel","getSharedProfilesHistoryModel","getSharedProfilesModel","toJSON","recordId","noCache","saveGeneral","profileData","foundationYear","smallLogo","description","mediumLogo","largeLogo","sharedProfileId","profileBeforeChanges","foundationYearSpinOptions","verticalbuttons","getFullYear","initLastUploaded","smallLogoPath","mediumLogoPath","largeLogoPath","lastUploaded","checkProfileLogos","assignDefaultDisplayLogos","copyProfileToDisplayLogos","copyLastUploadedToProfileLogos","copyLastUploadedToProfileDisplayLogos","assignDisplayLogos","copyResponseToLastUploaded","small","medium","large","assignDisplayLogo","clearLogos","getUploadUrl","handleClearLogosClick","generalForm","logoDropzoneInstance","handleLogoUploaded","handleLogoAdded","logoConfig","isRemoveLogosDisabled","SharedProfileCampuses","isQsUser","campusesInEventsInclusionDisbaled","displayMapBlock","mapMarkers","handleIncludeInEventsClick","campusesOnEvents","objectId","counts","debugMode","getCampusList","initEvents","sharedProfileCampusForm","isValidName","campusForm","$pristine","isValidCountry","isValidAddress","isValidCity","editToggle","edit","displayDelete","handleCancelClick","deleteCallback","handleCreateClick","createCallback","currentCampuses","resetCampusForm","handleUpdateClick","updateCallback","Campuses","totalEntries","formatedCampusList","getCreateModel","campusData","addressLine3","getCoordinatesModel","getSearchString","searchValues","searchFields","searchString","TuProfileHistoryLogFactory","upgradeEmailsTo","institutionDataLoaded","upgradeRequest","showUpgradeForm","showHistory","tuIsAdvanced","showClientUpgradeForm","ugOrPgDisabled","profileDisableName","isProfileEnabled","toggleUpgradeForm","toggleHistory","fetchingHistoryLog","upgradeProfile","comments","sendUpgradeRequest","showDepartmentsTab","isRequestInfoTypeUrl","searchField","isSubjectsTabActive","isMediaTabActive","isPublishTabActive","handleSendUpgradeRequestClick","showDProgramAddForm","overviewData","tuOverviewHistory","getOverviewData","getTuOverviewHistory","getTuProfileModel","getUpgradeRequestModel","updateTuProfile","updateInstitution","getTuByCoreIdModel","tuProfileId","getBelongsToName","TuProfileOverview","TuProfileOverviewService","UrlService","ObjectService","TextService","textEditorBasicOptions","disableDragAndDrop","styleWithSpan","minHeight","maxHeight","toolbar","textEditorAdvancedOptions","advancedDescriptionWordLimit","validationMessageAdvancedDescriptionWordLimit","advancedMasterOverviewWords","advancedUgOverviewWords","advancedPgOverviewWords","basicDescriptionWordLimit","validationMessageBasicDescriptionWordLimit","basicMasterOverviewWords","basicUgOverviewWords","basicPgOverviewWords","overviewBasicMasterFormSubmitInProgress","overviewBasicUgFormSubmitInProgress","overviewBasicPgFormSubmitInProgress","activeOverviewSubTab","isInvalidUrl","handleTuOverviewHistoryLogClick","ugIsAdvanced","resetDescriptionForm","handleOverviewBasicMasterDataSubmit","isBasicOverviewEmpty","basicMasterOverview","overviewBasicMasterForm","saveOverviewData","setIsBasicOverviewEmpty","handleOverviewAdvancedMasterDataSubmit","isAdvancedOverviewEmpty","advancedMasterOverview","masterWebsiteUrl","overviewAdvancedMasterFormSubmitInProgress","overviewAdvancedMasterForm","requestInfoTypeMaster","masterRequestInfoUrl","masterRequestInfoUrlTitle","masterRequestInfoEmail","setIsAdvancedOverviewEmpty","handleOverviewBasicUgDataSubmit","isBasicUgOverviewEmpty","basicUgOverview","overviewBasicUgForm","setIsBasicUgOverviewEmpty","handleOverviewAdvancedUgDataSubmit","isAdvancedUgOverviewEmpty","advancedUgOverview","ugWebsiteUrl","overviewAdvancedUgFormSubmitInProgress","overviewAdvancedUgForm","requestInfoTypeUg","ugRequestInfoUrlTitle","ugRequestInfoUrl","ugRequestInfoEmail","setIsAdvancedUgOverviewEmpty","handleOverviewBasicPgDataSubmit","isBasicPgOverviewEmpty","basicPgOverview","overviewBasicPgForm","setIsBasicPgOverviewEmpty","setOverviewInvalid","setIsAdvancedPgOverviewEmpty","handleOverviewAdvancedPgDataSubmit","isAdvancedPgOverviewEmpty","advancedPgOverview","pgWebsiteUrl","overviewAdvancedPgFormSubmitInProgress","overviewAdvancedPgForm","requestInfoTypePg","pgRequestInfoUrlTitle","pgRequestInfoUrl","pgRequestInfoEmail","getHistoryLog","getProfileId","isAdvancedOverviewInvalid","advancedOverviewWords","isBasicOverviewInvalid","basicOverviewWords","onKeyUp","$event","keyCode","variableName","getAttribute","historyLogFieldNames","profileId","activeTabs","getTuModel","getHistoryModel","fields","filter[recordId]","TmProfileOverview","TmProfileOverviewService","TmProfileFactory","TmProfileOverviewHistoryLogFactory","TmProfileOverviewFactory","fetchingHistoryLogsInProgress","overviewBasicFormSubmitInProgress","tmProfile","websiteUrl","handleOverviewBasicDataSubmit","isBasicTmOverviewEmpty","basicOverview","overviewBasicForm","setIsBasicTmOverviewEmpty","handleOverviewAdvancedDataSubmit","isAdvancedTmOverviewEmpty","advancedOverview","overviewAdvancedFormSubmitInProgress","overviewAdvancedForm","requestInfoEmail","setIsAdvancedTmOverviewEmpty","handleTmOverviewHistoryLogClick","isOverviewVisible","setOverviewVisible","getOverviewHistoryLogs","setLogs","handleTmFaqHistoryLogClick","isFaqVisible","setFaqVisible","getFaqHistoryLogs","isOverviewInvalid","activeOverviewSubTabWatch","closeRightSidePanels","isLoadMoreRequestWatch","loadMore","getLimit","setLimit","isLoadMoreRequest","TmProfileOverviewFaq","maxItems","maxFaqItems","wordsLimit","defaultItem","answer","question","wordsCounters","Array","faq","handleTextEditorChanges","isInvalidAnswer","tmProfileId","handleRemoveClick","isRemoveDisabled","isItemVisible","showAddFaq","itemIndex","resetFaq","isFaqSelected","getTmModel","getLogs","tabId","isOverviewSelected","tmProfileOverviewHistoryLog","faqVisible","overviewVisible","logs","closeAll","newLimit","more","tuProfileDepartments","deleteField","modifiedAtField","departmentsToDelete","alphabeticalOrderingInProgress","gridFilterNameSpace","gridVisibilityNameSpace","lastCreatedAt","handleCreatedAtDateRange","handleAlphabeticalOrderClick","alphabetical","handleAddDepartmentClick","getDepartmentsToDelete","departmentsIds","rows","handleDatagridFiltersChanges","currentCreatedAt","handleDatagridDragAndDrop","getVisibleRows","orderedIds","updateOrder","headerCellClass","headerCellTemplate","getDepartmentTypes","GREATER_THAN_OR_EQUAL","LESS_THAN_OR_EQUAL","draggableRows","rowDropped","cutomCheckboxMessage","tuProfileDepartmentForm","addInProgress","editInProgress","isFetchInProgress","allowUpgrade","allowEdit","allowDowngrade","isDowngradeDisabled","hasActiveSubscription","getDepartmentCoreId","completeUpgradeClick","getTypeName","downgradeAndDelete","completeDowngradeClick","handleDepartmentUpdateClick","setIsInvalidDepartmentNameUpdate","setIsInvalidBelongsToUpdate","modifiedAt","triggerValidators","isEdit","editDepartmentForm","handleDepartmentCreateClick","setIsInvalidNewDepartmentName","setIsInvalidNewBelongsTo","primaryCampusId","toggleClientUpgradeForm","isInvalidCampusUpdate","getUpgradeModel","getDowngradeModel","getDeleteModel","getOrderingModel","departmentId","CreateModel","ids","queryParams","getDepartmentNameById","departmentName","departmentsData","departmentObject","clientDepartment","tuProfileSubjects","TuProfileSubjectsService","subjectsTabSubmitInProgress","handleSubjectTabSubmit","subjectsForm","saveSubjectsTab","reformatTuProfileSubjects","ugSubjects","formatSubjects","pgSubjects","resetTuProfileSubjects","hasPhdSubjects","initData","getSubjects","splitObject","getTuSubjectsModel","getSubjectsModel","groupedSubjects","subject","justHandles","formattedSubjects","subjectHandle","subjectKey","TuSubjectsModel","inputObject","chunks","inChunks","$templateRequest","TuProfileProgramsService","programsToDelete","tuProfileData","handleAddProgramClick","getProgramsToDelete","programsIds","hasProgramsToDelete","getAllProgramsByCoreId","isUpdated","tuProfileProgramForm","upgradeProgramEmailsTo","departmentsListArr","toggleProgramUpgradeForm","setProgramUpgradeFormVisibility","toggleProgramAddForm","programFormVisibilityWatch","toggleProgramEditForm","setIsInvalidName","isInvalidName","setIsInvalidUrl","setIsInvalidDepartment","isInvalidDepartment","restrictBelongsToOptions","handleDepartmentChanges","departmentExists","exists","validateProgram","resetValidation","handleProgramUpdateClick","isInvalidProgram","editProgramForm","handleProgramCreateClick","call","getProgramsListModel","institutionCoreIdAsString","getAllPrograms","programsData","programObject","TuProfileMediaService","typeOverview","typeUndergraduate","typePostgraduate","isValidType","scopeTypes","valid","typesIndex","validateTypes","objectSearch","haystack","needle","TuProfileMedia","isMediaReloading","isImagesTabActive","isVideosTabActive","isBrochuresTabActive","isSocialMediaTabActive","TuMediaCommonSidebar","TuMediaService","TuMediaVideosService","TuMediaBrochuresService","TuMediaSocialMediasService","TuMediaImagesService","setSelected","getSelected","getGeneralCounter","totalCount","videoItems","getVideoItems","brochureItems","getBrochureItems","socialMediaItems","getSocialMediaItems","imageItems","getImageItems","useTuSubtypes","ngIfDirective","ngIf","terminal","$attr","arguments","TuMediaVideos","itemVideo","displayLocationDeletePopup","setSelectedVideo","getItemVideo","setVideoItems","filteredVideoItems","getTriggerChange","selectedVideo","getSelectedVideo","ui","sortable","validateItems","displayTypesValid","orderType","selectVideo","setHighlighted","deleteVideo","TuMediaVideosSidebar","youtubeUrlPattern","saveVideoForm","formVideo","videoItem","actionName","currentVideos","imageUrl","youtubeId","saveVideo","setTriggerChange","clearVideoForm","resetItem","setDisplayTypesValidation","isEditMode","getType","getDisplayTypesValidation","selectedVideoBeforeChanges","getHighlighted","isHighlighted","triggerChange","getVideoModel","getVideosOrderingModel","video","videoModel","videoSubmit","formatVideo","videoId","assignedTo","transform","typeUg","typePg","typeMaster","aValue","orderOverview","orderUndergraduate","orderPostgraduate","_id","orderTypes","formatVideos","TmMediaVideosService","setCoreId","TmMediaVideos","TmMediaService","TmMediaVideosSidebar","getSelectedMediaSubTabId","TuMediaBrochures","itemBrochure","setSelectedBrochure","getItemBrochure","brochures","setBrochureItems","filteredBrochureItems","selectedItemId","replaceByKey","selectedBrochure","getSelectedBrochure","selectBrochure","setTriggerReset","deleteBrochure","TuMediaBrochuresSidebar","urlPattern","saveBrochureForm","brochureItem","isInvalidTitle","formBrochure","saveBrochure","selectedBrochureBeforeChanges","clearBrochureForm","setIsInvalidTitle","getTriggerReset","getBrochureModel","getBrochuresOrderingModel","brochure","brochureModel","brochureSubmit","formatBrochure","brochureId","itemValue","formatBrochures","TuMediaSocialMedias","itemSocialMedia","processInput","socialMedia","setSelectedSocialMedia","flattenArray","getChanges","selectSocialMedia","getSelectedSocialMedia","TuMediaSocialMediasSidebar","invalidCheckboxes","invalidFields","selectedSocialMedia","resetInvalidField","resetInvalidCheckbox","resetIfEmpty","clearSocialMediaForm","saveSocialMediaForm","invalidItems","socialMediaValidation","socialMediaFormValidation","formSocialMedia","invalid","invalidUrl","socialMediaItem","formatSocialMedia","saveSocialMedia","selectedSocialMediaBeforeChanges","setChanges","setValue","checkCheckboxes","displayValue","valueChanged","prevValueChanged","checkboxChanged","itemChanged","checkedOnChanged","uniqueItems","totalKey","totalChecked","visibleCount","socialMediaType","selectedSocialMediaUrl","getSelectedSocialMediaUrl","getSocialMediaModel","socialMediaId","setSocialMediaItems","getItemSocialMedia","formatSocialMedias","socialMedias","checkboxesChecked","$name","charAt","output","tmpOutput","changes","getSocialMediaObject","mediaType","assignData","inputData","mediaTypeValue","objectData","assignedType","forType","outputData","inputDataValue","inputDataKey","dataKey","getEmpty","initialValue","resetDataForType","dataValue","dataSubValue","dataSubKey","assignNewData","currentlySelected","outputValues","valueKey","copySelected","mediaTypeKey","applyUpdate","TuMediaImages","Lightbox","itemImage","uploadedImagesCount","maxImages","getMaxImages","images","setImageItems","recalculateImages","filteredImageItems","selectedImage","getSelectedImage","getItemImage","setSelectedImage","displayIsValidType","setDefault","selectImage","deleteImage","thumbnailUrl","setOptionsMaxFiles","dropZoneImageInit","uploadImage","imageItem","setImageUploadingInProgress","saveImage","selectedImageBeforeChanges","handleImageSuccess","handleImageError","accepted","dictFileTooBig","dictMaxFilesExceeded","dictInvalidFileType","isTemporary","getImageUploadingInProgress","openLightboxModal","openModal","TuMediaImagesSidebar","saveImageForm","formImage","checkAssigned","actionAllowed","assignError","clearImageForm","setDisplayIsValidType","getDisplayIsValidType","getSelectedImageWatch","getHasErrorsWatch","getTriggerResetWatch","getHighlightedWatch","getSelectedMediaTabIdWatch","getImageModel","getImagesOrderingModel","image","imageModel","imageSubmit","formatImage","imageId","imageUploadingInProgress","formatImages","setUploadedImagesCount","getUploadedImagesCount","TmProfileMediaService","TmProfileMedia","isMediaVideosSubTabSelected","isMediaBrochuresSubTabSelected","isMediaSocialSubTabSelected","TmMediaCommonSidebar","TmMediaBrochuresService","TmMediaSocialMediasService","TmMediaImagesService","setSelectedMediaSubTabId","TmMediaImages","getSubmitInProgress","TmMediaImagesSidebar","setSubmitInProgress","serviceMediaImages","TmMediaSocialMedias","TmMediaSocialMediasSidebar","TmMediaBrochures","TmMediaBrochuresSidebar","tuProfilePublish","PublishService","subscribedTo","handlePublish","publishDisabled","statusMessage","publishCallback","feedId","setStatus","publishSubscribe","subscribeType","sectionPublishStatusCallback","convertErrorMessage","viewDisabled","nodeId","updateStarsSection","publishStatusCallback","getPublishStatus","tuProfilePublishLogs","updatePublishLogs","getPublishLogs","publishLogs","fetchingPublishLog","getPublishStatusMapped","getStatus","tuProfileResubscribe","TuProfileResubscribeService","expiresDate","displayResubscribeForm","formData","initFormData","resubscribeClick","cancelClick","submitClick","showResubscribeButton","todayDate","daysLeft","leftMs","ceil","abs","getResubscribeModel","fromName","fromEmail","TuProfilePublishService","isStatus","getPublishModel","getPublishStatusModel","getLogsModel","getNodeId","nodeType","qsUser","tuUrl","masterNid","ugNid","pgNid","feedPreviewUrl","TmProfileService","showFaqHistory","showOverviewHistory","isLoadMoreHistoryLogsInProgress","tmIsAdvanced","getOverviewTabId","upgradeProgramRequest","deleteRequest","tmProfileBeforeChanges","showDeleteForm","showProgramSubscribeForm","loadTmProfileData","getTmProfileData","institutionTmProfileChanges","showUpgradeProgramRequest","toggleUpgradeProgramForm","handleCloseDeleteForm","handleSendDeleteRequestClick","deleteRequestInProgress","announceProgramDeletion","handleProgramUpgradeRequestClick","handleLoadMoreHistoryLogs","closeHistoryLogs","overviewLog","isMoreLogsAvailable","isFaqHistoryLogsVisibleWatch","wasVisible","isOverviewHistoryLogsVisibleWatch","getHistoryLogsDataWatch","isHistoryLogsLoadMoreInProgressWatch","activeTabWatch","getCoreIdWatch","showProgramStasTab","isProgramUpgradeFormVisible","isDeleteFormVisible","setReadOnly","TmProfile","approved","pendingDeletion","editApproved","pendingApprove","pendingEdit","cache","getProfileModel","getProgramTypesList","getFeesRangesList","getLengthList","getPercentList","getYearList","startYear","endYear","getMonthsList","months","month","getAccreditationsList","getProgramStatusList","isProgramApproved","isProgramPendingDeletion","isProgramPendingApprove","isProgramPendingEdit","isProgramEditApproved","getCampusesKeyValuePairs","useCache","clearCache","getSpecialisationsList","specialisationsList","backend","readOnly","selectedMediaSubTabId","deletedProgramId","directoryVal","updatedProgramId","programSubscribeFormVisible","deleteFormVisible","programUpgradeFormVisible","programsDatagridReload","isUpgraded","programStats","mediaTabs","social","setBackend","isBackend","isReadOnly","isStatsTabSelected","isMediaImagesSubTabSelected","newSelectedSubTabId","setMediaImagesSubTabSelected","hasDeletedProgram","clearDeletedProgram","announceProgramUpdate","hasUpdatedProgram","clearProgramUpdate","setUpgradeSubscription","isUpgradedSubscriptions","getProgramEditFormVisibility","setProgramSubscribeFormVisibility","getProgramSubscribeFormVisibility","getProgramAddFormVisibility","setDeleteFormVisibility","resetProgramsDatagridReload","requestProgramsDatagridReload","isProgramsDatagridReload","setDirectory","newVal","isDirectory","TmProfileHistoryLog","tmProfileResubscribe","TmProfileResubscribeService","tmProfilePrograms","programsPackage","handleProgramsListResponse","linkSubscriptions","hasDeletedProgramsWatch","hasUpdatedProgramWatch","updated","isRightSidePanelActiveWatch","added","hasNewProgramUpgradeWatch","upgraded","core_id","isProgramsDatagridReloadWatch","dataRequest","getTmpCampusId","isTmpCampusId","tmProfileProgramForm","TmProfileProgramValidationService","TmDirectoryService","UiSelectService","programDescriptionWordLimit","feesRangesList","monthsList","accreditationsList","lengthList","percentList","yearList1850","yearList020","offerScholarshipsList","isNewCampus","isEditCampus","programSubmitInProgress","newCampus","oldCampus","oldProgramCampuses","programCampuses","campusSubmitted","campusesWithChanges","campusesFullList","isSchoolUser","tmSupportEmail","showResubscribeBanner","showSubscriptionForm","showEdiProgramForm","programHistory","isAddMode","addProgramDetailsForm","editProgramDetailsForm","isValidDescription","isValidCampusAssigned","addProgramStatsForm","editProgramStatsForm","isValidStats","isValidDetails","isValidAddCampus","isValidCampus","addCampusForm","isValidEditCampus","editCampusForm","isValidAverageGmat","isValidClassSize","isValidAverageSalaryAfterGraduation","isValidCampusName","isValidCampusCountry","isValidCampusAddressLine1","isValidCampusCity","stats","handleAddCampusClick","handleCancelCampusClick","handleNewCampusSubmit","handleUpdateCampus","isEditCampusFormVisible","showStatistics","showDetails","showCampus","avgGmat","classSize","avgSalaryAfterGraduation","parentInstitutionCoreId","totalProcessedCampuses","createdProgram","newCampusId","isTmp","hasTmp","skipStatus","newProgramUpdateCallback","initForms","handleProgramEditClick","closeAddProgramForm","closeEditProgramForm","closeSubscribeProgramForm","allowDelete","allowUpdate","getEditTitle","getSubscriptionTitle","getEditButtonTitle","getDeleteButtonTitle","getUpgradeButtonTitle","getAllSubscriptionsCallback","tmSubscription","showContent","handleUpgradeSubmit","editCampus","isProgramSubmitDisabled","getCampusById","clearTmpCampuses","resetCampusList","campusObject","newProgramCampusWatch","selectedCampusesIds","programCampusWatch","existingProgramCampusWatch","existingIds","totalAssignedCampuses","programHistoryCallback","humanReadable","specListItem","subItem","isString","typeListItem","loadProgramCampuses","programInstitutionCoreId","assignedCampus","availableCampus","getProgramWatch","isProgramAdvanced","getProgramHistory","changeValidateRange","targetVar","formVisibilityWatch","autoGenerateCordinates","autoGenerateCordinatesEdit","getCoordinatesByEditCampusCallback","specialisations","TmProgramValidation","isNotEmpty","form","isFloat","n","Number","isValidStatsRange","statsForm","tmProfilePublish","TmProfileHistoryLogFactory","publishProgramsBasic","publishProgramsAdvanced","publishBasicPrograms","publishAdvancedPrograms","isTm","institutionHasAdvancedPrograms","tmProfilePublishLogs","TmProfilePublishService","tmUrl","basic","statusValue","tmProfileProgramStats","TmProfileProgramStatsService","programStatisticObject","programId","getStats","TmProfileProgramsStatsService","getFetchModel","getStatsModel","tmDirectory","uiGridExporterConstants","uiGridExporterService","TmDirectoryFactory","sendEmailToClient","programStatus","TmProfileProgramFormController","closeEditForm","setEditMode","toggleDatagridSettings","handleDeleteAndPublishClick","getFormTitle","handleCancelDeletionClick","revertStatus","handleProgramApproveClick","approve","approveCallback","succeed","publishMessage","publishSuccess","published","approveButtonTitle","getSortColumn","exporterMenuAllData","exporterMenuPdf","exporterCsvFilename","gridMenuCustomItems","action","exportColumnHeaders","getColumnHeaders","VISIBLE","exportData","getCsvData","csvContent","formatAsCsv","exporterCsvColumnSeparator","downloadFile","exporterOlderExcelCompatibility","tmProgramHistory","getTmProgramHistory","getProgramStatusRevertModel","getProgramHistoryModel","cellValue","extractedRow","gridCol","colDef","exporterSuppressExport","extractedField","TmDirectory","contactsList","ContactsService","getDepartmentsCoreIds","departmentsCoreIds","filter[primaryInstitutionCoreId][]","Contacts","filter[typeId][]","formattedList","institutionsUsersListClone","userObj","getPasswordModel","invalidCount","socketIo","WebSockets","socket","connect","listen","args","send","emit","room","io","masterPassword","$interval","MasterPasswordService","timer","ttl","expired","timeLeftPercentage","isExpired","round","secondsLeft","getMasterPasswordCallback","atob","initTimers","updateTime","getMasterPassword","MasterPassword","getMasterPasswordModel","selectOnClick","getSelection","setSelectionRange"],"mappings":"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","file":"scripts.js","sourcesContent":["/**\n * INSPINIA - Responsive Admin Theme\n * 2.3\n *\n * Custom scripts\n */\n\n$(document).ready(function () {\n\n\n    // Full height\n    function fix_height() {\n        var heightWithoutNavbar = $(\"body > #wrapper\").height() - 61;\n        $(\".sidebard-panel\").css(\"min-height\", heightWithoutNavbar + \"px\");\n\n        var navbarHeigh = $('nav.navbar-default').height();\n        var wrapperHeigh = $('#page-wrapper').height();\n\n        if(navbarHeigh > wrapperHeigh){\n            $('#page-wrapper').css(\"min-height\", navbarHeigh + \"px\");\n        }\n\n        if(navbarHeigh < wrapperHeigh){\n            $('#page-wrapper').css(\"min-height\", $(window).height()  + \"px\");\n        }\n\n        if ($('body').hasClass('fixed-nav')) {\n            $('#page-wrapper').css(\"min-height\", $(window).height() - 60 + \"px\");\n        }\n    }\n\n    $(window).bind(\"load resize scroll\", function() {\n        if(!$(\"body\").hasClass('body-small')) {\n            fix_height();\n        }\n    });\n\n    setTimeout(function(){\n        fix_height();\n    });\n});\n\n// Minimalize menu when screen is less than 768px\n$(function() {\n    $(window).bind(\"load resize\", function() {\n        if ($(this).width() < 769) {\n            $('body').addClass('body-small')\n        } else {\n            $('body').removeClass('body-small')\n        }\n    })\n});\n\n(function (angular) {\n    \"use strict\";\n\n    var App = angular.module('qsHub', [\n        'ui.router', // Routing\n        'ui.bootstrap', // Bootstrap\n        'ngStorage',\n        'ngTable',\n        'ngResource',\n        'ui.gravatar',\n        'angular.filter',\n        'ngAnimate',\n        'toaster',\n        'daterangepicker',\n        'ngSanitize',\n        'ui.select',\n        'ngDropzone',\n        'ui.event',\n        'ui.map',\n        'summernote',\n        'ui.sortable',\n        'focus-if',\n        'bootstrapLightbox',\n        'ui.grid',\n        'ui.grid.pagination',\n        'ui.grid.selection',\n        'ui.grid.resizeColumns',\n        'ui.grid.draggable-rows',\n        'ui.grid.autoResize',\n        'ui.grid.exporter',\n        'ngTouch',\n        'qsHubTemplates',\n        'xdLocalStorage'\n    ]);\n\n})(window.angular);\n\n(function(angular) {\n    'use strict';\n\n    var env = 'local', shared = {\n        globalAdminRole : 'global_admin.global_admin',\n        gridNameSpaces : {\n            qsUserGridFilters           : 'qsUserGridFilters',\n            schoolUserGridFilters       : 'schoolUserGridFilters',\n            institutionsGridFilters     : 'institutionsGridFilters',\n            tmDirectoryGridFilters      : 'tmDirectoryGridFilters',\n            departmentsGridFilters      : 'departmentsGridFilters',\n            departmentsOvGridFilters    : 'departmentsOvGridFilters',\n            programsGridFilters         : 'programsGridFilters',\n            programsOvGridFilters       : 'programsOvGridFilters',\n            programsTmGridFilters       : 'programsTmGridFilters',\n            contactsGridFilters         : 'contactsGridFilters',\n            qsUserGridVisibility        : 'qsUserGridVisibility',\n            schoolUserGridVisibility    : 'schoolUserGridVisibility',\n            institutionsGridVisibility  : 'institutionsGridVisibility',\n            departmentsGridVisibility   : 'departmentsGridVisibility',\n            departmentsOvGridVisibility : 'departmentsOvGridVisibility',\n            programsGridVisibility      : 'programsGridVisibility',\n            programsOvGridVisibility    : 'programsOvGridVisibility',\n            programsTmGridVisibility    : 'programsTmGridVisibility',\n            tmDirectoryGridVisibility   : 'tmDirectoryGridVisibility',\n            contactsGridVisibility      : 'contactsGridVisibility'\n        },\n        coreFlag: {\n            value : 'session?url='\n        },\n        drupal: {\n            tu: {\n                url: 'http://qs-hub-topu.pantheonsite.io'\n            },\n            tm: {\n                url: 'http://test-qs-platform.pantheonsite.io',\n            }\n        },\n        customRole: 'custom',\n        events: {\n            institutionTuProfileChanges: 'institutionTuProfileChanges',\n            institutionSharedProfileChanges : 'institutionSharedProfileChanges',\n            loadMoreHistoryLogs : 'loadMoreHistoryLogs',\n            logout: 'logout',\n            closingInstitutionsUsers : 'closingInstitutionsUsers',\n            institutionsUserPrimaryInstitutionChanges : 'institutionsUserPrimaryInstitutionChanges'\n        },\n        publicPages : [\n            '/',\n            '/logout',\n            '/forgot-password'\n        ],\n        profileTypes : {\n            ug : 'ug',\n            pg : 'pg',\n            master : 'master'\n        },\n        typeId: {\n            topLevelInstitutionId: 2,\n            clientDepartmentId: 3,\n            simpleDepartmentId: 5,\n            advancedProgramId: 7,\n            internalId: 1\n        },\n        airbrake: {\n            enabled: true,\n            projectId: 131822,\n            key: '79104b307bdc43c018168ad3d715f57f',\n        },\n        urls: {\n            core: 'http://core.qs.com',\n        },\n        datagrid : {\n            contacts: {\n                defaultRowsNumber: 25\n            }\n        },\n        defaultClientPage: '/profiles/institution-details',\n        noTuSubtypes: false,\n        support: {\n            tu: 'tusupport@qs.com',\n            tm: 'tmsupport@qs.com'\n        },\n        xStorage: {\n            activeSource: 'hub',\n            allowedSources: [\n                'core'\n            ],\n            keys : {\n                source : 'x-source',\n                data : 'x-currentUser',\n                logout: 'x-logout',\n                sendToSession : 'x-sendToSession'\n            }\n        },\n        publishStatus: {\n            pending: 'pending',\n            progress: 'progress',\n            success: 'success',\n            failure: 'failure'\n        },\n    }, constants = {\n        local : {\n            api : {\n                usersPermissions: {\n                    url: 'http://users.qs-hub.local:8087'\n                },\n                institutions: {\n                    url: 'http://institutions.qs-hub.local:8086'\n                }\n            },\n            dev : false,\n            emails: {\n                upgradeTu: 'core.it@qs.com',\n                upgradeTm: 'core.it@qs.com'\n            },\n            webSockets : {\n                host : 'http://websocket',\n                port : 3000\n            },\n            airbrake: {\n                enabled: false\n            },\n            urls: {\n                core: 'http://local.core.qs.com:8081',\n            }\n        },\n        dev : {\n            drupal: {\n                tu: {\n                    url: 'https://dev-topu.pantheonsite.io'\n                },\n                tm: {\n                    url: 'https://test-qs-platform.pantheonsite.io',\n                }\n            },\n            api : {\n                usersPermissions: {\n                    url: 'http://users.qs-hub.dev.qs.com'\n                },\n                institutions: {\n                    url: 'http://institutions.qs-hub.dev.qs.com'\n                }\n            },\n            dev : false,\n            emails: {\n                upgradeTu: 'tusupport@qs.com',\n                upgradeTm: 'tmsupport@qs.com'\n            },\n            webSockets : {\n                host : 'http://qs-hub-docker-dev.qs-aim.com',\n                port : 3000\n            },\n            urls: {\n                core: 'http://staging.core.qs.com',\n            }\n        },\n        dev2 : {\n            drupal: {\n                tu: {\n                    url: 'https://sprint-72-topu.pantheonsite.io'\n                },\n                tm: {\n                    url: 'https://test-qs-platform.pantheonsite.io',\n                }\n            },\n            api : {\n                usersPermissions: {\n                    url: 'http://users.qs-hub.dev2.qs.com'\n                },\n                institutions: {\n                    url: 'http://institutions.qs-hub.dev2.qs.com'\n                }\n            },\n            dev : false,\n            emails: {\n                upgradeTu: 'tusupport@qs.com',\n                upgradeTm: 'tmsupport@qs.com'\n            },\n            webSockets : {\n                host : 'http://qs-hub-docker-dev2.qs-aim.com',\n                port : 3000\n            },\n            urls: {\n                core: 'http://staging.core.qs.com',\n            }\n        },\n        qa_test : {\n            drupal: {\n                tu: {\n                    url: 'https://qs-hub-topu.pantheonsite.io'\n                },\n                tm: {\n                    url: 'https://test-qs-platform.pantheonsite.io',\n                }\n            },\n            api : {\n                usersPermissions: {\n                    url: 'http://users.qs-hub.qa-test.qs.com'\n                },\n                institutions: {\n                    url: 'http://institutions.qs-hub.qa-test.qs.com'\n                }\n            },\n            dev : false,\n            emails: {\n                upgradeTu: 'tusupport@qs.com',\n                upgradeTm: 'tmsupport@qs.com'\n            },\n            webSockets : {\n                host : 'http://qs-hub-docker-qa-test.qs-aim.com',\n                port : 3000\n            },\n            urls: {\n                core: 'http://qa-testing.core.qs.com',\n            }\n        },\n        qa_prod : {\n            drupal: {\n                tu: {\n                    url: 'https://sprint-73-topu.pantheonsite.io'\n                },\n                tm: {\n                    url: 'https://dev-qs-platform.pantheonsite.io',\n                }\n            },\n            api : {\n                usersPermissions: {\n                    url: 'https://users-qs-hub-qa-prod.qs.com'\n                },\n                institutions: {\n                    url: 'https://institutions-qs-hub-qa-prod.qs.com'\n                }\n            },\n            dev : false,\n            emails: {\n                upgradeTu: 'tusupport@qs.com',\n                upgradeTm: 'tmsupport@qs.com'\n            },\n            webSockets : {\n                host : 'https://websocket-qa-prod.qs.com',\n                port : null\n            },\n            urls: {\n                core: 'http://qa-prod.core.qs.com',\n            }\n        },\n        staging : {\n            drupal: {\n                tu: {\n                    url: 'https://cf-test.topuniversities.com'\n                },\n                tm: {\n                    url: 'https://test-qs-platform.pantheonsite.io'\n                }\n            },\n            api : {\n                usersPermissions: {\n                    url: 'https://users-qs-hub-staging.qs.com'\n                },\n                institutions: {\n                    url: 'https://institutions-qs-hub-staging.qs.com'\n                }\n            },\n            dev : false,\n            emails: {\n                upgradeTu: 'tusupport@qs.com',\n                upgradeTm: 'tmsupport@qs.com'\n            },\n            webSockets : {\n                host : 'https://websocket-staging.qs.com',\n                port : null\n            },\n            urls: {\n                core: 'http://qa-prod.core.qs.com',\n            }\n        },\n        live : {\n            drupal: {\n                tu: {\n                    url: 'https://www.topuniversities.com'\n                },\n                tm: {\n                    url: 'https://www.topmba.com'\n                }\n            },\n            api : {\n                usersPermissions: {\n                    url: 'https://users-qs-hub.qs.com'\n                },\n                institutions: {\n                    url: 'https://institutions-qs-hub.qs.com'\n                }\n            },\n            dev : false,\n            emails: {\n                upgradeTu: 'tusupport@qs.com',\n                upgradeTm: 'tmsupport@qs.com'\n            },\n            webSockets : {\n                host : 'https://websocket-qs-hub.qs.com',\n                port : null\n            },\n            urls: {\n                core: 'http://core.qs.com',\n            }\n        }\n    };\n\n    if (window && window.location && window.location.hostname) {\n        switch (window.location.hostname) {\n            case 'qs-hub.dev.qs.com':\n            case 'qs-hub-dev.qs.com':\n                env = 'dev';\n                break;\n            case 'qs-hub.dev2.qs.com':\n            case 'qs-hub-dev2.qs.com':\n                env = 'dev2';\n                break;\n            case 'qs-hub.qa-test.qs.com':\n            case 'qs-hub-qa-test.qs.com':\n                env = 'qa_test';\n                break;\n            case 'qs-hub.qa-prod.qs.com':\n            case 'qs-hub-qa-prod.qs.com':\n                env = 'qa_prod';\n                break;\n            case 'qs-hub.staging.qs.com':\n            case 'qs-hub-staging.qs.com':\n                env = 'staging';\n                break;\n            case 'qs-hub.qs.com':\n                env = 'live';\n                break;\n        }\n    }\n    shared.env = env;\n\n    angular\n        .module('qsHub')\n        .constant('constants', angular.extend(shared, constants[env]));\n\n}(window.angular));\n\n(function(angular, Pace) {\n    'use strict';\n\n    var App = App || {\n        cancelMessage : 'cancel',\n        errors: {\n            401: 'Unauthorized',\n            403: 'Forbidden',\n        },\n        organisationId: 0,\n        services: {}\n    };\n\n    /**\n     *\n     * @param $q\n     * @param $location\n     * @param $localStorage\n     * @returns {App.services}\n     */\n    App.services.authInterceptor = function ($q, $location, $localStorage) {\n        var service = this,\n            url = '';\n        service.lastError = null;\n\n        service.request = function (config) {\n            if (!config.timeout) {\n                config.cancel  = $q.defer();\n                config.timeout = config.cancel.promise;\n            }\n\n            return config;\n        };\n\n        service.resetUrl = function () {\n            url = '';\n            service.lastError = null;\n        };\n\n        service.hasErrors = function () {\n            return !!service.lastError;\n        };\n\n        service.getOrganisationId = function () {\n            return App.organisationId;\n        };\n\n        service.setOrganisationId = function (organisationId) {\n            organisationId = parseInt(organisationId, 10);\n            if (organisationId && !angular.equals(App.organisationId, organisationId)) {\n                App.organisationId = organisationId;\n            }\n        };\n\n        service.responseError = function(rejection) {\n            // if its 401 error and not a cancel request\n            if (\n                rejection.config.timeout.$$state.value !== App.cancelMessage &&\n                rejection.status === 401 &&\n                (!service.lastError || service.lastError.status !== 401)\n            ) {\n                // remove user from local storage\n                delete $localStorage.currentUser;\n                var redirectUrl = decodeURIComponent($location.url()).replace('/?url=', '');\n\n                App.services.authInterceptor().setOrganisationId($location.search().coreId);\n                // if url is not yet set\n                if (!url.length) {\n                    url = redirectUrl;\n                }\n                $location.path('/').search({url: url});\n                $location.replace();\n            }\n            if (typeof rejection.status === 'undefined' || rejection.status !== -1) {\n                service.lastError = rejection;\n            }\n\n            return $q.reject(rejection);\n        };\n\n        return service;\n    };\n\n    App.config = function(\n        $stateProvider,\n        $urlRouterProvider,\n        $httpProvider,\n        ngTableFilterConfigProvider,\n        gravatarServiceProvider,\n        LightboxProvider\n    ) {\n        if (Pace) {\n            Pace.options.ajax.trackWebSockets = false;\n        }\n        $httpProvider.defaults.useXDomain = true;\n        $httpProvider.interceptors.push('authInterceptor');\n\n        // For any unmatched url, redirect to state /index/main\n        $urlRouterProvider.otherwise('/dashboard');\n        $stateProvider\n            .state('logout', {\n                url: '/',\n                templateUrl: '/scripts/layouts/login.html',\n                data: {\n                    login: true,\n                    page: 'login'\n                }\n            })\n            .state('forgot-password', {\n                url: '/forgot-password',\n                templateUrl: '/scripts/layouts/login.html',\n                data: {\n                    login: true,\n                    page: 'forgot-password'\n                }\n            })\n            .state('reset-password', {\n                url: '/reset-password?id',\n                templateUrl: '/scripts/layouts/login.html',\n                data: {\n                    login: true,\n                    page: 'reset-password'\n                },\n                controller: function($scope, $stateParams) {\n                    $scope.requestId = $stateParams.id;\n                }\n            })\n            .state('user', {\n                url: '/profiles',\n                abstract: true,\n                templateUrl: 'scripts/layouts/main.html'\n            })\n            .state('user.my-profile', {\n                url: '/profile',\n                templateUrl: 'scripts/components/profile/profileView.html',\n                data: {\n                    pageTitle: 'My Profile',\n                    label: 'My Profile'\n                }\n            })\n            .state('clients', {\n                abstract: true,\n                templateUrl: '/scripts/layouts/main.html',\n                data: {\n                    label: 'Institutions'\n                }\n            }).state('clients.profiles', {\n                url: '/profiles',\n                abstract: true,\n                template: '<div ui-view></div>',\n                data: {\n                    label: 'Profiles'\n                }\n            }).state('clients.profiles.shared', {\n                url: '/institution-details',\n                templateUrl: '/scripts/components/profiles/shared/sharedProfileView.html',\n                data: {\n                    pageTitle: 'Institution Details',\n                    label: 'Institution Details',\n                    name: 'Profiles'\n                }\n            }).state('clients.profiles.tu', {\n                url: '/topuniversities',\n                templateUrl: '/scripts/components/profiles/tu/tuProfileView.html',\n                data: {\n                    pageTitle: 'Undergraduate / Postgraduate',\n                    label: 'Undergraduate / Postgraduate',\n                    name: 'TopUniversities'\n                },\n                resolve: {\n                    security: [\n                        'TuProfileFactory',\n                        function (TuProfileFactory) {\n                            TuProfileFactory.setIsDepartmentOverview(false);\n                            TuProfileFactory.setIsProgramOverview(false);\n                        }\n                    ]\n                }\n            }).state('clients.profiles.tm', {\n                url: '/topmba',\n                templateUrl: '/scripts/components/profiles/tm/tmProfileView.html',\n                data: {\n                    pageTitle: 'MBA',\n                    label: 'MBA',\n                    name: 'TopMba'\n                }\n            }).state('clients.contacts', {\n                url: '/contacts',\n                templateUrl: '/scripts/components/contacts/contactsView.html',\n                data: {\n                    pageTitle: 'Contacts',\n                    label: 'Contacts',\n                    name: 'Contacts'\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService',\n                        function ($q, UserFactory, AuthenticationService) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            if (!UserFactory.hasData()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasContactsAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            }).state('staff', {\n                abstract: true,\n                templateUrl: '/scripts/layouts/main.html',\n                data: {\n                    label: 'QS Staff'\n                }\n            }).state('staff.dashboard', {\n                url: '/dashboard',\n                templateUrl: '/scripts/components/dashboard/admin/dashboardAdminView.html',\n                data: {\n                    pageTitle: 'QS Staff Dashboard',\n                    label: 'QS Staff Dashboard'\n                }\n            }).state('staff.users', {\n                url: '/users',\n                abstract: true,\n                template: '<div ui-view></div>',\n                data: {\n                    label: 'Users & Permissions'\n                }\n            }).state('staff.users.qs', {\n                url: '/qs',\n                templateUrl: '/scripts/components/users/list/qs/qsUsersListView.html',\n                data: {\n                    pageTitle: 'QS Users List',\n                    label: 'QS Users List',\n                    name: 'QS Users'\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService',\n                        function ($q, UserFactory, AuthenticationService) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            if (!UserFactory.hasData()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasQsUsersAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            }).state('staff.users.institutions', {\n                url: '/institutions',\n                templateUrl: '/scripts/components/users/list/institutions/institutionsUsersView.html',\n                data: {\n                    pageTitle: 'Institutions Users List',\n                    label: 'Institutions Users List',\n                    name: 'Institutions Users'\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService',\n                        function ($q, UserFactory, AuthenticationService) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            if (!UserFactory.hasData()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasInstitutionsUsersAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            }).state('staff.institutions', {\n                url: '/institutions',\n                template: '<div ui-view></div>',\n                data: {\n                    label: 'Institutions'\n                }\n            }).state('staff.institutions.list', {\n                url: '/institutions/list',\n                templateUrl: '/scripts/components/institutions/list/institutionsListView.html',\n                data: {\n                    pageTitle: 'Institutions List',\n                    label: 'Institutions List'\n                },\n                params: {\n                    coreId: null\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService',\n                        function ($q, UserFactory, AuthenticationService) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            if (!UserFactory.hasData()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasInstitutionsListAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            }).state('staff.institutions.department', {\n                url: '/department/overview',\n                templateUrl: '/scripts/components/institutions/department/departmentOverview.html',\n                data: {\n                    pageTitle: 'Department Overview',\n                    label: 'Department Overview'\n                },\n                params: {\n                    coreId: null,\n                    name: null\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService', 'TuProfileFactory',\n                        function ($q, UserFactory, AuthenticationService, TuProfileFactory) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            TuProfileFactory.setIsDepartmentOverview(true);\n                            if (!UserFactory.hasDepartmentsOverviewAccess()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasDepartmentsOverviewAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            }).state('staff.institutions.tu-programs', {\n                url: '/institutions/tu-programs/overview',\n                templateUrl: 'scripts/components/institutions/tu-programs/institutionsTuProgramsView.html',\n                data: {\n                    pageTitle: 'TU Programs Overview',\n                    label: 'TU Programs Overview'\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService', 'TuProfileFactory',\n                        function ($q, UserFactory, AuthenticationService, TuProfileFactory) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            TuProfileFactory.setIsProgramOverview(true);\n                            if (!UserFactory.hasTuProgramsOverviewAccess()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasTuProgramsOverviewAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            }).state('staff.tm-directory', {\n                url: '/tm-directory',\n                templateUrl: '/scripts/components/tmDirectory/tmDirectoryView.html',\n                data: {\n                    pageTitle: 'TM Directory',\n                    label: 'TM Directory'\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService',\n                        function ($q, UserFactory, AuthenticationService) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            if (!UserFactory.hasData()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasTmDirectoryAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            }).state('staff.master-password', {\n                url: '/master-password',\n                templateUrl: '/scripts/components/master-password/masterPasswordView.html',\n                data: {\n                    pageTitle: 'Master Password',\n                    label: 'Master Password',\n                    name: 'Master Password'\n                },\n                resolve: {\n                    security: [\n                        '$q' , 'UserFactory', 'AuthenticationService',\n                        function ($q, UserFactory, AuthenticationService) {\n                            UserFactory.setData(AuthenticationService.getUserData());\n                            if (!UserFactory.hasData()) {\n                                return $q.reject(App.errors[401]);\n                            } else if (!UserFactory.hasMasterPasswordAccess()) {\n                                return $q.reject(App.errors[403]);\n                            }\n                        }\n                    ]\n                }\n            });\n\n        var filterPath = '/scripts/shared/ng-table/filters/';\n        var filterAliasUrls = {\n            'date-range-picker': filterPath + 'dateRangeFilter.html'\n        };\n        ngTableFilterConfigProvider.setConfig({\n            aliasUrls: filterAliasUrls\n        });\n        gravatarServiceProvider.protocol = 'https';\n        gravatarServiceProvider.defaults = {\n          \"default\": 'mm'\n        };\n\n        LightboxProvider.templateUrl = '/scripts/shared/modal/modalTemplate.html';\n    };\n\n    App.run = function run(\n        $rootScope,\n        $state,\n        $http,\n        $location,\n        $localStorage,\n        $window,\n        constants,\n        AuthenticationService,\n        $timeout\n    ) {\n        var dataLayer = $window.dataLayer = $window.dataLayer || [];\n        $rootScope.$state = $state;\n\n        // keep user logged in after page refresh\n        if ($localStorage.currentUser) {\n            AuthenticationService.setAuthorizationHeader($localStorage.currentUser.token);\n        }\n\n        $rootScope.$on('$stateChangeStart', function (event) {\n            if ($window.localStorage[constants.xStorage.keys.logout] &&\n                constants.xStorage.allowedSources.indexOf($window.localStorage[constants.xStorage.keys.logout]) !== -1\n            ) {\n                event.preventDefault();\n                AuthenticationService.logout();\n                $state.go('logout');\n                return false;\n            } else if ($window.localStorage[constants.xStorage.keys.data] &&\n                $window.localStorage[constants.xStorage.keys.source] &&\n                constants.xStorage.allowedSources.indexOf($window.localStorage[constants.xStorage.keys.source]) !== -1 &&\n                !AuthenticationService.hasUserData()\n            ) {\n                var userData;\n                try {\n                    userData = angular.fromJson($window.localStorage[constants.xStorage.keys.data]);\n                } catch (e) {\n                    AuthenticationService.logout();\n                    return false;\n                }\n                AuthenticationService.setUserData(userData.userData);\n                AuthenticationService.setData(userData);\n            }\n            if ($window.localStorage[constants.xStorage.keys.sendToSession]) {\n                if ($window.localStorage[constants.xStorage.keys.sendToSession] === 'true') {\n                    $window.localStorage[constants.xStorage.keys.sendToSession] = 'false';\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeSuccess', function () {\n            dataLayer.push({\n                event: 'ngRouteChange',\n                attributes: {\n                    route: $location.path()\n                }\n            });\n            var restrictedPage = AuthenticationService.getPublicPages().indexOf($location.path()) === -1,\n                isClientPage = $state.includes('clients') || $state.includes('user');\n            App.services.authInterceptor().setOrganisationId($location.search().coreId);\n            // if its restricted page and user is not logged in\n            if (restrictedPage && !$localStorage.currentUser) {\n                var redirectUrl = $location.url();\n                // send user to login page\n                $location.path('/').search({url: redirectUrl});\n                $location.replace();\n                // cancel all ajax requests\n                $http.pendingRequests.forEach(function (pendingRequest) {\n                    if (pendingRequest.cancel) {\n                        pendingRequest.cancel.resolve(App.cancelMessage);\n                    }\n                });\n            } else if (// logged in user is client and accessing backend page\n                !isClientPage && $localStorage.currentUser &&\n                $localStorage.currentUser.info.isClient &&\n                $location.path() !== '/'\n            ) {\n                $location.path(constants.defaultClientPage).search({\n                    coreId: App.services.authInterceptor().getOrganisationId() ?\n                    App.services.authInterceptor().getOrganisationId() :\n                    $localStorage.currentUser.info.primaryInstitution\n                });\n                $location.replace();\n            } else if ( // logged in user is client\n                $localStorage.currentUser &&\n                $localStorage.currentUser.info.isClient\n            ) {\n                // check if user has access to institution he's trying to access\n                var hasAccessTo = $localStorage.currentUser.info.institutions;\n                if ($localStorage.currentUser.info.primaryInstitution &&\n                    hasAccessTo.indexOf(parseInt($localStorage.currentUser.info.primaryInstitution, 10)) === -1\n                ) {\n                    hasAccessTo.push(parseInt($localStorage.currentUser.info.primaryInstitution, 10));\n                }\n                // if currently requested page is not in the allowed list, send user back to his primary institution\n                if (hasAccessTo.indexOf(parseInt($localStorage.currentInstitutionId, 10)) === -1) {\n                    if (!$localStorage.currentUser.info.passwordReset) {\n                        var userHasAccessTo = false;\n                        if ($location.path() !== '/') {\n                            userHasAccessTo = $localStorage.currentUser.info.accessTo.indexOf($state.current.name.replace('clients.', '')) !== -1;\n                        }\n                        var path = userHasAccessTo ? $location.path() : constants.defaultClientPage;\n                        $location.path(path).search({\n                            coreId: $localStorage.currentUser.info.primaryInstitution\n                        });\n                        $location.replace();\n                    }\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(e, toState, toParams, fromState, fromParams, error) {\n            if (error === App.errors[401]) {\n                AuthenticationService.logout();\n                $state.go('logout');\n            }\n            if (error === App.errors[403]) {\n                $state.go('staff.dashboard');\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .service('authInterceptor', [\n            '$q',\n            '$location',\n            '$localStorage',\n            App.services.authInterceptor\n        ])\n        .config(App.config)\n        .run(App.run, [\n            '$rootScope',\n            '$state',\n            '$http',\n            '$location',\n            '$localStorage',\n            '$window',\n            'constants',\n            'AuthenticationService',\n            '$timeout'\n        ]);\n\n}(window.angular, window.Pace));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, { directives: {} });\n\n\n    /**\n     * Directive for set Page title - mata title\n     */\n    App.directives.pageTitle = function($rootScope, $timeout) {\n        return {\n            restrict: 'A',\n            link: function(scope, element) {\n                var listener = function(event, toState, toParams, fromState, fromParams) {\n                    // Default title - load on Dashboard 1\n                    var title = 'QS Hub';\n                    // Create your own title pattern\n                    if (toState.data && toState.data.pageTitle) {\n                        title += ' | ' + toState.data.pageTitle;\n                    }\n                    $timeout(function() {\n                        element.text(title);\n                    });\n                };\n                $rootScope.$on('$stateChangeStart', listener);\n            }\n        };\n    };\n\n    /**\n     * Directive to add fancy styles to checkbox or radiobutton\n     * - The directive should has true or false attribute E.g: (my-fancy-check-box=\"true\")\n     * - This would check (true) or uncheck (false) the element\n     *\n     * @param $parse\n     * @returns {{restrict: string, require: string, link: link}}\n     */\n    App.directives.iCheckbox = function($parse) {\n        return {\n            restrict: 'A',\n            require: 'ngModel',\n            link: function($scope, element, $attrs, ngModel) {\n                var value = $attrs.value;\n\n                // Update the value on load\n                $scope.$watch($attrs.ngModel, function() {\n                    $(element).iCheck('update');\n                });\n\n                return $(element).iCheck({\n                    checkboxClass: 'icheckbox_square-green',\n                    radioClass: 'iradio_square-green'\n\n                }).on('ifChanged', function(event) {\n                    if ($(element).attr('type') === 'checkbox' && $attrs.ngModel) {\n                        $scope.$apply(function() {\n                            return ngModel.$setViewValue(event.target.checked);\n                        });\n                    }\n                    if ($(element).attr('type') === 'radio' && $attrs.ngModel) {\n                        return $scope.$apply(function() {\n                            return ngModel.$setViewValue(value);\n                        });\n                    }\n                });\n            }\n        };\n    };\n\n    /**\n     * touchSpin - Directive for Bootstrap TouchSpin\n     */\n    App.directives.touchSpin = function() {\n        return {\n            restrict: 'A',\n            scope: {\n                spinOptions: '='\n            },\n            link: function(scope, element, attrs) {\n                scope.$watch(scope.spinOptions, function() {\n                    render();\n                });\n                var render = function() {\n                    $(element).TouchSpin(scope.spinOptions);\n                };\n            }\n        };\n    };\n\n    /**\n     * iboxTools - Directive for iBox tools elements in right corner of ibox\n     */\n    App.directives.iboxTools = function($timeout) {\n        return {\n            restrict: 'C',\n            scope: true,\n            link: function($scope, $element, $attrs) {\n                var show = [],\n                    id = $attrs.id || null,\n                    animationDuration = 200;\n                $scope.$watch($attrs.expand, function(expand) {\n                    if (id) {\n                        show[id] = expand;\n                        if (expand) {\n                            $scope.showHide();\n                        }\n                    }\n                });\n                $scope.showHide = function() {\n                    var ibox = $element.closest('div.ibox'),\n                        icon = $element.find('i:first'),\n                        content = ibox.find('div.ibox-content');\n\n                    if ($attrs.expand && show[id]) {\n                        content.slideDown(animationDuration);\n                        icon.addClass('fa-chevron-up').removeClass('fa-chevron-down');\n                        ibox.toggleClass('').addClass('border-bottom');\n                    } else {\n                        content.slideToggle(animationDuration);\n                        // Toggle icon from up to down\n                        icon.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\n                        ibox.toggleClass('').toggleClass('border-bottom');\n                    }\n                    $timeout(function() {\n                        ibox.resize();\n                        ibox.find('[id^=map-]').resize();\n                    }, 50);\n                };\n                // Function for close ibox\n                $scope.closebox = function() {\n                    var ibox = $element.closest('div.ibox');\n                    ibox.remove();\n                };\n            }\n        };\n    };\n\n    /**\n     * Toggle element class on click.\n     * eg: toggle-class-on-click\n     *\n     * @returns {{restrict: string, link: link}}\n     */\n    App.directives.toggleClassOnClick = function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                element.bind('click', function() {\n                    element.toggleClass(attrs.toggleClassOnClick);\n                });\n            }\n        };\n    };\n\n    /**\n     * Directive for Sparkline chart\n     */\n    App.directives.sparkline = function() {\n        return {\n            restrict: 'A',\n            scope: {\n                sparkData: '=',\n                sparkOptions: '=',\n            },\n            link: function(scope, element, attrs) {\n                scope.$watch(scope.sparkData, function() {\n                    render();\n                });\n                scope.$watch(scope.sparkOptions, function() {\n                    render();\n                });\n                var render = function() {\n                    $(element).sparkline(scope.sparkData, scope.sparkOptions);\n                };\n            }\n        };\n    };\n\n    App.directives.currentDate = function($filter) {\n        return {\n            restrict: 'A',\n            link: function($scope, $element, $attrs) {\n                $element.text($filter('date')(new Date(), $attrs.currentDate));\n            }\n        };\n    };\n\n    /**\n     * Makes an element floatable while scrolling based on the table close to it\n     */\n    App.directives.fixedElementWhileScrolling = function() {\n        return {\n            restrict: 'A',\n            link: function($scope, $element, $attrs) {\n                /**\n                 * Actions to do when floatable element visibility changes.\n                 *\n                 * @param {int} elementHeight\n                 * @returns {boolean}\n                 */\n                function handleVisibiliyChanges(elementHeight) {\n                    // attach scroll listener\n                    $(window).scroll(handleWindowScroll);\n                    centerElement();\n                }\n\n                /**\n                 * Actions to do when window scroll occurs.\n                 */\n                function handleWindowScroll() {\n                    centerElement();\n                }\n\n                /**\n                 * Center floatable element in the middle of the screen.\n                 */\n                function centerElement() {\n                    var targetHeight = angular.element(document.querySelector($attrs.fixedElementWhileScrolling)).height();\n                    var elementHeight = $element.height(),\n                        windowScroll = $(window).scrollTop(),\n                        windowHeight = $(window).height(),\n                        targetElementTopOffset = $($attrs.fixedElementWhileScrolling).offset() ?\n                        $($attrs.fixedElementWhileScrolling).offset().top : 0,\n                        marginTop = windowScroll > windowHeight ?\n                        (windowHeight - elementHeight) / 2 + windowScroll - targetElementTopOffset : (windowHeight - targetElementTopOffset - elementHeight) / 2 + windowScroll;\n\n                    if ($(window).width() < 768) {\n                        if (marginTop < 0 || targetHeight === elementHeight || targetHeight < (elementHeight + marginTop)) {\n                            marginTop = 0;\n                        }\n                    } else {\n                        if (targetHeight < (elementHeight + marginTop)) {\n                            marginTop = targetHeight - elementHeight;\n                        }\n                        if (marginTop < 0 || targetHeight === elementHeight) {\n                            marginTop = 0;\n                        }\n                    }\n\n                    $($element).stop().animate({\n                        'top': marginTop + 'px'\n                    }, 'slow');\n                }\n\n                // listen to element visibility changes\n                $scope.$watchCollection(function() {\n                    // if not visible will return 0\n                    return $element.height();\n                }, handleVisibiliyChanges);\n            }\n        };\n    };\n\n    App.directives.convertToNumber = function() {\n        return {\n            require: 'ngModel',\n            link: function(scope, element, attrs, ngModel) {\n                ngModel.$parsers.push(function(val) {\n                    return parseInt(val, 10);\n                });\n                ngModel.$formatters.push(function(val) {\n                    return '' + val;\n                });\n            }\n        };\n    };\n\n    App.directives.waveSpinner = function() {\n        return {\n            restrict: 'A',\n            template: ' <div class=\"sk-spinner sk-spinner-wave\">' +\n                '<div class=\"sk-rect1\"></div>&nbsp;' +\n                '<div class=\"sk-rect2\"></div>&nbsp;' +\n                '<div class=\"sk-rect3\"></div>&nbsp;' +\n                '<div class=\"sk-rect4\"></div>&nbsp;' +\n                '<div class=\"sk-rect5\"></div>' +\n                '</div>'\n        };\n    };\n\n    /**\n     * Directive to attach bootstrap tooltip on an element\n     */\n    App.directives.customPopover = function($animateCss) {\n        return {\n            restrict: 'A',\n            link: function(scope, el, attrs) {\n                $(el).popover({\n                    trigger: attrs.popoverTrigger || 'hover focus',\n                    html: true,\n                    content: attrs.popoverHtml,\n                    container: attrs.popoverContainer || '',\n                    placement: attrs.popoverPlacement\n                });\n                scope.$watch(function() {\n                    return attrs.popoverVisibility;\n                }, function(newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        if (newValue === 'true') {\n                            $(el).popover('show');\n                            el.next(\"div\").addClass(\"animated fadeInDown\");\n                            el.next(\"div\").css(\"top\", \"0px\");\n                        } else {\n                            $(el).popover('hide');\n                        }\n                    }\n                });\n            }\n        };\n    };\n\n    /**\n     * Directive for Angular Ui Switch\n     */\n    App.directives.switch = function() {\n        return {\n            restrict: 'AE',\n            replace: true,\n            transclude: true,\n            template: function(element, attrs) {\n                var html = '';\n                html += '<span';\n                html += ' class=\"switch' + (attrs.class ? ' ' + attrs.class : '') + '\"';\n                html += attrs.ngModel ? ' ng-click=\"' + attrs.ngDisabled + ' ? ' + attrs.ngModel + ' : ' + attrs.ngModel + '=!' + attrs.ngModel + (attrs.ngChange ? '; ' + attrs.ngChange + '()\"' : '\"') : '';\n                html += ' ng-class=\"{checked:' + attrs.ngModel + ', disabled:' + attrs.ngDisabled + ' }\"';\n                html += '>';\n                html += '<small></small>';\n                html += '<input type=\"checkbox\"';\n                html += attrs.id ? ' id=\"' + attrs.id + '\"' : '';\n                html += attrs.name ? ' name=\"' + attrs.name + '\"' : '';\n                html += attrs.ngModel ? ' ng-model=\"' + attrs.ngModel + '\"' : '';\n                html += attrs.ngModel ? ' ng-change=\"' + attrs.ngChange + '\"' : '';\n                html += attrs.ngDisabled ? ' ng-disabled=\"' + attrs.ngDisabled + '\"' : '';\n                html += ' style=\"display:none\" />';\n                html += '<span class=\"switch-text\">';\n                /*adding new container for switch text*/\n                html += attrs.on ? '<span class=\"on\">' + attrs.on + '</span>' : '';\n                /*switch text on value set by user in directive html markup*/\n                html += attrs.off ? '<span class=\"off\">' + attrs.off + '</span>' : ' ';\n                /*switch text off value set by user in directive html markup*/\n                html += '</span>';\n                return html;\n            }\n        };\n    };\n\n    App.directives.includeReplace = function() {\n        return {\n            require: 'ngInclude',\n            restrict: 'A',\n            link: function(scope, el, attrs) {\n                el.replaceWith(el.children());\n            }\n        };\n    };\n\n    /**\n     * Directive for Upgrade banner\n     */\n    App.directives.upgradeBanner = function() {\n        return {\n            restrict: 'A',\n            scope: {\n                upgradeEmail: '@',\n                basicProfile: '&',\n                upgradeClick: '&',\n                infoBlockClass: '=',\n                buttonsBlockClass: '='\n            },\n            template:\n            '<div class=\"alert alert-success\" ng-if=\"basicProfile()\">'+\n            '<div class=\"row\">'+\n            '<div ng-class=\"getInfoBlockClass()\" >'+\n            '<span class=\"block m-t-xs\">'+\n            '<i class=\"fa fa-star\"></i>'+\n            '<span>To edit the information below, please upgrade to an Advanced </span>'+\n            '<span>profile by contacting: <strong>{{upgradeEmail}}</strong></span>'+\n            '</span>'+\n            '</div>'+\n            '<div ng-class=\"getButtonsBlockClass()\">'+\n            '<a class=\"btn btn-primary btn-sm btn-block\" ng-click=\"upgradeClick()\">'+\n            '<i class=\"fa fa-star\"></i>'+\n            '<span>Upgrade now</span>'+\n            '</a>'+\n            '</div>'+\n            '</div>'+\n            '</div>',\n            link: function(scope) {\n                scope.getInfoBlockClass = function() {\n                    if (scope.infoBlockClass) {\n                        return scope.infoBlockClass;\n                    }\n                };\n                scope.getButtonsBlockClass = function() {\n                    if (scope.buttonsBlockClass) {\n                        return scope.buttonsBlockClass;\n                    }\n                };\n            }\n        };\n    };\n\n    /**\n     * Datagrid totals.\n     *\n     * @returns {{restrict: string, scope: {tableParams: string}, template: string}}\n     */\n    App.directives.datagridTotals = function() {\n        return {\n            restrict: 'A',\n            scope: { tableParams: '=datagridTotals' },\n            template: '{{ tableParams.count() > tableParams.total() ? tableParams.total() : tableParams.count() }} of {{ tableParams.total() }} entries'\n        };\n    };\n\n    /**\n     * Directive to Confirm Password.\n     */\n    App.directives.verifyPassword = function (){\n        return {\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ctrl) {\n                var password = '#' + attrs.verifyPassword;\n                elem.add(password).on('keyup', function () {\n                    scope.$apply(function () {\n                        var isEmpty = $(password).val() === '';\n                        var invalidLen = !isEmpty && ($(password).val().length < 8 || $(password).val().length > 20);\n                        ctrl.$setValidity('isEmpty', !isEmpty);\n                        ctrl.$setValidity('invalidLen', !invalidLen);\n                        ctrl.$setValidity('pwmatch', elem.val() === $(password).val());\n                    });\n                });\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .directive('pageTitle', App.directives.pageTitle)\n        .directive('toggleClassOnClick', App.directives.toggleClassOnClick)\n        .directive('iCheckbox', App.directives.iCheckbox)\n        .directive('sparkline', App.directives.sparkline)\n        .directive('fixedElementWhileScrolling', App.directives.fixedElementWhileScrolling)\n        .directive('currentDate', App.directives.currentDate)\n        .directive('iboxTools', App.directives.iboxTools)\n        .directive('convertToNumber', App.directives.convertToNumber)\n        .directive('touchSpin', App.directives.touchSpin)\n        .directive('waveSpinner', App.directives.waveSpinner)\n        .directive('switch', App.directives.switch)\n        .directive('includeReplace', App.directives.includeReplace)\n        .directive('customPopover', App.directives.customPopover)\n        .directive('datagridTotals', App.directives.datagridTotals)\n        .directive('verifyPassword', App.directives.verifyPassword)\n        .directive('upgradeBanner', App.directives.upgradeBanner);\n\n}(window.angular));\n\n(function (angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, { filters: {} });\n\n    /**\n     * Filter for removing tags from a string.\n     *\n     * @returns {Function}\n     */\n    App.filters.htmlToPlaintext = function () {\n        return function (text) {\n            if (text && text.length) {\n                text = String(text).replace(/(\\r)?\\n/g, '').replace(/<[^>]+>/gm, '');\n            } else {\n                text = '';\n            }\n            return text;\n        };\n    };\n\n    App.filters.boolToText = function () {\n        return function (text, options) {\n            for (var option in options) {\n                if (options[option].value === text) {\n                    return options[option].label;\n                }\n            }\n        };\n    };\n\n    App.filters.campusArrayToText = function () {\n        return function (campusArray, options) {\n            var campuses = [];\n            if (campusArray.length) {\n                for (var key in options) {\n                    if (campusArray.indexOf(options[key].value) !== -1) {\n                        campuses.push(options[key].label);\n                        continue;\n                    }\n                }\n            }\n            return campuses.join(', ');\n        };\n    };\n\n    App.filters.dotToDash = function () {\n        return function (input) {\n            var result = input.toString().split('.').join('-');\n            return result;\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .filter('htmlToPlaintext', App.filters.htmlToPlaintext)\n        .filter('boolToText', App.filters.boolToText)\n        .filter('campusArrayToText', App.filters.campusArrayToText)\n        .filter('dotToDash', App.filters.dotToDash);\n} (window.angular));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    /**\n     * Factory to use notifications.\n     * For more info: https://github.com/jirikavi/AngularJS-Toaster\n     *\n     * @param toaster\n     * @returns {{show: show}}\n     * @constructor\n     */\n    App.factories.Notifier = function (toaster) {\n        return {\n            show: function (type, body, title, sticky, id) {\n                var notification = {\n                    type: type,\n                    body: body,\n                    showCloseButton: true\n                };\n                if (title) {\n                    notification.title = title;\n                }\n                if (id) {\n                    notification.id = id;\n                }\n                if (sticky) {\n                    notification.timeout = 0;\n                    notification.extendedTimeOut = 0;\n                }\n                toaster.pop(notification);\n            }\n        };\n    };\n\n    App.factories.TuProfile = function () {\n        var data = {},\n            program = {},\n            profileTabs = {\n                overview : 0,\n                subjects : 1,\n                programs : 2,\n                media : 3,\n                publish : 4,\n                departments : 5\n            },\n            programBeforeChanges = {},\n            departments = {},\n            videos = null,\n\n            upgradeFormVisible = false,\n            historyLogVisible = false,\n            programAddFormVisible = false,\n            programEditFormVisible = false,\n            departmentAddFormVisible = false,\n            departmentEditFormVisible = false,\n\n            newProgram = false,\n            triggerResetProgramForm = false,\n            department = {},\n            departmentBeforeChanges = {},\n            isDepartmentNameUpdated = false,\n            newDepartment = false,\n            clearDepartmentFormAfterSave = false,\n            selectedMediaTabId = null,\n            selectedTabId = null,\n            availableSubjects = {},\n            isProgramUpdated = false,\n            updateDepartmentsGrid = false,\n            rowSelected = false,\n            activeOverviewSubTabs = {\n                'master': true,\n                'ug': false,\n                'pg': false\n            },\n            clientDepartmentUpgradeFormVisible = false,\n            isDepartmentOverview = false,\n            isProgramOverview = false;\n\n        var closeSidebars = function () {\n            upgradeFormVisible = false;\n            historyLogVisible = false;\n            programAddFormVisible = false;\n            programEditFormVisible = false;\n            departmentAddFormVisible = false;\n            departmentEditFormVisible = false;\n            clientDepartmentUpgradeFormVisible = false;\n            newProgram = null;\n            newDepartment = null;\n            resetProgramForm();\n        };\n\n        var resetProgramForm = function () {\n            triggerResetProgramForm = !triggerResetProgramForm;\n        };\n\n        return {\n            closeSidebars: closeSidebars,\n            resetProgramForm : resetProgramForm,\n            getProfileTabs : function () {\n                return profileTabs;\n            },\n            getData: function () {\n                return data;\n            },\n            setData: function (newData) {\n                data = newData;\n            },\n            reset: function () {\n                data = {};\n                department = {};\n                program = {};\n                availableSubjects = {};\n                newDepartment = false;\n                newProgram = false;\n                selectedMediaTabId = null;\n                selectedTabId = null;\n                closeSidebars();\n            },\n            getId: function () {\n                return data !== null && data.id || '';\n            },\n            getProgram: function () {\n                return program;\n            },\n            setProgram: function (selectedProgram) {\n                program = selectedProgram;\n            },\n            getIsDepartmentOverview: function () {\n                return isDepartmentOverview;\n            },\n            setIsDepartmentOverview: function (newValue) {\n                isDepartmentOverview = newValue;\n            },\n            getIsProgramOverview: function () {\n                return isProgramOverview;\n            },\n            setIsProgramOverview: function (newValue) {\n                isProgramOverview = newValue;\n            },\n            getProgramId: function () {\n                return program && program.id ? program.id : null;\n            },\n            /**\n             * Is program form reset.\n             *\n             * @returns {Boolean}\n             */\n            IsResetProgramForm : function () {\n                return triggerResetProgramForm;\n            },\n            /**\n             * Is history logs visible?\n             *\n             * @param {Integer} activeTab\n             * @returns {boolean}\n             */\n            isHistoryLogVisible: function (activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n                return (activeTab === profileTabs.overview) && historyLogVisible;\n            },\n            /**\n             * Set history logs visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setHistoryLogVisibility: function (visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !historyLogVisible;\n                }\n                historyLogVisible = visibility;\n\n                // hide upgrade form\n                upgradeFormVisible = false;\n                // hide program edit form\n                programEditFormVisible = false;\n                // hide program add form\n                programAddFormVisible = false;\n                // hide department edit form\n                departmentEditFormVisible = false;\n                // hide department add form\n                departmentAddFormVisible = false;\n                //hide upgrade department form for client\n                clientDepartmentUpgradeFormVisible = false;\n            },\n            /**\n             * Is upgrade form visible?\n             *\n             * @param {Integer} activeTab\n             * @returns {boolean}\n             */\n            isUpgradeFormVisible: function (activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n                return ((activeTab === profileTabs.overview) ||\n                    (activeTab === profileTabs.programs) ||\n                    (activeTab === profileTabs.media) ||\n                    (activeTab === profileTabs.departments)) &&\n                    upgradeFormVisible;\n            },\n            /**\n             * Set upgrade form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setUpgradeFormVisibility: function (visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !upgradeFormVisible;\n                }\n                upgradeFormVisible = visibility;\n\n                // hide history logs\n                historyLogVisible = false;\n                // hide program edit form\n                programEditFormVisible = false;\n                // hide program add form\n                programAddFormVisible = false;\n                // hide department edit form\n                departmentEditFormVisible = false;\n                // hide department add form\n                departmentAddFormVisible = false;\n                //hide upgrade department form for client\n                clientDepartmentUpgradeFormVisible = false;\n            },\n            /**\n             * Is new program form visible?\n             *\n             * @param {Integer} activeTab\n             * @returns {boolean}\n             */\n            isProgramAddFormVisible: function (activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n                resetProgramForm();\n                return (activeTab === profileTabs.programs) && programAddFormVisible;\n            },\n            /**\n             * Set new program form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setProgramAddFormVisibility: function (visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !programAddFormVisible;\n                }\n                programAddFormVisible = visibility;\n\n                // hide history logs\n                historyLogVisible = false;\n                // hide program edit form\n                programEditFormVisible = false;\n                // hide upgrade form\n                upgradeFormVisible = false;\n                // hide department edit form\n                departmentEditFormVisible = false;\n                // hide department add form\n                departmentAddFormVisible = false;\n                //hide upgrade department form for client\n                clientDepartmentUpgradeFormVisible = false;\n            },\n            /**\n             * Is program edit form visible?\n             *\n             * @param {Integer} activeTab\n             * @returns {boolean}\n             */\n            isProgramEditFormVisible: function (activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n                resetProgramForm();\n                return (activeTab === profileTabs.programs) && programEditFormVisible;\n            },\n            /**\n             * Set program edit form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setProgramEditFormVisibility: function (visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !programEditFormVisible;\n                }\n                programEditFormVisible = visibility;\n\n                // hide history logs\n                historyLogVisible = false;\n                // hide program add form\n                programAddFormVisible = false;\n                // hide upgrade form\n                upgradeFormVisible = false;\n                // hide department edit form\n                departmentEditFormVisible = false;\n                // hide department add form\n                departmentAddFormVisible = false;\n                //hide upgrade department form for client\n                clientDepartmentUpgradeFormVisible = false;\n            },\n            isClientDepartmentUpgradeFormVisible: function(activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n\n                return activeTab === profileTabs.departments && clientDepartmentUpgradeFormVisible;\n            },\n            setClientDepartmentUpgradeFormVisibility: function(visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !clientDepartmentUpgradeFormVisible;\n                }\n                clientDepartmentUpgradeFormVisible = visibility;\n\n                // hide history logs\n                historyLogVisible = false;\n                // hide program add form\n                programAddFormVisible = false;\n                // hide upgrade form\n                upgradeFormVisible = false;\n                // hide department edit form\n                departmentEditFormVisible = false;\n                // hide department add form\n                departmentAddFormVisible = false;\n                // hide program edit form\n                programEditFormVisible = false;\n            },\n            /**\n             * Is new department form visible?\n             *\n             * @param {Integer} activeTab\n             * @returns {boolean}\n             */\n            isDepartmentAddFormVisible: function (activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n                return (activeTab === profileTabs.departments) && departmentAddFormVisible;\n            },\n            /**\n             * Set new department form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setDepartmentAddFormVisibility: function (visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !departmentAddFormVisible;\n                }\n                departmentAddFormVisible = visibility;\n\n                // hide upgrade form\n                upgradeFormVisible = false;\n                // hide history logs\n                historyLogVisible = false;\n                // hide program edit form\n                programEditFormVisible = false;\n                // hide program add form\n                programAddFormVisible = false;\n                // hide department edit form\n                departmentEditFormVisible = false;\n                //hide upgrade department form for client\n                clientDepartmentUpgradeFormVisible = false;\n            },\n            /**\n             * Is department edit form visible?\n             *\n             * @param {Integer} activeTab\n             * @returns {boolean}\n             */\n            isDepartmentEditFormVisible: function (activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n                return (activeTab === profileTabs.departments) && departmentEditFormVisible;\n            },\n            /**\n             * Set department edit form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setDepartmentEditFormVisibility: function (visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !departmentEditFormVisible;\n                }\n                departmentEditFormVisible = visibility;\n\n                // hide upgrade form\n                upgradeFormVisible = false;\n                // hide history logs\n                historyLogVisible = false;\n                // hide program edit form\n                programEditFormVisible = false;\n                // hide program add form\n                programAddFormVisible = false;\n                // hide department add form\n                departmentAddFormVisible = false;\n                //hide upgrade department form for client\n                clientDepartmentUpgradeFormVisible = false;\n            },\n            setIsDepartmentRowSelected: function (value) {\n                rowSelected = value;\n            },\n            getIsDepartmentRowSelected: function () {\n                return rowSelected;\n            },\n            announceNewProgram: function (newProgramId) {\n                newProgram = newProgramId;\n            },\n            hasNewProgram: function () {\n                return newProgram;\n            },\n            setProgramBeforeChanges: function (programInstance) {\n                programBeforeChanges = programInstance;\n            },\n            getProgramBeforeChanges: function () {\n                return programBeforeChanges;\n            },\n            getDepartment: function () {\n                return department;\n            },\n            setDepartment: function (selectedDepartment) {\n                department = selectedDepartment;\n            },\n            getDepartmentId: function () {\n                return department && department.id ? department.id : null;\n            },\n            setIsDepartmentUpdated: function (newValue) {\n                isDepartmentNameUpdated = newValue;\n            },\n            getIsDepartmentUpdated: function () {\n                return isDepartmentNameUpdated;\n            },\n            announceNewDepartment: function (newDepartmentId) {\n                newDepartment = newDepartmentId;\n            },\n            hasNewDepartment: function () {\n                return newDepartment;\n            },\n            setDepartmentBeforeChanges: function (departmentInstance) {\n                departmentBeforeChanges = departmentInstance;\n            },\n            getDepartmentBeforeChanges: function () {\n                return departmentBeforeChanges;\n            },\n            getDepartments: function () {\n                return departments;\n            },\n            setDepartments: function (departmentsList) {\n                departments = departmentsList;\n            },\n            getSelectedMediaTabId: function () {\n                return selectedMediaTabId;\n            },\n            setSelectedMediaTabId: function (newSelectedMediaTabId) {\n                selectedMediaTabId = newSelectedMediaTabId;\n            },\n            setSelectedTabId: function (newSelectedTabId) {\n                selectedTabId = newSelectedTabId;\n            },\n            getSelectedTabId: function () {\n                return selectedTabId;\n            },\n            isOverviewTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined') && selectedTabId === profileTabs.overview;\n            },\n            isDepartmentsTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined')  && selectedTabId === profileTabs.departments;\n            },\n            isSubjectsTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined')  && selectedTabId === profileTabs.subjects;\n            },\n            isProgramsTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined')  && selectedTabId === profileTabs.programs;\n            },\n            isMediaTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined')  && selectedTabId === profileTabs.media;\n            },\n            setMediaVideos: function (NewVideos) {\n                videos = NewVideos;\n            },\n            getMediaVideos: function () {\n                return videos;\n            },\n            isPublishTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined')  && selectedTabId === profileTabs.publish;\n            },\n            setAvailableSubjects : function (newSubjects) {\n                availableSubjects = newSubjects;\n            },\n            getAvailableSubjects : function () {\n                return availableSubjects;\n            },\n            setActiveOverviewSubTabs : function (newSubTabs) {\n                if (angular.isDefined(newSubTabs)) {\n                    if (angular.equals(0, newSubTabs)) {\n                        activeOverviewSubTabs.master = true;\n                        activeOverviewSubTabs.ug = false;\n                        activeOverviewSubTabs.pg = false;\n                    }\n                    if (angular.equals(1, newSubTabs)) {\n                        activeOverviewSubTabs.master = false;\n                        activeOverviewSubTabs.ug = true;\n                        activeOverviewSubTabs.pg = false;\n                    }\n                    if (angular.equals(2, newSubTabs)) {\n                        activeOverviewSubTabs.master = false;\n                        activeOverviewSubTabs.ug = false;\n                        activeOverviewSubTabs.pg = true;\n                    }\n                }\n            },\n            getActiveOverviewSubTabs : function () {\n                return activeOverviewSubTabs;\n            },\n            setUpdateProgramGrid: function (newValue) {\n                isProgramUpdated = newValue;\n            },\n            getUpdateProgramGrid: function () {\n                return isProgramUpdated;\n            },\n            setUpdateDepartmentsGrid: function (newValue) {\n                updateDepartmentsGrid = newValue;\n            },\n            getUpdateDepartmentsGrid: function () {\n                return updateDepartmentsGrid;\n            },\n            isProgramsAlphabeticalOrder: function () {\n                return data && data.programsAlphabeticalOrder;\n            }\n        };\n    };\n\n    App.factories.SharedProfile = function () {\n        var data = {},\n            SharedProfileTabs = {\n                general : 0,\n                campuses : 1\n            },\n            loadInProgress = false,\n            hasCampusesChanges = false,\n            campusFormVisible = false,\n            campusAddFormVisible = false,\n            campusEditFormVisible = false,\n            editMode = null,\n            selectedTabId = null,\n            campus = {},\n            rootShowCampusInfoBlock = null,\n            showCampusInfoBlock = null,\n            campusList = {},\n            columns = {},\n            mapUpdateRequest = null,\n            loadMoreInProgress = false,\n            limit = 1;\n        return {\n            getData: function () {\n                return data;\n            },\n            setData: function (newData) {\n                data = newData;\n            },\n            getActiveTabs: function () {\n                return SharedProfileTabs;\n            },\n            closeSidebars: function () {\n                campusFormVisible = false;\n                campusAddFormVisible = false;\n                campusEditFormVisible = false;\n            },\n            isCampusFormVisible: function () {\n                return campusFormVisible;\n            },\n            isCampusEditForm: function () {\n                return editMode;\n            },\n            setCampusFormVisibility: function (visibility) {\n                campusFormVisible = visibility && !campusFormVisible;\n            },\n            setCampusAddFormVisibility: function (visibility) {\n                editMode = false;\n                if (campusEditFormVisible) {\n                    campusEditFormVisible = false;\n                    visibility = true;\n                }\n                campusAddFormVisible = visibility || !campusAddFormVisible;\n                campusFormVisible = visibility || !campusFormVisible;\n            },\n            setCampusEditFormVisibility: function (visibility) {\n                editMode = true;\n                if (campusAddFormVisible) {\n                    campusAddFormVisible = false;\n                    visibility = true;\n                }\n                campusEditFormVisible = visibility || !campusAddFormVisible;\n                campusAddFormVisible = false;\n                campusFormVisible = visibility || !campusFormVisible;\n            },\n            getCampus: function () {\n                return campus;\n            },\n            setCampus: function (newData) {\n                campus = newData;\n            },\n            getInstitutionListShowCampusInfoBlock: function () {\n                return rootShowCampusInfoBlock;\n            },\n            setInstitutionListShowCampusInfoBlock: function (showCampusInfoBlock) {\n                rootShowCampusInfoBlock = showCampusInfoBlock;\n            },\n            setColumns: function (setColumns) {\n                columns = setColumns;\n            },\n            getColumns: function () {\n                return columns;\n            },\n            announceCampusesChanges: function (campusId) {\n                campusId = campusId || true;\n                hasCampusesChanges = campusId;\n            },\n            hasCampusesChanges: function () {\n                var hasChanges = angular.copy(hasCampusesChanges);\n                if (hasCampusesChanges) {\n                    hasCampusesChanges = false;\n                }\n                return hasChanges;\n            },\n            loadInProgress: function () {\n                return loadInProgress;\n            },\n            setLoadInProgress: function (status) {\n                loadInProgress = status;\n            },\n            getId: function () {\n                return data.id || '';\n            },\n            setSelectedTabId: function (newSelectedTabId) {\n                selectedTabId = newSelectedTabId;\n            },\n            hasSelectedTab: function () {\n                return selectedTabId !== null;\n            },\n            isCampusesTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined') && (selectedTabId === SharedProfileTabs.campuses);\n            },\n            isGeneralTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined')  && (selectedTabId === SharedProfileTabs.general);\n            },\n            mapUpdateRequest: function () {\n                return mapUpdateRequest;\n            },\n            setMapUpdateRequest: function (value) {\n                mapUpdateRequest = value;\n            },\n            setLogLimit: function (logLimit) {\n                if (!logLimit || logLimit < 1 || typeof logLimit === 'undefined') {\n                    logLimit = 1;\n                }\n                limit = logLimit;\n            },\n            getLogLimit: function () {\n                return limit;\n            },\n            isLoadMoreInProgress: function () {\n                return loadMoreInProgress;\n            },\n            setLoadMoreInProgress: function (status) {\n                loadMoreInProgress = status;\n            },\n        };\n    };\n\n    App.factories.Institution = function (TimeService) {\n        var defaultData = {},\n            departmentOverview = {\n                institutionId: null,\n                data: {}\n            },\n            data = defaultData,\n            defaultCoreId = 700,\n            clientDepartmentId = 3,\n            advancedProgramId = 7,\n            inactive,\n            isSubscriptionTabActive = false,\n            tuProgramsOverview = {\n                institutionId: null\n            },\n            isProfileAdvanced = function (subscriptions, profile) {\n                var isAdvanced = false,\n                    subsProfile = profile === 'tu' ? subscriptions.tu : subscriptions.tm;\n\n                if (subsProfile) {\n                    isAdvanced = subsProfile.advanced && subsProfile.active;\n                    if (!isAdvanced) {\n                        var today = TimeService.getMiliSeconds(TimeService.now()),\n                            weekLater = TimeService.getMiliSeconds(TimeService.add(7, 'days'));\n                        if (subsProfile.startDate > today &&\n                            subsProfile.endDate > subsProfile.startDate\n                        ) {\n                            var result = weekLater - subsProfile.startDate,\n                                range = weekLater - today;\n                            // Check if date is one week before it will be activated\n                            if (result >= 0 && result <= range) {\n                                isAdvanced = true;\n                            }\n                        }\n                    }\n                }\n\n                return isAdvanced;\n            };\n        return {\n            getData: function () {\n                return data;\n            },\n            isDepartmentsAlphabeticalOrder: function () {\n                return data && data.departmentsAlphabeticalOrder;\n            },\n            isEmpty: function () {\n                return !data || angular.equals(data, defaultData);\n            },\n            setCampuses: function (campuses) {\n                data.campus = campuses;\n            },\n            addCampus: function (campus) {\n                if (!data) {\n                    data = angular.copy(defaultData);\n                }\n                if (!data.campus) {\n                    data.campus = [];\n                }\n                data.campus.push(campus);\n            },\n            getCampusData: function () {\n                return data && data.campus || [];\n            },\n            setData: function (newData) {\n                data = newData;\n            },\n            setSubscriptions: function (newData) {\n                data.subscriptions = newData;\n            },\n            getSubscriptions: function () {\n                 return data && data.hasOwnProperty('subscriptions') ? data.subscriptions : null;\n            },\n            getCoreId: function () {\n                return data && data.coreId ? parseInt(data.coreId, 10) : null;\n            },\n            getDisplayName: function () {\n                return data && data.name ? data.name : '';\n            },\n            getId: function () {\n                return data && data.id ? data.id : '';\n            },\n            getParentCoreId: function () {\n                return data && data.parentCoreId ? parseInt(data.parentCoreId, 10) : null;\n            },\n            getDefaultCoreId: function () {\n                return defaultCoreId;\n            },\n            isTuAdvanced: function () {\n                if (data && data.subscriptions) {\n                    return isProfileAdvanced(data.subscriptions, 'tu');\n                }\n                return null;\n            },\n            isTmAdvanced: function () {\n                if (data && data.subscriptions) {\n                    return isProfileAdvanced(data.subscriptions, 'tm');\n                }\n                return null;\n            },\n            isTuSubscribed: function () {\n                return data &&\n                    data.subscriptions &&\n                    data.subscriptions.tu &&\n                    data.subscriptions.tu.subscribed;\n            },\n            isTuEnabled: function () {\n                if (data && data.enabled) {\n                    return data.enabled.tu;\n                }\n                return null;\n            },\n            isUgEnabled: function () {\n                if (data && data.enabled) {\n                    return data.enabled.ug;\n                }\n                return null;\n            },\n            isPgEnabled: function () {\n                if (data && data.enabled) {\n                    return data.enabled.pg;\n                }\n                return null;\n            },\n            isTmSubscribed: function () {\n                return data &&\n                    data.subscriptions &&\n                    data.subscriptions.tm &&\n                    data.subscriptions.tm.subscribed;\n            },\n            isTmEnabled: function () {\n                if (data && data.enabled) {\n                    return data.enabled.tm;\n                }\n                return null;\n            },\n            isClientDepartment: function () {\n                return data && parseInt(data.typeId, 10) === clientDepartmentId;\n            },\n            isAdvancedProgram: function () {\n                return data && parseInt(data.typeId, 10) === advancedProgramId;\n            },\n            hasNoDepartments: function () {\n                return data && data.hasNoDepartments ? data.hasNoDepartments : false;\n            },\n            getCampuses: function () {\n                return data && data.campus ? data.campus : [];\n            },\n            isActive: function () {\n                return data  ? (data.active && (data.deleted === 'undefined' || !data.deleted)) : null;\n            },\n            getInstitutionIdTuProgramsOverview: function () {\n                return tuProgramsOverview.institutionId;\n            },\n            setInstitutionIdTuProgramsOverview: function (institutionId) {\n                tuProgramsOverview.institutionId = institutionId ? institutionId : null;\n            },\n            setDataDepartmentOverview: function (data) {\n                departmentOverview.data = data;\n            },\n            getDataDepartmentOverview: function () {\n                return departmentOverview.data;\n            },\n            getCampusDataDepartmentOverview: function () {\n                return departmentOverview.data && departmentOverview.data.campus || [];\n            },\n            getInstitutionIdDepartmentOverview: function () {\n                return departmentOverview.institutionId;\n            },\n            setInstitutionIdDepartmentOverview: function (institutionId) {\n                departmentOverview.institutionId = institutionId ? institutionId : null;\n            },\n            resetDepartmentOverview: function () {\n                departmentOverview = {\n                    institutionId: null,\n                    data: {}\n                };\n            },\n            setActiveTab: function(active){\n                isSubscriptionTabActive = active;\n            },\n            getActiveTab: function(){\n                return isSubscriptionTabActive;\n            }\n        };\n    };\n\n    App.factories.User = function (DataHandlerFactory) {\n        var data = {},\n            handles = {\n                'clients.profiles.shared': 'profiles.institution_details',\n                'clients.profiles.tu': 'profiles.tu',\n                'clients.profiles.tm': 'profiles.tm',\n                'clients.statistics': 'statistics.statistics',\n                'staff.users.qs': 'users.qs_users',\n                'staff.users.institutions': 'users.schools_users',\n                'staff.institutions.list': 'institutions.list',\n                'staff.master-password' : 'master_password.master_password',\n                'staff.tm-directory' : 'tm_directory.tm_directory'\n            },\n            defaultPages = [\n                'user.my-profile'\n            ];\n        return {\n            getData: function () {\n                return data;\n            },\n            setData: function (newData) {\n                data = newData;\n            },\n            isClient: function () {\n                return data && data.isClient ? true : false;\n            },\n            hasData: function () {\n                return !(angular.equals(data, {}) || angular.equals(data, null));\n            },\n            getFullName: function () {\n                return data && data.fullName ? data.fullName : null;\n            },\n            getFirstName: function () {\n                return data && data.firstName ? data.firstName : null;\n            },\n            getLastName: function () {\n                return data && data.lastName ? data.lastName : null;\n            },\n            setFullName: function (fullName) {\n                data.fullName = fullName;\n            },\n            setFirstName: function (firstName) {\n                data.firstName = firstName;\n            },\n            setLastName: function (lastName) {\n                data.lastName = lastName;\n            },\n            setTitle: function (title) {\n                data.title = title;\n            },\n            setPhone: function (phone) {\n                data.phone = phone;\n            },\n            setPosition: function (position) {\n                data.position = position;\n            },\n            getUserName: function () {\n                return data && data.userName ? data.userName : null;\n            },\n            getProfileLogo: function () {\n                return data && data.profileLogo ? data.profileLogo : '';\n            },\n            setProfileLogo: function (profileLogo) {\n                data.profileLogo = profileLogo;\n            },\n            getPrimaryInstitutionCoreId: function () {\n                return data && data.primaryInstitution ? data.primaryInstitution : 0;\n            },\n            getPosition: function () {\n                return data && data.position ? data.position : null;\n            },\n            isTuEnabled: function () {\n                return data && data.accessTo && data.accessTo.indexOf('profiles.tu') !== -1;\n            },\n            hasTuProgramsOverviewAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('institutions.tu_programs_overview') !== -1;\n            },\n            hasDepartmentsOverviewAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('institutions.department_overview') !== -1;\n            },\n            hasTmDirectoryAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('tm_directory.tm_directory') !== -1;\n            },\n            hasMasterPasswordAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('master_password.master_password') !== -1;\n            },\n            hasContactsAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('contacts.contacts') !== -1;\n            },\n            hasInstitutionsListAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('institutions.list') !== -1;\n            },\n            hasQsUsersAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('users.qs_users') !== -1;\n            },\n            hasInstitutionsUsersAccess: function () {\n                return data && data.accessTo && data.accessTo.indexOf('users.schools_users') !== -1;\n            },\n            isTmEnabled: function () {\n                return data && data.accessTo && data.accessTo.indexOf('profiles.tm') !== -1;\n            },\n            getAllowedInstitutions: function () {\n                return data && data.institutions ? data.institutions : [];\n            },\n            isAllowedToLogin: function (institutionCoreId) {\n                var allowed = this.getAllowedInstitutions();\n                if (this.getPrimaryInstitutionCoreId() && allowed.indexOf(parseInt(institutionCoreId, 10)) === -1) {\n                    allowed.push(parseInt(this.getPrimaryInstitutionCoreId(), 10));\n                }\n\n                return allowed.indexOf(parseInt(institutionCoreId, 10)) !== -1;\n            },\n            hasAccess: function () {\n                return data && data.accessTo && angular.isObject(data.accessTo) && !angular.equals({}, data.accessTo) &&\n                    !angular.equals([], data.accessTo);\n            },\n            userHasAccessToPage: function (page) {\n                return data.accessTo && data.accessTo.indexOf(page) !== -1;\n            },\n            noAccess: function (page) {\n                return this.isClient() && defaultPages.indexOf(page) ===-1 &&\n                    !this.userHasAccessToPage(this.getHandles()[page]);\n            },\n            hasAccessToInstitutionDetails: function () {\n                return data && data.accessTo && data.accessTo.indexOf('profiles.institution_details') !== -1;\n            },\n            getFirstAllowedState: function (subscriptionsPrimaryInstitution) {\n                var firstAllowedState = '/';\n                if (this.hasAccess()) {\n                    // search for state name\n                    /**\n                     * @todo remove when pages are implemented as it's a temporary fix\n                     */\n                    var notImplementedAccessTo = [\n                        \"dashboard.dashboard\",\n                        \"contact_us.contact_us\",\n                        \"faq.faq\",\n                        \"messages.messages\"\n                    ];\n                    // Exclude not implemented areas\n                    var result = DataHandlerFactory.getDiffArray(data.accessTo, notImplementedAccessTo).sort(),\n                        bestStateForUser = this.getBestStateForUser(subscriptionsPrimaryInstitution, result);\n\n                    angular.forEach(handles, function (value, key) {\n                        if (angular.equals(bestStateForUser, value)) {\n                            firstAllowedState = key;\n                        }\n                    });\n                }\n\n                return firstAllowedState;\n            },\n            getBestStateForUser: function (subscriptions, states) {\n                var hasTu = (angular.isDefined(subscriptions.tu) &&\n                            subscriptions.tu.active),\n                    hasTm = (angular.isDefined(subscriptions.tm) &&\n                            subscriptions.tm.active);\n\n                for (var i = 0; i < states.length; i++) {\n                    if (states[i].indexOf('tu') !== -1 && hasTu) {\n                        return states[i];\n                    } else if (states[i].indexOf('tm') !== -1 && hasTm) {\n                        return states[i];\n                    }\n                }\n\n                return states[0];\n            },\n            getHandles: function () {\n                return handles;\n            },\n            isPasswordReset: function () {\n                return !!(data && data.passwordReset);\n            },\n            clearPasswordReset: function () {\n                data.passwordReset = false;\n            }\n        };\n    };\n\n    App.factories.TuProfileHistoryLog = function () {\n        var data = {},\n            limit = 1,\n            profileType = null,\n            inProgress = false,\n            loadMoreInProgress = false,\n            visible = false,\n            reload = false,\n            isAdvanced = false,\n            triggeredBy = null;\n\n        return {\n            getData: function () {\n                return data;\n            },\n            setData: function (newData) {\n                data = newData;\n            },\n            setLogLimit: function (logLimit) {\n                if (!logLimit || logLimit < 1 || typeof logLimit === 'undefined') {\n                    logLimit = 1;\n                }\n                limit = logLimit;\n            },\n            getLogLimit: function () {\n                return limit;\n            },\n            setProfileType: function (newProfileType) {\n                profileType = newProfileType;\n            },\n            getProfileType: function () {\n                return profileType;\n            },\n            isInProgress: function () {\n                return inProgress;\n            },\n            setInProgress: function (status) {\n                inProgress = status;\n            },\n            isLoadMoreInProgress: function () {\n                return loadMoreInProgress;\n            },\n            setLoadMoreInProgress: function (status) {\n                loadMoreInProgress = status;\n            },\n            isVisible: function () {\n                return visible;\n            },\n            setTriggeredBy: function (trigger) {\n                triggeredBy = trigger;\n            },\n            shouldBeVisible: function (trigger) {\n                if (triggeredBy === trigger) {\n                    triggeredBy = null;\n                    return false;\n                }\n                return true;\n            },\n            resetTriggeredBy: function () {\n                triggeredBy = '';\n            },\n            setAdvanced: function (advanced) {\n                isAdvanced = advanced;\n            },\n            isAdvanced: function () {\n                return isAdvanced;\n            },\n            setReload: function(triggerReload) {\n                reload = triggerReload;\n            },\n            isReloadRequired: function() {\n                return reload;\n            },\n        };\n    };\n\n    App.factories.MapInitializer = function ($window, $q) {\n        var loaded = false;\n        // maps loader deferred object\n        var mapsDefer = $q.defer();\n\n        // Google's url for async maps initialization accepting callback function\n        var asyncUrl = 'https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyDN-E7GkRH050mItjaG6s2XIsDmi1OUsYg&callback=';\n\n        // async loader\n        var asyncLoad = function (asyncUrl, callbackName) {\n            if (!loaded) {\n                var script = document.createElement('script');\n                //script.type = 'text/javascript';\n                script.src = asyncUrl + callbackName;\n                document.body.appendChild(script);\n            }\n        };\n\n        // callback function - resolving promise after maps successfully loaded\n        $window.googleMapsInitialized = function () {\n            mapsDefer.resolve();\n            loaded = true;\n        };\n\n        return {\n            // usage: Initializer.mapsInitialized.then(callback)\n            initStart: function () {\n                asyncLoad(asyncUrl, 'googleMapsInitialized');\n            },\n            mapsInitialized: mapsDefer.promise\n        };\n    };\n\n    App.factories.DataHandler = function () {\n        return {\n            objectToArray: function (obj) {\n                var result = obj;\n                if (!angular.isArray(obj)) {\n                    result = [];\n                    angular.forEach(obj, function (val) {\n                        result.push(val);\n                    });\n                }\n\n                return result;\n            },\n            getDiffArray: function(array1, array2) {\n                return array1.filter(function(value) {\n                    for (var i = 0; i <= array2.length; i++) {\n                        if (value === array2[i]) {\n                            return false;\n                        }\n                    }\n                    return true;\n                });\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('NotifierFactory', ['toaster', App.factories.Notifier])\n        .factory('InstitutionFactory', ['TimeService', App.factories.Institution])\n        .factory('UserFactory', ['DataHandlerFactory', App.factories.User])\n        .factory('TuProfileFactory', [App.factories.TuProfile])\n        .factory('SharedProfileFactory', [App.factories.SharedProfile])\n        .factory('TuProfileHistoryLogFactory', [App.factories.TuProfileHistoryLog])\n        .factory('MapInitializerFactory', ['$window', '$q', App.factories.MapInitializer])\n        .factory('DataHandlerFactory', [App.factories.DataHandler]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.InstitutionsService = function ($resource, $log, constants, RequestsQueueService) {\n        var service = {};\n\n        /**\n         * Get institutions list API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getInstitutionListModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/all/:id', null, {\n                get: {\n                    isArray:false,\n                    cancellable : true\n                }\n            });\n        };\n\n        service.getInstitutionData = function (coreId, columnsToFetch) {\n            if (!coreId) {\n                return false;\n            }\n            coreId = parseInt(coreId, 10);\n\n            var queueName = 'getInstitutionData',\n                filters = {\n                    'filter[coreId]': coreId,\n                    limit: 1\n                };\n            if (columnsToFetch && columnsToFetch.length) {\n                filters['columns[]'] = columnsToFetch;\n            }\n            queueName += angular.toJson(filters);\n            // cancel currently running requests\n            RequestsQueueService.cancelAll(queueName);\n\n            var Api = service.getInstitutionListModel().get(filters);\n\n            // add new request to the queue\n            RequestsQueueService.add(Api, queueName);\n\n            return Api.$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function(error) {\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        return service;\n    };\n\n    /**\n     * Requests queues.\n     *\n     * @constructor\n     */\n    App.services.RequestsQueue = function () {\n        var queue = [],\n            defaultQueue = 'default';\n\n        /**\n         * Add request to the queue.\n         *\n         * @param {Object} request\n         * @param {null|String} queueName\n         */\n        this.add = function(request, queueName) {\n            queueName = queueName || defaultQueue;\n            if (!queue[queueName]) {\n                queue[queueName] = [];\n            }\n            queue[queueName].push(request);\n        };\n\n        /**\n         * Cancel queue requests.\n         *\n         * @param {null|String} queueName\n         * @returns {boolean}\n         */\n        this.cancelAll = function (queueName) {\n            queueName = queueName || defaultQueue;\n            if (!queue[queueName]) {\n                return false;\n            }\n            queue[queueName].forEach(function (request) {\n                request.$cancelRequest();\n            });\n            delete queue[queueName];\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .service('InstitutionsService', [\n            '$resource',\n            '$log',\n            'constants',\n            'RequestsQueueService',\n            App.services.InstitutionsService\n        ])\n        .service('RequestsQueueService', [\n            App.services.RequestsQueue\n        ]);\n}(window.angular));\n\n(function(angular) {\n'use strict';\nangular.module('qsHub').constant('version', 0.32);\n}(window.angular));\n(function(angular) {\n    'use strict';\n    angular.module('qsHub').constant(\n        'CROSS_DOMAIN_IFRAME_URL',\n        '/bower_components/xdLocalStorage/app/views/cross-domain-local-storage.html'\n    );\n}(window.angular));\n\n(function(angular) {\n'use strict';\nangular.module('qsHubTemplates', []).run([\n'$templateCache',\nfunction($templateCache) {\n  \n\n  $templateCache.put('/scripts/components/contacts/contactsView.html',\n    \"<div class=\\\"page-contacts\\\" ng-controller=\\\"ContactsListController as ContactsListController\\\">\\n\" +\n    \"    <div ng-include src=\\\"'/scripts/components/contacts/institutionsUsersListCloneView.html'\\\"></div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/contacts/institutionsUsersListCloneView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-institutions-users-list\\\" ng-controller=\\\"InstitutionsUsersListCloneController as UsersList\\\">\\n\" +\n    \"    <div class=\\\"alert alert-info\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>QS Staff have access to this section only</span>\\n\" +\n    \"            <span ng-if=\\\"!UsersList.hasWriteAccess\\\">. You don't have permissions to make changes.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"    </div>\\n\" +\n    \"    <p>\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n\" +\n    \"                ng-click=\\\"UsersList.handleAddInstitutionsUserClick()\\\"\\n\" +\n    \"                ng-disabled=\\\"!UsersList.hasWriteAccess\\\">\\n\" +\n    \"            <i class=\\\"fa fa-user-plus\\\"></i>\\n\" +\n    \"            Add User\\n\" +\n    \"        </button>\\n\" +\n    \"    </p>\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div id=\\\"schoolUsersTable\\\" ng-class=\\\"showInfoBlock ? 'col-sm-3 hide-ng-table-pager' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                <div class=\\\"ibox-content table-responsive\\\">\\n\" +\n    \"                    <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"UsersList.isDatagridReloading || !UsersList.isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"full-width scroll-horizontal hide-vertical-overflow\\\" mouse-scroll-horizontal>\\n\" +\n    \"                        <div ng-if=\\\"UsersList.showDatagrid\\\" ng-class=\\\"{'modal-overlay-35': UsersList.isDatagridReloading}\\\">\\n\" +\n    \"                            <ui-grid-info ng-if=\\\"!showInfoBlock\\\"></ui-grid-info>\\n\" +\n    \"                            <div class=\\\"grid\\\"\\n\" +\n    \"                                 ui-grid=\\\"UsersList.grid.options\\\"\\n\" +\n    \"                                 ui-grid-pagination\\n\" +\n    \"                                 ui-grid-selection\\n\" +\n    \"                                 ui-grid-resize-columns\\n\" +\n    \"                                 ui-grid-auto-resize></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div fixed-element-while-scrolling=\\\"#schoolUsersTable\\\" ng-show=\\\"showInfoBlock\\\" class=\\\"col-sm-9 scroll-floating-element\\\">\\n\" +\n    \"            <div class=\\\"ibox block-user\\\">\\n\" +\n    \"                <div class=\\\"ibox-content\\\">\\n\" +\n    \"                    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                        <a class=\\\"close-link\\\" ng-click=\\\"UsersList.handleEditCloseClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"tab-content\\\">\\n\" +\n    \"                        <div class=\\\"tab-pane active\\\">\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"row m-b-lg\\\" ng-show=\\\"user.id\\\">\\n\" +\n    \"                                <div class=\\\"col-lg-4 text-center\\\">\\n\" +\n    \"                                    <div class=\\\"m-b-sm\\\">\\n\" +\n    \"                                        <img alt=\\\"image\\\" class=\\\"img-circle\\\" gravatar-src=\\\"user.email\\\" gravatar-size=\\\"100\\\">\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                    <div class=\\\"m-b-sm\\\">\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                                <div class=\\\"col-lg-8\\\">\\n\" +\n    \"                                    <h2>\\n\" +\n    \"                                        {{user.fullname}}\\n\" +\n    \"                                    </h2>\\n\" +\n    \"                                    <a href=\\\"mailto:{{user.email}}\\\" class=\\\"btn btn-primary btn-sm\\\" ng-class=\\\"{disabled: !UsersList.hasWriteAccess}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-envelope\\\"></i> Send Email\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                    <a class=\\\"btn btn-warning btn-sm\\\"\\n\" +\n    \"                                       ng-show=\\\"!user.active\\\"\\n\" +\n    \"                                       ng-click=\\\"handleActivateClick(user)\\\"\\n\" +\n    \"                                       ng-class=\\\"{'disabled':activateInProgress || !UsersList.hasWriteAccess}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-undo\\\"></i> Activate\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                    <a class=\\\"btn btn-danger btn-sm\\\"\\n\" +\n    \"                                       ng-show=\\\"user.active\\\"\\n\" +\n    \"                                       ng-click=\\\"handleDeactivateClick(user)\\\"\\n\" +\n    \"                                       ng-class=\\\"{'disabled':deactivateInProgress || !UsersList.hasWriteAccess}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-ban\\\"></i> Deactivate\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"client-detail\\\">\\n\" +\n    \"                                <div class=\\\"full-height-scroll\\\">\\n\" +\n    \"                                    <div class=\\\"row\\\">\\n\" +\n    \"                                        <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                                            <div class=\\\"tabs-container\\\">\\n\" +\n    \"                                                <uib-tabset active=\\\"activeTab\\\">\\n\" +\n    \"                                                    <uib-tab heading=\\\"Personal details\\\" disable=\\\"disabledInstitutionsUserListSubTabs['personalDetails']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/institutions/personal-details/institutionsUsersListPersonalDetailsView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                    <uib-tab heading=\\\"Permissions\\\" disable=\\\"disabledInstitutionsUserListSubTabs['permissions']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/institutions/permissions/institutionsUsersListPermissionsView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                    <uib-tab heading=\\\"Institutions\\\" disable=\\\"disabledInstitutionsUserListSubTabs['institutions']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/institutions/institutions/institutionsUsersListInstitutionsView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                </uib-tabset>\\n\" +\n    \"                                            </div>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <pre ng-show=\\\"UsersList.devMode\\\">{{user|json}}</pre>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/dashboard/admin/dashboardAdminView.html',\n    \"<div class=\\\"admin-dashboard wrapper wrapper-content\\\" ng-controller=\\\"AdminDashboardController as AdminDashboard\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6\\\">\\n\" +\n    \"            <div class=\\\"ibox\\\">\\n\" +\n    \"                <div class=\\\"ibox-title\\\">\\n\" +\n    \"                    <h5>You have access to the following institutions</h5>\\n\" +\n    \"                    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                        <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"ibox-content\\\">\\n\" +\n    \"                    <ul class=\\\"list-group clear-list m-t\\\">\\n\" +\n    \"                        <li class=\\\"list-group-item fist-item\\\">\\n\" +\n    \"                            All institutions\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-6\\\">\\n\" +\n    \"            <div class=\\\"ibox\\\">\\n\" +\n    \"                <div class=\\\"ibox-title\\\">\\n\" +\n    \"                    <h5>Your roles are</h5>\\n\" +\n    \"                    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                        <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"ibox-content\\\">\\n\" +\n    \"                    <ul class=\\\"list-group clear-list m-t\\\">\\n\" +\n    \"                        <li ng-if=\\\"!userRoles.length\\\" class=\\\"list-group-item fist-item\\\">\\n\" +\n    \"                            None\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li ng-if=\\\"userRoles.length\\\" class=\\\"list-group-item\\\" ng-class=\\\"{'fist-item': key === 0}\\\" ng-repeat=\\\"(key,role) in userRoles\\\">\\n\" +\n    \"                            {{role}}\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/department/departmentOverview.html',\n    \"<div  class=\\\"wrapper wrapper-content animated fadeInRight page-institution\\\" ng-controller=\\\"DepartmentOverviewController as DepartmentOverviewController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div id=\\\"departmentOverview\\\" ng-class=\\\"DepartmentOverviewController.isRightSidePanelActive() ? 'col-sm-8' : 'col-sm-12'\\\">\\n\" +\n    \"            <!-- SECTION -->\\n\" +\n    \"            <div class=\\\"section\\\">\\n\" +\n    \"              <!-- SECTION HEADER -->\\n\" +\n    \"              <div class=\\\"section-header\\\">\\n\" +\n    \"                <!-- Institution switch for QS users -->\\n\" +\n    \"                <div class=\\\"search-dropdown pull-left\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"DepartmentOverviewController.institution.selected\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        ng-change=\\\"DepartmentOverviewController.handleSearchInstitutionClick(DepartmentOverviewController.institution.selected)\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Institution search...\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-building\\\"></i>\\n\" +\n    \"                            <span>{{$select.selected.name}}</span>\\n\" +\n    \"                        </ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          refresh-delay=\\\"500\\\"\\n\" +\n    \"                          refresh=\\\"DepartmentOverviewController.searchInstitution($select.search)\\\"\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option in DepartmentOverviewController.institutionsList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                    <div class=\\\"spinner\\\" ng-show=\\\"DepartmentOverviewController.searchInProgress\\\" wave-spinner></div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <button class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                        ng-disabled=\\\"DepartmentOverviewController.isAddButtonDisabled()\\\"\\n\" +\n    \"                        ng-click=\\\"handleAddDepartmentClick()\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                    <span>Add Department</span>\\n\" +\n    \"                </button>\\n\" +\n    \"              </div><!-- /SECTION HEADER -->\\n\" +\n    \"\\n\" +\n    \"              <!-- SECTION BODY -->\\n\" +\n    \"              <div class=\\\"section-body\\\">\\n\" +\n    \"                <div id=\\\"departmentsTable\\\" ng-class=\\\"{'locked': !DepartmentOverviewController.isInstitutionSelected()}\\\">\\n\" +\n    \"                    <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"DepartmentOverviewController.isDatagridReloading || !isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div ng-if=\\\"!DepartmentOverviewController.isDatagridReloading && gridOptions\\\">\\n\" +\n    \"                        <ui-grid-info ng-if=\\\"!DepartmentOverviewController.isRightSidePanelActive()\\\"></ui-grid-info>\\n\" +\n    \"                        <div class=\\\"grid\\\"\\n\" +\n    \"                           ui-grid=\\\"gridOptions\\\"\\n\" +\n    \"                           ui-grid-draggable-rows\\n\" +\n    \"                           ui-grid-selection\\n\" +\n    \"                           ui-grid-resize-columns\\n\" +\n    \"                           ui-grid-auto-resize>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"              </div><!-- /SECTION BODY -->\\n\" +\n    \"            </div><!-- /SECTION -->\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div id=\\\"departmentOverviewForm\\\">\\n\" +\n    \"          <div ng-show=\\\"showDepartmentEditForm || showDepartmentAddForm\\\"\\n\" +\n    \"            id=\\\"departmentBlockPanel\\\"\\n\" +\n    \"            fixed-element-while-scrolling=\\\"#departmentsTable\\\"\\n\" +\n    \"            class=\\\"col-sm-4\\\"\\n\" +\n    \"            ng-controller=\\\"DepartmentOverviewFormController as DepartmentFormController\\\">\\n\" +\n    \"            <div class=\\\"department-form\\\" ng-show=\\\"showDepartmentEditForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/departments/tuProfileEditDepartmentFormView.html'\\\"></div>\\n\" +\n    \"            <div class=\\\"department-form\\\" ng-show=\\\"showDepartmentAddForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/departments/tuProfileAddDepartmentFormView.html'\\\"></div>\\n\" +\n    \"          </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/datagrid/rowTemplate.html',\n    \"<div grid=\\\"grid\\\">\\n\" +\n    \"    <div class=\\\"ui-grid-cell pointer\\\"\\n\" +\n    \"        ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\\\"\\n\" +\n    \"        ng-class=\\\"{ 'ui-grid-row-header-cell': col.isRowHeader, 'active': row.entity.id == grid.appScope.selectedInstitutionId }\\\"\\n\" +\n    \"        role=\\\"{{col.isRowHeader ? 'rowheader' : 'gridcell'}}\\\"\\n\" +\n    \"        ui-grid-cell>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/datagrid/selectCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents\\\">{{COL_FIELD CUSTOM_FILTERS | boolToText:col.filter.selectOptions}}</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/institutionsListView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-institution-list\\\" ng-controller=\\\"InstitutionsListController as InstitutionsController\\\">\\n\" +\n    \"\\n\" +\n    \"    <p>\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n\" +\n    \"                ng-click=\\\"InstitutionsController.handleAddInstitutionClick()\\\"\\n\" +\n    \"                ng-class=\\\"{'modal-overlay-35': !isDatagridRendered}\\\">\\n\" +\n    \"            <i class=\\\"fa fa-building-o\\\"></i>\\n\" +\n    \"            Add Institution\\n\" +\n    \"        </button>\\n\" +\n    \"    </p>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div id=\\\"institutionsTable\\\" ng-class=\\\"showInfoBlock ? 'col-sm-3 col-xs-4 hide-ng-table-pager' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                <div class=\\\"ibox-content\\\">\\n\" +\n    \"                    <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isDatagridReloading || !isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div ng-if=\\\"!isDatagridReloading && gridOptions\\\">\\n\" +\n    \"                        <ui-grid-info ng-if=\\\"!showInfoBlock\\\"></ui-grid-info>\\n\" +\n    \"                        <div class=\\\"grid\\\"\\n\" +\n    \"                             ui-grid=\\\"gridOptions\\\"\\n\" +\n    \"                             ui-grid-selection\\n\" +\n    \"                             ui-grid-resize-columns\\n\" +\n    \"                             ui-grid-auto-resize\\n\" +\n    \"                             ui-grid-cellnav\\n\" +\n    \"                             ui-grid-pagination></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div fixed-element-while-scrolling=\\\"#institutionsTable\\\" ng-show=\\\"showInfoBlock\\\" class=\\\"col-sm-9 col-xs-8\\\">\\n\" +\n    \"            <div class=\\\"ibox block-institution\\\">\\n\" +\n    \"                <div class=\\\"ibox-content\\\">\\n\" +\n    \"                    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                        <a class=\\\"close-link\\\" ng-click=\\\"InstitutionsController.handleEditCloseClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"tab-content\\\">\\n\" +\n    \"                        <div class=\\\"tab-pane active\\\">\\n\" +\n    \"                            <div class=\\\"row m-b-lg\\\" ng-show=\\\"institution.id\\\">\\n\" +\n    \"                                <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                                    <h2>\\n\" +\n    \"                                        {{institutionBeforeChanges.name}}\\n\" +\n    \"                                    </h2>\\n\" +\n    \"\\n\" +\n    \"                                    <a ng-show=\\\"!institution.active\\\" ng-click=\\\"handleActivateClick(institution)\\\" class=\\\"btn btn-warning btn-sm pull-left m-b-xs\\\" ng-class=\\\"{'disabled':activateInProgress}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-undo\\\"></i> Activate\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a ng-show=\\\"institution.active\\\" ng-click=\\\"handleDeactivateClick(institution)\\\" class=\\\"btn btn-danger btn-sm pull-left m-b-xs\\\" ng-class=\\\"{'disabled':deactivateInProgress}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-ban\\\"></i> Deactivate\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a class=\\\"btn btn-default btn-sm pull-left m-b-xs\\\" ng-click=\\\"handleResetClick(institution)\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-refresh\\\"></i> Reset unsaved changes\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a ng-if=\\\"allowLoginAs()\\\" class=\\\"btn btn-default btn-sm pull-left m-b-xs\\\" ng-click=\\\"handleLoginAsClick()\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-sign-in\\\"></i> Login as institution\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a class=\\\"btn btn-default btn-sm pull-left m-b-xs\\\"\\n\" +\n    \"                                       uib-popover=\\\"{{InstitutionsController.downgradeProgramTooltipText()}}\\\"\\n\" +\n    \"                                       popover-placement=\\\"bottom\\\"\\n\" +\n    \"                                       popover-enable=\\\"isProgramDowngradeDisabled\\\"\\n\" +\n    \"                                       popover-trigger=\\\"'mouseenter'\\\"\\n\" +\n    \"                                       ng-if=\\\"InstitutionsController.allowProgramDowngrade()\\\"\\n\" +\n    \"                                       ng-click=\\\"!isProgramDowngradeDisabled && InstitutionsController.handleProgramDowngradeClick($event)\\\"\\n\" +\n    \"                                       ng-disabled=\\\"isProgramDowngradeDisabled\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-arrow-circle-o-down\\\"></i> Downgrade to Basic Program\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a class=\\\"btn btn-default btn-sm pull-left m-b-xs\\\"\\n\" +\n    \"                                       ng-if=\\\"InstitutionsController.isSimple\\\"\\n\" +\n    \"                                       ng-disabled=\\\"InstitutionsController.isUpgradeButtonDisabled()\\\"\\n\" +\n    \"                                       ng-click=\\\"!InstitutionsController.isUpgradeButtonDisabled() &&InstitutionsController.handleUpgradeClick()\\\"\\n\" +\n    \"\\n\" +\n    \"                                       uib-popover=\\\"Mandatory fields must be entered first to upgrade.\\\"\\n\" +\n    \"                                       popover-placement=\\\"bottom\\\"\\n\" +\n    \"                                       popover-enable=\\\"InstitutionsController.isUpgradeButtonDisabled()\\\"\\n\" +\n    \"                                       popover-trigger=\\\"'mouseenter'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-arrow-circle-o-up\\\"></i> Upgrade to Client Department\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a class=\\\"btn btn-default btn-sm pull-left m-b-xs\\\"\\n\" +\n    \"                                       ng-if=\\\"InstitutionsController.isClient\\\"\\n\" +\n    \"                                       ng-disabled=\\\"InstitutionsController.isClientDepartmentDowngradeDisabled()\\\"\\n\" +\n    \"                                       ng-click=\\\"!InstitutionsController.isClientDepartmentDowngradeDisabled() && InstitutionsController.handleDowngradeClick()\\\"\\n\" +\n    \"\\n\" +\n    \"                                       uib-popover=\\\"Unable to downgrade due to current TU/TM subscription.\\\"\\n\" +\n    \"                                       popover-placement=\\\"bottom\\\"\\n\" +\n    \"                                       popover-enable=\\\"InstitutionsController.isClientDepartmentDowngradeDisabled()\\\"\\n\" +\n    \"                                       popover-trigger=\\\"'mouseenter'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-arrow-circle-o-down\\\"></i> Downgrade to Simple Department\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"                                    <a class=\\\"btn pull-left btn-default btn-sm m-b-xs\\\" target=\\\"_blank\\\"\\n\" +\n    \"                                       ng-href=\\\"{{InstitutionsController.isViewTuSiteEnabled() ? InstitutionsController.urls.tu + institution.nids.master : ''}}\\\"\\n\" +\n    \"                                       ng-if=\\\"InstitutionsController.allowViewTuSite()\\\"\\n\" +\n    \"                                       ng-disabled=\\\"!InstitutionsController.isViewTuSiteEnabled()\\\"\\n\" +\n    \"\\n\" +\n    \"                                       uib-popover=\\\"{{institution.nids.master ? 'Display on topuniversities.com is disabled under Subscriptions tab.' : 'Please publish TU profiles first'}}\\\"\\n\" +\n    \"                                       popover-placement=\\\"bottom\\\"\\n\" +\n    \"                                       popover-enable=\\\"!InstitutionsController.isViewTuSiteEnabled()\\\"\\n\" +\n    \"                                       popover-trigger=\\\"'mouseenter'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-share\\\"></i> View TU Site\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a class=\\\"btn pull-left btn-default btn-sm m-b-xs\\\" target=\\\"_blank\\\"\\n\" +\n    \"                                       ng-if=\\\"InstitutionsController.allowViewTmSite()\\\"\\n\" +\n    \"                                       ng-href=\\\"{{InstitutionsController.allowViewTmSiteButtonEnabled() ? InstitutionsController.urls.tm + institution.nids.tm : ''}}\\\"\\n\" +\n    \"                                       ng-disabled=\\\"!InstitutionsController.allowViewTmSiteButtonEnabled()\\\"\\n\" +\n    \"\\n\" +\n    \"                                       uib-popover=\\\"{{institution.nids.master ? 'Display on topmba.com  is disabled under Subscriptions tab.' : 'Please publish TM profile first'}}\\\"\\n\" +\n    \"                                       popover-placement=\\\"bottom\\\"\\n\" +\n    \"                                       popover-enable=\\\"!InstitutionsController.allowViewTmSiteButtonEnabled()\\\"\\n\" +\n    \"                                       popover-trigger=\\\"'mouseenter'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-share\\\"></i> View TM Site\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                    \\n\" +\n    \"                                    <button ng-if=\\\"InstitutionsController.isAdvancedProgram || InstitutionsController.isTopLevelInstitution(institution.typeId)\\\"\\n\" +\n    \"                                       class=\\\"btn btn-default btn-sm\\\"\\n\" +\n    \"                                       ui-sref=\\\"staff.institutions.department({coreId: institution.coreId, name: institution.name})\\\"\\n\" +\n    \"                                       ng-disabled=\\\"!InstitutionsController.isDisplayDepartmentEnabled\\\">Display Departments\\n\" +\n    \"                                    </button>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"institution-detail\\\">\\n\" +\n    \"                                <div class=\\\"full-height-scroll\\\">\\n\" +\n    \"                                    <div class=\\\"row\\\">\\n\" +\n    \"                                        <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                                            <div class=\\\"tabs-container\\\">\\n\" +\n    \"                                                <uib-tabset active=\\\"activeTab\\\">\\n\" +\n    \"                                                    <uib-tab heading=\\\"Basic Details\\\" disable=\\\"disabledInstitutionListTabs['basicDetails']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/institutions/list/partial/basicDetails.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                                                    <uib-tab heading=\\\"Subscriptions\\\" disable=\\\"disabledInstitutionListTabs['subscriptions']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/institutions/list/subscriptions/institutionsListSubscriptionsView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                                                    <uib-tab heading=\\\"Campuses\\\" disable=\\\"disabledInstitutionListTabs['campuses']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/institutions/list/partial/campuses.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                                                    <uib-tab heading=\\\"Group Institutions\\\" disable=\\\"disabledInstitutionListTabs['institutionGroups']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/institutions/list/partial/groupInstitutions.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                                                    <uib-tab heading=\\\"Drupal\\\" disable=\\\"disabledInstitutionListTabs['drupal']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/institutions/list/partial/drupal.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                    \\n\" +\n    \"                                                    <uib-tab disable=\\\"disabledInstitutionListTabs['status']\\\">\\n\" +\n    \"                                                        <uib-tab-heading>\\n\" +\n    \"                                                            <span ng-class=\\\"{'text-danger': InstitutionsController.hasMissingFields()}\\\">Status</span>\\n\" +\n    \"                                                        </uib-tab-heading>\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/institutions/list/status/institutionsListStatusView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                </uib-tabset>\\n\" +\n    \"                                            </div>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"    </div>\\n\" +\n    \"    <pre ng-show=\\\"InstitutionsController.devMode\\\">{{institution|json}}</pre>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/partial/basicDetails.html',\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <form name=\\\"forms.basicDetailsForm\\\" class=\\\"clearfix\\\" novalidate>\\n\" +\n    \"            <div class=\\\"col-lg-6 block-basic-details\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': InstitutionsController.isInvalidNewSchoolName}\\\">\\n\" +\n    \"                    <label>Name *</label>\\n\" +\n    \"\\n\" +\n    \"                    <div ng-if=\\\"institution.id\\\">\\n\" +\n    \"                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n\" +\n    \"                            name=\\\"name\\\"\\n\" +\n    \"                            ng-model=\\\"institution.name\\\"\\n\" +\n    \"                            ng-required=\\\"true\\\"\\n\" +\n    \"                            custom-popover\\n\" +\n    \"                            popover-html=\\\"Add institution name\\\"\\n\" +\n    \"                            popover-placement=\\\"left\\\"\\n\" +\n    \"                            popover-trigger=\\\"manual\\\"\\n\" +\n    \"                            popover-visibility=\\\"{{InstitutionsController.isInvalidNewSchoolName}}\\\"\\n\" +\n    \"                            ng-focus=\\\"InstitutionsController.setIsInvalidNewSchoolName(false)\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div ng-if=\\\"!institution.id\\\">\\n\" +\n    \"                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n\" +\n    \"                            name=\\\"name\\\"\\n\" +\n    \"                            ng-model=\\\"institution.name\\\"\\n\" +\n    \"                            ng-required=\\\"true\\\"\\n\" +\n    \"                            ng-change=\\\"InstitutionsController.findSimilar(institution)\\\"\\n\" +\n    \"                            ng-model-options=\\\"{ debounce: 750 }\\\"\\n\" +\n    \"                            custom-popover\\n\" +\n    \"                            popover-html=\\\"Add institution name\\\"\\n\" +\n    \"                            popover-placement=\\\"left\\\"\\n\" +\n    \"                            popover-trigger=\\\"manual\\\"\\n\" +\n    \"                            popover-visibility=\\\"{{InstitutionsController.isInvalidNewSchoolName}}\\\"\\n\" +\n    \"                            ng-focus=\\\"InstitutionsController.setIsInvalidNewSchoolName(false)\\\">\\n\" +\n    \"                        <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"InstitutionsController.similarNames.loading\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                        <div class=\\\"similar-names\\\" ng-show=\\\"!institution.id && InstitutionsController.similarNames.display\\\">\\n\" +\n    \"                            <small class=\\\"m-b block\\\">\\n\" +\n    \"                                <span class=\\\"text-muted\\\">Similarly named existing institutions:</span>\\n\" +\n    \"                                <span class=\\\"text-navy\\\" ng-show=\\\"!InstitutionsController.similarNames.results.length\\\">no results</span>\\n\" +\n    \"                            </small>\\n\" +\n    \"                            <div ng-show=\\\"!InstitutionsController.similarNames.loading\\\" class=\\\"text-center\\\">\\n\" +\n    \"                                <div ng-repeat=\\\"similarInstitution in InstitutionsController.similarNames.results\\\">\\n\" +\n    \"                                    <div><a target=\\\"_blank\\\" ng-href=\\\"/#/profiles/institution-details?coreId={{similarInstitution.coreId}}\\\">{{similarInstitution.name}} {{similarInstitution.active ? '' : '[inactive]'}}</a></div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': InstitutionsController.isInvalidType}\\\">\\n\" +\n    \"                    <label>Type * </label>\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"typeId\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-disabled=\\\"institution.id\\\"\\n\" +\n    \"                        ng-model=\\\"selectedItem.selectedOptionType\\\"\\n\" +\n    \"                        on-select=\\\"InstitutionsController.setSelectedOptionType(selectedItem.selectedOptionType)\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{InstitutionsController.isInvalidType ? true : false}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                            position=\\\"down\\\"\\n\" +\n    \"                            ui-disable-choice=\\\"option.disabled\\\"\\n\" +\n    \"                            repeat=\\\"option in InstitutionsController.typesList | filter:$select.search track by option.uniqueId\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-show=\\\"InstitutionsController.isClientDepartment(institution.typeId)\\\" ng-class=\\\"{'has-errors': InstitutionsController.isInvalidBelongsTo}\\\">\\n\" +\n    \"                    <label>\\n\" +\n    \"                        Belongs to *\\n\" +\n    \"                    </label>\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"belongsTo\\\"\\n\" +\n    \"                        ng-required=\\\"InstitutionsController.isClientDepartment(institution.typeId)\\\"\\n\" +\n    \"                        ng-model=\\\"institution.belongsTo\\\"\\n\" +\n    \"                        on-select=\\\"InstitutionsController.setIsInvalidBelongsTo(false)\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        reset-search-input=\\\"true\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{InstitutionsController.isInvalidBelongsTo ? true : false}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">{{$select.selected.title}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                            position=\\\"down\\\"\\n\" +\n    \"                            repeat=\\\"option.id as option in InstitutionsController.belongsToList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.title | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <switch class=\\\"green\\\"\\n\" +\n    \"                            ng-model=\\\"institution.businessSchool\\\"\\n\" +\n    \"                            ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"></switch>\\n\" +\n    \"                    Business School\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <switch class=\\\"green\\\" name=\\\"hasNoDepartments\\\"\\n\" +\n    \"                            ng-model=\\\"institution.hasNoDepartments\\\"\\n\" +\n    \"                            ng-disabled=\\\"InstitutionsController.isClientDepartment(institution.typeId) || InstitutionsController.isSimpleDepartment(institution.typeId)\\\"></switch> Has No Departments\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"col-lg-6 block-contact-types\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Local Name</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"institution.localName\\\" name=\\\"localName\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group force-width-100\\\"\\n\" +\n    \"                     ng-show=\\\"InstitutionsController.showParentInstitution(institution.typeId)\\\"\\n\" +\n    \"                     ng-class=\\\"{'has-errors': InstitutionsController.isInvalidParentInstitution}\\\">\\n\" +\n    \"                    <label>Parent institution *</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"institution.parentName\\\" ng-show=\\\"institution.id\\\" disabled/>\\n\" +\n    \"                    <div class=\\\"search-institutions\\\" ng-show=\\\"!institution.id\\\">\\n\" +\n    \"                        <ui-select\\n\" +\n    \"                            close-on-select=\\\"true\\\"\\n\" +\n    \"                            ng-model=\\\"institution.parent\\\"\\n\" +\n    \"                            on-select=\\\"InstitutionsController.handleSearchInstitutionClick($item)\\\"\\n\" +\n    \"                            theme=\\\"bootstrap\\\"\\n\" +\n    \"                            name=\\\"parentInstitution\\\"\\n\" +\n    \"                            reset-search-input=\\\"true\\\"\\n\" +\n    \"                            custom-popover\\n\" +\n    \"                            popover-html=\\\"Type parent institution name\\\"\\n\" +\n    \"                            popover-placement=\\\"left\\\"\\n\" +\n    \"                            popover-trigger=\\\"manual\\\"\\n\" +\n    \"                            popover-visibility=\\\"{{InstitutionsController.isInvalidParentInstitution}}\\\"\\n\" +\n    \"                            ng-click=\\\"InstitutionsController.setIsInvalidParentInstitution(false)\\\"\\n\" +\n    \"                            >\\n\" +\n    \"                            <ui-select-match placeholder=\\\"Type parent institution name...\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                            <ui-select-choices\\n\" +\n    \"                                refresh-delay=\\\"1000\\\"\\n\" +\n    \"                                refresh=\\\"searchTopLevelInstitutions($select.search)\\\"\\n\" +\n    \"                                position=\\\"down\\\"\\n\" +\n    \"                                repeat=\\\"option in parentInstitutionSearchResults | filter:$select.search\\\">\\n\" +\n    \"                                <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                            </ui-select-choices>\\n\" +\n    \"                            <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                        </ui-select>\\n\" +\n    \"\\n\" +\n    \"                        <div class=\\\"show-departments mt-5px\\\" ng-show=\\\"institution.parentCoreId\\\">\\n\" +\n    \"                            <div class=\\\"row\\\">\\n\" +\n    \"                                <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                                    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                                        <button class=\\\"btn btn-default btn-xs\\\"\\n\" +\n    \"                                                ng-show=\\\"!InstitutionsController.showDepartments.display\\\"\\n\" +\n    \"                                                ng-click=\\\"InstitutionsController.showDepartments()\\\">Show All Departments</button>\\n\" +\n    \"                                        <a class=\\\"close-link\\\"\\n\" +\n    \"                                           ng-show=\\\"InstitutionsController.showDepartments.display\\\"\\n\" +\n    \"                                           ng-click=\\\"InstitutionsController.handleDepartmentsListCloseClick()\\\">\\n\" +\n    \"                                            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                                        </a>\\n\" +\n    \"\\n\" +\n    \"                                        <div class=\\\"pull-left\\\" ng-show=\\\"!InstitutionsController.showDepartments.loading && InstitutionsController.showDepartments.display\\\">\\n\" +\n    \"                                            <small class=\\\"m-b block\\\">\\n\" +\n    \"                                                <span class=\\\"text-muted\\\">Current Client departments:</span>\\n\" +\n    \"                                                <span class=\\\"text-navy\\\" ng-show=\\\"!InstitutionsController.showDepartments.results.length\\\">no results</span>\\n\" +\n    \"                                            </small>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"row\\\">\\n\" +\n    \"                                <div class=\\\"col-lg-12 text-center\\\">\\n\" +\n    \"                                    <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"InstitutionsController.showDepartments.loading\\\"></div>\\n\" +\n    \"                                    <div ng-show=\\\"InstitutionsController.showDepartments.display && InstitutionsController.showDepartments.results.length\\\">\\n\" +\n    \"                                        <div ng-repeat=\\\"clientDeparmtent in InstitutionsController.showDepartments.results\\\">\\n\" +\n    \"                                            <div>\\n\" +\n    \"                                                <a target=\\\"_blank\\\" ng-href=\\\"/#/profiles/institution-details?coreId={{clientDeparmtent.coreId}}\\\">{{clientDeparmtent.name}}</a>\\n\" +\n    \"                                            </div>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>FileMaker ID</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"institution.filemakerId\\\" name=\\\"filemakerId\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': InstitutionsController.isInvalidCountry}\\\">\\n\" +\n    \"                    <label>Country *</label>\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        id=\\\"campusCountry\\\"\\n\" +\n    \"                        name=\\\"countryCode\\\"\\n\" +\n    \"                        ng-model=\\\"institution.countryCode\\\"\\n\" +\n    \"                        on-select=\\\"updateCountryName()\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{InstitutionsController.isInvalidCountry ? true : false}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                            position=\\\"auto\\\"\\n\" +\n    \"                            ui-disable-choice=\\\"option.disabled\\\"\\n\" +\n    \"                            repeat=\\\"option.countryCode as option in InstitutionsController.countriesList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <button class=\\\"btn btn-primary btn-sm btn-block\\\"\\n\" +\n    \"                        ng-disabled=\\\"basicDetailsSubmitInProgress\\\"\\n\" +\n    \"                        ng-click=\\\"handleBasicDetailsSubmit()\\\">{{institution.id ? 'Update' : 'Save'}}</button>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/partial/campuses.html',\n    \"<script id=\\\"ng-table/templates/campus/delete-header.html\\\" type=\\\"text/ng-template\\\">\\n\" +\n    \"    <th class=\\\"header\\\" ng-if=\\\"$column.show(this)\\\">\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" ng-class=\\\"{'disabled': isDeleteButtonDisabled()}\\\" ng-click=\\\"handleDeleteClick()\\\">\\n\" +\n    \"            <span class=\\\"glyphicon glyphicon-trash\\\"></span> {{$column.title(this)}}\\n\" +\n    \"        </button>\\n\" +\n    \"    </th>\\n\" +\n    \"</script>\\n\" +\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\" ng-controller=\\\"CampusesListController as CampusesController\\\">\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"handleAddClick()\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                <i class=\\\"fa fa-globe\\\"></i>\\n\" +\n    \"                Add Campus\\n\" +\n    \"            </button>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"row\\\">\\n\" +\n    \"            <div id=\\\"campusesTable\\\" ng-class=\\\"showCampusInfoBlock ? 'col-sm-3' : 'col-sm-12'\\\">\\n\" +\n    \"                <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                    <display-filtering class=\\\"pull-right\\\" columns=\\\"hiddenColumns\\\" active=\\\"filterActive\\\"></display-filtering>\\n\" +\n    \"\\n\" +\n    \"                    <table class=\\\"table table-striped table-bordered table-hover\\\"\\n\" +\n    \"                           ng-show=\\\"institution.campus.length\\\"\\n\" +\n    \"                           ng-table-dynamic=\\\"tableParams with columns\\\"\\n\" +\n    \"                           show-filter=\\\"false\\\">\\n\" +\n    \"                        <tbody ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"institution.campus\\\">\\n\" +\n    \"\\n\" +\n    \"                        <tr ng-repeat=\\\"campus in $data\\\" ng-class=\\\"{'active': campus.id == selectedCampusId}\\\">\\n\" +\n    \"                            <td ng-click=\\\"col.field === 'delete'? '' : handleDataGridRowClickCampus(campus, false)\\\" ng-repeat=\\\"col in $columns\\\">\\n\" +\n    \"                                <input ng-if=\\\"col.field === 'delete'\\\" ng-model=\\\"campusesToDelete[campus.id]\\\" i-checkbox type=\\\"checkbox\\\">\\n\" +\n    \"                                <p ng-if=\\\"col.field !== 'delete'\\\">\\n\" +\n    \"                                    {{ campus[col.field] }}\\n\" +\n    \"                                </p>\\n\" +\n    \"                            </td>\\n\" +\n    \"                        </tr>\\n\" +\n    \"                        </tbody>\\n\" +\n    \"                    </table>\\n\" +\n    \"                    <p ng-show=\\\"!institution.campus.length && !showCampusInfoBlock\\\" class=\\\"text-center text-muted\\\">\\n\" +\n    \"                        List is empty\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ng-show=\\\"showCampusInfoBlock\\\" class=\\\"col-sm-9 valuesTable\\\">\\n\" +\n    \"                <div class=\\\"ibox block-campus\\\">\\n\" +\n    \"                    <div class=\\\"tab-content\\\">\\n\" +\n    \"                        <div class=\\\"tab-pane active\\\">\\n\" +\n    \"                            <div class=\\\"client-detail\\\">\\n\" +\n    \"                                <div class=\\\"full-height-scroll scroll-floating-element\\\" full-scroll>\\n\" +\n    \"                                    <div class=\\\"row\\\">\\n\" +\n    \"                                        <form name=\\\"forms.campusDetailsForm\\\" class=\\\"clearfix\\\" ng-class=\\\"{submitted:submitted}\\\" novalidate>\\n\" +\n    \"                                            <div class=\\\"col-lg-6\\\">\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusName\\\">Campus Name *</label>\\n\" +\n    \"                                                    <input id=\\\"campusName\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.name\\\" ng-required=\\\"true\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusAddressLine1\\\">Address Line 1 *</label>\\n\" +\n    \"                                                    <input id=\\\"campusAddressLine1\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.addressLine1\\\" ng-required=\\\"true\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusCity\\\">Town / City *</label>\\n\" +\n    \"                                                    <input id=\\\"campusCity\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.city\\\" ng-required=\\\"true\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusPostCode\\\">Postcode</label>\\n\" +\n    \"                                                    <input id=\\\"campusPostCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.postcode\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusLatitude\\\">Latitude</label>\\n\" +\n    \"                                                    <input id=\\\"campusLatitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.latitude\\\" ng-change=\\\"coordinatesChanged()\\\" ng-readonly=\\\"campus.autoGenerate || InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label class=\\\"full-width\\\">Auto Generate</label>\\n\" +\n    \"                                                    <switch ng-model=\\\"campus.autoGenerate\\\" class=\\\"green\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"></switch>\\n\" +\n    \"                                                    <span>Use the address to auto generate latitude & longitude values.</span>\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label class=\\\"full-width\\\">Display In Frontend</label>\\n\" +\n    \"                                                    <switch ng-model=\\\"campus.displayInFrontEnd\\\" ng-change=\\\"CampusesController.displayOnFrontEndClick()\\\" class=\\\"green\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"></switch>\\n\" +\n    \"                                                    <span>If selected, campus will be sent to profile. (Latitude and longitude is required)</span>\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                            </div>\\n\" +\n    \"\\n\" +\n    \"                                            <div class=\\\"col-lg-6\\\">\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label>Country *</label>\\n\" +\n    \"                                                    <ui-select\\n\" +\n    \"                                                        name=\\\"country\\\"\\n\" +\n    \"                                                        ng-model=\\\"campus.country\\\"\\n\" +\n    \"                                                        ng-required=\\\"true\\\"\\n\" +\n    \"                                                        ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                                                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                                                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                                                        <ui-select-choices \\n\" +\n    \"                                                            position='down'\\n\" +\n    \"                                                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                                                            repeat=\\\"option.countryCode as option in CampusesController.countriesList | filter:$select.search\\\">\\n\" +\n    \"                                                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                                                        </ui-select-choices>\\n\" +\n    \"                                                        <ui-select-no-choice>\\n\" +\n    \"                                                            Not found\\n\" +\n    \"                                                        </ui-select-no-choice>\\n\" +\n    \"                                                    </ui-select>\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusAddressLine2\\\">Address Line 2</label>\\n\" +\n    \"                                                    <input id=\\\"campusAddressLine2\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.addressLine2\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusState\\\">State / Province</label>\\n\" +\n    \"                                                    <input id=\\\"campusState\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.state\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label for=\\\"campusLongitude\\\">Longitude</label>\\n\" +\n    \"                                                    <input id=\\\"campusLongitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.longitude\\\" ng-change=\\\"coordinatesChanged()\\\" ng-readonly=\\\"campus.autoGenerate || InstitutionsController.isSimpleDepartment(institution.typeId)\\\">\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                 <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <label class=\\\"full-width\\\">Primary Campus</label>\\n\" +\n    \"                                                    <switch id=\\\"campusPrimary\\\" ng-model=\\\"campus.primary\\\" class=\\\"green\\\" ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"></switch>\\n\" +\n    \"                                                </div>\\n\" +\n    \"\\n\" +\n    \"                                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                                    <a class=\\\"btn btn-primary btn-sm btn-block\\\" ng-class=\\\"{'disabled':campusSubmitInProgress || InstitutionsController.isSimpleDepartment(institution.typeId)}\\\" ng-click=\\\"handleCampusSubmit()\\\">{{getMode() ? 'Update' : 'Save'}}</a>\\n\" +\n    \"                                                </div>\\n\" +\n    \"                                            </div>\\n\" +\n    \"                                        </form>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                    <div class=\\\"row\\\">\\n\" +\n    \"                                        <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                                            <section id=\\\"map\\\" ng-controller=\\\"CampusesListController\\\" class=\\\"form-group\\\">\\n\" +\n    \"                                                <div id=\\\"campusMap\\\" class=\\\"h-166\\\"></div>\\n\" +\n    \"                                            </section>\\n\" +\n    \"                                            <p class=\\\"text-center\\\">\\n\" +\n    \"                                                <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\"\\n\" +\n    \"                                                        ng-click=\\\"CampusesController.refreshMap()\\\"\\n\" +\n    \"                                                        ng-disabled=\\\"refreshMapInProgress\\\">Refresh Map</button>\\n\" +\n    \"                                            </p>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/partial/drupal.html',\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <form name=\\\"forms.drupalForm\\\" class=\\\"clearfix\\\" novalidate>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"col-lg-6\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Overview node ID</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"institution.nids.master\\\" disabled=\\\"disabled\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>UG node ID</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"institution.nids.ug\\\" disabled=\\\"disabled\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>PG node ID</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"institution.nids.pg\\\" disabled=\\\"disabled\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>TM node ID</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"institution.nids.tm\\\" disabled=\\\"disabled\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"col-lg-6\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': InstitutionsController.isInvalidTuRegion}\\\" ng-if=\\\"!InstitutionsController.isAdvancedProgram\\\">\\n\" +\n    \"                    <label>TU Region *</label>\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"tuRegion\\\"\\n\" +\n    \"                        ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                        ng-model=\\\"institution.drupalTuRegionId\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                        on-select=\\\"InstitutionsController.setIsInvalidTuRegion(false)\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{InstitutionsController.isInvalidTuRegion}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                            position=\\\"down\\\"\\n\" +\n    \"                            ui-disable-choice=\\\"option.disabled\\\"\\n\" +\n    \"                            repeat=\\\"option.tid as option in InstitutionsController.tuRegionsList\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': InstitutionsController.isInvalidTmRegion}\\\">\\n\" +\n    \"                    <label>TM Region *</label>\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"tmRegion\\\"\\n\" +\n    \"                        ng-model=\\\"institution.drupalTmRegionId\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                        on-select=\\\"InstitutionsController.setIsInvalidTmRegion(false)\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{InstitutionsController.isInvalidTmRegion}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                            position=\\\"down\\\"\\n\" +\n    \"                            ui-disable-choice=\\\"option.disabled\\\"\\n\" +\n    \"                            repeat=\\\"option.tid as option in InstitutionsController.tmRegionsList\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <button class=\\\"btn btn-primary btn-sm btn-block\\\"\\n\" +\n    \"                   ng-disabled=\\\"drupalSubmitInProgress || InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                   ng-click=\\\"handleDrupalSubmit()\\\">Update</button>\\n\" +\n    \"\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/partial/groupInstitutions.html',\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isSelectReloading\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-12 block-group-institutions-search\\\">\\n\" +\n    \"         <label>Access to Outreach for C121 and CM only</label>\\n\" +\n    \"            <ui-select\\n\" +\n    \"                      ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                      multiple\\n\" +\n    \"                       close-on-select=\\\"false\\\"\\n\" +\n    \"                       ng-model=\\\"institution.groupMembers\\\"\\n\" +\n    \"                       theme=\\\"bootstrap\\\"\\n\" +\n    \"                       reset-search-input=\\\"true\\\">\\n\" +\n    \"                <ui-select-match placeholder=\\\"Type institution name...\\\">{{$item.name}}</ui-select-match>\\n\" +\n    \"                <ui-select-choices refresh-delay=\\\"1000\\\"\\n\" +\n    \"                                   refresh=\\\"searchInstitutionsWithoutGroup($select.search)\\\"\\n\" +\n    \"                                   repeat=\\\"option in institutionsWithoutGroup | filter:$select.search\\\">\\n\" +\n    \"                    <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                </ui-select-choices>\\n\" +\n    \"            </ui-select>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <br>\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6 block-group-institutions-warning\\\">\\n\" +\n    \"            <i>Institution \\\"{{institution.name}}\\\" will be included by default</i>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-6 block-group-institutions-update\\\">\\n\" +\n    \"            <a class=\\\"btn btn-primary btn-sm btn-block\\\" ng-class=\\\"{'disabled': disallowGroupsSubmit() || InstitutionsController.isSimpleDepartment(institution.typeId)}\\\" ng-click=\\\"handleInstitutionGroupSubmit()\\\">Update</a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/status/institutionsListStatusView.html',\n    \"<div class=\\\"panel-body\\\" ng-controller=\\\"InstitutionsListStatusController as InstitutionsListStatusController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-4\\\">\\n\" +\n    \"            <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                <div class=\\\"ibox-title\\\">\\n\" +\n    \"                    <h5>Basic details</h5>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"ibox-content no-padding\\\">\\n\" +\n    \"                    <ul class=\\\"list-group\\\">\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.name ? 'fa-check text-navy' : 'fa-times text-danger'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Name</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.name\\\"> - {{InstitutionsListStatusController.institution.name}}</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Name is a compulsory field.\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.type ? 'fa-check text-navy' : 'fa-times text-danger'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Type</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.type\\\"> - {{InstitutionsListStatusController.institution.type}}</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Type is a a compulsory field.\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.country ? 'fa-check text-navy' : 'fa-times text-danger'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Country</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.country\\\"> - {{InstitutionsListStatusController.institution.country}}</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Country is a compulsory field.\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\"\\n\" +\n    \"                            ng-show=\\\"InstitutionsController.isClientDepartment(InstitutionsListStatusController.institution.typeId)\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.belongsToName ? 'fa-check text-navy' : 'fa-times text-danger'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Belongs to</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.belongsToName\\\"> - {{InstitutionsListStatusController.institution.belongsToName}}</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Belongs to is a compulsory field.\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\"\\n\" +\n    \"                            ng-show=\\\"InstitutionsController.showParentInstitution(InstitutionsListStatusController.institution.typeId)\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.parentName ? 'fa-check text-navy' : 'fa-times text-danger'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Parent institution</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.parentName\\\"> - {{InstitutionsListStatusController.institution.parentName}}</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Parent Institution is a compulsory field.\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-4\\\">\\n\" +\n    \"            <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                <div class=\\\"ibox-title\\\">\\n\" +\n    \"                    <h5>Subscriptions</h5>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"ibox-content no-padding\\\">\\n\" +\n    \"                    <div class=\\\"ibox-title\\\" ng-if=\\\"!InstitutionsListStatusController.isAdvancedProgram\\\">\\n\" +\n    \"                        <h5>TU</h5>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <ul class=\\\"list-group\\\" ng-if=\\\"!InstitutionsListStatusController.isAdvancedProgram\\\">\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.subscriptions.tu.subscribed ? 'fa-check text-navy' : 'fa-times'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">UG / PG enabled</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"This enable the institution to have UG/PG profile in hub\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.subscriptions.tu.advanced ? 'fa-check text-navy' : 'fa-times'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">TU advanced</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.subscriptions.tu.advanced\\\">\\n\" +\n    \"                                {{InstitutionsListStatusController.institution.subscriptions.tu.startDate| date:'mediumDate'}} - {{InstitutionsListStatusController.institution.subscriptions.tu.endDate| date:'mediumDate'}}\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Subscription date is compulsory if the UG/PG profile is advanced\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.enabled.ug ? 'fa-check text-navy' : 'fa-times'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Display UG on TopUniversities.com</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Enable to display UG profile on frontend site\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.enabled.pg ? 'fa-check text-navy' : 'fa-times'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Display PG on TopUniversities.com</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Enable to display PG profile on frontend site\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                    <div class=\\\"ibox-title\\\">\\n\" +\n    \"                        <h5>TM</h5>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <ul class=\\\"list-group\\\">\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.subscriptions.tm.subscribed ? 'fa-check text-navy' : 'fa-times'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">MBA enabled</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"This enable the institution to have MBA profile in hub\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.subscriptions.tm.advanced ? 'fa-check text-navy' : 'fa-times'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">MBA advanced</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.subscriptions.tm.advanced\\\">\\n\" +\n    \"                                {{InstitutionsListStatusController.institution.subscriptions.tm.startDate| date:'mediumDate'}} - {{InstitutionsListStatusController.institution.subscriptions.tm.endDate| date:'mediumDate'}}\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Subscription date is compulsory if the MBA profile is advanced\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.enabled.tm ? 'fa-check text-navy' : 'fa-times'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">Display on TopMba.com</span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"Enable to display MBA profile on frontend site\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-4\\\" ng-class=\\\"{'modal-overlay':InstitutionsController.isSimpleDepartment(institution.typeId)}\\\">\\n\" +\n    \"            <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                <div class=\\\"ibox-title\\\">\\n\" +\n    \"                    <h5>Drupal</h5>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"ibox-content no-padding\\\">\\n\" +\n    \"                    <ul class=\\\"list-group\\\">\\n\" +\n    \"                        <li class=\\\"list-group-item\\\" ng-if=\\\"!InstitutionsListStatusController.isAdvancedProgram\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.tuRegion ? 'fa-check text-navy' : 'fa-times text-danger'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">TU Region</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.tuRegion\\\">\\n\" +\n    \"                                - {{InstitutionsListStatusController.institution.tuRegion}}\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"TU region is compulsory if profile has UG/PG subscription\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                        <li class=\\\"list-group-item\\\">\\n\" +\n    \"                            <i ng-class=\\\"InstitutionsListStatusController.institution.tmRegion ? 'fa-check text-navy' : 'fa-times text-danger'\\\" class=\\\"fa\\\"></i>\\n\" +\n    \"                            <span class=\\\"m-l-xs\\\">TM Region</span>\\n\" +\n    \"                            <span class=\\\"m-l-xs text-muted\\\"\\n\" +\n    \"                                  ng-show=\\\"InstitutionsListStatusController.institution.tmRegion\\\">\\n\" +\n    \"                                - {{InstitutionsListStatusController.institution.tmRegion}}\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <i class=\\\"fa fa-info-circle pull-right m-t-xs\\\" tooltip-placement=\\\"top\\\" uib-tooltip=\\\"TM region is compulsory if profile has MBA subscription\\\"></i>\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/list/subscriptions/institutionsListSubscriptionsView.html',\n    \"<div class=\\\"panel-body\\\" ng-controller=\\\"InstitutionsSubscriptionsController as InstitutionsSubscriptionsController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <form name=\\\"forms.subscriptionForm\\\">\\n\" +\n    \"            <div class=\\\"col-lg-6\\\">\\n\" +\n    \"                <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"InstitutionsSubscriptionsController.isProfilesLoading()\\\"></div>\\n\" +\n    \"                <div class=\\\"ibox float-e-margins\\\" ng-show=\\\"!InstitutionsSubscriptionsController.isProfilesLoading()\\\">\\n\" +\n    \"                    <div class=\\\"ibox-title\\\">\\n\" +\n    \"                        <h5>Profiles</h5>\\n\" +\n    \"                        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                            <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"ibox-content\\\">\\n\" +\n    \"                        <div class=\\\"subscription-tu\\\" ng-if=\\\"InstitutionsSubscriptionsController.allowTu()\\\">\\n\" +\n    \"                            <label class=\\\"m-t-none m-b\\\">QS Hub</label>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-group subscriptions\\\">\\n\" +\n    \"                                <switch\\n\" +\n    \"                                    class=\\\"green\\\"\\n\" +\n    \"                                    ng-model=\\\"institution.subscriptions.tu.subscribed\\\"\\n\" +\n    \"                                    ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId) || !InstitutionsSubscriptionsController.isDowngradeAllowedTu(institution.subscriptions.tu.subscribed)\\\"\\n\" +\n    \"                                    uib-popover=\\\"Disabled due to associated child institutions. Child institutions must be switched off first.\\\"\\n\" +\n    \"                                    popover-placement=\\\"bottom\\\"\\n\" +\n    \"                                    popover-enable=\\\"!InstitutionsSubscriptionsController.isDowngradeAllowedTu(institution.subscriptions.tu.subscribed)\\\"\\n\" +\n    \"                                    popover-trigger=\\\"'mouseenter'\\\">\\n\" +\n    \"                                </switch> Enable UG / PG\\n\" +\n    \"                                <a class=\\\"btn btn-default btn-xs\\\"\\n\" +\n    \"                                   ng-click=\\\"InstitutionsSubscriptionsController.handleHistoryLogClick('tu')\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-inline\\\" ng-class=\\\"{'modal-overlay-35': !institution.subscriptions.tu.subscribed}\\\">\\n\" +\n    \"                                <div class=\\\"form-group col-md-offset-1\\\">\\n\" +\n    \"                                    <switch\\n\" +\n    \"                                        class=\\\"green\\\"\\n\" +\n    \"                                        ng-model=\\\"institution.subscriptions.tu.advanced\\\"\\n\" +\n    \"                                        ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"></switch> Advanced\\n\" +\n    \"                                    <span ng-if=\\\"institution.subscriptions.tu.startDate > InstitutionsSubscriptionsController.getCurrentDate() && !institution.subscriptions.tu.advanced\\\">\\n\" +\n    \"                                        <small class=\\\"badge badge-info\\\">\\n\" +\n    \"                                            {{institution.subscriptions.tu.startDate | mDate}} - {{institution.subscriptions.tu.endDate| mDate}}\\n\" +\n    \"                                        </small>\\n\" +\n    \"                                        <small>\\n\" +\n    \"                                            <p>Profile will become advanced 1 week prior to the subscription date for editing and publishing purposes.</p>\\n\" +\n    \"                                        </small>\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span ng-if=\\\"!InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                                          class=\\\"date-picker form-control btn\\\" type=\\\"text\\\"\\n\" +\n    \"                                          date-range-picker\\n\" +\n    \"                                          options=\\\"datePickerTu.options\\\"\\n\" +\n    \"                                          ng-model=\\\"datePickerTu.date\\\"\\n\" +\n    \"                                          ng-style=\\\"{'display': institution.subscriptions.tu.advanced ? 'block' : 'none'}\\\">\\n\" +\n    \"                                        {{institution.subscriptions.tu.startDate| mDate}} - {{institution.subscriptions.tu.endDate| mDate}}\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span ng-if=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\" class=\\\"form-control\\\" disabled=\\\"disabled\\\">\\n\" +\n    \"                                        {{institution.subscriptions.tu.startDate| mDate}} - {{institution.subscriptions.tu.endDate| mDate}}\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <p>\\n\" +\n    \"                                        <i class=\\\"text-red\\\" ng-show=\\\"InstitutionsController.isTuSubscriptionDatesInvalid()\\\">\\n\" +\n    \"                                            Add the date before you save\\n\" +\n    \"                                        </i>\\n\" +\n    \"                                    </p>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-group\\\" ng-show=\\\"InstitutionsSubscriptionsController.isHistoryLogVisible('tu')\\\">\\n\" +\n    \"                                <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"InstitutionsSubscriptionsController.isSubscriptionsLogLoading('tu')\\\"></div>\\n\" +\n    \"                                <div class=\\\"history-log tu col-md-offset-1 text-muted\\\">\\n\" +\n    \"                                    <div class=\\\"history-log-content\\\" ng-show=\\\"!InstitutionsSubscriptionsController.isSubscriptionsLogLoading('tu')\\\">\\n\" +\n    \"                                        <label class=\\\"m-t-none m-b\\\">Subscription History</label>\\n\" +\n    \"                                        <div class=\\\"history-items\\\"\\n\" +\n    \"                                             ng-show=\\\"InstitutionsSubscriptionsController.getSubscriptionsLog('tu').length\\\"\\n\" +\n    \"                                             ng-repeat=\\\"item in InstitutionsSubscriptionsController.getSubscriptionsLog('tu')\\\">\\n\" +\n    \"                                            <i class=\\\"fa fa-bell\\\" aria-hidden=\\\"true\\\" ng-if=\\\"item.future\\\"></i> {{item.startDate | mDate}} - {{item.endDate | mDate}} <span class=\\\"subscription-log-submitted-by\\\" ng-if=\\\"item.createdByFullName\\\">Submitted by: {{item.createdByFullName}}</span>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                        <div class=\\\"history-items-empty\\\" ng-show=\\\"!InstitutionsSubscriptionsController.getSubscriptionsLog('tu').length\\\">\\n\" +\n    \"                                            Log is empty\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <label class=\\\"m-t-none m-b\\\">Display on topuniversities.com</label>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-group\\\">\\n\" +\n    \"                                <switch ng-model=\\\"institution.enabled.ug\\\" ng-disabled=\\\"!institution.subscriptions.tu.subscribed || InstitutionsController.isSimpleDepartment(institution.typeId)\\\" class=\\\"green\\\"></switch> Undergraduate\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-group\\\">\\n\" +\n    \"                                <switch ng-model=\\\"institution.enabled.pg\\\" ng-disabled=\\\"!institution.subscriptions.tu.subscribed || InstitutionsController.isSimpleDepartment(institution.typeId)\\\" class=\\\"green\\\"></switch> Postgraduate\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"alert alert-warning\\\" ng-show=\\\"InstitutionsController.hasTuWarning()\\\">\\n\" +\n    \"                                {{InstitutionsController.getTuWarningMessage()}}\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"\\n\" +\n    \"                        <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                        <div class=\\\"subscription-tm\\\">\\n\" +\n    \"                            <label class=\\\"m-t-none m-b\\\">QS Hub</label>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-group subscriptions\\\">\\n\" +\n    \"                                <switch class=\\\"green\\\"\\n\" +\n    \"                                        ng-model=\\\"institution.subscriptions.tm.subscribed\\\"\\n\" +\n    \"                                        ng-change=\\\"InstitutionsController.handleTmSubscribed()\\\"\\n\" +\n    \"                                        ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId) || !InstitutionsSubscriptionsController.isDowngradeAllowedTm(institution.subscriptions.tm.subscribed)\\\"\\n\" +\n    \"                                        uib-popover=\\\"Disabled due to associated child institutions. Child institutions must be switched off first.\\\"\\n\" +\n    \"                                        popover-placement=\\\"bottom\\\"\\n\" +\n    \"                                        popover-enable=\\\"!InstitutionsSubscriptionsController.isDowngradeAllowedTm(institution.subscriptions.tm.subscribed)\\\"\\n\" +\n    \"                                        popover-trigger=\\\"'mouseenter'\\\">\\n\" +\n    \"                                </switch> Enable MBA\\n\" +\n    \"                                <a class=\\\"btn btn-default btn-xs\\\"\\n\" +\n    \"                                   ng-click=\\\"InstitutionsSubscriptionsController.handleHistoryLogClick('tm')\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-inline\\\">\\n\" +\n    \"                                <div class=\\\"form-group col-md-offset-1\\\" ng-class=\\\"{'modal-overlay-35': !institution.subscriptions.tm.subscribed}\\\">\\n\" +\n    \"                                    <switch class=\\\"green\\\"\\n\" +\n    \"                                            ng-model=\\\"institution.subscriptions.tm.advanced\\\"\\n\" +\n    \"                                            ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\"></switch> Advanced\\n\" +\n    \"                                    <span ng-if=\\\"institution.subscriptions.tm.startDate > InstitutionsSubscriptionsController.getCurrentDate() && !institution.subscriptions.tm.advanced\\\">\\n\" +\n    \"                                        <small class=\\\"badge badge-info\\\">\\n\" +\n    \"                                            {{institution.subscriptions.tm.startDate | mDate}} - {{institution.subscriptions.tm.endDate| mDate}}\\n\" +\n    \"                                        </small>\\n\" +\n    \"                                        <small>\\n\" +\n    \"                                            <p>Profile will become advanced 1 week prior to the subscription date for editing and publishing purposes.</p>\\n\" +\n    \"                                        </small>\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span class=\\\"date-picker form-control btn\\\" type=\\\"text\\\"\\n\" +\n    \"                                          ng-if=\\\"!InstitutionsController.isSimpleDepartment(institution.typeId)\\\"\\n\" +\n    \"                                          date-range-picker\\n\" +\n    \"                                          options=\\\"datePickerTm.options\\\"\\n\" +\n    \"                                          ng-model=\\\"datePickerTm.date\\\"\\n\" +\n    \"                                          ng-style=\\\"{'display': institution.subscriptions.tm.advanced  ? 'block' : 'none'}\\\">\\n\" +\n    \"                                        {{institution.subscriptions.tm.startDate| mDate}} - {{institution.subscriptions.tm.endDate| mDate}}\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span ng-if=\\\"InstitutionsController.isSimpleDepartment(institution.typeId)\\\" class=\\\"form-control\\\" disabled=\\\"disabled\\\">\\n\" +\n    \"                                        {{institution.subscriptions.tm.startDate| mDate}} - {{institution.subscriptions.tm.endDate| mDate}}\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <p>\\n\" +\n    \"                                        <i class=\\\"text-red\\\" ng-show=\\\"InstitutionsController.isTmSubscriptionDatesInvalid()\\\">\\n\" +\n    \"                                            Add the date before you save\\n\" +\n    \"                                        </i>\\n\" +\n    \"                                    </p>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-group\\\" ng-show=\\\"InstitutionsSubscriptionsController.isHistoryLogVisible('tm')\\\">\\n\" +\n    \"                                <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"InstitutionsSubscriptionsController.isSubscriptionsLogLoading('tm')\\\"></div>\\n\" +\n    \"                                <div class=\\\"history-log tm col-md-offset-1 text-muted\\\">\\n\" +\n    \"                                    <div class=\\\"history-log-content\\\" ng-show=\\\"!InstitutionsSubscriptionsController.isSubscriptionsLogLoading('tm')\\\">\\n\" +\n    \"                                        <label class=\\\"m-t-none m-b\\\">Subscription History</label>\\n\" +\n    \"                                        <div class=\\\"history-items\\\"\\n\" +\n    \"                                             ng-show=\\\"InstitutionsSubscriptionsController.getSubscriptionsLog('tm').length\\\"\\n\" +\n    \"                                             ng-repeat=\\\"item in InstitutionsSubscriptionsController.getSubscriptionsLog('tm')\\\">\\n\" +\n    \"                                            <i class=\\\"fa fa-bell\\\" aria-hidden=\\\"true\\\" ng-if=\\\"item.future\\\"></i> {{item.startDate | mDate}} - {{item.endDate | mDate}} <span class=\\\"subscription-log-submitted-by\\\" ng-if=\\\"item.createdByFullName\\\">Submitted by: {{item.createdByFullName}}</span>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                        <div class=\\\"history-items-empty\\\" ng-show=\\\"!InstitutionsSubscriptionsController.getSubscriptionsLog('tm').length\\\">\\n\" +\n    \"                                            Log is empty\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div ng-show=\\\"InstitutionsController.isTopLevelInstitution(institution.typeId) || InstitutionsController.isClientDepartment(institution.typeId)\\\">\\n\" +\n    \"                                <div class=\\\"form-group\\\">\\n\" +\n    \"                                    <switch class=\\\"green\\\"\\n\" +\n    \"                                            ng-model=\\\"institution.linkedWithAdvancedPrograms\\\"\\n\" +\n    \"                                            ng-disabled=\\\"!institution.subscriptions.tm.subscribed\\\"></switch>\\n\" +\n    \"                                    Link with advanced programs subscriptions\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <label class=\\\"m-t-none m-b\\\">Display on topmba.com</label>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"form-group\\\">\\n\" +\n    \"                                <switch ng-model=\\\"institution.enabled.tm\\\" ng-disabled=\\\"!institution.subscriptions.tm.subscribed || InstitutionsController.isSimpleDepartment(institution.typeId)\\\" class=\\\"green\\\"></switch> MBA\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"alert alert-warning\\\" ng-show=\\\"InstitutionsController.hasTmWarning()\\\">\\n\" +\n    \"                                {{InstitutionsController.getTmWarningMessage()}}\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"col-lg-6\\\">\\n\" +\n    \"                <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                    <div class=\\\"ibox-title\\\">\\n\" +\n    \"                        <h5>Statistics</h5>\\n\" +\n    \"                        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                            <a ng-click=\\\"showHide()\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"ibox-content\\\">\\n\" +\n    \"                        <div ng-repeat=\\\"(key, value) in InstitutionsController.subscriptionsList\\\">\\n\" +\n    \"                            <div class=\\\"form-group\\\">\\n\" +\n    \"                                <switch\\n\" +\n    \"                                    ng-model=\\\"institution.subscriptions[value.handle].subscribed\\\"\\n\" +\n    \"                                    class=\\\"green\\\"\\n\" +\n    \"                                    ng-disabled=\\\"InstitutionsController.isSimpleDepartment(institution.typeId) ||\\n\" +\n    \"                                    InstitutionsController.isAllStatistic(value.handle)\\\">\\n\" +\n    \"                                </switch> {{value.name}}\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <a class=\\\"btn btn-primary btn-sm btn-block\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': disabledSubmit() || InstitutionsController.isSimpleDepartment(institution.typeId)}\\\"\\n\" +\n    \"                           ng-click=\\\"handleSubscriptionSubmit()\\\">Update</a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/institutions/tu-programs/institutionsTuProgramsView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-institution\\\" ng-controller=\\\"InstitutionsTuProgramsController as ProgramsController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div ng-class=\\\"isRightSidePanelActive() ? 'col-sm-8' : 'col-sm-12'\\\">\\n\" +\n    \"            <!-- SECTION -->\\n\" +\n    \"            <div class=\\\"section\\\">\\n\" +\n    \"                <!-- SECTION HEADER -->\\n\" +\n    \"                <div class=\\\"section-header\\\">\\n\" +\n    \"                    <!-- Institution switch for QS users -->\\n\" +\n    \"                    <div class=\\\"search-dropdown pull-left\\\">\\n\" +\n    \"                        <ui-select\\n\" +\n    \"                            class=\\\"search-dropdown\\\"\\n\" +\n    \"                            ng-model=\\\"selectedInstitution.selected\\\"\\n\" +\n    \"                            theme=\\\"bootstrap\\\"\\n\" +\n    \"                            ng-change=\\\"handleSearchInstitutionClick(selectedInstitution.selected)\\\">\\n\" +\n    \"                            <ui-select-match placeholder=\\\"Institution search...\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-building\\\"></i>\\n\" +\n    \"                                <span>{{$select.selected.name}}</span>\\n\" +\n    \"                            </ui-select-match>\\n\" +\n    \"                            <ui-select-choices\\n\" +\n    \"                                refresh-delay=\\\"500\\\"\\n\" +\n    \"                                refresh=\\\"ProgramsController.searchInstitution($select.search)\\\"\\n\" +\n    \"                                position=\\\"down\\\"\\n\" +\n    \"                                repeat=\\\"option in ProgramsController.institutionsDropdownList | filter: $select.search\\\">\\n\" +\n    \"                                <div class=\\\"test\\\" ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                            </ui-select-choices>\\n\" +\n    \"                        </ui-select>\\n\" +\n    \"                        <div class=\\\"spinner\\\" ng-show=\\\"ProgramsController.searchInProgress\\\" wave-spinner></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <button class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                        type=\\\"button\\\"\\n\" +\n    \"                        ng-click=\\\"handleAddProgramClick()\\\"\\n\" +\n    \"                        ng-disabled=\\\"programsTabSubmitInProgress || !isInstitutionSelected() || isRightSidePanelActive()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                        <span>Add Program</span>\\n\" +\n    \"                    </button>\\n\" +\n    \"\\n\" +\n    \"                </div><!-- /SECTION HEADER -->\\n\" +\n    \"\\n\" +\n    \"                <!-- SECTION BODY -->\\n\" +\n    \"                <div class=\\\"section-body\\\">\\n\" +\n    \"                    <div id=\\\"programsTable\\\" ng-class=\\\"{'locked': !isInstitutionSelected()}\\\">\\n\" +\n    \"                        <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isDatagridReloading || !isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                        <div ng-if=\\\"!isDatagridReloading && gridOptions\\\">\\n\" +\n    \"                            <ui-grid-info ng-if=\\\"!isRightSidePanelActive()\\\"></ui-grid-info>\\n\" +\n    \"                            <div class=\\\"grid\\\"\\n\" +\n    \"                                ui-grid=\\\"gridOptions\\\"\\n\" +\n    \"                                ui-grid-draggable-rows\\n\" +\n    \"                                ui-grid-selection\\n\" +\n    \"                                ui-grid-resize-columns\\n\" +\n    \"                                ui-grid-auto-resize>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"              </div><!-- /SECTION BODY -->\\n\" +\n    \"            </div><!-- /SECTION -->\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-sm-4\\\"\\n\" +\n    \"            ng-show=\\\"showProgramEditForm || showProgramAddForm\\\"\\n\" +\n    \"            fixed-element-while-scrolling=\\\"#programsTable\\\"\\n\" +\n    \"            ng-controller=\\\"InstitutionsTuProgramsFormController as ProgramFormController\\\">\\n\" +\n    \"            <div ng-show=\\\"showProgramEditForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/programs/tuProfileEditProgramFormView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"showProgramAddForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/programs/tuProfileAddProgramFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/login/loginFormView.html',\n    \"<div class=\\\"animated fadeInDown w-300 box-middle\\\">\\n\" +\n    \"    <form class=\\\"m-t\\\" name=\\\"forms.loginForm\\\" ng-submit=\\\"handleLogin()\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input name=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" ng-class=\\\"{'border-red': error}\\\" placeholder=\\\"Username\\\" ng-model=\\\"credentials.username\\\" ng-focus=\\\"resetErrors()\\\" ng-required=\\\"true\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" ng-class=\\\"{'border-red': error}\\\" placeholder=\\\"Password\\\" ng-model=\\\"credentials.password\\\" ng-focus=\\\"resetErrors()\\\" ng-required=\\\"true\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <button ng-disabled=\\\"loginInProgress\\\" class=\\\"btn btn-primary block full-width m-b\\\">Login</button>\\n\" +\n    \"            <div ng-show=\\\"error\\\" class=\\\"alert alert-danger\\\" ng-class=\\\"{'animated shake': animate}\\\">{{error}}</div>\\n\" +\n    \"            <div ng-show=\\\"loginInProgress\\\" wave-spinner class=\\\"text-right\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <a ng-click=\\\"toggleForgottenPasswordForm()\\\"><small>Forgot password?</small></a>\\n\" +\n    \"    </form>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/login/passwordForgotView.html',\n    \"<div class=\\\"password-box animated fadeInDown w-300 box-middle\\\">\\n\" +\n    \"    <h2 class=\\\"font-bold\\\">Forgot password</h2>\\n\" +\n    \"    <div ng-show=\\\"!showResetPasswordConfirmation\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            Enter your email address and your password will be reset and emailed to you.\\n\" +\n    \"        </p>\\n\" +\n    \"        <form name=\\\"forms.forgotPasswordForm\\\" class=\\\"m-t clearfix\\\" novalidate role=\\\"form\\\" autocomplete=\\\"off\\\">\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <input type=\\\"email\\\" name=\\\"email\\\"\\n\" +\n    \"                       class=\\\"form-control\\\"\\n\" +\n    \"                       ng-class=\\\"{'red-border': forms.forgotPasswordForm.$submitted && forms.forgotPasswordForm.$invalid}\\\"\\n\" +\n    \"                       placeholder=\\\"Email address\\\"\\n\" +\n    \"                       ng-required=\\\"true\\\"\\n\" +\n    \"                       ng-model=\\\"forgottenPassword.email\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block full-width m-b\\\" ng-class=\\\"{'disabled':resetSubmitInProgress}\\\" ng-click=\\\"handleResetPasswordSubmitClick()\\\"><i class=\\\"fa fa-envelope\\\"></i> Send new password</button>\\n\" +\n    \"                <div ng-show=\\\"forgottenPasswordError\\\" class=\\\"alert alert-danger\\\" ng-class=\\\"animate ? 'animated shake' : ''\\\">{{forgottenPasswordErrorMessage}}</div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div ng-show=\\\"showResetPasswordConfirmation\\\">\\n\" +\n    \"        <p>Thank you. An email with instructions to reset your password has been sent to you.</p>\\n\" +\n    \"    </div>\\n\" +\n    \"    <a ng-click=\\\"toggleForgottenPasswordForm()\\\">\\n\" +\n    \"        <small>Go back</small>\\n\" +\n    \"    </a>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/login/passwordResetView.html',\n    \"<div class=\\\"password-box animated fadeInDown\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-md-12\\\">\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"row\\\">\\n\" +\n    \"                    <div class=\\\"col-lg-12\\\"><h2 class=\\\"font-bold\\\">Reset password</h2></div>\\n\" +\n    \"                    <div class=\\\"col-lg-7 col-md-7 col-sm-6 col-xs-6\\\">\\n\" +\n    \"                        <form name=\\\"forms.resetPasswordForm\\\" class=\\\"m-t clearfix\\\" novalidate role=\\\"form\\\" autocomplete=\\\"off\\\">\\n\" +\n    \"                            <div class=\\\"form-group\\\">\\n\" +\n    \"                                <input ng-class=\\\"LoginController.isPasswordValid() ? 'valid' : 'invalid'\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"New password\\\" required=\\\"\\\" ng-model=\\\"password\\\" ng-change=\\\"validatePassword()\\\" autocomplete=\\\"off\\\">\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"form-group\\\">\\n\" +\n    \"                                <input ng-class=\\\"LoginController.isPasswordValid() ? 'valid' : 'invalid'\\\" type=\\\"password\\\" name=\\\"repeatPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" required=\\\"\\\" ng-model=\\\"repeatPassword\\\" ng-change=\\\"validatePassword()\\\" autocomplete=\\\"off\\\">\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"form-group\\\">\\n\" +\n    \"                                <input type=\\\"text\\\" ng-model=\\\"requestId\\\" required class=\\\"hidden\\\">\\n\" +\n    \"                                <div class=\\\"text-red\\\" ng-hide=\\\"requestId.length > 1\\\">\\n\" +\n    \"                                    <p>Invalid Link, please try to request a new reset link</p>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block full-width m-b\\\" ng-class=\\\"{'disabled':resetSubmitInProgress}\\\" ng-click=\\\"handleResetSubmitPasswordSubmitClick()\\\">Reset</button>\\n\" +\n    \"                            <a ng-click=\\\"handleForgotPasswordClick()\\\" ng-hide=\\\"requestId.length > 1\\\">\\n\" +\n    \"                                <small>Go back</small>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </form>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"col-lg-5 col-md-5 col-sm-6 col-xs-6 text-left\\\">\\n\" +\n    \"                        <div class=\\\"form-group m-t\\\">\\n\" +\n    \"                            <div class=\\\"validation-items\\\">\\n\" +\n    \"                                <div class=\\\"validation-item\\\" ng-repeat=\\\"item in validationItems\\\"><i class=\\\"fa fa-circle\\\" ng-class=\\\"item.status ? 'text-navy' : 'text-danger'\\\"></i> {{item.name}}</div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/master-password/masterPasswordView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-master-password\\\" ng-controller=\\\"MasterPasswordController as MasterPasswordController\\\">\\n\" +\n    \"    <div class=\\\"section\\\" ng-show=\\\"MasterPasswordController.masterPassword.loaded\\\">\\n\" +\n    \"        <div class=\\\"row\\\">\\n\" +\n    \"            <div class=\\\"col-md-4\\\" ng-show=\\\"!MasterPasswordController.masterPassword.enabled\\\">\\n\" +\n    \"                <div class=\\\"content-box\\\">\\n\" +\n    \"                    <h5 class=\\\"m-b-md\\\">Master password</h5>\\n\" +\n    \"                    <h2 class=\\\"text-danger\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-play fa-rotate-90\\\"></i>\\n\" +\n    \"                        <span ng-if=\\\"!MasterPasswordController.masterPassword.success\\\">Not available</span>\\n\" +\n    \"                    </h2>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div ng-show=\\\"MasterPasswordController.masterPassword.enabled\\\">\\n\" +\n    \"                <div class=\\\"col-md-3 b-r\\\">\\n\" +\n    \"                    <div class=\\\"content-box\\\">\\n\" +\n    \"                        <h3>Password expires in</h3>\\n\" +\n    \"                        <h1 class=\\\"text-navy\\\">\\n\" +\n    \"                            {{MasterPasswordController.isExpired() ? 'Password expired' : MasterPasswordController.secondsLeft() | date:'HH:mm:ss'}}\\n\" +\n    \"                        </h1>\\n\" +\n    \"                        <div class=\\\"progress progress-mini\\\">\\n\" +\n    \"                            <div class=\\\"progress-bar\\\" style=\\\"width: {{ MasterPasswordController.timeLeftPercentage() }}%;\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"col-md-9\\\">\\n\" +\n    \"                    <div class=\\\"row\\\">\\n\" +\n    \"                        <div class=\\\"col-md-6 b-r\\\" ng-show=\\\"!MasterPasswordController.isExpired()\\\">\\n\" +\n    \"                            <div class=\\\"content-box\\\">\\n\" +\n    \"                                <h3>Password valid for 24 hours</h3>\\n\" +\n    \"                                <ul class=\\\"list-group clear-list m-t\\\">\\n\" +\n    \"                                    <li class=\\\"list-group-item fist-item\\\">\\n\" +\n    \"                                        <strong>From:</strong>\\n\" +\n    \"                                        <span class=\\\"pull-right\\\">{{MasterPasswordController.masterPassword.from | date:'HH:mm:ss, dd MMMM, yyyy':'UTC'}} UK/GMT </span>\\n\" +\n    \"                                    </li>\\n\" +\n    \"                                    <li class=\\\"list-group-item\\\">\\n\" +\n    \"                                        <strong>To:</strong>\\n\" +\n    \"                                        <span class=\\\"pull-right\\\">{{MasterPasswordController.masterPassword.to | date:'HH:mm:ss, dd MMMM, yyyy':'UTC'}} UK/GMT </span>\\n\" +\n    \"                                    </li>\\n\" +\n    \"                                    <li class=\\\"list-group-item\\\">\\n\" +\n    \"                                        <strong>Current time:</strong>\\n\" +\n    \"                                        <span class=\\\"pull-right\\\">{{MasterPasswordController.getTime() | date:'HH:mm:ss, dd MMMM, yyyy':'UTC'}} UK/GMT </span>\\n\" +\n    \"                                    </li>\\n\" +\n    \"                                </ul>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"\\n\" +\n    \"                        <div class=\\\"col-md-6\\\" ng-show=\\\"!MasterPasswordController.isExpired()\\\">\\n\" +\n    \"                            <div class=\\\"content-box\\\">\\n\" +\n    \"                                <h3>Master password</h3>\\n\" +\n    \"                                <p class=\\\"text-navy\\\">\\n\" +\n    \"                                    <input class=\\\"no-borders\\\" \\n\" +\n    \"                                        ng-show=\\\"!showPassword\\\"\\n\" +\n    \"                                        type=\\\"password\\\"\\n\" +\n    \"                                        value=\\\"{{MasterPasswordController.masterPassword.password}}\\\"\\n\" +\n    \"                                        select-on-click readonly />\\n\" +\n    \"                                    <input class=\\\"no-borders\\\" \\n\" +\n    \"                                        ng-show=\\\"showPassword\\\"\\n\" +\n    \"                                        type=\\\"text\\\"\\n\" +\n    \"                                        value=\\\"{{MasterPasswordController.masterPassword.password}}\\\"\\n\" +\n    \"                                        select-on-click readonly />\\n\" +\n    \"                                </p>\\n\" +\n    \"                                <small>\\n\" +\n    \"                                    <switch class=\\\"green\\\" ng-model=\\\"showPassword\\\"></switch>\\n\" +\n    \"                                    <span>Show Password</span>\\n\" +\n    \"                                </small>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div ng-show=\\\"!MasterPasswordController.masterPassword.loaded\\\">\\n\" +\n    \"            <div wave-spinner class=\\\"text-right\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/modal/helpModal.html',\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"    <h3>{{modalOptions.headerText}}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"    <h4>While we work on help section, please use the instructions below:</h4>\\n\" +\n    \"    <p>\\n\" +\n    \"        <p>For help with TopUniversities profiles, please email\\n\" +\n    \"            <a href=\\\"mailto:tusupport@qs.com\\\">tusupport@qs.com</a>\\n\" +\n    \"        </p>\\n\" +\n    \"        <p>\\n\" +\n    \"            For help with TopMBA profiles, please email \\n\" +\n    \"            <a href=\\\"mailto:tmsupport@qs.com\\\">tmsupport@qs.com</a>\\n\" +\n    \"        </p>\\n\" +\n    \"        <p>For all other queries, please email \\n\" +\n    \"            <a href=\\\"mailto:websupport@qs.com\\\">websupport@qs.com</a>\\n\" +\n    \"        </p>\\n\" +\n    \"    </p>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-ng-click=\\\"modalOptions.close()\\\">{{modalOptions.closeButtonText}}</button>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profile/logo/profileLogoView.html',\n    \"<div ng-controller=\\\"ProfileLogoController as ProfileLogoController\\\">\\n\" +\n    \"    <div class=\\\"col-lg-12 block-spinner\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"displaySpinner\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-sm-2\\\">\\n\" +\n    \"            <div class=\\\"img-list\\\">\\n\" +\n    \"                <form name=\\\"forms.imageForm\\\"\\n\" +\n    \"                      class=\\\"clearfix dropzone image-form no-background\\\"\\n\" +\n    \"                      enctype=\\\"multipart/form-data\\\"\\n\" +\n    \"                      ng-dropzone\\n\" +\n    \"                      dropzone=\\\"ProfileLogoController.dropZoneImageInstance\\\"\\n\" +\n    \"                      dropzone-config=\\\"ProfileLogoController.imageConfig.dropzone\\\"\\n\" +\n    \"                      event-handlers=\\\"ProfileLogoController.imageConfig.eventHandlers\\\"\\n\" +\n    \"                      novalidate>\\n\" +\n    \"                    <div class=\\\"fallback\\\">\\n\" +\n    \"                        <input name=\\\"file\\\" type=\\\"file\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <span class=\\\"dz-message\\\" ng-show=\\\"uploadEnabled\\\"></span>\\n\" +\n    \"\\n\" +\n    \"                    <div ng-show=\\\"displayRemoveLink\\\" class=\\\"dropzone-previews\\\" ng-class=\\\"{dzPreview: displayRemoveLink}\\\"></div>\\n\" +\n    \"                </form>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"default-image\\\" ng-show=\\\"!displayRemoveLink\\\">\\n\" +\n    \"                <img alt=\\\"image\\\" ng-show=\\\"gravatar\\\" class=\\\"img-circle\\\" gravatar-src=\\\"user.email\\\" gravatar-size=\\\"100\\\">\\n\" +\n    \"                <img alt=\\\"image\\\" ng-show=\\\"!gravatar\\\" class=\\\"img-circle\\\" ng-src=\\\"{{user.profileLogo}}\\\" width=\\\"100px\\\" height=\\\"100px\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"profile-info-header col-sm-8\\\">\\n\" +\n    \"            <h3>{{user.fullName}}</h3>\\n\" +\n    \"            <p>{{user.position}}</p>\\n\" +\n    \"            <a class=\\\"btn btn-primary btn-sm upload-button\\\" ng-show=\\\"!displayRemoveLink\\\" ng-class=\\\"{'disabled': generalSubmitDisabled}\\\">\\n\" +\n    \"                <i class=\\\"fa fa-undo\\\"></i> Upload Image\\n\" +\n    \"            </a>\\n\" +\n    \"            <a class=\\\"btn btn-warning btn-sm\\\" ng-click=\\\"removeUploaderImage()\\\" ng-show=\\\"displayRemoveLink\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                <span>Click here to remove uploaded logo</span>\\n\" +\n    \"            </a>\\n\" +\n    \"            <a class=\\\"btn btn-primary btn-sm\\\" ng-click=\\\"handleGeneralSubmit()\\\" ng-show=\\\"displayRemoveLink\\\" ng-class=\\\"{'disabled': generalSubmitDisabled}\\\">\\n\" +\n    \"                <i class=\\\"fa fa-check-circle\\\"></i> Save\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profile/password/profilePasswordView.html',\n    \"<div class=\\\"password\\\" ng-controller=\\\"ProfilePasswordController as ProfilePasswordController\\\">\\n\" +\n    \"    <div class=\\\"ibox\\\">\\n\" +\n    \"        <div class=\\\"ibox-title\\\">\\n\" +\n    \"            <h5>{{isPasswordReset ? 'Password reset is required' : 'Password'}}</h5>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"ibox-content\\\">\\n\" +\n    \"            <form name=\\\"ProfilePasswordController.forms.password\\\" class=\\\"clearfix form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-show=\\\"!ProfilePasswordController.isPasswordFieldsVisible() && !isPasswordReset\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Password *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input name=\\\"password\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"**********\\\"\\n\" +\n    \"                               ng-focus=\\\"ProfilePasswordController.togglePasswordFields()\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div ng-show=\\\"ProfilePasswordController.isPasswordFieldsVisible() || isPasswordReset\\\">\\n\" +\n    \"                    <user-password user=\\\"user\\\"\\n\" +\n    \"                                   reset-validators=\\\"!ProfilePasswordController.isPasswordFieldsVisible() && !isPasswordReset\\\"\\n\" +\n    \"                                   config=\\\"{resetOnLogin: false, label: 'New Password', labelClass: 'control-label col-sm-12', blockClass: null}\\\"></user-password>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                               ng-class=\\\"{'disabled': ProfilePasswordController.isDisabled()}\\\"\\n\" +\n    \"                               ng-click=\\\"ProfilePasswordController.update()\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                                <span>Update</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a class=\\\"btn btn-default pull-right\\\"\\n\" +\n    \"                               ng-if=\\\"!isPasswordReset\\\"\\n\" +\n    \"                               ng-class=\\\"{'disabled': ProfilePasswordController.isDisabled()}\\\"\\n\" +\n    \"                               ng-click=\\\"ProfilePasswordController.togglePasswordFields()\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                                <span>Cancel</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profile/personalDetails/profilePersonalDetailsView.html',\n    \"<div class=\\\"personal-details\\\" ng-controller=\\\"ProfilePersonalDetailsController as ProfilePersonalDetailsController\\\">\\n\" +\n    \"    <div class=\\\"ibox\\\">\\n\" +\n    \"        <div class=\\\"ibox-title\\\">\\n\" +\n    \"            <h5>Personal Details</h5>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"ibox-content\\\">\\n\" +\n    \"            <form name=\\\"ProfilePersonalDetailsController.forms.personalDetails\\\" class=\\\"clearfix form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Title</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input name=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"ProfilePersonalDetailsController.user.title\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !ProfilePersonalDetailsController.isValidFirstName()}\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">First (Given) Name *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input type=\\\"text\\\"\\n\" +\n    \"                               class=\\\"form-control\\\"\\n\" +\n    \"                               name=\\\"firstName\\\"\\n\" +\n    \"                               ng-model=\\\"ProfilePersonalDetailsController.user.firstName\\\"\\n\" +\n    \"                               ng-required=\\\"true\\\"\\n\" +\n    \"                               ng-focus=\\\"ProfilePersonalDetailsController.setValid('firstName')\\\"\\n\" +\n    \"                               focus-delay=\\\"250\\\"\\n\" +\n    \"                               custom-popover popover-html=\\\"Add a first (given) name\\\"\\n\" +\n    \"                               popover-placement=\\\"left\\\"\\n\" +\n    \"                               popover-trigger=\\\"manual\\\"\\n\" +\n    \"                               popover-visibility=\\\"{{!ProfilePersonalDetailsController.isValidFirstName()}}\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !ProfilePersonalDetailsController.isValidLastName()}\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Last (Family) Name *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input type=\\\"text\\\"\\n\" +\n    \"                               class=\\\"form-control\\\"\\n\" +\n    \"                               name=\\\"lastName\\\"\\n\" +\n    \"                               ng-model=\\\"ProfilePersonalDetailsController.user.lastName\\\"\\n\" +\n    \"                               ng-required=\\\"true\\\"\\n\" +\n    \"\\n\" +\n    \"                               focus-delay=\\\"250\\\"\\n\" +\n    \"                               custom-popover\\n\" +\n    \"                               popover-html=\\\"Add a last (family) name\\\"\\n\" +\n    \"                               popover-placement=\\\"left\\\"\\n\" +\n    \"                               popover-trigger=\\\"manual\\\"\\n\" +\n    \"                               popover-visibility=\\\"{{!ProfilePersonalDetailsController.isValidLastName()}}\\\"\\n\" +\n    \"                               ng-focus=\\\"ProfilePersonalDetailsController.setValid('lastName')\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Position</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input name=\\\"position\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"ProfilePersonalDetailsController.user.position\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div ng-if=\\\"ProfilePersonalDetailsController.user.isClient\\\" class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Phone</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input name=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"ProfilePersonalDetailsController.user.phone\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Email *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input type=\\\"email\\\"\\n\" +\n    \"                               class=\\\"form-control\\\"\\n\" +\n    \"                               name=\\\"email\\\"\\n\" +\n    \"                               ng-model=\\\"ProfilePersonalDetailsController.user.email\\\"\\n\" +\n    \"                               ng-required=\\\"true\\\"\\n\" +\n    \"                               ng-disabled=\\\"true\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div ng-if=\\\"ProfilePersonalDetailsController.user.isClient\\\" class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Primary Institution *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input type=\\\"email\\\"\\n\" +\n    \"                               class=\\\"form-control\\\"\\n\" +\n    \"                               name=\\\"email\\\"\\n\" +\n    \"                               ng-model=\\\"ProfilePersonalDetailsController.user.primaryInstitutionName\\\"\\n\" +\n    \"                               ng-required=\\\"true\\\"\\n\" +\n    \"                               ng-disabled=\\\"true\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': ProfilePersonalDetailsController.isDisabled()}\\\"\\n\" +\n    \"                           ng-click=\\\"ProfilePersonalDetailsController.update()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>Update</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a class=\\\"btn btn-default pull-right\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': ProfilePasswordController.isDisabled()}\\\"\\n\" +\n    \"                           ng-click=\\\"ProfilePersonalDetailsController.cancel()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Cancel</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profile/profileView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-profile\\\" ng-controller=\\\"ProfileController as ProfileController\\\">\\n\" +\n    \"    <div class=\\\"row profile-logo\\\" ng-class=\\\"{'modal-overlay-35': isPasswordReset}\\\">\\n\" +\n    \"        <div class=\\\"col-sm-6\\\">\\n\" +\n    \"            <div class=\\\"panel-body\\\" ng-include src=\\\"'/scripts/components/profile/logo/profileLogoView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-sm-6\\\" ng-class=\\\"{'modal-overlay-35': isPasswordReset}\\\">\\n\" +\n    \"            <div class=\\\"panel-body profile-personal-details\\\">\\n\" +\n    \"                <div ng-include src=\\\"'/scripts/components/profile/personalDetails/profilePersonalDetailsView.html'\\\"></div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"col-sm-6\\\">\\n\" +\n    \"            <div class=\\\"panel-body profile-password\\\">\\n\" +\n    \"                <div ng-include src=\\\"'/scripts/components/profile/password/profilePasswordView.html'\\\"></div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/shared/campuses/sharedProfileCampusFormButtonsView.html',\n    \"<div class=\\\"col-sm-12\\\">\\n\" +\n    \"    <a class=\\\"btn btn-primary pull-right btn-float-fix\\\" ng-if=\\\"editMode\\\" ng-class=\\\"{'disabled':campusSubmitInProgress}\\\" ng-click=\\\"handleUpdateClick()\\\">\\n\" +\n    \"        <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"        <span>Update</span>\\n\" +\n    \"    </a>\\n\" +\n    \"    \\n\" +\n    \"    <div class=\\\"pull-right m-lr-sm btn-float-fix\\\" ng-show=\\\"displayDelete\\\">\\n\" +\n    \"        <a class=\\\"btn btn-danger btn-float-fix\\\" ng-class=\\\"{'disabled':campusSubmitInProgress}\\\" ng-click=\\\"handleDeleteClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-trash\\\"></i>\\n\" +\n    \"            <span>Delete</span>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <a class=\\\"btn btn-primary pull-right btn-float-fix\\\" ng-if=\\\"!editMode\\\" ng-class=\\\"{'disabled':campusSubmitInProgress}\\\" ng-click=\\\"handleCreateClick()\\\">\\n\" +\n    \"        <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"        <span>Save</span>\\n\" +\n    \"    </a>\\n\" +\n    \"\\n\" +\n    \"    <a class=\\\"btn btn-default pull-right btn-float-fix\\\" ng-class=\\\"{'disabled':campusSubmitInProgress}\\\" ng-click=\\\"handleCancelClick()\\\">\\n\" +\n    \"        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"        <span>Cancel</span>\\n\" +\n    \"    </a>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/shared/campuses/sharedProfileCampusFormView.html',\n    \"<div class=\\\"ibox\\\" ng-controller=\\\"SharedProfileCampusFormController as SharedProfileCampusFormController\\\">\\n\" +\n    \"    <div class=\\\"\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>{{editMode ? 'Edit' : 'Add'}} Campus</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"handleCancelClick()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner ng-show=\\\"isFetchInProgress()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <form class=\\\"form-horizontal add-campus\\\" name=\\\"forms.campusForm\\\" ng-class=\\\"{submitted:submitted}\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !SharedProfileCampusFormController.isValidName()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Campus Name *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\"\\n\" +\n    \"                           ng-model=\\\"campus.name\\\"\\n\" +\n    \"                           ng-required=\\\"true\\\"\\n\" +\n    \"                           ng-focus=\\\"SharedProfileCampusFormController.setValid('name')\\\"\\n\" +\n    \"                           focus-delay=\\\"250\\\"\\n\" +\n    \"\\n\" +\n    \"                           custom-popover\\n\" +\n    \"                           popover-html=\\\"Add a campus name\\\"\\n\" +\n    \"                           popover-placement=\\\"left\\\"\\n\" +\n    \"                           popover-trigger=\\\"manual\\\"\\n\" +\n    \"                           popover-visibility=\\\"{{!SharedProfileCampusFormController.isValidName()}}\\\"/>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !SharedProfileCampusFormController.isValidCountry()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Country *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"country\\\"\\n\" +\n    \"                        ng-model=\\\"campus.country\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        on-select=\\\"SharedProfileCampusFormController.setValid('country')\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!SharedProfileCampusFormController.isValidCountry()}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.countryCode as option in countriesList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !SharedProfileCampusFormController.isValidAddress()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Address *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"addressLine1\\\"\\n\" +\n    \"                           ng-model=\\\"campus.addressLine1\\\"\\n\" +\n    \"                           ng-required=\\\"true\\\"\\n\" +\n    \"                           ng-focus=\\\"SharedProfileCampusFormController.setValid('addressLine1')\\\"\\n\" +\n    \"                           focus-delay=\\\"250\\\"\\n\" +\n    \"\\n\" +\n    \"                           custom-popover\\n\" +\n    \"                           popover-html=\\\"Add an address\\\"\\n\" +\n    \"                           popover-placement=\\\"left\\\"\\n\" +\n    \"                           popover-trigger=\\\"manual\\\"\\n\" +\n    \"                           popover-visibility=\\\"{{!SharedProfileCampusFormController.isValidAddress()}}\\\"/>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">&nbsp;</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.addressLine2\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !SharedProfileCampusFormController.isValidCity()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Town / City *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\"\\n\" +\n    \"                           ng-model=\\\"campus.city\\\"\\n\" +\n    \"                           ng-required=\\\"true\\\"\\n\" +\n    \"                           focus-delay=\\\"250\\\"\\n\" +\n    \"\\n\" +\n    \"                           custom-popover\\n\" +\n    \"                           popover-html=\\\"Add a town/city\\\"\\n\" +\n    \"                           popover-placement=\\\"left\\\"\\n\" +\n    \"                           popover-trigger=\\\"manual\\\"\\n\" +\n    \"                           popover-visibility=\\\"{{!SharedProfileCampusFormController.isValidCity()}}\\\"/>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\" for=\\\"campusState\\\">State / Province</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input id=\\\"campusState\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.state\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\" for=\\\"campusPostCode\\\">Postcode</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input id=\\\"campusPostCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.postcode\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"row\\\">\\n\" +\n    \"                <div class=\\\"col-md-12 col-lg-6\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-5\\\" for=\\\"campusLatitude\\\">Latitude</label>\\n\" +\n    \"                        <div class=\\\"col-sm-7\\\">\\n\" +\n    \"                            <input id=\\\"campusLatitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.latitude\\\" ng-readonly=\\\"campus.autoGenerate\\\">\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"col-md-12 col-lg-6\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-5\\\" for=\\\"campusLongitude\\\">Longitude</label>\\n\" +\n    \"                        <div class=\\\"col-sm-7\\\">\\n\" +\n    \"                            <input id=\\\"campusLongitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"campus.longitude\\\" ng-readonly=\\\"campus.autoGenerate\\\">\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"separator dashed text-center\\\">\\n\" +\n    \"                <span class=\\\"text\\\">or</span>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Auto Generate</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <div class=\\\"btn-toggle\\\">\\n\" +\n    \"                        <switch ng-model=\\\"campus.autoGenerate\\\" class=\\\"green\\\"></switch>\\n\" +\n    \"                        <span class=\\\"switch-text\\\">Use address to auto generate latitude and longitude.</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\"></label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\"\\n\" +\n    \"                        ng-click=\\\"SharedProfileCampusFormController.refreshMap()\\\"\\n\" +\n    \"                        ng-disabled=\\\"refreshMapInProgress || !campus.autoGenerate\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-refresh\\\"></i>\\n\" +\n    \"                        <span>Refresh Map</span>\\n\" +\n    \"                    </button>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Display In Frontend</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <div class=\\\"btn-toggle\\\">\\n\" +\n    \"                        <switch ng-model=\\\"campus.displayInFrontEnd\\\" ng-change=\\\"SharedProfileCampusFormController.displayOnFrontEndClick()\\\" class=\\\"green\\\"></switch>\\n\" +\n    \"                        <span class=\\\"switch-text\\\">If selected, campus will be sent to profile. (Latitude and longitude is required)</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Primary Campus</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <div class=\\\"btn-toggle\\\">\\n\" +\n    \"                        <switch id=\\\"campusPrimary\\\" ng-model=\\\"campus.primary\\\" class=\\\"green\\\"></switch>\\n\" +\n    \"                        <span class=\\\"switch-text\\\">Please only check if it's the main campus</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"white-space\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-include=\\\"'/scripts/components/profiles/shared/campuses/sharedProfileCampusFormButtonsView.html'\\\"></div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <pre ng-if=\\\"SharedProfileCampusFormController.devMode\\\">{{campus|json}}</pre>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/shared/campuses/sharedProfileCampusesView.html',\n    \"<script id=\\\"ng-table/templates/campus/delete-header.html\\\" type=\\\"text/ng-template\\\">\\n\" +\n    \"    <th class=\\\"header\\\" ng-if=\\\"$column.show(this)\\\">\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" ng-class=\\\"{'disabled': isDeleteButtonDisabled()}\\\" ng-click=\\\"handleDeleteClick()\\\">\\n\" +\n    \"            <span class=\\\"glyphicon glyphicon-trash\\\"></span> {{$column.title(this)}}\\n\" +\n    \"        </button>\\n\" +\n    \"    </th>\\n\" +\n    \"</script>\\n\" +\n    \"<div ng-controller=\\\"SharedProfileCampusesController as ProfileCampusesController\\\">\\n\" +\n    \"    <!-- START CAMPUS TAB SECTION -->\\n\" +\n    \"    <div class=\\\"campus-tab\\\">\\n\" +\n    \"        <div class=\\\"tab-header\\\">\\n\" +\n    \"            <div class=\\\"btn-toggle\\\" ng-show=\\\"isQsUser\\\">\\n\" +\n    \"                <switch class=\\\"green\\\"\\n\" +\n    \"                    ng-disabled=\\\"campusesInEventsInclusionDisbaled\\\"\\n\" +\n    \"                    ng-model=\\\"sharedProfile.campusesOnEvents\\\"\\n\" +\n    \"                    ng-change=\\\"!campusesInEventsInclusionDisbaled ? handleIncludeInEventsClick() : null\\\">\\n\" +\n    \"                </switch>\\n\" +\n    \"                <span class=\\\"switch-text\\\">Include all campuses in events page</span>\\n\" +\n    \"            </div>\\n\" +\n    \"            <button class=\\\"btn btn-primary pull-right\\\" type=\\\"button\\\" ng-click=\\\"handleAddClick()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                <span>Add Campus</span>\\n\" +\n    \"            </button>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"tab-body\\\">\\n\" +\n    \"            <div id=\\\"campusesTable\\\">\\n\" +\n    \"                <div class=\\\"ibox float-e-margins scroll-horizontal hide-vertical-overflow\\\">\\n\" +\n    \"                    <table ng-table-dynamic=\\\"tableParams with columns\\\" show-filter=\\\"false\\\" class=\\\"table table-striped table-bordered table-hover pointer\\\">\\n\" +\n    \"                        <tbody ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"$data\\\">\\n\" +\n    \"                            <tr ng-repeat=\\\"campus in $data track by $index\\\" ng-class=\\\"{'active': campus.id == selectedCampusId}\\\">\\n\" +\n    \"                                <td ng-click=\\\"col.field === 'delete'? '' : handleDatagridRowClick(campus)\\\" ng-repeat=\\\"col in $columns\\\">\\n\" +\n    \"                                    <input ng-if=\\\"col.field === 'delete'\\\" ng-model=\\\"campusesToDelete[campus.id]\\\" i-checkbox type=\\\"checkbox\\\">\\n\" +\n    \"                                    <p ng-if=\\\"col.field !== 'delete'\\\">\\n\" +\n    \"                                        {{ col.field === 'createdAt' && campus[col.field] ? (campus[col.field] | date:'medium') : campus[col.field] }}\\n\" +\n    \"                                    </p>\\n\" +\n    \"                                </td>\\n\" +\n    \"                            </tr>\\n\" +\n    \"                        </tbody>\\n\" +\n    \"                    </table>\\n\" +\n    \"                    showing {{ tableParams.total() }} entries out of {{  tableParams.totalEntries }}\\n\" +\n    \"                </div>\\n\" +\n    \"                <div id=\\\"mapContainer\\\" class=\\\"visibility\\\" ng-class=\\\"displayMapBlock ? 'visibility-visible' : 'visibility-hidden'\\\">\\n\" +\n    \"                    <h1>Locations</h1>\\n\" +\n    \"                    <div id=\\\"map\\\">\\n\" +\n    \"                        <div id=\\\"campusMap\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        \\n\" +\n    \"    </div><!-- END CAMPUS TAB SECTION -->\\n\" +\n    \"</div>\\n\" +\n    \"\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/shared/general/sharedProfileGeneralHistoryView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>History Log <small>showing last {{SharedProfileController.historyLog.totalReturned}} records of {{SharedProfileController.historyLog.total}}</small></h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"handleGeneralHistoryCloseClick()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox block-institution\\\">\\n\" +\n    \"        <div class=\\\"ibox-content\\\">\\n\" +\n    \"            <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"fetchingHistory\\\"></div>\\n\" +\n    \"            <div ng-repeat=\\\"log in generalHistoryLog\\\">\\n\" +\n    \"                <ul class=\\\"list-unstyled list-history break-word\\\">\\n\" +\n    \"                    <li>\\n\" +\n    \"                        <span class=\\\"bold\\\">Modified on:</span>\\n\" +\n    \"                        <span>{{log.modifiedAt| date:'medium'}}</span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li>\\n\" +\n    \"                        <span class=\\\"bold\\\">Submitted by:</span>\\n\" +\n    \"                        <span>{{log.modifiedByFullName}}</span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li>\\n\" +\n    \"                        <span class=\\\"bold\\\">Institution Profile Name Display:</span>\\n\" +\n    \"                        <span>{{log.fullName}}</span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li>\\n\" +\n    \"                        <span class=\\\"bold\\\">Foundation Year:</span>\\n\" +\n    \"                        <span>{{log.foundationYear}}</span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li>\\n\" +\n    \"                        <span class=\\\"bold\\\">Logo:</span>\\n\" +\n    \"                        <span>{{log.smallLogo.path && log.mediumLogo.path && log.largeLogo.path ? 'Yes' : 'No'}}</span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                </ul>\\n\" +\n    \"                <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"row\\\" ng-show=\\\"SharedProfileController.handleHistoryLogVisibility()\\\">\\n\" +\n    \"                <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"SharedProfileController.fetchingMoreHistoryLog()\\\"></div>\\n\" +\n    \"                <div class=\\\"col-sm-8 col-sm-offset-2\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary btn-block\\\" ng-click=\\\"SharedProfileController.handleLoadMoreHistoryLog()\\\" ng-disabled=\\\"SharedProfileController.fetchingMoreHistoryLog()\\\">Load more</a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/shared/general/sharedProfileGeneralView.html',\n    \"<div ng-controller=\\\"SharedProfileGeneralController as SharedProfileGeneralController\\\">\\n\" +\n    \"    <div class=\\\"general-tab\\\">\\n\" +\n    \"        <form class=\\\"form-horizontal\\\" name=\\\"forms.generalForm\\\" novalidate=\\\"\\\">\\n\" +\n    \"\\n\" +\n    \"            <a class=\\\"btn btn-warning btn-history\\\" ng-class=\\\"{'disabled':generalHistoryDisabled}\\\" ng-click=\\\"handleHistoryLogClick()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                    {{SharedProfileGeneralController.logoDropzoneInstance.files[0].status === 'success' ? 'Preview Logo' : 'Upload Logo'}}\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4 col-md-10\\\">\\n\" +\n    \"                    <div class=\\\"upload\\\">\\n\" +\n    \"                        <div class=\\\"dropzone\\\"\\n\" +\n    \"                             name=\\\"forms.logosForm\\\"\\n\" +\n    \"                             enctype=\\\"multipart/form-data\\\"\\n\" +\n    \"                             ng-dropzone\\n\" +\n    \"                             dropzone=\\\"SharedProfileGeneralController.logoDropzoneInstance\\\"\\n\" +\n    \"                             dropzone-config=\\\"SharedProfileGeneralController.logoConfig.dropzone\\\"\\n\" +\n    \"                             event-handlers=\\\"SharedProfileGeneralController.logoConfig.eventHandlers\\\"\\n\" +\n    \"                             novalidate >\\n\" +\n    \"                            <div class=\\\"fallback\\\">\\n\" +\n    \"                                <input name=\\\"file\\\" type=\\\"file\\\" />\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"dz-message\\\" ng-show=\\\"uploadEnabled\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-upload\\\"></i>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"dropzone-previews\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"note\\\">\\n\" +\n    \"                        <div class=\\\"note-header\\\">\\n\" +\n    \"                            <span class=\\\"bold\\\">Note:</span>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"note-body\\\">\\n\" +\n    \"                            <p>\\n\" +\n    \"                                <span class=\\\"bold\\\">File types:</span>\\n\" +\n    \"                                <small>.jpeg &nbsp; .jpg</small>\\n\" +\n    \"                            </p>\\n\" +\n    \"                            <p>\\n\" +\n    \"                                <span class=\\\"bold\\\">Image dimensions:</span>\\n\" +\n    \"                                <small>200px x 200px</small>\\n\" +\n    \"                            </p>\\n\" +\n    \"                            <p>\\n\" +\n    \"                                <span class=\\\"bold\\\">Maximum size:</span>\\n\" +\n    \"                                <small>400 KB</small>\\n\" +\n    \"                            </p>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"note-footer\\\" ng-show=\\\"displayRemoveLink\\\">\\n\" +\n    \"                            <p>\\n\" +\n    \"                                <span> Press \\\"Update\\\" to apply changes.</span>\\n\" +\n    \"                                <span class=\\\"or bold\\\">OR</span>\\n\" +\n    \"                            </p>\\n\" +\n    \"                            <a class=\\\"btn btn-warning btn-sm\\\" ng-click=\\\"removeUploaderImage()\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                                <span>Click here to remove uploaded logo.</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-3 col-md-2\\\">Current Logo</label>\\n\" +\n    \"                <div class=\\\"col-sm-4 col-md-10\\\">\\n\" +\n    \"                    <div class=\\\"preview-group\\\">\\n\" +\n    \"                        <div class=\\\"logo-preview\\\">\\n\" +\n    \"                            <div class=\\\"logo-img\\\">\\n\" +\n    \"                                <span\\n\" +\n    \"                                    class=\\\"info\\\"\\n\" +\n    \"                                    uib-tooltip='Used in profile pages'\\n\" +\n    \"                                    tooltip-placement=\\\"top\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <img class=\\\"large-logo img-responsive\\\" alt=\\\"Large Logo\\\" ng-src=\\\"{{profile.largeLogoPath ? profile.largeLogoPath : '/images/profile/logo-large.jpg'}}\\\" ng-class=\\\"{'shadow-1px': !profile.largeLogoPath}\\\" />\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"logo-preview\\\">\\n\" +\n    \"                            <div class=\\\"logo-img\\\">\\n\" +\n    \"                                <span\\n\" +\n    \"                                    class=\\\"info\\\"\\n\" +\n    \"                                    uib-tooltip='Used in ranking widget, search results page, featured profile widget'\\n\" +\n    \"                                    tooltip-placement=\\\"top\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <img class=\\\"medium-logo img-responsive\\\" alt=\\\"Medium Logo\\\" ng-src=\\\"{{profile.mediumLogoPath ? profile.mediumLogoPath : '/images/profile/logo-medium.jpg'}}\\\" ng-class=\\\"{'shadow-1px': !profile.mediumLogoPath}\\\" />\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"logo-preview\\\">\\n\" +\n    \"                            <div class=\\\"logo-img\\\">\\n\" +\n    \"                                <span\\n\" +\n    \"                                    class=\\\"info\\\"\\n\" +\n    \"                                    uib-tooltip='Used in ranking tables'\\n\" +\n    \"                                    tooltip-placement=\\\"top\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <img class=\\\"small-logo img-responsive\\\" alt=\\\"Small Logo\\\" ng-src=\\\"{{profile.smallLogoPath ? profile.smallLogoPath : '/images/profile/logo-small.jpg'}}\\\" ng-class=\\\"{'shadow-1px': !profile.smallLogoPath}\\\" />\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                    <span>Institution Profile Name Display</span>\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        uib-tooltip='This will change the display on your institution profile only. For other changes contact tusupport@qs.com (TopUniversities) or tmsupport@qs.com (TopMBA)'\\n\" +\n    \"                        tooltip-placement=\\\"top\\\"></i>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"profile.fullName\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-3 col-md-2\\\">Foundation Year</label>\\n\" +\n    \"                <div class=\\\"col-sm-4 col-md-2\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" touch-spin=\\\"\\\" spin-options=\\\"foundationYearSpinOptions\\\" ng-model=\\\"profile.foundationYear\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div wave-spinner ng-show=\\\"generalSubmitDisabled && displaySpinner\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"clearfix\\\">\\n\" +\n    \"                <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled':generalSubmitDisabled}\\\" ng-click=\\\"handleGeneralSubmit()\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-check-circle\\\" aria-hidden=\\\"true\\\"></i>\\n\" +\n    \"                    <span>Update</span>\\n\" +\n    \"                </a>\\n\" +\n    \"                <a class=\\\"btn btn-danger pull-right\\\" ng-class=\\\"{'disabled':SharedProfileGeneralController.isRemoveLogosDisabled()}\\\" ng-click=\\\"handleClearLogosClick()\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                    <span>Remove logos</span>\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <p><pre ng-show=\\\"SharedProfileGeneralController.devMode\\\">{{profile|json}}</pre></p>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/shared/sharedProfileView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInDown\\\" ng-controller=\\\"SharedProfileController as SharedProfileController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div ng-class=\\\"isRightSidePanelActive() ? 'col-sm-8' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"tabs-container\\\" ng-class=\\\"{'modal-overlay': loadInProgress}\\\">\\n\" +\n    \"                <uib-tabset active=\\\"activeTab\\\">\\n\" +\n    \"                    <uib-tab heading=\\\"General\\\">\\n\" +\n    \"                        <div class=\\\"panel-body\\\">\\n\" +\n    \"                            <div ng-include=\\\"'/scripts/components/profiles/shared/general/sharedProfileGeneralView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                    <uib-tab heading=\\\"Campuses\\\">\\n\" +\n    \"                        <div class=\\\"panel-body\\\">\\n\" +\n    \"                            <div ng-include=\\\"'/scripts/components/profiles/shared/campuses/sharedProfileCampusesView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"                </uib-tabset>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"isGeneralTabActive() && showGeneralHistoryBlock\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include=\\\"'/scripts/components/profiles/shared/general/sharedProfileGeneralHistoryView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"isCampusesTabActive() && showCampusForm\\\" class=\\\"col-sm-4\\\" fixed-element-while-scrolling=\\\"#campusesTable\\\">\\n\" +\n    \"            <div ng-include=\\\"'/scripts/components/profiles/shared/campuses/sharedProfileCampusFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 4 ? 'selected' : 'collapsed'\\\"  ng-controller=\\\"TmMediaBrochuresSidebarController as TmMediaBrochuresSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(4)\\\">\\n\" +\n    \"        <h5>Brochures ({{getBrochureItems().length}})</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div class=\\\"addForm\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.formBrochure\\\" id=\\\"form-brochure\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please add your brochure title and link.</span><br />\\n\" +\n    \"                        <span>Drag and drop brochures from left to right to change the order.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div>\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidTitle}\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                            <span>Title *</span>\\n\" +\n    \"                            <small>110 characters</small>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\"\\n\" +\n    \"                                   name=\\\"brochure-title\\\"\\n\" +\n    \"                                   maxlength=\\\"110\\\"\\n\" +\n    \"                                   ng-required=\\\"required\\\"\\n\" +\n    \"                                   type=\\\"text\\\"\\n\" +\n    \"                                   focus-if=\\\"isHighlighted\\\"\\n\" +\n    \"                                   focus-delay=\\\"250\\\"\\n\" +\n    \"                                   ng-focus=\\\"setIsInvalidTitle(false)\\\"\\n\" +\n    \"                                   ng-model=\\\"selectedBrochure.name\\\"\\n\" +\n    \"\\n\" +\n    \"                                   custom-popover\\n\" +\n    \"                                   popover-html=\\\"Add a brochure title\\\"\\n\" +\n    \"                                   popover-placement=\\\"left\\\"\\n\" +\n    \"                                   popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                   popover-visibility=\\\"{{isInvalidTitle ? true : false}}\\\"/>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidUrl}\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                            <span>URL *</span>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\"\\n\" +\n    \"                                   name=\\\"url\\\"\\n\" +\n    \"                                   type=\\\"url\\\"\\n\" +\n    \"                                   placeholder=\\\"http://\\\"\\n\" +\n    \"                                   ng-required=\\\"required\\\"\\n\" +\n    \"                                   ng-model=\\\"selectedBrochure.url\\\"\\n\" +\n    \"                                   ng-pattern=\\\"TmMediaBrochuresSidebarController.urlPattern\\\"\\n\" +\n    \"                                   ng-focus=\\\"setIsInvalidUrl(false)\\\"\\n\" +\n    \"                                   ng-keyup=\\\"TmMediaBrochuresSidebarController.onKeyUp($event)\\\"\\n\" +\n    \"\\n\" +\n    \"                                   custom-popover\\n\" +\n    \"                                   popover-html=\\\"Add a valid brochure link\\\"\\n\" +\n    \"                                   popover-placement=\\\"left\\\"\\n\" +\n    \"                                   popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                   popover-visibility=\\\"{{isInvalidUrl ? true : false}}\\\"/>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"form-group m-b-none\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <button class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"saveBrochureForm(selectedBrochure)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                                <span>{{isEditMode() ? 'Update' : 'Save'}}</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                            <button class=\\\"btn btn-default pull-right\\\" ng-click=\\\"clearBrochureForm(selectedBrochure)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                                <span>Clear</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                            \\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresView.html',\n    \"<div ng-controller=\\\"TmMediaBrochuresController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Brochures ({{brochureItems.length}})</h3>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view upload\\\" ng-class=\\\"selectedItem().id === '' ? 'selected' : 'unselected'\\\" ng-click=\\\"selectBrochure()\\\" ng-click=\\\"selectBrochure()\\\">\\n\" +\n    \"                <div class=\\\"source-link\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"filteredBrochureItems\\\">\\n\" +\n    \"                <div class=\\\"grid-view\\\" ng-class=\\\"selectedItem().id === item.id ? 'selected' : 'unselected'\\\"\\n\" +\n    \"                     ng-click=\\\"selectBrochure(item)\\\" ng-repeat=\\\"item in filteredBrochureItems\\\">\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"preview\\\" ng-class=\\\"item.imageUrl ? '' : 'overlay' \\\">\\n\" +\n    \"                        <img ng-src=\\\"{{item.imageUrl || '/images/media/pdf-thumbnail.jpg'}}\\\"/>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"info\\\">\\n\" +\n    \"                        <div class=\\\"title\\\" item-order=\\\"{{item['orderType'][type]}}\\\">{{item.name}}</div>\\n\" +\n    \"                        <div class=\\\"types\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"actions\\\">\\n\" +\n    \"                            <a href=\\\"{{item.url}}\\\" target=\\\"_blank\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a ng-click=\\\"deleteBrochure(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 1 ? 'selected' : 'collapsed'\\\" ng-controller=\\\"TmMediaImagesSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(1)\\\">\\n\" +\n    \"        <h5>Images ({{getImageItems().length}})</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div class=\\\"addForm\\\" ng-class=\\\"getImageUploadingInProgress() ? 'modal-overlay' : '' \\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.formImage\\\" id=\\\"form-image\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\" ng-hide=\\\"selectedImage.id.length > 0\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please click on the upload sign to upload an image or drag and drop image into it.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>File must be: Less than 400KB / in jpg, jpeg format.</span><br />\\n\" +\n    \"                        <span>Images are scaled to 703 x 398 on front-end site.</span><br />\\n\" +\n    \"                        <span>Drag and drop images from left to right to change the order.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div ng-show=\\\"selectedImage.id.length > 0\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\" for=\\\"title\\\">\\n\" +\n    \"                            <span>Title</span>\\n\" +\n    \"                            <small>110 characters</small>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"title\\\" placeHolder=\\\"Add title\\\" maxlength=\\\"110\\\" type=\\\"text\\\" ng-model=\\\"selectedImage.name\\\" focus-if=\\\"isHighlighted\\\" focus-delay=\\\"250\\\" />\\n\" +\n    \"                        </div> \\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\" for=\\\"description\\\">\\n\" +\n    \"                            <span>Description</span>\\n\" +\n    \"                            <small>160 characters</small>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <textarea class=\\\"form-control\\\" name=\\\"description\\\" placeHolder=\\\"Add description\\\" id=\\\"description\\\" maxlength=\\\"160\\\" ng-model=\\\"selectedImage.description\\\"></textarea>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group  m-b-none\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <button class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': submitInProgress()}\\\" ng-click=\\\"saveImageForm(selectedImage)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                                <span>Update</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                            <button class=\\\"btn btn-default pull-right\\\" ng-class=\\\"{'disabled': submitInProgress()}\\\" ng-click=\\\"clearImageForm(selectedImage)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                                <span>{{isEditMode() ? 'Clear' : 'Cancel'}}</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesView.html',\n    \"<div ng-controller=\\\"TmMediaImagesController as TmMediaImagesController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Images ({{imageItems.length}}/48)</h3>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view upload\\\" ng-class=\\\"isSelected() ? 'selected' : 'unselected'\\\" ng-click=\\\"selectImage()\\\">\\n\" +\n    \"                <div ng-show=\\\"!isTemporary()\\\">\\n\" +\n    \"                    <form name=\\\"forms.imageForm\\\"\\n\" +\n    \"                        class=\\\"clearfix dropzone image-form\\\"\\n\" +\n    \"                        enctype=\\\"multipart/form-data\\\"\\n\" +\n    \"                        ng-dropzone dropzone=\\\"TmMediaImagesController.dropZoneImageInstance\\\"\\n\" +\n    \"                        dropzone-config=\\\"imageConfig.dropzone\\\"\\n\" +\n    \"                        event-handlers=\\\"imageConfig.eventHandlers\\\"\\n\" +\n    \"                        novalidate >\\n\" +\n    \"                        <div class=\\\"upload-image\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"fallback\\\">\\n\" +\n    \"                            <input name=\\\"file\\\" type=\\\"file\\\" />\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"dz-message\\\" ng-show=\\\"uploadEnabled\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-upload\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"dropzone-previews\\\"></div>\\n\" +\n    \"                    </form>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"preview\\\" ng-show=\\\"isTemporary()\\\">\\n\" +\n    \"                    <img ng-src=\\\"{{item.thumbnailUrl || '/images/media/media-image.png'}}\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"                \\n\" +\n    \"                <div class=\\\"info\\\" ng-show=\\\"isTemporary()\\\" ng-class=\\\"getImageUploadingInProgress() ? 'modal-overlay' : '' \\\">\\n\" +\n    \"                    <div class=\\\"title\\\" item-order=\\\"{{item['orderType'][type]}}\\\">\\n\" +\n    \"                        {{item.name}}\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"types\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"actions\\\">\\n\" +\n    \"                        <a href=\\\"{{item.url}}\\\" target=\\\"_blank\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a ng-click=\\\"deleteImage(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"imageItems\\\">\\n\" +\n    \"                <div class=\\\"grid-view\\\" ng-class=\\\"selectedItem().id === item.id ? 'selected' : 'unselected'\\\" ng-click=\\\"selectImage(item)\\\" ng-repeat=\\\"item in imageItems\\\">\\n\" +\n    \"                    <div class=\\\"preview\\\">\\n\" +\n    \"                        <img ng-src=\\\"{{item.thumbnailUrl || '/images/media/media-image.png'}}\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"info\\\">\\n\" +\n    \"                        <div class=\\\"title\\\" item-order=\\\"{{item['orderType']}}\\\">\\n\" +\n    \"                            {{item.name}}\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"types\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"actions\\\">\\n\" +\n    \"                            <a ng-click=\\\"openLightboxModal($index, item)\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                            </a\\n\" +\n    \"                            >\\n\" +\n    \"                            <a ng-click=\\\"deleteImage(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 3 ? 'selected' : 'collapsed'\\\" ng-controller=\\\"TmMediaSocialMediasSidebar as TmMediaSocialMediasSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(3)\\\">\\n\" +\n    \"        <h5>Social Media</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <p class=\\\"bold text-capitalize\\\">{{type()}}</p>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"addForm social-media-form\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.formSocialMedia\\\" id=\\\"form-social-media\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please add your</span>\\n\" +\n    \"                        <span class=\\\"text-capitalize\\\">{{type() === \\\"other\\\" ? \\\"Website\\\" : type()}}</span>\\n\" +\n    \"                        <span>link, e.g.</span>\\n\" +\n    \"                        <span class=\\\"text-nowrap\\\">{{TmMediaSocialMediasSidebarController.selectedSocialMediaUrl}}</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div ng-repeat=\\\"selectedSocialMedia in selectedSocialMedia[type()]\\\">\\n\" +\n    \"                    <div ng-show=\\\"selectedSocialMedia.display\\\">\\n\" +\n    \"                        \\n\" +\n    \"                        <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': invalidFields[$index]}\\\">\\n\" +\n    \"                            <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                                <span>URL</span>\\n\" +\n    \"                            </label>\\n\" +\n    \"                            <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                                <input class=\\\"form-control\\\"\\n\" +\n    \"                                       name=\\\"url{{$index}}\\\"\\n\" +\n    \"                                       type=\\\"url\\\"\\n\" +\n    \"                                       focus-if=\\\"(isHighlighted && $index === 0) ? true : false\\\"\\n\" +\n    \"                                       focus-delay=\\\"250\\\"\\n\" +\n    \"                                       placeholder=\\\"http://\\\"\\n\" +\n    \"                                       ng-pattern=\\\"TmMediaSocialMediasSidebarController.urlPattern\\\"\\n\" +\n    \"                                       ng-focus=\\\"resetInvalidField($index)\\\"\\n\" +\n    \"                                       ng-model=\\\"selectedSocialMedia.url\\\"\\n\" +\n    \"                                       ng-keyup=\\\"TmMediaSocialMediasSidebarController.onKeyUp($event, type(), $index)\\\"\\n\" +\n    \"\\n\" +\n    \"                                       custom-popover\\n\" +\n    \"                                       popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                       popover-visibility=\\\"{{invalidFields[$index]}}\\\"\\n\" +\n    \"                                       popover-html=\\\"Add a valid <span class='text-capitalize'>{{type() === 'other' ? 'Website' : type()}}</span> link\\\"\\n\" +\n    \"                                       popover-placement=\\\"left\\\"/>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group m-b-none\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <button class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"saveSocialMediaForm()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>{{isEditMode(type()) ? 'Update' : 'Save'}}</span>\\n\" +\n    \"                        </button>\\n\" +\n    \"                        <button class=\\\"btn btn-default pull-right\\\" ng-click=\\\"clearSocialMediaForm()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Clear</span>\\n\" +\n    \"                        </button>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaView.html',\n    \"<div ng-controller=\\\"TmMediaSocialMediasController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Social Media</h3>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view\\\" ng-repeat=\\\"(key, item) in socialMediaItems\\\" ng-class=\\\"type === key ? 'selected' : 'unselected'\\\" ng-click=\\\"selectSocialMedia(key)\\\">\\n\" +\n    \"                <div class=\\\"add-link\\\" ng-class=\\\"item.master ? 'hidden' : 'visible'\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"preview\\\" ng-class=\\\"item.master ? '' : 'overlay'\\\">\\n\" +\n    \"                    <img ng-src=\\\"/images/media/{{key}}-thumbnail.jpg\\\"/>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"info\\\">\\n\" +\n    \"                    <div class=\\\"title text-capitalize\\\">{{key}}</div>\\n\" +\n    \"                    <div class=\\\"types\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 2 ? 'selected' : 'collapsed'\\\" ng-controller=\\\"TmMediaVideosSidebarController as TmMediaVideosSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(2)\\\">\\n\" +\n    \"        <h5>Videos ({{getVideoItems().length}})</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div class=\\\"addForm\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.formVideo\\\" id=\\\"form-video\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please add a YouTube link. Shortened video links with .be extension are not allowed.</span><br />\\n\" +\n    \"                        <span>Video title & description will be retrieved from YouTube.</span><br />\\n\" +\n    \"                        <span>Drag and drop videos from left to right to change the order.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div>\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': getHasErrors()}\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\" for=\\\"url\\\">\\n\" +\n    \"                            <span>URL *</span>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input name=\\\"url\\\" id=\\\"url\\\" class=\\\"form-control\\\"\\n\" +\n    \"                                   ng-required=\\\"required\\\"\\n\" +\n    \"                                   focus-if=\\\"isHighlighted\\\"\\n\" +\n    \"                                   focus-delay=\\\"250\\\"\\n\" +\n    \"                                   type=\\\"url\\\"\\n\" +\n    \"                                   placeholder=\\\"http://\\\"\\n\" +\n    \"                                   ng-model=\\\"selectedVideo.url\\\"\\n\" +\n    \"                                   ng-pattern=\\\"youtubeUrlPattern\\\"\\n\" +\n    \"                                   ng-keyup=\\\"TmMediaVideosSidebarController.onKeyUp($event)\\\"\\n\" +\n    \"\\n\" +\n    \"                                   custom-popover\\n\" +\n    \"                                   popover-html=\\\"Add a valid YouTube link\\\"\\n\" +\n    \"                                   popover-placement=\\\"left\\\"\\n\" +\n    \"                                   popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                   popover-visibility=\\\"{{getHasErrors() ? true : false}}\\\"\\n\" +\n    \"                                   ng-focus=\\\"setHasErrors(false)\\\" />\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <button class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"saveVideoForm(selectedVideo)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                                <span>{{isEditMode() ? 'Update' : 'Save'}}</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                            <button class=\\\"btn btn-default pull-right\\\" ng-click=\\\"clearVideoForm(selectedVideo)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                                <span>Clear</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosView.html',\n    \"<div ng-controller=\\\"TmMediaVideosController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Videos ({{videoItems.length}})</h3>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view upload\\\" ng-class=\\\"selectedItem().id === '' ? 'selected' : 'unselected'\\\" ng-click=\\\"selectVideo()\\\" ng-click=\\\"selectVideo()\\\">\\n\" +\n    \"                <div class=\\\"source-link\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"filteredVideoItems\\\">\\n\" +\n    \"                <div class=\\\"grid-view\\\" ng-class=\\\"selectedItem().id === item.id ? 'selected' : 'unselected'\\\" ng-click=\\\"selectVideo(item)\\\" ng-repeat=\\\"item in filteredVideoItems\\\">\\n\" +\n    \"                    <div class=\\\"preview\\\" ng-class=\\\"item.imageUrl ? '' : 'overlay' \\\">\\n\" +\n    \"                        <img ng-src=\\\"{{item.imageUrl || '/images/media/youtube-thumbnail.jpg'}}\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"info\\\">\\n\" +\n    \"                        <div class=\\\"title\\\" item-order=\\\"{{item['orderType'][type]}}\\\">\\n\" +\n    \"                            {{item.name || 'Retrieving title...' }}\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"types\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"actions\\\">\\n\" +\n    \"                            <a href=\\\"{{item.url}}\\\" target=\\\"_blank\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a ng-click=\\\"deleteVideo(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/tmProfileMediaLinkManagerView.html',\n    \"<div class=\\\"nested-ibox\\\" ng-hide=\\\"showUpgradeForm\\\" ng-controller=\\\"TmMediaCommonSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h4>Media Manager ({{getGeneralCounter()}})</h4>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox\\\">\\n\" +\n    \"        <div class=\\\"ibox-content\\\">\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesSidebarView.html'\\\"></div>\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosSidebarView.html'\\\"></div>\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaSidebarView.html'\\\"></div>\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresSidebarView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/media/tmProfileMediaView.html',\n    \"<div ng-controller=\\\"TmProfileMediaController as TmProfileMediaController\\\">\\n\" +\n    \"    <div upgrade-banner\\n\" +\n    \"         info-block-class=\\\"TmProfileMediaController.isRightSidePanelActive() ? 'col-lg-9' : 'col-lg-10'\\\"\\n\" +\n    \"         buttons-block-class=\\\"TmProfileMediaController.isRightSidePanelActive() ? 'col-lg-3' : 'col-lg-2'\\\"\\n\" +\n    \"         basic-profile=\\\"!tmIsAdvanced ? true : false\\\"\\n\" +\n    \"         upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"         upgrade-click=\\\"TmProfileController.toggleUpgradeForm()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"    <div ng-class=\\\"tmIsAdvanced ? '': 'modal-overlay-35'\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isMediaReloading\\\"></div>\\n\" +\n    \"        <div ng-if=\\\"!isMediaReloading\\\">\\n\" +\n    \"            <div ng-show=\\\"TmProfileMediaController.isImagesTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/images/tmProfileMediaImagesView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"TmProfileMediaController.isVideosTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/videos/tmProfileMediaVideosView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"TmProfileMediaController.isSocialMediaTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/socialMedia/tmProfileMediaSocialMediaView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"TmProfileMediaController.isBrochuresTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tm/media/subtabs/brochures/tmProfileMediaBrochuresView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqHistoryLogView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>History Log <small>showing last {{TmProfileController.overviewLog.totalFiltered}} records of {{TmProfileController.overviewLog.totalMatching}}</small></h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"TmProfileController.closeHistoryLogs()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner ng-show=\\\"TmProfileController.fetchingHistoryLogsInProgress\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <p class=\\\"text-muted text-center\\\" ng-show=\\\"!TmProfileController.fetchingHistoryLogsInProgress && !TmProfileController.overviewLog.total\\\">\\n\" +\n    \"            History log is empty\\n\" +\n    \"        </p>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"!TmProfileController.fetchingHistoryLogsInProgress\\\" ng-repeat=\\\"logs in TmProfileController.overviewLog.results\\\">\\n\" +\n    \"            <ul class=\\\"list-unstyled list-history break-word\\\">\\n\" +\n    \"                <li ng-if=\\\"logs.modifiedAt\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Modified on:</span>\\n\" +\n    \"                    <span>{{logs.modifiedAt| date:'medium'}}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"logs.modifiedByFullName\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Submitted by:</span>\\n\" +\n    \"                    <span>{{logs.modifiedByFullName}}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-repeat=\\\"log in logs.faq\\\">\\n\" +\n    \"                    <div>\\n\" +\n    \"                        <span class=\\\"bold\\\">Question {{$index + 1}}/{{TmProfileController.maxFaqItems}}:</span>\\n\" +\n    \"                        <span>{{log.question | htmlToPlaintext}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div>\\n\" +\n    \"                        <span class=\\\"bold\\\">Answer {{$index + 1}}/{{TmProfileController.maxFaqItems}}:</span>\\n\" +\n    \"                        <span>{{log.answer | htmlToPlaintext}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"separator dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"row\\\" ng-show=\\\"TmProfileController.isMoreLogsAvailable()\\\">\\n\" +\n    \"            <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"TmProfileController.isLoadMoreHistoryLogsInProgress\\\"></div>\\n\" +\n    \"            <div class=\\\" col-lg-8 col-lg-offset-2\\\">\\n\" +\n    \"                <a class=\\\"btn btn-primary btn-block\\\" ng-click=\\\"TmProfileController.handleLoadMoreHistoryLogs()\\\" ng-disabled=\\\"TmProfileController.isLoadMoreHistoryLogsInProgress\\\">\\n\" +\n    \"                   Load more\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqView.html',\n    \"<div class=\\\"alert alert-info\\\">\\n\" +\n    \"    <p>\\n\" +\n    \"        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"        <span>You can add up to five FAQs. These will display in the order they are added below.</span>\\n\" +\n    \"    </p>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"tab-header\\\">\\n\" +\n    \"    <div wave-spinner ng-show=\\\"historyDisabled\\\"></div>\\n\" +\n    \"    <h3 class=\\\"heading\\\"><span class=\\\"sr-only\\\">FAQ</span></h3>\\n\" +\n    \"    <a class=\\\"btn btn-warning btn-history\\\" ng-show=\\\"!historyDisabled\\\" ng-click=\\\"TmProfileOverviewController.handleTmFaqHistoryLogClick()\\\">\\n\" +\n    \"        <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"    </a>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"tab-body\\\">\\n\" +\n    \"    <div ng-controller=\\\"TmProfileOverviewFaqController as TmProfileOverviewFaqController\\\">\\n\" +\n    \"        <form enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"            <div ng-repeat=\\\"item in TmProfileOverviewFaqController.items track by $index\\\">\\n\" +\n    \"                <div ng-if=\\\"TmProfileOverviewFaqController.isItemVisible($index)\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label>Question {{$index + 1}}/{{TmProfileOverviewFaqController.maxItems}}</label>\\n\" +\n    \"                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"e.g. How do I apply for the X program at X Business School?\\\" ng-model=\\\"faq[$index].question\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label>Answer</label>\\n\" +\n    \"                        <summernote\\n\" +\n    \"                            config=\\\"TmProfileOverviewFaqController.textEditorAdvancedOptions\\\"\\n\" +\n    \"                            ng-model=\\\"faq[$index].answer\\\"\\n\" +\n    \"                            on-init=\\\"TmProfileOverviewFaqController.handleTextEditorChanges($index, faq[$index].answer)\\\"\\n\" +\n    \"                            on-change=\\\"TmProfileOverviewFaqController.handleTextEditorChanges($index, contents)\\\"\\n\" +\n    \"                            count-word=\\\"controller.wordsCounters[$index]\\\">\\n\" +\n    \"                        </summernote>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"                        <span ng-class=\\\"{'text-red': TmProfileOverviewFaqController.isInvalidAnswer($index, faq[$index].answer)}\\\">\\n\" +\n    \"                            <span class=\\\"bold\\\">\\n\" +\n    \"                                <ng-pluralize count=\\\"TmProfileOverviewFaqController.wordsCounters[$index] || 0\\\" when=\\\"{'one': '1 word inserted','other': '{} words inserted'}\\\"></ng-pluralize>\\n\" +\n    \"                            </span>\\n\" +\n    \"                        </span>\\n\" +\n    \"                        <span class=\\\"pull-right\\\">Maximum {{TmProfileOverviewFaqController.wordsLimit}} words</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"actions m-b-md\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-danger\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': TmProfileOverviewFaqController.isRemoveDisabled($index)}\\\"\\n\" +\n    \"                           ng-click=\\\"TmProfileOverviewFaqController.handleRemoveClick($index)\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Delete FAQ</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a class=\\\"btn btn-primary\\\"\\n\" +\n    \"                           ng-show=\\\"TmProfileOverviewFaqController.showAddFaq($index)\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': programsTabSubmitInProgress || faq.length === 5}\\\"\\n\" +\n    \"                           ng-click=\\\"TmProfileOverviewFaqController.handleAddClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                            <span>Add FAQ</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"tab-footer\\\">\\n\" +\n    \"                <a class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"TmProfileOverviewFaqController.handleUpdateClick()\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                    <span>Update</span>\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/overview/overview/tmProfileOverviewAdvancedOverviewView.html',\n    \"<form name=\\\"forms.overviewAdvancedForm\\\" enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"        <div wave-spinner ng-show=\\\"historyDisabled\\\"></div>\\n\" +\n    \"        <h3 class=\\\"heading\\\">Advanced Description *</h3>\\n\" +\n    \"        <a class=\\\"btn btn-warning btn-history\\\" ng-show=\\\"!historyDisabled\\\" ng-click=\\\"TmProfileOverviewController.handleTmOverviewHistoryLogClick(true)\\\">\\n\" +\n    \"            <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': TmProfileOverviewController.isOverviewInvalid()}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TmProfileOverviewController.textEditorAdvancedOptions\\\"\\n\" +\n    \"                ng-model=\\\"tmProfile.advancedOverview\\\"\\n\" +\n    \"                on-focus=\\\"TmProfileOverviewController.setOverviewInvalid('advancedTmOverview')\\\"\\n\" +\n    \"                on-change=\\\"TmProfileOverviewController.advancedOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TmProfileOverviewController.advancedOverviewWords = countWords(tmProfile.advancedOverview)\\\"\\n\" +\n    \"                count-word=\\\"TmProfileOverviewController.advancedOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"            <span ng-class=\\\"{'text-red': TmProfileOverviewController.isAdvancedOverviewInvalid(TmProfileOverviewController.advancedOverviewWords)}\\\">\\n\" +\n    \"                <span class=\\\"bold\\\">{{TmProfileOverviewController.advancedOverviewWords}}</span>\\n\" +\n    \"                <span>words inserted</span>\\n\" +\n    \"            </span>\\n\" +\n    \"            <span class=\\\"pull-right\\\">Maximum {{TmProfileOverviewController.advancedDescriptionWordLimit}} words</span>\\n\" +\n    \"\\n\" +\n    \"            <div\\n\" +\n    \"                focus-delay=\\\"250\\\"\\n\" +\n    \"                custom-popover\\n\" +\n    \"                popover-html=\\\"Add a general description about your business school\\\"\\n\" +\n    \"                popover-placement=\\\"left\\\"\\n\" +\n    \"                popover-trigger=\\\"manual\\\"\\n\" +\n    \"                popover-visibility=\\\"{{isAdvancedTmOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</form>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div  class=\\\"row\\\">\\n\" +\n    \"    <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"        <div>\\n\" +\n    \"            <h3>University Website</h3>\\n\" +\n    \"        </div>\\n\" +\n    \"        <input type=\\\"text\\\"\\n\" +\n    \"           placeholder=\\\"http://\\\"\\n\" +\n    \"           ng-model=\\\"tmProfile.websiteUrl\\\"\\n\" +\n    \"           ng-keyup=\\\"TmProfileOverviewController.onKeyUp($event)\\\"\\n\" +\n    \"           class=\\\"form-control\\\" />\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"        <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"            <h3 class=\\\"inline\\\">Request info - Email</h3>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input type=\\\"email\\\" placeholder=\\\"Email\\\" ng-model=\\\"tmProfile.requestInfoEmail\\\" class=\\\"form-control\\\" >\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"tab-footer\\\">\\n\" +\n    \"    <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"       ng-class=\\\"{'disabled': overviewAdvancedFormSubmitInProgress}\\\"\\n\" +\n    \"       ng-click=\\\"handleOverviewAdvancedDataSubmit()\\\">\\n\" +\n    \"       <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"       <span>Update</span>\\n\" +\n    \"    </a>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/overview/overview/tmProfileOverviewBasicOverviewView.html',\n    \"<form name=\\\"forms.overviewBasicForm\\\" enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"      <div wave-spinner ng-show=\\\"historyDisabled\\\"></div>\\n\" +\n    \"      <h3 class=\\\"heading\\\">Basic Description *</h3>\\n\" +\n    \"      <a class=\\\"btn btn-warning btn-history\\\" ng-show=\\\"!historyDisabled\\\" ng-click=\\\"TmProfileOverviewController.handleTmOverviewHistoryLogClick()\\\">\\n\" +\n    \"        <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"      </a>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': TmProfileOverviewController.isOverviewInvalid()}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TmProfileOverviewController.textEditorBasicOptions\\\"\\n\" +\n    \"                ng-model=\\\"tmProfile.basicOverview\\\"\\n\" +\n    \"                on-focus=\\\"TmProfileOverviewController.setOverviewInvalid('basicTmOverview')\\\"\\n\" +\n    \"                on-change=\\\"TmProfileOverviewController.basicOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TmProfileOverviewController.basicOverviewWords = countWords(tmProfile.basicOverview)\\\"\\n\" +\n    \"                count-word=\\\"TmProfileOverviewController.basicOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"        <span ng-class=\\\"{'text-red': TmProfileOverviewController.isBasicOverviewInvalid(TmProfileOverviewController.basicOverviewWords)}\\\">\\n\" +\n    \"          <span class=\\\"bold\\\">{{TmProfileOverviewController.basicOverviewWords}}</span>\\n\" +\n    \"          <span>words inserted</span>\\n\" +\n    \"        </span>\\n\" +\n    \"        <span class=\\\"pull-right\\\">Maximum {{TmProfileOverviewController.basicDescriptionWordLimit}} words</span>\\n\" +\n    \"        \\n\" +\n    \"        <div\\n\" +\n    \"            focus-delay=\\\"250\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add a general description about your business school\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{isBasicTmOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"      </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"tab-footer\\\">\\n\" +\n    \"        <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"          ng-class=\\\"{'disabled': overviewBasicFormSubmitInProgress}\\\"\\n\" +\n    \"          ng-click=\\\"handleOverviewBasicDataSubmit()\\\">\\n\" +\n    \"          <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"          <span>Update</span>\\n\" +\n    \"        </a>\\n\" +\n    \"      </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</form>\\n\" +\n    \"\\n\" +\n    \"<div upgrade-banner\\n\" +\n    \"     info-block-class=\\\"isRightSidePanelActive() ? 'col-lg-9' : 'col-lg-10'\\\"\\n\" +\n    \"     buttons-block-class=\\\"isRightSidePanelActive() ? 'col-lg-3' : 'col-lg-2'\\\"\\n\" +\n    \"     basic-profile=\\\"true\\\"\\n\" +\n    \"     upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"     upgrade-click=\\\"TmProfileController.toggleUpgradeForm()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"locked\\\">\\n\" +\n    \"    <div  class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div>\\n\" +\n    \"                <h3>University Website</h3>\\n\" +\n    \"            </div>\\n\" +\n    \"            <input type=\\\"text\\\"\\n\" +\n    \"               disabled\\n\" +\n    \"               placeholder=\\\"http://\\\"\\n\" +\n    \"               ng-model=\\\"tmProfile.websiteUrl\\\"\\n\" +\n    \"               class=\\\"form-control\\\" />\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"                <h3 class=\\\"inline\\\">Request info - Email</h3>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <input type=\\\"email\\\"\\n\" +\n    \"                   disabled\\n\" +\n    \"                   placeholder=\\\"Email\\\"\\n\" +\n    \"                   ng-model=\\\"tmProfile.requestInfoEmail\\\"\\n\" +\n    \"                   class=\\\"form-control\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/overview/overview/tmProfileOverviewHistoryLogView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>History Log <small>showing last {{TmProfileController.overviewLog.totalFiltered}} records of {{TmProfileController.overviewLog.totalMatching}}</small></h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"TmProfileController.closeHistoryLogs()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner ng-show=\\\"TmProfileController.fetchingHistoryLogsInProgress\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <p class=\\\"text-muted text-center\\\" ng-show=\\\"!TmProfileController.fetchingHistoryLogsInProgress && !TmProfileController.overviewLog.total\\\">\\n\" +\n    \"            History log is empty\\n\" +\n    \"        </p>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"!TmProfileController.fetchingHistoryLogsInProgress\\\" ng-repeat=\\\"log in TmProfileController.overviewLog.results\\\">\\n\" +\n    \"            <ul class=\\\"list-unstyled list-history break-word\\\">\\n\" +\n    \"                <li ng-if=\\\"log.modifiedAt\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Modified on:</span>\\n\" +\n    \"                    <span>{{log.modifiedAt| date:'medium'}}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"log.modifiedByFullName\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Submitted by:</span>\\n\" +\n    \"                    <span>{{log.modifiedByFullName}}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"!log.advanced\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Basic Description:</span>\\n\" +\n    \"                    <span>{{log.basicOverview | htmlToPlaintext}}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"log.advanced\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Advanced Description:</span>\\n\" +\n    \"                    <span>{{log.advancedOverview | htmlToPlaintext}}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"log.advanced\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">University Website:</span>\\n\" +\n    \"                    <a ng-show=\\\"log.websiteUrl\\\" href=\\\"{{log.websiteUrl}}\\\" target=\\\"_blank\\\">{{log.websiteUrl}}</a>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"log.advanced\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Request info - Email:</span>\\n\" +\n    \"                    <span>{{log.requestInfoEmail}}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"separator dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"row\\\" ng-show=\\\"TmProfileController.isMoreLogsAvailable()\\\">\\n\" +\n    \"            <div wave-spinner ng-show=\\\"TmProfileController.isLoadMoreHistoryLogsInProgress\\\"></div>\\n\" +\n    \"            <div class=\\\" col-lg-8 col-lg-offset-2\\\">\\n\" +\n    \"                <a class=\\\"btn btn-primary btn-block\\\" ng-click=\\\"TmProfileController.handleLoadMoreHistoryLogs()\\\" ng-disabled=\\\"TmProfileController.isLoadMoreHistoryLogsInProgress\\\">\\n\" +\n    \"                   Load more\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/overview/tmProfileOverviewView.html',\n    \"<div ng-controller=\\\"TmProfileOverviewController as TmProfileOverviewController\\\">\\n\" +\n    \"    <div class=\\\"tabs-container\\\">\\n\" +\n    \"        <uib-tabset active=\\\"activeOverviewSubTab\\\">\\n\" +\n    \"            <uib-tab heading=\\\"Overview\\\">\\n\" +\n    \"                <div class=\\\"panel-body\\\">\\n\" +\n    \"                    <div ng-if=\\\"tmIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tm/overview/overview/tmProfileOverviewAdvancedOverviewView.html'\\\"></div>\\n\" +\n    \"                    <div ng-if=\\\"!tmIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tm/overview/overview/tmProfileOverviewBasicOverviewView.html'\\\"></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </uib-tab>\\n\" +\n    \"            <uib-tab heading=\\\"FAQ\\\">\\n\" +\n    \"                <div class=\\\"panel-body\\\">\\n\" +\n    \"                    <div ng-if=\\\"!tmIsAdvanced\\\"\\n\" +\n    \"                         upgrade-banner\\n\" +\n    \"                         info-block-class=\\\"isRightSidePanelActive() ? 'col-lg-9' : 'col-lg-10'\\\"\\n\" +\n    \"                         buttons-block-class=\\\"isRightSidePanelActive() ? 'col-lg-3' : 'col-lg-2'\\\"\\n\" +\n    \"                         basic-profile=\\\"true\\\"\\n\" +\n    \"                         upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"                         upgrade-click=\\\"TmProfileController.toggleUpgradeForm()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div ng-class=\\\"{'modal-overlay-35': !tmIsAdvanced}\\\"\\n\" +\n    \"                         ng-include src=\\\"'/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqView.html'\\\"></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </uib-tab>\\n\" +\n    \"        </uib-tabset>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/program-stats/tmProfileProgramStatsView.html',\n    \"<div class=\\\"ibox m-b-none\\\" ng-controller=\\\"TmProfileProgramStatsController as TmProfileProgramStatsController\\\">\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <ng-form name=\\\"TmProfileProgramStatsController.forms.addProgramStatsForm\\\" class=\\\"clearfix\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group row\\\" ng-if=\\\"!TmProfileProgramStatsController.isSchoolUser\\\">\\n\" +\n    \"                <div class=\\\"col-md-3\\\"><label>Program ID</label>  {{programId}}</div>\\n\" +\n    \"                <div class=\\\"col-md-2\\\"><label>Node ID</label>  {{program.nodeId}}</div>\\n\" +\n    \"                <div class=\\\"col-md-2\\\"><label>Core ID</label>  {{program.coreId}}</div>\\n\" +\n    \"                <div class=\\\"col-md-2\\\"><label>Institution Core ID</label>  {{program.institutionCoreId}}</div>\\n\" +\n    \"                <div class=\\\"col-md-3\\\"><label>Status</label>  {{program.status}}</div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">Specialisation/s</label>\\n\" +\n    \"                <div class=\\\"col-sm-10\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        multiple\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        ng-model=\\\"specialisations\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$item.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.handle as option in TmProfileProgramStatsController.specialisationsList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">Average GMAT score for your cohort</label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"avgGmat\\\"\\n\" +\n    \"                           ng-model=\\\"stats.avgGmat\\\"\\n\" +\n    \"                           ng-class=\\\"{'border-red': !TmProfileProgramStatsController.isValidAverageGmat()}\\\"\\n\" +\n    \"                           ng-focus=\\\"TmProfileProgramStatsController.setValid('avgGmat', true)\\\"\\n\" +\n    \"                           custom-popover\\n\" +\n    \"                           popover-html=\\\"Enter values between 400-800\\\"\\n\" +\n    \"                           popover-placement=\\\"bottom\\\"\\n\" +\n    \"                           popover-trigger=\\\"manual\\\"\\n\" +\n    \"                           popover-visibility=\\\"{{!TmProfileProgramStatsController.isValidAverageGmat()}}\\\"\\n\" +\n    \"                    >\\n\" +\n    \"                </div>\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">Tuition fee range for the full MBA course (USD)</label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"stats.tuitionRange\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.feesRangesList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">Start month/s</label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        multiple\\n\" +\n    \"                        limit=\\\"4\\\"\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        ng-model=\\\"stats.startDates\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$item.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.monthsList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">Length of your program in months</label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"stats.programLength\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.lengthList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">Accreditation/s</label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        multiple\\n\" +\n    \"                        limit=\\\"3\\\"\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        ng-model=\\\"stats.accreditations\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$item.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.accreditationsList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    Number of students on your program (Class size)\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"classSize\\\"\\n\" +\n    \"                       ng-model=\\\"stats.classSize\\\"\\n\" +\n    \"                       ng-class=\\\"{'border-red': !TmProfileProgramStatsController.isValidClassSize()}\\\"\\n\" +\n    \"                       ng-focus=\\\"TmProfileProgramStatsController.setValid('classSize', true)\\\"\\n\" +\n    \"                       custom-popover\\n\" +\n    \"                       popover-html=\\\"Enter values between 1-2000\\\"\\n\" +\n    \"                       popover-placement=\\\"bottom\\\"\\n\" +\n    \"                       popover-trigger=\\\"manual\\\"\\n\" +\n    \"                       popover-visibility=\\\"{{!TmProfileProgramStatsController.isValidClassSize()}}\\\"\\n\" +\n    \"                    >\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    % of International students\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"stats.percentInternationalStudents\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.percentList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    Average age of students in your cohort\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"stats.avgStudentAge\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.yearList1850 | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    % of women in your cohort\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"stats.percentWomenStudents\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.percentList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    Average years of work experience\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"stats.avgWorkExperience\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.yearList020 | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    Average salary 3 months post study (USD)\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"avgSalaryAfterGraduation\\\"\\n\" +\n    \"                       ng-model=\\\"stats.avgSalaryAfterGraduation\\\"\\n\" +\n    \"                       ng-class=\\\"{'border-red': !TmProfileProgramStatsController.isValidAverageSalaryAfterGraduation()}\\\"\\n\" +\n    \"                       ng-focus=\\\"TmProfileProgramStatsController.setValid('avgSalaryAfterGraduation', true)\\\"\\n\" +\n    \"\\n\" +\n    \"                       custom-popover\\n\" +\n    \"                       popover-html=\\\"Enter values between 0-200000\\\"\\n\" +\n    \"                       popover-placement=\\\"bottom\\\"\\n\" +\n    \"                       popover-trigger=\\\"manual\\\"\\n\" +\n    \"                       popover-visibility=\\\"{{!TmProfileProgramStatsController.isValidAverageSalaryAfterGraduation()}}\\\"\\n\" +\n    \"                    >\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    % employed 3 months post study\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"stats.percentEmploymentAfterGraduation\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        search-enabled=\\\"true\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.percentList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group row\\\">\\n\" +\n    \"                <label class=\\\"col-sm-2\\\">\\n\" +\n    \"                    Do you offer a scholarship/s?\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-4\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"scholorship\\\"\\n\" +\n    \"                        ng-model=\\\"stats.offerScholarships\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.label}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramStatsController.offerScholarshipsList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"row\\\" ng-class=\\\"{'modal-overlay': TmProfileProgramStatsController.editInProgress}\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12 text-right\\\">\\n\" +\n    \"                    <a ng-click=\\\"TmProfileProgramStatsController.handleUpdateClick()\\\" class=\\\"btn btn-sm btn-primary\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-check-circle\\\"></i> {{TmProfileProgramStatsController.getEditButtonTitle()}}\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </ng-form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/datagrid/advancedCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents no-select text-center\\\" ng-click=\\\"$event.stopPropagation()\\\">\\n\" +\n    \"    <i ng-if=\\\"row.entity.advanced\\\" class=\\\"fa fa-star-o\\\"></i>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/datagrid/rowTemplate.html',\n    \"<div grid=\\\"grid\\\">\\n\" +\n    \"    <div class=\\\"ui-grid-cell pointer\\\"\\n\" +\n    \"        ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\\\"\\n\" +\n    \"        ng-class=\\\"{ 'ui-grid-row-header-cell': col.isRowHeader, 'active': row.entity.id == grid.appScope.selectedProgramId }\\\"\\n\" +\n    \"        role=\\\"{{col.isRowHeader ? 'rowheader' : 'gridcell'}}\\\"\\n\" +\n    \"        ui-grid-cell>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/modalDowngradeProgramView.html',\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"    <h3>{{modalOptions.headerText}}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"    <div ng-show=\\\"modalOptions.showContent()\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            The advance program currently has an active subscription. The subscription will need to be turned off in order to downgrade.\\n\" +\n    \"            If you wish to continue, press the downgrade button and you will be navigated to the backend of the advance profile\\n\" +\n    \"        </p>\\n\" +\n    \"        <hr>\\n\" +\n    \"        <p>\\n\" +\n    \"            Advanced TM : from <strong>{{modalOptions.tmSubscription.startDate | date:'short'}}</strong> to <strong>{{modalOptions.tmSubscription.endDate | date:'short'}}</strong>\\n\" +\n    \"        </p>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div ng-show=\\\"!modalOptions.showContent()\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            Advanced program does not have an active subscription. Press the downgrade button to downgrade to basic now.\\n\" +\n    \"        </p>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"modalOptions.close()\\\">\\n\" +\n    \"        {{modalOptions.closeButtonText}}\\n\" +\n    \"    </button>\\n\" +\n    \"    <button class=\\\"btn btn-primary\\\" ng-click=\\\"modalOptions.completeDowngradeClick()\\\">\\n\" +\n    \"        {{modalOptions.showContent() ? 'Downgrade from Backend' : 'Downgrade now'}}\\n\" +\n    \"    </button>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileAddProgramFormCampusView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>Campuses</h5>\\n\" +\n    \"        <div id=\\\"program-campuses\\\" class=\\\"ibox-tools\\\" expand=\\\"TmProfileProgramFormController.showCampus()\\\">\\n\" +\n    \"            <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                <i class=\\\"fa fa-chevron-down\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content pace-inactive p-b-none\\\">\\n\" +\n    \"        <p ng-class=\\\"{'text-danger': !TmProfileProgramFormController.isValidCampusAssigned()}\\\">\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Add at least one campus to this program. Editing a Campus does not require Admin permissions and will also edit the Institution campus.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                <p ng-show=\\\"TmProfileProgramFormController.programCampuses.length\\\">\\n\" +\n    \"                    <strong>Campuses currently added to the program:</strong>\\n\" +\n    \"                </p>\\n\" +\n    \"                <ul class=\\\"list-unstyled list-campus\\\">\\n\" +\n    \"                    <li class=\\\"clearfix\\\"\\n\" +\n    \"                        ng-repeat=\\\"campus in TmProfileProgramFormController.programCampuses\\\"\\n\" +\n    \"                        ng-class=\\\"{'locked': TmProfileProgramFormController.isReadOnly}\\\">\\n\" +\n    \"                        <span>\\n\" +\n    \"                            {{campus.name}}\\n\" +\n    \"                            <i class=\\\"fa fa-star\\\"\\n\" +\n    \"                               uib-tooltip='Program primary campus'\\n\" +\n    \"                               tooltip-placement=\\\"top\\\"\\n\" +\n    \"                               ng-show=\\\"campus.id === TmProfileProgramFormController.program.primaryCampusId\\\">\\n\" +\n    \"                            </i>\\n\" +\n    \"                        </span>\\n\" +\n    \"                        <a class=\\\"btn btn-sm btn-outline btn-default pull-right\\\"\\n\" +\n    \"                            ng-click=\\\"TmProfileProgramFormController.editCampus($index)\\\">\\n\" +\n    \"                            <span>Edit</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </li>\\n\" +\n    \"                </ul>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                <ui-select\\n\" +\n    \"                    name=\\\"campus\\\"\\n\" +\n    \"                    multiple\\n\" +\n    \"                    close-on-select=\\\"false\\\"\\n\" +\n    \"                    ng-required=\\\"true\\\"\\n\" +\n    \"                    ng-model=\\\"TmProfileProgramFormController.newProgram.campus\\\"\\n\" +\n    \"                    theme=\\\"bootstrap\\\"\\n\" +\n    \"                    search-enabled=\\\"true\\\"\\n\" +\n    \"                    >\\n\" +\n    \"                    <ui-select-match placeholder=\\\"Select an Option\\\">{{$item.label}}</ui-select-match>\\n\" +\n    \"                    <ui-select-choices \\n\" +\n    \"                        refresh-delay=\\\"1000\\\"\\n\" +\n    \"                        repeat=\\\"option.value as option in TmProfileProgramFormController.campusesList | filter:$select.search\\\">\\n\" +\n    \"                        <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                    </ui-select-choices>\\n\" +\n    \"                    <ui-select-no-choice>\\n\" +\n    \"                        Not found\\n\" +\n    \"                    </ui-select-no-choice>\\n\" +\n    \"                </ui-select>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"separator dashed text-center\\\">\\n\" +\n    \"            <span class=\\\"text\\\">OR</span>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                <a class=\\\"btn btn-default btn-block\\\"\\n\" +\n    \"                    ng-class=\\\"{'locked': TmProfileProgramFormController.campusSubmitInProgress}\\\"\\n\" +\n    \"                    ng-click=\\\"TmProfileProgramFormController.handleAddCampusClick()\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                    <span>Create new campus</span>\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"TmProfileProgramFormController.isCampusFormVisible()\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileProgramsAddCampusFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"TmProfileProgramFormController.isEditCampusFormVisible()\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileProgramsEditCampusFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileAddProgramFormDetailsView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>Program Details</h5>\\n\" +\n    \"        <div id=\\\"program-details\\\" class=\\\"ibox-tools\\\" expand=\\\"TmProfileProgramFormController.showDetails()\\\">\\n\" +\n    \"            <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <ng-form name=\\\"TmProfileProgramFormController.forms.addProgramDetailsForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidName()}\\\">\\n\" +\n    \"                 <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                  <span>Program Name *</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                      name=\\\"name\\\"\\n\" +\n    \"                      placeholder=\\\"e.g. ESSEC Mannheim Executive MBA\\\"\\n\" +\n    \"                      ng-model=\\\"TmProfileProgramFormController.newProgram.name\\\"\\n\" +\n    \"                      class=\\\"form-control\\\"\\n\" +\n    \"                      ng-required=\\\"true\\\"\\n\" +\n    \"                      ng-class=\\\"isInvalidName ? 'border-red' : ''\\\"\\n\" +\n    \"                      ng-focus=\\\"TmProfileProgramFormController.setValid('name')\\\"\\n\" +\n    \"                      focus-delay=\\\"250\\\"\\n\" +\n    \"                      custom-popover popover-html=\\\"Add a program title\\\"\\n\" +\n    \"                      popover-placement=\\\"left\\\"\\n\" +\n    \"                      popover-trigger=\\\"manual\\\"\\n\" +\n    \"                      popover-visibility=\\\"{{!TmProfileProgramFormController.isValidName()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidType()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                  <span>Program Type *</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"type\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.type\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidType()}}\\\"\\n\" +\n    \"                        on-select=\\\"TmProfileProgramFormController.setValid('type')\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.typesList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group row\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidDescription()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                  <span>Program Description *</span>\\n\" +\n    \"                  <small class=\\\"pull-left\\\">Max {{TmProfileProgramFormController.programDescriptionWordLimit}} words</small>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                  <textarea class=\\\"form-control no-resize\\\" rows=\\\"7\\\" cols=\\\"50\\\"\\n\" +\n    \"                        name=\\\"description\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        placeholder=\\\"e.g. The program X provides a unique opportunity to study and live in…\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.description\\\"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('description')\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Add a program description\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidDescription()}}\\\">\\n\" +\n    \"                    </textarea>\\n\" +\n    \"                    <p class=\\\"text-right\\\" ng-show=\\\"newProgram.description.length >= programDescriptionWordLimit\\\">\\n\" +\n    \"                        <span class=\\\"text-danger\\\">Reached maximum words limit</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-show=\\\"TmProfileProgramFormController.isSchoolUser\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                  <span>Comments</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                  <textarea class=\\\"form-control no-resize\\\" rows=\\\"4\\\" cols=\\\"50\\\"\\n\" +\n    \"                    name=\\\"comments\\\"\\n\" +\n    \"                    placeholder=\\\"Please add comments supporting your request\\\"\\n\" +\n    \"                    ng-model=\\\"TmProfileProgramFormController.newProgram.comments\\\">\\n\" +\n    \"                  </textarea>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </ng-form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileAddProgramFormStatisticsView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>Program Statistics</h5>\\n\" +\n    \"        <div id=\\\"program-stats\\\" class=\\\"ibox-tools\\\" expand=\\\"TmProfileProgramFormController.showStatistics()\\\">\\n\" +\n    \"            <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                <i class=\\\"fa fa-chevron-down\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content pace-inactive\\\">\\n\" +\n    \"        <ng-form name=\\\"TmProfileProgramFormController.forms.addProgramStatsForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Specialisation/s</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                            multiple\\n\" +\n    \"                            close-on-select=\\\"false\\\"\\n\" +\n    \"                            ng-model=\\\"TmProfileProgramFormController.newProgram.specialisations\\\"\\n\" +\n    \"                            theme=\\\"bootstrap\\\"\\n\" +\n    \"                            >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$item.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.handle as option in TmProfileProgramFormController.specialisationsList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidAverageGmat()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Average GMAT score for your cohort</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        name=\\\"avgGmat\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.avgGmat\\\"\\n\" +\n    \"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('avgGmat', true)\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Enter values between 400-800\\\"\\n\" +\n    \"                        popover-placement=\\\"bottom\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidAverageGmat()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Tuition fee range for the full MBA course (USD)</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        placeholder=\\\"Select an option\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.tuitionRange\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">\\n\" +\n    \"                            <span>{{$select.selected.label}}</span>\\n\" +\n    \"                        </ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.feesRangesList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Start month/s</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        multiple\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        limit= \\\"4\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.startDates\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$item.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.monthsList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Length of your program in months</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        placeholder=\\\"Select an option\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.programLength\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.lengthList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Accreditation/s</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        multiple\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        limit= \\\"3\\\",\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.accreditations\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$item.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.accreditationsList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidClassSize()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Number of students on your program (Class size)</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        name=\\\"classSize\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.classSize\\\"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('classSize', true)\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Enter values between 1-2000\\\"\\n\" +\n    \"                        popover-placement=\\\"bottom\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidClassSize()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>% of International students</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.percentInternationalStudents\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.percentList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Average age of students in your cohort</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.avgStudentAge\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.yearList1850 | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>% of women in your cohort</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        placeholder=\\\"Select an option\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.percentWomenStudents\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.percentList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Average years of work experience</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.avgWorkExperience\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.yearList020 | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Do you offer a scholarship/s?</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"scholorship\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.offerScholarships\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.offerScholarshipsList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>Average salary 3 months post study (USD)</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <input type=\\\"number\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        name=\\\"avgSalaryAfterGraduation\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.avgSalaryAfterGraduation\\\"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('avgSalaryAfterGraduation', true)\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Enter values between 0-200000\\\"\\n\" +\n    \"                        popover-placement=\\\"bottom\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <span>% employed 3 months post study</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.newProgram.stats.percentEmploymentAfterGraduation\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.percentList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </ng-form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileAddProgramFormView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>{{TmProfileProgramFormController.isSchoolUser ? 'Request to Add a Program' : 'Add Program'}}</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"TmProfileProgramFormController.closeAddProgramForm()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">        \\n\" +\n    \"        <form class=\\\"form-horizontal\\\" name=\\\"forms.addProgramForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormDetailsView.html'\\\"></div>\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormStatisticsView.html'\\\"></div>\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormCampusView.html'\\\"></div>\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'locked': TmProfileProgramFormController.isProgramSubmitDisabled()}\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                       ng-click=\\\"TmProfileProgramFormController.handleProgramCreateClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                        <span>{{TmProfileProgramFormController.isSchoolUser ? 'Send' : 'Save'}}</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TmProfileProgramFormController.closeAddProgramForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Cancel</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileEditProgramFormCampusView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>Campuses</h5>\\n\" +\n    \"        <div id=\\\"program-campuses\\\" class=\\\"ibox-tools\\\" expand=\\\"TmProfileProgramFormController.showCampus()\\\">\\n\" +\n    \"            <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                <i class=\\\"fa fa-chevron-down\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content pace-inactive p-b-none\\\">\\n\" +\n    \"        <p ng-class=\\\"{'text-danger': !TmProfileProgramFormController.isValidCampusAssigned()}\\\">\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Add at least one campus to this program. Editing a Campus does not require Admin permissions and will also edit the Institution campus.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"\\n\" +\n    \"        <div ng-class=\\\"{'modal-overlay-35': TmProfileProgramFormController.campusSubmitInProgress || TmProfileProgramFormController.isReadOnly}\\\">\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <p ng-show=\\\"TmProfileProgramFormController.programCampuses.length\\\">\\n\" +\n    \"                        <strong>Campuses currently added to the program:</strong>\\n\" +\n    \"                    </p>\\n\" +\n    \"                    <ul class=\\\"list-unstyled list-campus\\\">\\n\" +\n    \"                        <li class=\\\"clearfix\\\"\\n\" +\n    \"                            ng-repeat=\\\"campus in TmProfileProgramFormController.programCampuses\\\">\\n\" +\n    \"                        <span>\\n\" +\n    \"                            {{campus.name}}\\n\" +\n    \"                            <i class=\\\"fa fa-star\\\"\\n\" +\n    \"                               uib-tooltip='Program primary campus'\\n\" +\n    \"                               tooltip-placement=\\\"top\\\"\\n\" +\n    \"                               ng-show=\\\"campus.id === TmProfileProgramFormController.program.primaryCampusId\\\">\\n\" +\n    \"                            </i>\\n\" +\n    \"                        </span>\\n\" +\n    \"                            <a class=\\\"btn btn-sm btn-outline btn-default pull-right\\\"\\n\" +\n    \"                               ng-click=\\\"TmProfileProgramFormController.editCampus($index)\\\">\\n\" +\n    \"                                <span>Edit</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"campus\\\"\\n\" +\n    \"                        multiple\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.campus\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">\\n\" +\n    \"                            <span>{{$item.label}}</span>\\n\" +\n    \"                        </ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                            position=\\\"down\\\"\\n\" +\n    \"                            name=\\\"campus\\\"\\n\" +\n    \"                            repeat=\\\"option.value as option in TmProfileProgramFormController.campusesList | filter: $select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"separator dashed text-center\\\">\\n\" +\n    \"                <span class=\\\"text\\\">OR</span>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-default btn-block\\\"\\n\" +\n    \"                       ng-click=\\\"TmProfileProgramFormController.handleAddCampusClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                        <span>Create new campus</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"TmProfileProgramFormController.isCampusFormVisible()\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileProgramsAddCampusFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"TmProfileProgramFormController.isEditCampusFormVisible()\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileProgramsEditCampusFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileEditProgramFormDetailsView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>Program Details</h5>\\n\" +\n    \"        <div id=\\\"program-details\\\" class=\\\"ibox-tools\\\" expand=\\\"TmProfileProgramFormController.showDetails()\\\">\\n\" +\n    \"            <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <ng-form name=\\\"TmProfileProgramFormController.forms.editProgramDetailsForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidName()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5  col-md-4\\\">\\n\" +\n    \"                    <i ng-if=\\\"TmProfileProgramFormController.programHistory.name\\\"\\n\" +\n    \"                       class=\\\"fa fa-info-circle cursor-default\\\"\\n\" +\n    \"                       uib-tooltip='{{TmProfileProgramFormController.programHistory.name}}'\\n\" +\n    \"                       tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Program Name *</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                       name=\\\"name\\\"\\n\" +\n    \"                       class=\\\"form-control\\\"\\n\" +\n    \"                       placeholder=\\\"e.g. ESSEC Mannheim Executive MBA\\\"\\n\" +\n    \"                       ng-model=\\\"TmProfileProgramFormController.program.name\\\"\\n\" +\n    \"                       ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                       ng-required=\\\"true\\\"\\n\" +\n    \"                       ng-class=\\\"isInvalidName ? 'border-red' : ''\\\"\\n\" +\n    \"                       ng-focus=\\\"TmProfileProgramFormController.setValid('name')\\\"\\n\" +\n    \"                       focus-delay=\\\"250\\\"\\n\" +\n    \"                       custom-popover popover-html=\\\"Add a program title\\\"\\n\" +\n    \"                       popover-placement=\\\"left\\\"\\n\" +\n    \"                       popover-trigger=\\\"manual\\\"\\n\" +\n    \"                       popover-visibility=\\\"{{!TmProfileProgramFormController.isValidName()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidType()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                    <i ng-if=\\\"TmProfileProgramFormController.programHistory.type\\\"\\n\" +\n    \"                       class=\\\"fa fa-info-circle cursor-default\\\"\\n\" +\n    \"                       uib-tooltip='{{TmProfileProgramFormController.programHistory.type}}'\\n\" +\n    \"                       tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Program Type *</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"type\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.type\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidType()}}\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.typesList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidDescription()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                    <i ng-if=\\\"TmProfileProgramFormController.programHistory.description\\\"\\n\" +\n    \"                       class=\\\"fa fa-info-circle cursor-default\\\"\\n\" +\n    \"                       uib-tooltip='{{TmProfileProgramFormController.programHistory.description}}'\\n\" +\n    \"                       tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Program Description *</span>\\n\" +\n    \"                    <small>Max {{TmProfileProgramFormController.programDescriptionWordLimit}} words</small>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                  <textarea class=\\\"form-control no-resize\\\" rows=\\\"7\\\" cols=\\\"50\\\"\\n\" +\n    \"                        name=\\\"description\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        placeholder=\\\"e.g. The program X provides a unique opportunity to study and live in…\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.description\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('description')\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Add a program description\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidDescription()}}\\\">\\n\" +\n    \"                    </textarea>\\n\" +\n    \"                  <p class=\\\"text-right\\\" ng-show=\\\"program.description.length >= programDescriptionWordLimit\\\">\\n\" +\n    \"                    <span class=\\\"text-danger\\\">Reached maximum words limit</span>\\n\" +\n    \"                  </p>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-show=\\\"(TmProfileProgramFormController.isSchoolUser) || (TmProfileProgramFormController.isDirectory)\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle cursor-default\\\"\\n\" +\n    \"                      ng-if=\\\"TmProfileProgramFormController.programHistory.comments\\\"\\n\" +\n    \"                      uib-tooltip='{{TmProfileProgramFormController.programHistory.comments}}'\\n\" +\n    \"                      tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Comments</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                  <textarea class=\\\"form-control no-resize\\\" rows=\\\"4\\\" cols=\\\"50\\\"\\n\" +\n    \"                        placeholder=\\\"Please add comments supporting your request\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.comments\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly || TmProfileProgramFormController.isDirectory\\\">\\n\" +\n    \"                    </textarea>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </ng-form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileEditProgramFormStatisticsView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>Program Statistics</h5>\\n\" +\n    \"        <div id=\\\"program-stats\\\" class=\\\"ibox-tools\\\" expand=\\\"TmProfileProgramFormController.showStatistics()\\\">\\n\" +\n    \"            <a ng-click=\\\"showHide()\\\" class=\\\"collapse-link\\\">\\n\" +\n    \"                <i class=\\\"fa fa-chevron-down\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content pace-inactive\\\">\\n\" +\n    \"        <ng-form name=\\\"TmProfileProgramFormController.forms.editProgramStatsForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.specialisations\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.specialisations}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Specialisation/s</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                    ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                    multiple\\n\" +\n    \"                    close-on-select=\\\"false\\\"\\n\" +\n    \"                    ng-model=\\\"TmProfileProgramFormController.program.specialisations\\\"\\n\" +\n    \"                    theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$item.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices refresh-delay=\\\"1000\\\"\\n\" +\n    \"                                        repeat=\\\"option.handle as option in TmProfileProgramFormController.specialisationsList | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidAverageGmat()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.avgGmat\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.avgGmat}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Average GMAT score for your cohort</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        name=\\\"avgGmat\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.avgGmat\\\"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('avgGmat', true)\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Enter values between 400-800\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidAverageGmat()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.tuitionRange\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.tuitionRange}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Tuition fee range for the full MBA course (USD)</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                    ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                    ng-model=\\\"TmProfileProgramFormController.program.stats.tuitionRange\\\"\\n\" +\n    \"                    theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.feesRangesList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.startDates\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.startDates}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Start month/s</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        multiple\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        limit= \\\"4\\\",\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.startDates\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$item.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.monthsList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.programLength\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.programLength}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Length of your program in months</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.programLength\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.lengthList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.accreditations\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.accreditations}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Accreditation/s</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        multiple\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        close-on-select=\\\"false\\\"\\n\" +\n    \"                        limit=\\\"3\\\",\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.accreditations\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$item.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.accreditationsList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidClassSize()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.classSize\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.classSize}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Number of students on your program (Class size)</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        name=\\\"classSize\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.classSize\\\"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('classSize', true)\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Enter values between 1-2000\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidClassSize()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.percentInternationalStudents\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.percentInternationalStudents}} %'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>% of International students</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                    ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                    ng-model=\\\"TmProfileProgramFormController.program.stats.percentInternationalStudents\\\"\\n\" +\n    \"                    theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.percentList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.avgStudentAge\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.avgStudentAge}} years'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Average age of students in your cohort</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.avgStudentAge\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.yearList1850 | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.percentWomenStudents\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.percentWomenStudents}} %'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>% of women in your cohort</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.percentWomenStudents\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.percentList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.avgWorkExperience\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.avgWorkExperience}} years'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Average years of work experience</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.avgWorkExperience\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.yearList020 | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"!TmProfileProgramFormController.isUndefined(TmProfileProgramFormController.programHistory.stats.offerScholarships)\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.offerScholarships ? \\\"Yes\\\" : \\\"No\\\"}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Do you offer a scholarship/s?</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.offerScholarships\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.offerScholarshipsList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.avgSalaryAfterGraduation\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.avgSalaryAfterGraduation}}'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>Average salary 3 months post study (USD)</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <input type=\\\"number\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        name=\\\"avgSalaryAfterGraduation\\\"\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.avgSalaryAfterGraduation\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        ng-focus=\\\"TmProfileProgramFormController.setValid('avgSalaryAfterGraduation', true)\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Enter values between 0-200000\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!TmProfileProgramFormController.isValidAverageSalaryAfterGraduation()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-5\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"\\n\" +\n    \"                        ng-if=\\\"TmProfileProgramFormController.programHistory.stats.percentEmploymentAfterGraduation\\\"\\n\" +\n    \"                        uib-tooltip='{{TmProfileProgramFormController.programHistory.stats.percentEmploymentAfterGraduation}} %'\\n\" +\n    \"                        tooltip-placement=\\\"left\\\">\\n\" +\n    \"                    </i>\\n\" +\n    \"                    <span>% employed 3 months post study</span>\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-7\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"TmProfileProgramFormController.program.stats.percentEmploymentAfterGraduation\\\"\\n\" +\n    \"                        ng-disabled=\\\"TmProfileProgramFormController.isReadOnly\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.label}}</span></ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.value as option in TmProfileProgramFormController.percentList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.label | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"        </ng-form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileEditProgramFormView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5 ng-show=\\\"showEdiProgramForm\\\">{{TmProfileProgramFormController.getEditTitle()}}</h5>\\n\" +\n    \"        <h5 ng-show=\\\"showSubscriptionForm\\\">{{TmProfileProgramFormController.getSubscriptionTitle()}}</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a ng-click=\\\"TmProfileProgramFormController.closeEditProgramForm()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div ng-show=\\\"showEdiProgramForm\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.editProgramForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"                <div class=\\\"alert alert-info\\\" ng-if=\\\"TmProfileProgramFormController.allowDowngrade()\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                    <span>Login as Program to edit Advanced Program</span>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\"\\n\" +\n    \"                    ng-if=\\\"TmProfileProgramFormController.allowUpgrade()\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-warning btn-block\\\"\\n\" +\n    \"                            ng-click=\\\"TmProfileProgramFormController.handleUpgradeClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-star\\\"></i>\\n\" +\n    \"                            <span>{{TmProfileProgramFormController.getUpgradeButtonTitle()}}</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormDetailsView.html'\\\"></div>\\n\" +\n    \"                <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormStatisticsView.html'\\\"></div>\\n\" +\n    \"                <div ng-show=\\\"!TmProfileProgramFormController.isProgramAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormCampusView.html'\\\"></div>\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'locked': TmProfileProgramFormController.isProgramSubmitDisabled()}\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-primary pull-right\\\" ng-if=\\\"TmProfileProgramFormController.allowUpdate()\\\" ng-click=\\\"TmProfileProgramFormController.handleProgramEditClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>{{TmProfileProgramFormController.getEditButtonTitle()}}</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"\\n\" +\n    \"                        <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TmProfileProgramFormController.closeEditProgramForm()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Cancel</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-if=\\\"TmProfileProgramFormController.allowLoginAs()\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-default btn-block\\\"\\n\" +\n    \"                            ng-class=\\\"{'disabled': !TmProfileProgramFormController.isAllowedToLogin()}\\\"\\n\" +\n    \"                            ng-click=\\\"TmProfileProgramFormController.isAllowedToLogin() && TmProfileProgramFormController.handleLoginAsClick()\\\"\\n\" +\n    \"\\n\" +\n    \"                            uib-tooltip='Login has been disabled due to permission. Contact {{TmProfileProgramFormController.tmSupportEmail}}'\\n\" +\n    \"                            tooltip-enable=\\\"!TmProfileProgramFormController.isAllowedToLogin()\\\"\\n\" +\n    \"                            tooltip-placement=\\\"left\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-sign-in\\\"></i>\\n\" +\n    \"                            <span>Login as Program</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\"\\n\" +\n    \"                   ng-if=\\\"TmProfileProgramFormController.allowDowngrade()\\\"\\n\" +\n    \"                    ng-class=\\\"{'locked': TmProfileProgramFormController.downgradeInProgress}\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-danger btn-block\\\"\\n\" +\n    \"                            ng-click=\\\"TmProfileProgramFormController.handleDowngradeClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-arrow-circle-o-down\\\"></i>\\n\" +\n    \"                            <span>Downgrade to simple program</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\"\\n\" +\n    \"                    ng-if=\\\"TmProfileProgramFormController.allowDelete()\\\"\\n\" +\n    \"                    ng-class=\\\"{'locked': TmProfileProgramFormController.deleteInProgress}\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <a class=\\\"btn btn-danger btn-block\\\"\\n\" +\n    \"                                ng-click=\\\"TmProfileProgramFormController.handleDeleteClick()\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-arrow-circle-o-down\\\"></i>\\n\" +\n    \"                                <span>{{TmProfileProgramFormController.getDeleteButtonTitle()}}</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"showSubscriptionForm\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileProgramAddSubscriptionView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileProgramAddSubscriptionView.html',\n    \"<form class=\\\"form-horizontal\\\" name=\\\"TmProfileProgramFormController.forms.subscriptionForm\\\">\\n\" +\n    \"    <div class=\\\"form-group\\\">\\n\" +\n    \"        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"            <span date-range-picker\\n\" +\n    \"                class=\\\"btn btn-default btn-block\\\"\\n\" +\n    \"                type=\\\"text\\\"\\n\" +\n    \"                ng-model=\\\"datePickerTm.date\\\"\\n\" +\n    \"                options=\\\"datePickerTm.options\\\">\\n\" +\n    \"                {{(TmProfileProgramFormController.subscription.startDate| date:'mediumDate') || \\\"Start Date\\\"}} - {{(TmProfileProgramFormController.subscription.endDate| date:'mediumDate') || \\\"End Date\\\"}}\\n\" +\n    \"            </span>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"form-group\\\">\\n\" +\n    \"        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"            <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"               ng-class=\\\"{'disabled' : !TmProfileProgramFormController.subscription.startDate}\\\"\\n\" +\n    \"               ng-click=\\\"TmProfileProgramFormController.handleUpgradeSubmit()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                <span>Save</span>\\n\" +\n    \"            </a>\\n\" +\n    \"            <a class=\\\"btn btn-default pull-right\\\"\\n\" +\n    \"               ng-click=\\\"TmProfileProgramFormController.closeSubscribeProgramForm()\\\">\\n\" +\n    \"               <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"               <span>Cancel</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</form>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileProgramsAddCampusFormView.html',\n    \"<ng-form name=\\\"TmProfileProgramFormController.forms.addCampusForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusName()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Campus Name *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\"\\n\" +\n    \"            name=\\\"name\\\"\\n\" +\n    \"            class=\\\"form-control\\\"\\n\" +\n    \"            ng-required=\\\"true\\\"\\n\" +\n    \"            ng-model=\\\"TmProfileProgramFormController.newCampus.name\\\"\\n\" +\n    \"            ng-class=\\\"{'border-red': !TmProfileProgramFormController.isValidCampusName()}\\\"\\n\" +\n    \"            ng-focus=\\\"TmProfileProgramFormController.setValid('name', false, true)\\\"\\n\" +\n    \"            focus-delay=\\\"250\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add a campus name\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusName()}}\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusCountry()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Country *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <ui-select\\n\" +\n    \"           name=\\\"country\\\"\\n\" +\n    \"           ng-model=\\\"TmProfileProgramFormController.newCampus.country\\\"\\n\" +\n    \"           focus-delay=\\\"250\\\"\\n\" +\n    \"           custom-popover\\n\" +\n    \"           popover-html=\\\"Select an option\\\"\\n\" +\n    \"           popover-placement=\\\"left\\\"\\n\" +\n    \"           popover-trigger=\\\"manual\\\"\\n\" +\n    \"           popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusCountry()}}\\\"\\n\" +\n    \"           theme=\\\"bootstrap\\\">\\n\" +\n    \"            <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.name}}</span></ui-select-match>\\n\" +\n    \"            <ui-select-choices\\n\" +\n    \"                position=\\\"down\\\"\\n\" +\n    \"                repeat=\\\"option.countryCode as option in TmProfileProgramFormController.countryList | filter: $select.search\\\">\\n\" +\n    \"                <div class=\\\"test\\\" ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"            </ui-select-choices>\\n\" +\n    \"            <ui-select-no-choice>\\n\" +\n    \"                Not found\\n\" +\n    \"            </ui-select-no-choice>\\n\" +\n    \"         </ui-select>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusAddressLine1()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Address *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\"\\n\" +\n    \"            class=\\\"form-control\\\"\\n\" +\n    \"            name=\\\"addressLine1\\\"\\n\" +\n    \"            ng-model=\\\"TmProfileProgramFormController.newCampus.addressLine1\\\"\\n\" +\n    \"            ng-required=\\\"true\\\"\\n\" +\n    \"            ng-class=\\\"{'border-red': !TmProfileProgramFormController.isValidCampusAddressLine1()}\\\"\\n\" +\n    \"            ng-focus=\\\"TmProfileProgramFormController.setValid('addressLine1', false, true)\\\"\\n\" +\n    \"            focus-delay=\\\"250\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add an address\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusAddressLine1()}}\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">&nbsp;</label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.newCampus.addressLine2\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusCity()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Town / City *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\"\\n\" +\n    \"            class=\\\"form-control\\\"\\n\" +\n    \"            name=\\\"city\\\"\\n\" +\n    \"            ng-model=\\\"TmProfileProgramFormController.newCampus.city\\\"\\n\" +\n    \"            ng-required=\\\"true\\\"\\n\" +\n    \"            ng-class=\\\"{'border-red': !TmProfileProgramFormController.isValidCampusCity()}\\\"\\n\" +\n    \"            ng-focus=\\\"TmProfileProgramFormController.setValid('city', false, true)\\\"\\n\" +\n    \"            focus-delay=\\\"250\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add a town/city\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusCity()}}\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>State / Province</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.newCampus.state\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Postcode</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.newCampus.postcode\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"    <label for=\\\"campusLatitude\\\" class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"      <span>Latitude</span>\\n\" +\n    \"    </label>\\n\" +\n    \"    <div class=\\\"control-label col-sm-7 col-md-8\\\">\\n\" +\n    \"      <input id=\\\"campusLatitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.newCampus.latitude\\\" ng-readonly=\\\"TmProfileProgramFormController.newCampus.autoGenerate\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"    <label for=\\\"campusLongitude\\\" class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"      <span>Longitude</span>\\n\" +\n    \"    </label>\\n\" +\n    \"    <div class=\\\"control-label col-sm-7 col-md-8\\\">\\n\" +\n    \"      <input id=\\\"campusLongitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.newCampus.longitude\\\" ng-readonly=\\\"TmProfileProgramFormController.newCampus.autoGenerate\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"    <label class=\\\"control-label col-sm-5 col-md-4\\\" >Auto Generate</label>\\n\" +\n    \"    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"      <switch ng-model=\\\"TmProfileProgramFormController.newCampus.autoGenerate\\\" class=\\\"green\\\" ></switch>\\n\" +\n    \"      <span>Use the address to auto generate latitude & longitude values.</span>\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  \\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Program Primary Campus</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <switch class=\\\"green\\\" ng-model=\\\"TmProfileProgramFormController.newCampus.primary\\\"></switch>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Display In Frontend</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <switch class=\\\"green\\\" ng-model=\\\"TmProfileProgramFormController.newCampus.displayInFrontEnd\\\"></switch>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"form-group\\\"></div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'locked': TmProfileProgramFormController.campusSubmitInProgress}\\\">\\n\" +\n    \"      <div class=\\\"col-sm-12\\\">\\n\" +\n    \"          <a class=\\\"btn btn-primary pull-right btn-float-fix\\\" ng-click=\\\"TmProfileProgramFormController.handleNewCampusSubmit()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"            <span>Add Campus to Program</span>\\n\" +\n    \"          </a>\\n\" +\n    \"          <a class=\\\"btn btn-default pull-right btn-float-fix\\\" ng-click=\\\"TmProfileProgramFormController.handleAddCampusClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"            <span>Cancel</span>\\n\" +\n    \"          </a>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</ng-form>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileProgramsEditCampusFormView.html',\n    \"<ng-form name=\\\"TmProfileProgramFormController.forms.editCampusForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusName()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Campus Name *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\"\\n\" +\n    \"            name=\\\"name\\\"\\n\" +\n    \"            class=\\\"form-control\\\"\\n\" +\n    \"            ng-required=\\\"true\\\"\\n\" +\n    \"            ng-model=\\\"TmProfileProgramFormController.oldCampus.name\\\"\\n\" +\n    \"            ng-focus=\\\"TmProfileProgramFormController.setValid('name', false, true)\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add a campus name\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusName()}}\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusCountry()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Country *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <ui-select\\n\" +\n    \"           name=\\\"country\\\"\\n\" +\n    \"           ng-model=\\\"TmProfileProgramFormController.oldCampus.country\\\"\\n\" +\n    \"           focus-delay=\\\"250\\\"\\n\" +\n    \"           custom-popover\\n\" +\n    \"           popover-html=\\\"Select an option\\\"\\n\" +\n    \"           popover-placement=\\\"left\\\"\\n\" +\n    \"           popover-trigger=\\\"manual\\\"\\n\" +\n    \"           popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusCountry()}}\\\"\\n\" +\n    \"           theme=\\\"bootstrap\\\">\\n\" +\n    \"            <ui-select-match placeholder=\\\"Select an option\\\"><span>{{$select.selected.name}}</span></ui-select-match>\\n\" +\n    \"            <ui-select-choices\\n\" +\n    \"                position=\\\"down\\\"\\n\" +\n    \"                repeat=\\\"option.countryCode as option in TmProfileProgramFormController.countryList | filter: $select.search\\\">\\n\" +\n    \"                <div class=\\\"test\\\" ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"            </ui-select-choices>\\n\" +\n    \"            <ui-select-no-choice>\\n\" +\n    \"                Not found\\n\" +\n    \"            </ui-select-no-choice>\\n\" +\n    \"         </ui-select>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusAddressLine1()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Address *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\"\\n\" +\n    \"            name=\\\"addressLine1\\\"\\n\" +\n    \"            class=\\\"form-control\\\"\\n\" +\n    \"            ng-required=\\\"true\\\"\\n\" +\n    \"            ng-model=\\\"TmProfileProgramFormController.oldCampus.addressLine1\\\"\\n\" +\n    \"            custom-popover popover-html=\\\"Add an address\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusAddressLine1()}}\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">&nbsp;</label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.oldCampus.addressLine2\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !TmProfileProgramFormController.isValidCampusCity()}\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Town / City *</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\"\\n\" +\n    \"            class=\\\"form-control\\\"\\n\" +\n    \"            name=\\\"city\\\"\\n\" +\n    \"            ng-required=\\\"true\\\"\\n\" +\n    \"            ng-model=\\\"TmProfileProgramFormController.oldCampus.city\\\"\\n\" +\n    \"            custom-popover popover-html=\\\"Add a town/city\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{!TmProfileProgramFormController.isValidCampusCity()}}\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>State / Province</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.oldCampus.state\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Postcode</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.oldCampus.postcode\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"    <label for=\\\"campusLatitude\\\" class=\\\"control-label col-sm-3 col-md-2\\\"><span>Latitude</span></label>\\n\" +\n    \"    <div class=\\\"col-sm-3 col-md-4\\\">\\n\" +\n    \"      <input id=\\\"campusLatitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.oldCampus.latitude\\\" ng-readonly=\\\"TmProfileProgramFormController.oldCampus.autoGenerate\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"    <label for=\\\"campusLongitude\\\" class=\\\"control-label col-sm-3 col-md-2\\\"><span>Longitude</span></label>\\n\" +\n    \"      <div class=\\\"col-sm-3 col-md-4\\\">\\n\" +\n    \"        <input id=\\\"campusLongitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"TmProfileProgramFormController.oldCampus.longitude\\\" ng-readonly=\\\"TmProfileProgramFormController.oldCampus.autoGenerate\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"    <label class=\\\"full-width\\\" class=\\\"control-label col-sm-5 col-md-4\\\" >Auto Generate</label>\\n\" +\n    \"    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"      <switch ng-model=\\\"TmProfileProgramFormController.oldCampus.autoGenerate\\\" class=\\\"green\\\" ></switch>\\n\" +\n    \"      <span>Use the address to auto generate latitude & longitude values.</span>\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Program Primary Campus</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <switch class=\\\"green\\\" ng-model=\\\"TmProfileProgramFormController.oldCampus.primary\\\"></switch>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\">\\n\" +\n    \"      <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"        <span>Display In Frontend</span>\\n\" +\n    \"      </label>\\n\" +\n    \"      <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"          <switch class=\\\"green\\\" ng-model=\\\"TmProfileProgramFormController.oldCampus.displayInFrontEnd\\\"></switch>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"form-group\\\" ng-class=\\\"{'locked': TmProfileProgramFormController.campusSubmitInProgress}\\\">\\n\" +\n    \"      <div class=\\\"col-sm-12\\\">\\n\" +\n    \"          <a class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"TmProfileProgramFormController.handleUpdateCampus()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"            <span>Update</span>\\n\" +\n    \"          </a>\\n\" +\n    \"          <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TmProfileProgramFormController.handleCancelCampusClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"            <span>Cancel</span>\\n\" +\n    \"          </a>\\n\" +\n    \"      </div>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"separator dashed\\\"></div>\\n\" +\n    \"</ng-form>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/programs/tmProfileProgramsView.html',\n    \"<div ng-controller=\\\"TmProfileProgramsController as ProgramsController\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"        <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"           ng-class=\\\"{'disabled': programsTabSubmitInProgress}\\\"\\n\" +\n    \"           ng-click=\\\"ProgramsController.handleAddProgramClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"            <span>{{ProgramsController.isClient() ? 'Request to add Program' : 'Add Program'}}</span>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div id=\\\"programsTable\\\">\\n\" +\n    \"            <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"ProgramsController.isDatagridReloading || !ProgramsController.isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div ng-if=\\\"!ProgramsController.isDatagridReloading && gridOptions\\\">\\n\" +\n    \"                <ui-grid-info ng-if=\\\"!showProgramEditForm && !showProgramAddForm\\\"></ui-grid-info>\\n\" +\n    \"                <div class=\\\"grid\\\"\\n\" +\n    \"                     ui-grid=\\\"gridOptions\\\"\\n\" +\n    \"                     ui-grid-selection\\n\" +\n    \"                     ui-grid-resize-columns\\n\" +\n    \"                     ui-grid-auto-resize>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/publish/tmProfilePublishHistoryView.html',\n    \"<div class=\\\"ibox publish-logs\\\" ng-controller=\\\"TmProfilePublishLogsController as PublishLogsController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>Publish Logs</h5>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner ng-show=\\\"fetchingPublishLog()\\\"></div>\\n\" +\n    \"        <div ng-show=\\\"!fetchingPublishLog()\\\" ng-repeat=\\\"logs in publishLogs\\\">\\n\" +\n    \"            <div ng-repeat=\\\"logsPerDay in logs\\\">\\n\" +\n    \"                <div class=\\\"panel panel-default\\\">\\n\" +\n    \"                    <div class=\\\"panel-heading\\\">\\n\" +\n    \"                        <span>{{logsPerDay.date | date:'mediumDate'}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"panel-body\\\">\\n\" +\n    \"                        <ul class=\\\"list-unstyled\\\">\\n\" +\n    \"                            <li ng-repeat=\\\"log in logsPerDay.logs\\\">\\n\" +\n    \"                                <span class=\\\"status\\\">\\n\" +\n    \"                                    <span class=\\\"icon text-success\\\" ng-if=\\\"log.status === 'success'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-check\\\"></i>\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span class=\\\"icon text-danger\\\" ng-if=\\\"log.status === 'failure'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-exclamation\\\"></i>\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span class=\\\"icon text-info\\\" ng-if=\\\"log.status === 'progress'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span class=\\\"icon text-warning\\\" ng-if=\\\"log.status === 'pending'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                \\n\" +\n    \"                                <span>{{log.status === 'failure' ? 'Failed' : 'Published'}}:</span>\\n\" +\n    \"                                <span class=\\\"bold\\\">{{log.createdByFullName}}</span>\\n\" +\n    \"                                <span class=\\\"time\\\">{{log.createdAt | date:'shortTime'}}</span>\\n\" +\n    \"                                \\n\" +\n    \"                                <span class=\\\"program\\\">\\n\" +\n    \"                                    <span class=\\\"icon round bg-primary\\\" ng-if=\\\"log.type === 'tm'\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                </span>\\n\" +\n    \"                            </li>\\n\" +\n    \"                        </ul>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"!publishLogs.results.length\\\">No publish history</div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/publish/tmProfilePublishView.html',\n    \"<div ng-controller=\\\"TmProfilePublishController as PublishController\\\">\\n\" +\n    \"    <div class=\\\"alert alert-info\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Please be aware that published changes will not appear straight away and could take up to 6 hours to be visible on the frontend website.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Whilst a publish is occurring, you may navigate away from this page and it will still progress in the background.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div id=\\\"publishContainer\\\" class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"row\\\">\\n\" +\n    \"            <div class=\\\"col-lg-4 meter\\\" ng-repeat=\\\"section in sections\\\">\\n\" +\n    \"                <div class=\\\"panel panel-default\\\">\\n\" +\n    \"                    <div class=\\\"panel-heading\\\">\\n\" +\n    \"                        <h5 class=\\\"pull-left\\\">\\n\" +\n    \"                            <span class=\\\"icon round bg-primary\\\" ng-if=\\\"isTm(section.type)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <span>{{section.name}}</span>\\n\" +\n    \"                        </h5>\\n\" +\n    \"\\n\" +\n    \"                        <a class=\\\"btn btn-primary btn-xs pull-right m-b-xs\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': section.publishDisabled || PublishController.isProfileEnabled()}\\\"\\n\" +\n    \"                           ng-click=\\\"handlePublish(section, section.publishProgramsBasic, section.publishProgramsAdvanced)\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-cloud-upload\\\"></i>\\n\" +\n    \"                            <span>Publish</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <div class=\\\"clearfix\\\" ng-if=\\\"institutionHasAdvancedPrograms() && tmIsAdvanced\\\">\\n\" +\n    \"                            <input ng-model=\\\"section.publishProgramsAdvanced\\\" i-checkbox type=\\\"checkbox\\\">\\n\" +\n    \"                            <span>Include all Advanced Programs</span>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"panel-body\\\">\\n\" +\n    \"                        <div class=\\\"clearfix m-b-md\\\">\\n\" +\n    \"                            <a class=\\\"btn btn-default btn-sm btn-block\\\"\\n\" +\n    \"                                target=\\\"_blank\\\"\\n\" +\n    \"                                ng-href=\\\"{{section.url}}\\\"\\n\" +\n    \"                                ng-class=\\\"{'disabled': section.viewDisabled}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-eye\\\"></i>\\n\" +\n    \"                                <span>View webpage</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a class=\\\"btn btn-default btn-sm btn-block\\\"\\n\" +\n    \"                                ng-if=\\\"PublishController.devMode\\\"\\n\" +\n    \"                                target=\\\"_blank\\\"\\n\" +\n    \"                                ng-href=\\\"{{section.feedPreviewUrl}}\\\"\\n\" +\n    \"                                ng-class=\\\"{'disabled': section.viewDisabled}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-eye\\\"></i>\\n\" +\n    \"                                <span>Preview feed</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"response\\\" ng-if=\\\"section.statusMessage\\\">\\n\" +\n    \"                            <p><strong>Reason for Failed Publish:</strong></p>\\n\" +\n    \"                            <span class=\\\"truncate\\\"><strong>{{section.statusMessage}}</strong></span>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div progress-circle=\\\"section.status\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/publish/tmProfileResubscribeView.html',\n    \"<div class=\\\"resubscribe\\\" ng-controller=\\\"TmProfileResubscribeController as TmResubscribeController\\\">\\n\" +\n    \"    <div class=\\\"ibox m-t-xl\\\" ng-show=\\\"TmResubscribeController.isAdvanced\\\">\\n\" +\n    \"        <div class=\\\"panel panel-default\\\">\\n\" +\n    \"            <div class=\\\"panel-body\\\">\\n\" +\n    \"                <div class=\\\"subscribe\\\">\\n\" +\n    \"                    <div class=\\\"pull-left\\\">\\n\" +\n    \"                        <p>Your subscription expires:</p>\\n\" +\n    \"                        <span class=\\\"bold\\\">{{TmResubscribeController.expiresDate | date:'dd MMMM yyyy'}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <button class=\\\"btn btn-warning btn-lg pull-right\\\"\\n\" +\n    \"                            ng-click=\\\"TmResubscribeController.resubscribeClick()\\\"\\n\" +\n    \"                            ng-show=\\\"TmResubscribeController.showResubscribeButton()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-envelope-o\\\"></i>\\n\" +\n    \"                        <span>Resubscribe</span>\\n\" +\n    \"                    </button>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    \\n\" +\n    \"    <div class=\\\"ibox m-t-xl\\\" ng-show=\\\"TmResubscribeController.displayResubscribeForm\\\">\\n\" +\n    \"        <div class=\\\"ibox-title\\\">\\n\" +\n    \"            <h5>Resubscribe to Advance Profile</h5>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"ibox-content\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal preview\\\" name=\\\"forms.resubscribeForm\\\" novalidate>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">To:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TmResubscribeController.formData.to}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                \\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Subject:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TmResubscribeController.formData.subject}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Name:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TmResubscribeController.formData.name}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Email:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TmResubscribeController.formData.email}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Comments:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <div class=\\\"textarea\\\"><textarea class=\\\"form-control full-width\\\" ng-model=\\\"TmResubscribeController.formData.comments\\\" name=\\\"comments\\\" ng-trim=\\\"true\\\" rows=\\\"5\\\"></textarea></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                \\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': TmResubscribeController.inProgress}\\\" ng-click=\\\"TmResubscribeController.submitClick()\\\">\\n\" +\n    \"                           <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                           <span>Submit</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TmResubscribeController.cancelClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Cancel</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/tmProfileDeleteFormView.html',\n    \"<div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"    <h5>Request to Delete Basic Program</h5>\\n\" +\n    \"    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"        <a class=\\\"close-link\\\" ng-click=\\\"TmProfileController.handleCloseDeleteForm()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <form class=\\\"form-horizontal preview\\\" name=\\\"forms.upgradeProfile\\\" novalidate>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">To</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeEmailsTo}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Subject</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">I would like program <strong>{{deleteRequest.program.name}}</strong> to be deleted</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Name</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{deleteRequest.name}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Email</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{deleteRequest.email}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Comments</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <div class=\\\"textarea\\\"><textarea class=\\\"form-control no-resize\\\" rows=\\\"7\\\" cols=\\\"50\\\" placeholder=\\\"Please add comments supporting your request\\\" ng-model=\\\"deleteRequest.comments\\\"></textarea></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                       ng-class=\\\"{'disabled': TmProfileController.deleteRequestInProgress}\\\"\\n\" +\n    \"                       ng-click=\\\"TmProfileController.handleSendDeleteRequestClick()\\\">\\n\" +\n    \"                       <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                       <span>Send</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TmProfileController.handleCloseDeleteForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Close</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/tmProfileProgramUpgradeFormView.html',\n    \"<div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"    <h5>Upgrade to Advanced Program</h5>\\n\" +\n    \"    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"        <a class=\\\"close-link\\\" ng-click=\\\"TmProfileController.toggleUpgradeProgramForm()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <form class=\\\"form-horizontal preview\\\" name=\\\"forms.upgradeProgramProfile\\\" novalidate>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">To</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeEmailsTo}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Subject</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">I would like more information about Upgrading to an Advanced Program</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Name</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeRequest.name}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Email</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeRequest.email}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Comments</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <div class=\\\"textarea\\\"><textarea class=\\\"form-control no-resize\\\" rows=\\\"7\\\" cols=\\\"50\\\" placeholder=\\\"Comments...\\\" ng-model=\\\"upgradeRequest.comments\\\"></textarea></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                       ng-class=\\\"{'disabled': TmProfileController.upgradeInProgress}\\\"\\n\" +\n    \"                       ng-click=\\\"TmProfileController.handleProgramUpgradeRequestClick()\\\">\\n\" +\n    \"                       <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                       <span>Send</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TmProfileController.toggleUpgradeProgramForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Close</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/tmProfileUpgradeFormView.html',\n    \"<div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"    <h5>Upgrade to Advanced Profile</h5>\\n\" +\n    \"    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"        <a class=\\\"close-link\\\" ng-click=\\\"TmProfileController.toggleUpgradeForm()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <form class=\\\"form-horizontal preview\\\" name=\\\"forms.upgradeProfile\\\" novalidate>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">To</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeEmailsTo}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Subject</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">I would like more information about Upgrading to an Advanced Profile</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Name</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeRequest.name}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Email</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeRequest.email}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Comments</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <div class=\\\"textarea\\\"><textarea class=\\\"form-control no-resize\\\" rows=\\\"7\\\" cols=\\\"50\\\" placeholder=\\\"Please add comments supporting your request\\\" ng-model=\\\"upgradeRequest.comments\\\"></textarea></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                       ng-class=\\\"{'disabled': TmProfileController.upgradeInProgress}\\\"\\n\" +\n    \"                       ng-click=\\\"TmProfileController.handleUpgradeClick()\\\">\\n\" +\n    \"                       <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                       <span>Send</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TmProfileController.toggleUpgradeForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Close</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tm/tmProfileView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-profiles-tm\\\" ng-controller=\\\"TmProfileController as TmProfileController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div ng-class=\\\"TmProfileController.isRightSidePanelActive() ? 'col-sm-8' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"tabs-container\\\" ng-class=\\\"{'modal-overlay': TmProfileController.loadInProgress()}\\\">\\n\" +\n    \"                <uib-tabset active=\\\"activeTab\\\">\\n\" +\n    \"                    <uib-tab index=\\\"0\\\" heading=\\\"Overview\\\">\\n\" +\n    \"                        <div class=\\\"panel-body overview\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tm/overview/tmProfileOverviewView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"                    <uib-tab index=\\\"1\\\" heading=\\\"Programs\\\" ng-if=\\\"!TmProfileController.showProgramStasTab\\\">\\n\" +\n    \"                        <div class=\\\"panel-body programs\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileProgramsView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"                    <uib-tab index=\\\"4\\\" heading=\\\"Program Statistics\\\" ng-if=\\\"TmProfileController.showProgramStasTab\\\">\\n\" +\n    \"                        <div class=\\\"panel-body program-stats\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tm/program-stats/tmProfileProgramStatsView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"                    <uib-tab index=\\\"2\\\" heading=\\\"Media\\\">\\n\" +\n    \"                        <div class=\\\"panel-body media\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tm/media/tmProfileMediaView.html'\\\" id=\\\"mediaTab\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"                    <uib-tab index=\\\"3\\\" heading=\\\"Publish\\\">\\n\" +\n    \"                        <div class=\\\"panel-body publish\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tm/publish/tmProfilePublishView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"                </uib-tabset>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div ng-show=\\\"showUpgradeForm\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/tmProfileUpgradeFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div ng-show=\\\"showUpgradeProgramRequest\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/tmProfileProgramUpgradeFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div ng-show=\\\"showDeleteForm\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/tmProfileDeleteFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"TmProfileController.showOverviewHistory\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/overview/overview/tmProfileOverviewHistoryLogView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"TmProfileController.showFaqHistory\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/overview/faq/tmProfileOverviewFaqHistoryLogView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"showProgramEditForm || showProgramAddForm\\\"\\n\" +\n    \"             fixed-element-while-scrolling=\\\"#programsTable\\\"\\n\" +\n    \"             class=\\\"col-sm-4\\\"\\n\" +\n    \"             ng-controller=\\\"TmProfileProgramFormController as TmProfileProgramFormController\\\">\\n\" +\n    \"            <div class=\\\"nested-ibox\\\" ng-show=\\\"showProgramAddForm\\\" ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileAddProgramFormView.html'\\\"></div>\\n\" +\n    \"            <div class=\\\"nested-ibox\\\" ng-show=\\\"showProgramEditForm\\\" ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"isMediaTabActive()\\\" class=\\\"col-sm-4\\\" ng-class=\\\"tmIsAdvanced ? '': 'modal-overlay-35'\\\" fixed-element-while-scrolling=\\\"#mediaTab\\\">\\n\" +\n    \"            <div id=\\\"mediaSidebar\\\" ng-include src=\\\"'/scripts/components/profiles/tm/media/tmProfileMediaLinkManagerView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div ng-show=\\\"isPublishTabActive()\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/publish/tmProfileResubscribeView.html'\\\"></div>\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tm/publish/tmProfilePublishHistoryView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/datagrid/createdAtFilterHeaderTemplate.html',\n    \"<div class=\\\"ui-grid-filter-container\\\" ng-repeat=\\\"colFilter in col.filters\\\" ng-if=\\\"colFilter.visible\\\">\\n\" +\n    \"    <input type=\\\"text\\\" class=\\\"ui-grid-filter-input date-picker\\\"\\n\" +\n    \"           ng-model=\\\"grid.appScope.filters.createdAt\\\"\\n\" +\n    \"           date-range-picker=\\\"\\\"\\n\" +\n    \"           options=\\\"{eventHandlers: {'apply.daterangepicker': grid.appScope.handleCreatedAtDateRange}, opens: 'left'}\\\" />\\n\" +\n    \"    <div class=\\\"ui-grid-filter-button\\\" ng-click=\\\"grid.appScope.handleCreatedAtDateRange(); grid.appScope.filters.createdAt = {}\\\">\\n\" +\n    \"      \t<i class=\\\"ui-grid-icon-cancel\\\" ng-if=\\\"grid.appScope.filters.createdAt && grid.appScope.filters.createdAt.startDate\\\">&nbsp;</i> \\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/datagrid/deleteCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents no-select text-center\\\" ng-click=\\\"$event.stopPropagation()\\\">\\n\" +\n    \"    <div class=\\\"inline\\\" ng-if=\\\"row.entity.typeId === 3\\\">\\n\" +\n    \"        <span custom-popover\\n\" +\n    \"              popover-html=\\\"{{grid.appScope.cutomCheckboxMessage()}}\\\"\\n\" +\n    \"              popover-placement=\\\"right\\\"\\n\" +\n    \"              popover-container=\\\"body\\\"\\n\" +\n    \"              popover-trigger=\\\"hover\\\">\\n\" +\n    \"            <input\\n\" +\n    \"                disabled=\\\"disabled\\\"\\n\" +\n    \"                ng-model=\\\"grid.appScope.departmentsToDelete[row.entity.id]\\\"\\n\" +\n    \"                i-checkbox\\n\" +\n    \"                type=\\\"checkbox\\\">\\n\" +\n    \"        </span>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"inline\\\" ng-if=\\\"row.entity.typeId !== 3\\\">\\n\" +\n    \"        <input\\n\" +\n    \"            ng-model=\\\"grid.appScope.departmentsToDelete[row.entity.id]\\\"\\n\" +\n    \"            i-checkbox\\n\" +\n    \"            type=\\\"checkbox\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/datagrid/deleteHeaderCellTemplate.html',\n    \"<button type=\\\"button\\\"\\n\" +\n    \"        ng-disabled=\\\"grid.appScope.isDeleteButtonDisabled()\\\"\\n\" +\n    \"        class=\\\"btn btn-danger btn-sm\\\"\\n\" +\n    \"        ng-class=\\\"{'disabled': grid.appScope.isDeleteButtonDisabled()}\\\"\\n\" +\n    \"        ng-click=\\\"grid.appScope.handleDeleteClick()\\\">\\n\" +\n    \"    <span class=\\\"glyphicon glyphicon-trash\\\"></span><!--  {{col.displayName}} -->\\n\" +\n    \"</button>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/datagrid/rowTemplate.html',\n    \"<div grid=\\\"grid\\\" class=\\\"ui-grid-draggable-row\\\" draggable=\\\"true\\\">\\n\" +\n    \"    <div class=\\\"ui-grid-cell pointer\\\"\\n\" +\n    \"        ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\\\"\\n\" +\n    \"        ng-class=\\\"{ 'ui-grid-row-header-cell': col.isRowHeader, 'active': row.entity.id == grid.appScope.selectedDepartmentId }\\\"\\n\" +\n    \"        role=\\\"{{col.isRowHeader ? 'rowheader' : 'gridcell'}}\\\"\\n\" +\n    \"        ui-grid-cell>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/modalDowngradeDepartmentView.html',\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"    <h3>{{modalOptions.headerText}}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"    <p ng-show=\\\"!modalOptions.subscriptions\\\">\\n\" +\n    \"        Client department has no active subscription. Press Downgrade Now to downgrade to simple department.\\n\" +\n    \"    </p>\\n\" +\n    \"    <div ng-show=\\\"modalOptions.subscriptions\\\">\\n\" +\n    \"        <p>This client department currently has an active subscription. The subscription will need to be turned off in order to downgrade and delete the profile. If you wish to downgrade the client department and delete the profile in Drupal (front end) please select accordingly and press update to continue.</p>\\n\" +\n    \"        <hr>\\n\" +\n    \"        <p>Enabled:\\n\" +\n    \"            <code ng-if=\\\"modalOptions.department.enabled.pg\\\">PG</code>\\n\" +\n    \"            <code ng-if=\\\"modalOptions.department.enabled.ug\\\">UG</code>\\n\" +\n    \"            <code ng-if=\\\"modalOptions.department.enabled.tm\\\">MBA</code>\\n\" +\n    \"        </p>\\n\" +\n    \"        <p ng-if=\\\"modalOptions.department.subscriptions.tu.advanced\\\">\\n\" +\n    \"            Advanced TU : <strong>From {{modalOptions.department.subscriptions.tu.startDate | date:'short'}}</strong> to <strong>{{modalOptions.department.subscriptions.tu.endDate | date:'short'}}</strong>\\n\" +\n    \"        </p>\\n\" +\n    \"        <p ng-if=\\\"modalOptions.department.subscriptions.tm.advanced\\\">\\n\" +\n    \"            Advanced TM : <strong>From {{modalOptions.department.subscriptions.tm.startDate | date:'short'}}</strong> to <strong>{{modalOptions.department.subscriptions.tm.endDate| date:'short'}}</strong>\\n\" +\n    \"        </p>\\n\" +\n    \"        <switch ng-model=\\\"modalOptions.downgradeAndDelete\\\" class=\\\"green\\\"></switch>\\n\" +\n    \"        Downgrade the client department and delete the profile in Drupal (front end)\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"modalOptions.close()\\\">\\n\" +\n    \"        {{modalOptions.closeButtonText}}\\n\" +\n    \"    </button>\\n\" +\n    \"    <button class=\\\"btn btn-primary\\\" ng-click=\\\"modalOptions.completeDowngradeClick(modalOptions.downgradeAndDelete)\\\">\\n\" +\n    \"        {{modalOptions.subscriptions ? (modalOptions.downgradeAndDelete ? 'Downgrade & Delete' : 'Downgrade in Backend') : 'Downgrade Now'}}\\n\" +\n    \"    </button>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/modalUpgradeDepartmentView.html',\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"close\\\" data-ng-click=\\\"modalOptions.close()\\\">&times;</button>\\n\" +\n    \"    <h3>{{modalOptions.headerText}}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"    <p>\\n\" +\n    \"        To complete this department upgrade you must enter subscription dates, country, etc.\\n\" +\n    \"    </p>\\n\" +\n    \"    <p>\\n\" +\n    \"        Click on the button below to navigate to Institution List backend to enter these details.\\n\" +\n    \"    </p>\\n\" +\n    \"    <p>\\n\" +\n    \"        Please note that without these details, the upgrade will not be complete.\\n\" +\n    \"    </p>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"    <a class=\\\"btn btn-primary btn-sm\\\"\\n\" +\n    \"           ng-click=\\\"modalOptions.completeUpgradeClick()\\\"\\n\" +\n    \"           ui-sref=\\\"staff.institutions.list({coreId: modalOptions.institutionCoreId})\\\">Complete upgrade now</a>\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"btn btn-sm\\\"\\n\" +\n    \"            ng-click=\\\"modalOptions.close()\\\">{{modalOptions.closeButtonText}}</button>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/tuProfileAddDepartmentFormView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>Add Department</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"toggleDepartmentAddForm()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"fetchingHistoryLog()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <form class=\\\"form-horizontal add-department\\\" name=\\\"forms.addDepartmentForm\\\" novalidate>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-if=\\\"DepartmentOverviewController.isInstitutionSelected()\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Institution Name *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\n\" +\n    \"                           ng-model=\\\"DepartmentOverviewController.institution.selected.name\\\"\\n\" +\n    \"                           ng-disabled=\\\"true\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidNewDepartmentName}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">\\n\" +\n    \"                    Department Name *\\n\" +\n    \"                </label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                        placeholder=\\\"Add name\\\"\\n\" +\n    \"                        ng-model=\\\"newDepartment.name\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Add a department name\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidNewDepartmentName ? true : false}}\\\"\\n\" +\n    \"                        ng-focus=\\\"setIsInvalidNewDepartmentName(false)\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidNewBelongsTo}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Belongs to *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"newDepartment.belongsTo\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidNewBelongsTo ? true : false}}\\\"\\n\" +\n    \"                        on-select=\\\"setIsInvalidNewBelongsTo(false)\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-building\\\"></i>\\n\" +\n    \"                            <span>{{$select.selected.title}}</span>\\n\" +\n    \"                        </ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.id as option in belongsToList | filter: $select.search\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.title | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"white-space\\\"></div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': addInProgress}\\\" ng-click=\\\"handleDepartmentCreateClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                        <span>Save</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"toggleDepartmentAddForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Cancel</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/tuProfileDepartmentsView.html',\n    \"<div ng-controller=\\\"TuProfileDepartmentsController as DepartmentsController\\\">\\n\" +\n    \"    <div class=\\\"alert alert-info\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Only the first top 50 departments will be published.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Departments can be published only for advanced profiles.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"        <div class=\\\"btn-toggle\\\">\\n\" +\n    \"            <switch class=\\\"green\\\"\\n\" +\n    \"                ng-disabled=\\\"alphabeticalOrderingInProgress\\\"\\n\" +\n    \"                ng-model=\\\"institutionData.departmentsAlphabeticalOrder\\\"\\n\" +\n    \"                ng-change=\\\"!alphabeticalOrderingInProgress ? handleAlphabeticalOrderClick(institutionData.departmentsAlphabeticalOrder) : null\\\"></switch>\\n\" +\n    \"            <span class=\\\"switch-text\\\"> Display in alphabetical order?</span>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <button class=\\\"btn btn-primary pull-right\\\" type=\\\"button\\\" \\n\" +\n    \"            ng-class=\\\"{'disabled': departmentsTabSubmitInProgress}\\\"\\n\" +\n    \"            ng-click=\\\"handleAddDepartmentClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"            <span>Add Department</span>\\n\" +\n    \"        </button>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isDatagridReloading || !isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-if=\\\"!isDatagridReloading && gridOptions\\\">\\n\" +\n    \"            <ui-grid-info ng-if=\\\"!showDepartmentEditForm && !showDepartmentAddForm && !showClientUpgradeForm\\\"></ui-grid-info>\\n\" +\n    \"            <div class=\\\"grid\\\"\\n\" +\n    \"                ui-grid=\\\"gridOptions\\\"\\n\" +\n    \"                ui-grid-draggable-rows\\n\" +\n    \"                ui-grid-selection\\n\" +\n    \"                ui-grid-resize-columns\\n\" +\n    \"                ui-grid-auto-resize></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/tuProfileEditDepartmentFormView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>Edit Department</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"toggleDepartmentEditForm()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"isFetchInProgress()\\\"></div>\\n\" +\n    \"        <div ng-show=\\\"!isFetchInProgress()\\\" ng-class=\\\"{'modal-overlay-35': !allowEdit()}\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal add-department\\\" name=\\\"forms.editDepartmentForm\\\" novalidate>\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-if=\\\"DepartmentOverviewController.isInstitutionSelected()\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Institution Name *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n\" +\n    \"                               ng-model=\\\"DepartmentOverviewController.institution.selected.name\\\"\\n\" +\n    \"                               ng-required=\\\"true\\\"\\n\" +\n    \"                               ng-disabled=\\\"true\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidDepartmentNameUpdate}\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Department Name *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input type=\\\"text\\\"\\n\" +\n    \"                            placeholder=\\\"Add name\\\"\\n\" +\n    \"                            ng-model=\\\"department.name\\\"\\n\" +\n    \"                            class=\\\"form-control\\\"\\n\" +\n    \"                            ng-required=\\\"true\\\"\\n\" +\n    \"                            focus-delay=\\\"250\\\"\\n\" +\n    \"                            custom-popover\\n\" +\n    \"\\n\" +\n    \"                            popover-html=\\\"Add a department name\\\"\\n\" +\n    \"                            popover-placement=\\\"left\\\"\\n\" +\n    \"                            popover-trigger=\\\"manual\\\"\\n\" +\n    \"                            popover-visibility=\\\"{{isInvalidDepartmentNameUpdate ? true : false}}\\\"\\n\" +\n    \"                            ng-focus=\\\"setIsInvalidDepartmentNameUpdate(false)\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"               <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Department Type *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n\" +\n    \"                               ng-model=\\\"department.typeName\\\"\\n\" +\n    \"                               ng-required=\\\"true\\\"\\n\" +\n    \"                               ng-disabled=\\\"true\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidBelongsToUpdate}\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Belongs to *</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <ui-select\\n\" +\n    \"                            ng-model=\\\"department.belongsTo\\\"\\n\" +\n    \"                            theme=\\\"bootstrap\\\"\\n\" +\n    \"                            focus-delay=\\\"250\\\"\\n\" +\n    \"                            custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                            popover-placement=\\\"left\\\"\\n\" +\n    \"                            popover-trigger=\\\"manual\\\"\\n\" +\n    \"                            popover-visibility=\\\"{{isInvalidBelongsToUpdate ? true : false}}\\\"\\n\" +\n    \"                            ng-change=\\\"setIsInvalidBelongsToUpdate(false)\\\">\\n\" +\n    \"                            <ui-select-match placeholder=\\\"Select an option\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-building\\\"></i>\\n\" +\n    \"                                <span>{{$select.selected.title}}</span>\\n\" +\n    \"                            </ui-select-match>\\n\" +\n    \"                            <ui-select-choices\\n\" +\n    \"                            position=\\\"down\\\"\\n\" +\n    \"                            repeat=\\\"option.id as option in belongsToList | filter: $select.search\\\">\\n\" +\n    \"                            <div class=\\\"test\\\" ng-bind-html=\\\"option.title | highlight: $select.search\\\"></div>\\n\" +\n    \"                            </ui-select-choices>\\n\" +\n    \"                        </ui-select>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"white-space\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': editInProgress}\\\"\\n\" +\n    \"                           ng-click=\\\"handleDepartmentUpdateClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>Update</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"toggleDepartmentEditForm()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Cancel</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"separator dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"btn-adjustment\\\" ng-if=\\\"allowUpgrade()\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-warning col-lg-10 col-lg-offset-1\\\"\\n\" +\n    \"                       ng-disabled=\\\"DepartmentFormController.isUpgradeDisabled()\\\"\\n\" +\n    \"                       ng-click=\\\"!DepartmentFormController.isUpgradeDisabled() && DepartmentFormController.handleUpgradeClick()\\\"\\n\" +\n    \"                       uib-popover=\\\"Mandatory fields must be entered first to upgrade\\\"\\n\" +\n    \"                       popover-placement=\\\"left\\\"\\n\" +\n    \"                       popover-enable=\\\"DepartmentFormController.isUpgradeDisabled()\\\"\\n\" +\n    \"                       popover-trigger=\\\"'mouseenter'\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-star\\\"></i>\\n\" +\n    \"                        <span>Upgrade Department</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"                \\n\" +\n    \"                <div class=\\\"form-group\\\" ng-if=\\\"allowDowngrade()\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-danger col-lg-10 col-lg-offset-1\\\"\\n\" +\n    \"                       ng-click=\\\"handleDowngradeClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-arrow-circle-o-down\\\"></i>\\n\" +\n    \"                        <span>Downgrade to simple department</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-if=\\\"allowLoginAs()\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-info col-lg-10 col-lg-offset-1\\\"\\n\" +\n    \"                       ng-disabled=\\\"DepartmentFormController.isLoginRestricted()\\\"\\n\" +\n    \"                       ng-click=\\\"!DepartmentFormController.isLoginRestricted() && handleLoginAsClick()\\\"\\n\" +\n    \"\\n\" +\n    \"                       uib-tooltip='Login has been disabled due to permission. Contact {{DepartmentFormController.tuSupportEmail}}'\\n\" +\n    \"                       tooltip-enable=\\\"DepartmentFormController.isLoginRestricted()\\\"\\n\" +\n    \"                       tooltip-placement=\\\"left\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-sign-in\\\"></i>\\n\" +\n    \"                        <span>Login as Department</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/departments/tuProfileUpgradeClientDepartmentFormView.html',\n    \"<div class=\\\"ibox-title\\\">\\n\" +\n    \"    <h5>Upgrade Department</h5>\\n\" +\n    \"    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"        <a class=\\\"close-link\\\" ng-click=\\\"DepartmentFormController.toggleClientUpgradeForm()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"ibox block-institution\\\">\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <form name=\\\"forms.upgradeTuDepartment\\\" class=\\\"clearfix form-horizontal\\\" novalidate>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"col-sm-3\\\">To</label>\\n\" +\n    \"                <div class=\\\"col-sm-9\\\">{{upgradeEmailsTo}}</div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"col-sm-3\\\">Subject</label>\\n\" +\n    \"                <div class=\\\"col-sm-9\\\">I would like more information about Upgrading the Department.</div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"col-sm-3\\\">Name</label>\\n\" +\n    \"                <div class=\\\"col-sm-9\\\">\\n\" +\n    \"                    {{upgradeRequest.name}}\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"col-sm-3\\\">Email</label>\\n\" +\n    \"                <div class=\\\"col-sm-9\\\">\\n\" +\n    \"                    {{upgradeRequest.email}}\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"col-sm-3\\\">Comments</label>\\n\" +\n    \"                <div class=\\\"col-sm-9\\\">\\n\" +\n    \"                    <textarea rows=\\\"7\\\" cols=\\\"50\\\" placeholder=\\\"Comments...\\\" ng-model=\\\"upgradeRequest.comments\\\" class=\\\"form-control no-resize\\\" ></textarea>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"row\\\">\\n\" +\n    \"                <div class=\\\"col-lg-6 text-left\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-default btn-sm btn-block\\\" ng-click=\\\"DepartmentFormController.toggleClientUpgradeForm()\\\">Close</a>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"col-lg-6 text-right\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary btn-sm btn-block\\\" ng-class=\\\"{'disabled': TopUniversitiesController.upgradeInProgress}\\\" ng-click=\\\"TopUniversitiesController.handleSendUpgradeRequestClick()\\\">Send</a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 4 ? 'selected' : 'collapsed'\\\"  ng-controller=\\\"TuMediaBrochuresSidebarController as TuMediaBrochuresSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(4)\\\">\\n\" +\n    \"        <h5>Brochures ({{getBrochureItems().length}})</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div class=\\\"addForm\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.formBrochure\\\" id=\\\"form-brochure\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please add your brochure title and link.</span><br />\\n\" +\n    \"                        <span>Drag and drop brochures from left to right to change the order.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div>\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': getHasErrors()}\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\" use-tu-subtypes>\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"brochure-overview\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"overview\\\" id=\\\"brochure-overview\\\" focus-if=\\\"getDisplayTypesValidation()\\\" focus-delay=\\\"250\\\" ng-model=\\\"selectedBrochure.master\\\"  ng-change=\\\"selectedBrochure.master? setDisplayTypesValidation(false) : ''\\\" />\\n\" +\n    \"                                    <span>Overview</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"brochure-undergraduate\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"undergraduate\\\" id=\\\"brochure-undergraduate\\\" ng-model=\\\"selectedBrochure.ug\\\" ng-change=\\\"selectedBrochure.ug? setDisplayTypesValidation(false) : ''\\\" />\\n\" +\n    \"                                    <span>Undergraduate</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"brochure-postgraduate\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"postgraduate\\\" id=\\\"brochure-postgraduate\\\" ng-model=\\\"selectedBrochure.pg\\\" ng-change=\\\"selectedBrochure.pg? setDisplayTypesValidation(false) : ''\\\" />\\n\" +\n    \"                                    <span>Postgraduate</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div ng-class=\\\"getDisplayTypesValidation()? 'has-errors' : ''\\\" >\\n\" +\n    \"                                <span\\n\" +\n    \"                                    custom-popover popover-html=\\\"Assign brochure to at least one of the three profiles\\\" \\n\" +\n    \"                                    popover-placement=\\\"left\\\"\\n\" +\n    \"                                    popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                    popover-visibility=\\\"{{getDisplayTypesValidation() ? true : false}}\\\"></span>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidTitle}\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\" for=\\\"brochure-title\\\">\\n\" +\n    \"                            <span>Title *</span>\\n\" +\n    \"                            <small>110 characters</small>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\"\\n\" +\n    \"                                   name=\\\"brochure-title\\\"\\n\" +\n    \"                                   id=\\\"brochure-title\\\"\\n\" +\n    \"                                   maxlength=\\\"110\\\"\\n\" +\n    \"                                   ng-required=\\\"required\\\"\\n\" +\n    \"                                   type=\\\"text\\\"\\n\" +\n    \"                                   focus-if=\\\"isHighlighted\\\"\\n\" +\n    \"                                   focus-delay=\\\"250\\\"\\n\" +\n    \"\\n\" +\n    \"                                   custom-popover\\n\" +\n    \"                                   popover-html=\\\"Add a brochure title\\\"\\n\" +\n    \"                                   popover-placement=\\\"left\\\"\\n\" +\n    \"                                   popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                   popover-visibility=\\\"{{isInvalidTitle ? true : false}}\\\"\\n\" +\n    \"                                   ng-focus=\\\"setIsInvalidTitle(false)\\\"\\n\" +\n    \"                                   ng-model=\\\"selectedBrochure.name\\\" />\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': isInvalidUrl}\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                            <span>URL *</span>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\"\\n\" +\n    \"                                   name=\\\"url\\\"\\n\" +\n    \"                                   type=\\\"url\\\"\\n\" +\n    \"                                   placeholder=\\\"http://\\\"\\n\" +\n    \"                                   ng-required=\\\"required\\\"\\n\" +\n    \"                                   ng-model=\\\"selectedBrochure.url\\\"\\n\" +\n    \"                                   ng-pattern=\\\"TuMediaBrochuresSidebarController.urlPattern\\\"\\n\" +\n    \"                                   ng-keyup=\\\"TuMediaBrochuresSidebarController.onKeyUp($event)\\\"\\n\" +\n    \"                                   ng-focus=\\\"setIsInvalidUrl(false)\\\"\\n\" +\n    \"\\n\" +\n    \"                                   custom-popover\\n\" +\n    \"                                   popover-html=\\\"Add a valid brochure link\\\"\\n\" +\n    \"                                   popover-placement=\\\"left\\\"\\n\" +\n    \"                                   popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                   popover-visibility=\\\"{{isInvalidUrl ? true : false}}\\\"/>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group m-b-none\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <button class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"saveBrochureForm(selectedBrochure)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                                <span>{{isEditMode() ? 'Update' : 'Save'}}</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                            <button class=\\\"btn btn-warning pull-right\\\" ng-click=\\\"clearBrochureForm(selectedBrochure)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                                <span>Clear</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresView.html',\n    \"<div ng-controller=\\\"TuMediaBrochuresController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Brochures ({{brochureItems.length}})</h3>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"sort-filter\\\" use-tu-subtypes>\\n\" +\n    \"            <a class=\\\"btn btn-link btn-overview\\\" ng-click=\\\"filter(typeOverview())\\\" ng-class=\\\"type === typeOverview() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                <span>Overview ({{(brochureItems | filter:{master:true}).length}})</span>\\n\" +\n    \"            </a>\\n\" +\n    \"            <a class=\\\"btn btn-link btn-university\\\" ng-click=\\\"filter(typeUndergraduate())\\\" ng-class=\\\"type === typeUndergraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-university\\\"></i>\\n\" +\n    \"                <span>Undergraduate ({{(brochureItems | filter:{ug:true}).length}})</span>\\n\" +\n    \"            </a>\\n\" +\n    \"            <a class=\\\"btn btn-link btn-graduation\\\" ng-click=\\\"filter(typePostgraduate())\\\" ng-class=\\\"type === typePostgraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-graduation-cap\\\"></i>\\n\" +\n    \"                <span>Postgraduate ({{(brochureItems | filter:{pg:true}).length}})</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view upload\\\" ng-class=\\\"selectedItem().id === '' ? 'selected' : 'unselected'\\\" ng-click=\\\"selectBrochure()\\\" ng-click=\\\"selectBrochure()\\\">\\n\" +\n    \"                <div class=\\\"source-link\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"filteredBrochureItems\\\">\\n\" +\n    \"                <div class=\\\"grid-view\\\" ng-class=\\\"selectedItem().id === item.id ? 'selected' : 'unselected'\\\" ng-click=\\\"selectBrochure(item)\\\" ng-repeat=\\\"item in filteredBrochureItems\\\">\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"preview\\\" ng-class=\\\"item.imageUrl ? '' : 'overlay' \\\">\\n\" +\n    \"                        <img ng-src=\\\"{{item.imageUrl || '/images/media/pdf-thumbnail.jpg'}}\\\"/>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"info\\\">\\n\" +\n    \"                        <div class=\\\"title\\\" item-order=\\\"{{item['orderType'][type]}}\\\">{{item.name}}</div>\\n\" +\n    \"                        <div class=\\\"types\\\" use-tu-subtypes>\\n\" +\n    \"                            <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                            <i class=\\\"fa fa-university\\\" ng-show=\\\"item.ug\\\"></i>\\n\" +\n    \"                            <i class=\\\"fa fa-graduation-cap\\\" ng-show=\\\"item.pg\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"actions\\\">\\n\" +\n    \"                            <a href=\\\"{{item.url}}\\\" target=\\\"_blank\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a ng-click=\\\"deleteBrochure(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 1 ? 'selected' : 'collapsed'\\\" ng-controller=\\\"TuMediaImagesSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(1)\\\">\\n\" +\n    \"        <h5>Images ({{getImageItems().length}})</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div class=\\\"addForm\\\" ng-class=\\\"getImageUploadingInProgress() ? 'modal-overlay' : '' \\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.formImage\\\" id=\\\"form-image\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\" ng-hide=\\\"selectedImage.id.length > 0\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please click on the upload sign to upload an image or drag and drop image into it.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>File must be: Less than 400KB / in jpg, jpeg format.</span><br />\\n\" +\n    \"                        <span>Images are scaled to 703 x 398 on front-end site.</span><br />\\n\" +\n    \"                        <span>Drag and drop images from left to right to change the order.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"                \\n\" +\n    \"                <div ng-show=\\\"selectedImage.id.length > 0\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\" use-tu-subtypes>\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"overview\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"overview\\\" id=\\\"overview\\\" ng-model=\\\"selectedImage.master\\\" focus-if=\\\"getDisplayIsValidType()\\\" focus-delay=\\\"250\\\" ng-change=\\\"selectedImage.master? setDisplayIsValidType(false) : ''\\\"/>\\n\" +\n    \"                                    <span>Overview</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"undergraduate\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"undergraduate\\\" id=\\\"undergraduate\\\" ng-model=\\\"selectedImage.ug\\\" ng-change=\\\"selectedImage.ug? setDisplayIsValidType(false) : ''\\\"/>\\n\" +\n    \"                                    <span>Undergraduate</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"postgraduate\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"postgraduate\\\" id=\\\"postgraduate\\\" ng-model=\\\"selectedImage.pg\\\" ng-change=\\\"selectedImage.pg? setDisplayIsValidType(false) : ''\\\"/>\\n\" +\n    \"                                    <span>Postgraduate</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div ng-class=\\\"getDisplayIsValidType()? 'has-errors' : ''\\\" >\\n\" +\n    \"                                <span \\n\" +\n    \"                                    custom-popover popover-html=\\\"Assign image to at least one of the three profiles\\\"\\n\" +\n    \"                                    popover-placement=\\\"left\\\"\\n\" +\n    \"                                    popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                    popover-visibility=\\\"{{getDisplayIsValidType() ? true : false}}\\\"></span>   \\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\" for=\\\"title\\\">\\n\" +\n    \"                            <span>Title</span>\\n\" +\n    \"                            <small>110 characters</small>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"title\\\" placeHolder=\\\"Add title\\\" maxlength=\\\"110\\\" type=\\\"text\\\" ng-model=\\\"selectedImage.name\\\" focus-if=\\\"isHighlighted\\\" focus-delay=\\\"250\\\"/>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\" for=\\\"description\\\">\\n\" +\n    \"                            <span>Description</span>\\n\" +\n    \"                            <small>160 characters</small>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <textarea id=\\\"description\\\" class=\\\"form-control\\\" name=\\\"description\\\" placeHolder=\\\"Add description\\\" maxlength=\\\"160\\\" ng-model=\\\"selectedImage.description\\\"></textarea>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group m-b-none\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <button class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': submitInProgress}\\\" ng-click=\\\"saveImageForm(selectedImage)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                                <span>{{isEditMode() ? 'Update' : 'Save'}}</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                            <button class=\\\"btn btn-warning pull-right\\\" ng-class=\\\"{'disabled': submitInProgress}\\\" ng-click=\\\"clearImageForm(selectedImage)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                                <span>{{isEditMode() ? 'Clear' : 'Cancel'}}</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesView.html',\n    \"<div ng-controller=\\\"TuMediaImagesController as TuMediaImagesController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Images ({{imageItems.length}})</h3>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"sort-filter\\\" use-tu-subtypes>\\n\" +\n    \"            <a class=\\\"btn btn-link btn-overview\\\" ng-click=\\\"filter(typeOverview(), true)\\\" ng-class=\\\"type === typeOverview() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                <span>Overview ({{uploadedImagesCount[typeOverview()]}}/{{TuMediaImagesController.maxImages}})</span>\\n\" +\n    \"            </a> | \\n\" +\n    \"            <a class=\\\"btn btn-link btn-university\\\" ng-click=\\\"filter(typeUndergraduate(), true)\\\" ng-class=\\\"type === typeUndergraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-university\\\"></i>\\n\" +\n    \"                <span>Undergraduate ({{uploadedImagesCount[typeUndergraduate()]}}/{{TuMediaImagesController.maxImages}})</span>\\n\" +\n    \"            </a> | \\n\" +\n    \"            <a class=\\\"btn btn-link btn-graduation\\\" ng-click=\\\"filter(typePostgraduate(), true)\\\" ng-class=\\\"type === typePostgraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-graduation-cap\\\"></i>\\n\" +\n    \"                <span>Postgraduate ({{uploadedImagesCount[typePostgraduate()]}}/{{TuMediaImagesController.maxImages}})</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view upload\\\" ng-class=\\\"isSelected() ? 'selected' : 'unselected'\\\" ng-click=\\\"selectImage()\\\">\\n\" +\n    \"                <div ng-show=\\\"!isTemporary()\\\">\\n\" +\n    \"                    <form name=\\\"forms.imageForm\\\"\\n\" +\n    \"                          class=\\\"dropzone image-form\\\"\\n\" +\n    \"                          enctype=\\\"multipart/form-data\\\"\\n\" +\n    \"                          ng-dropzone\\n\" +\n    \"                          dropzone=\\\"TuMediaImagesController.dropZoneImageInstance\\\"\\n\" +\n    \"                          dropzone-config=\\\"imageConfig.dropzone\\\"\\n\" +\n    \"                          event-handlers=\\\"imageConfig.eventHandlers\\\"\\n\" +\n    \"                          novalidate >\\n\" +\n    \"                        <div class=\\\"upload-image\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-upload\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"fallback\\\">\\n\" +\n    \"                            <input name=\\\"file\\\" type=\\\"file\\\" />\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"dz-message\\\" ng-show=\\\"uploadEnabled\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-upload\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"dropzone-previews\\\"></div>\\n\" +\n    \"                    </form>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"preview\\\" ng-show=\\\"isTemporary()\\\">\\n\" +\n    \"                    <img ng-src=\\\"{{item.thumbnailUrl || '/images/media/media-image.png'}}\\\"/>\\n\" +\n    \"                </div>\\n\" +\n    \"                \\n\" +\n    \"                <div class=\\\"info\\\" ng-show=\\\"isTemporary()\\\" ng-class=\\\"getImageUploadingInProgress() ? 'modal-overlay' : '' \\\">\\n\" +\n    \"                    <div class=\\\"title\\\" item-order=\\\"{{item['orderType'][type]}}\\\">\\n\" +\n    \"                        {{item.name}}\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"types\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                        <i class=\\\"fa fa-university\\\" ng-show=\\\"item.ug\\\"></i>\\n\" +\n    \"                        <i class=\\\"fa fa-graduation-cap\\\" ng-show=\\\"item.pg\\\"></i>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"actions\\\">\\n\" +\n    \"                        <a href=\\\"{{item.url}}\\\" target=\\\"_blank\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a ng-click=\\\"deleteImage(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"filteredImageItems\\\">\\n\" +\n    \"                <div class=\\\"grid-view\\\" ng-class=\\\"selectedItem().id === item.id ? 'selected' : 'unselected'\\\" ng-click=\\\"selectImage(item)\\\" ng-repeat=\\\"item in filteredImageItems\\\">\\n\" +\n    \"                    <div class=\\\"preview\\\">\\n\" +\n    \"                        <img ng-src=\\\"{{item.thumbnailUrl || '/images/media/media-image.png'}}\\\"/>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"info\\\">\\n\" +\n    \"                        <div class=\\\"title\\\" item-order=\\\"{{item['orderType'][type]}}\\\">\\n\" +\n    \"                            {{item.name}}\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"types\\\" use-tu-subtypes>\\n\" +\n    \"                            <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                            <i class=\\\"fa fa-university\\\" ng-show=\\\"item.ug\\\"></i>\\n\" +\n    \"                            <i class=\\\"fa fa-graduation-cap\\\" ng-show=\\\"item.pg\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"actions\\\">\\n\" +\n    \"                            <a ng-click=\\\"openLightboxModal($index, item)\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a ng-click=\\\"deleteImage(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <ul>\\n\" +\n    \"                <li ng-repeat=\\\"image in images\\\">\\n\" +\n    \"                    <a ng-click=\\\"openLightboxModal($index)\\\">\\n\" +\n    \"                        <img ng-src=\\\"{{image.thumbUrl}}\\\" class=\\\"img-thumbnail\\\">\\n\" +\n    \"                    </a>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 3 ? 'selected' : 'collapsed'\\\" ng-controller=\\\"TuMediaSocialMediasSidebarController as TuMediaSocialMediasSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(3)\\\">\\n\" +\n    \"        <h5>Social Media</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <p class=\\\"bold text-capitalize\\\">{{type()}}</p>\\n\" +\n    \"        \\n\" +\n    \"        <div class=\\\"addForm\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.formSocialMedia\\\" id=\\\"form-social-media\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please add your</span>\\n\" +\n    \"                        <span class=\\\"text-capitalize\\\">{{type() === \\\"other\\\" ? \\\"Website\\\" : type()}}</span>\\n\" +\n    \"                        <span>link, e.g.</span>\\n\" +\n    \"                        <span class=\\\"text-nowrap\\\">{{TuMediaSocialMediasSidebarController.selectedSocialMediaUrl}}</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div ng-repeat=\\\"selectedSocialMedia in selectedSocialMedia[type()]\\\">\\n\" +\n    \"                    <div ng-show=\\\"selectedSocialMedia.display\\\">\\n\" +\n    \"                        <div class=\\\"form-group\\\">\\n\" +\n    \"                            <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                                <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                    <label>\\n\" +\n    \"                                        <input i-checkbox type=\\\"checkbox\\\" ng-change=\\\"checkboxChanged(selectedSocialMedia, $index, 'master')\\\" ng-click=\\\"resetInvalidCheckbox($index)\\\" name=\\\"overview\\\" id=\\\"social-media-overview-{{$index}}\\\" focus-if=\\\"getDisplayTypesValidation()\\\" ng-blur=\\\"setDisplayTypesValidation(false)\\\" focus-delay=\\\"250\\\" ng-model=\\\"selectedSocialMedia.master\\\" />\\n\" +\n    \"                                        <span>Overview</span>\\n\" +\n    \"                                    </label>\\n\" +\n    \"                                </div>\\n\" +\n    \"\\n\" +\n    \"                                <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                    <label>\\n\" +\n    \"                                        <input i-checkbox type=\\\"checkbox\\\" ng-change=\\\"checkboxChanged(selectedSocialMedia, $index, 'ug')\\\" ng-click=\\\"resetInvalidCheckbox($index)\\\"  name=\\\"undergraduate\\\" id=\\\"social-media-undergraduate-{{$index}}\\\" ng-model=\\\"selectedSocialMedia.ug\\\" />\\n\" +\n    \"                                        <span>Undergraduate</span>\\n\" +\n    \"                                    </label>\\n\" +\n    \"                                </div>\\n\" +\n    \"\\n\" +\n    \"                                <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                    <label>\\n\" +\n    \"                                        <input i-checkbox type=\\\"checkbox\\\" ng-change=\\\"checkboxChanged(selectedSocialMedia, $index, 'pg')\\\" ng-click=\\\"resetInvalidCheckbox($index)\\\"  name=\\\"postgraduate\\\" id=\\\"social-media-postgraduate-{{$index}}\\\" ng-model=\\\"selectedSocialMedia.pg\\\" />\\n\" +\n    \"                                        <span>Postgraduate</span>\\n\" +\n    \"                                    </label>\\n\" +\n    \"                                </div>\\n\" +\n    \"\\n\" +\n    \"                                <div ng-class=\\\"invalidCheckboxes[$index] ? 'has-errors' : ''\\\" >\\n\" +\n    \"                                    <span \\n\" +\n    \"                                        custom-popover popover-html=\\\"Assign social media to at least one of the three profiles\\\" \\n\" +\n    \"                                        popover-placement=\\\"left\\\" \\n\" +\n    \"                                        popover-trigger=\\\"manual\\\" \\n\" +\n    \"                                        popover-visibility=\\\"{{invalidCheckboxes[$index]}}\\\"></span>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"\\n\" +\n    \"                        <div class=\\\"form-group\\\" ng-class=\\\"invalidFields[$index] ? 'has-errors' : ''\\\">\\n\" +\n    \"                            <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                                <span>URL *</span>\\n\" +\n    \"                            </label>\\n\" +\n    \"                            <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\"\\n\" +\n    \"                                   name=\\\"url{{$index}}\\\"\\n\" +\n    \"                                   type=\\\"url\\\"\\n\" +\n    \"                                   placeholder=\\\"http://\\\"\\n\" +\n    \"                                   focus-if=\\\"(isHighlighted && $index === 0) ? true : false\\\"\\n\" +\n    \"                                   focus-delay=\\\"250\\\"\\n\" +\n    \"                                   ng-pattern=\\\"TuMediaSocialMediasSidebarController.urlPattern\\\"\\n\" +\n    \"                                   ng-model=\\\"selectedSocialMedia.url\\\"\\n\" +\n    \"                                   ng-focus = \\\"resetInvalidField($index)\\\"\\n\" +\n    \"                                   ng-keyup=\\\"TuMediaSocialMediasSidebarController.onKeyUp($event, type(), $index)\\\"\\n\" +\n    \"\\n\" +\n    \"                                   custom-popover\\n\" +\n    \"                                   popover-trigger = \\\"manual\\\"\\n\" +\n    \"                                   popover-visibility = \\\"{{invalidFields[$index]}}\\\"\\n\" +\n    \"                                   popover-html=\\\"Add a valid <span class='text-capitalize'>{{type() === 'other' ? 'Website' : type()}}</span> link\\\"\\n\" +\n    \"                                   popover-placement=\\\"left\\\"/>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"separator dashed\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group m-b-none\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <button class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"saveSocialMediaForm()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>{{isEditMode(type()) ? 'Update' : 'Save'}}</span>\\n\" +\n    \"                        </button>\\n\" +\n    \"                        <button class=\\\"btn btn-warning pull-right\\\" ng-click=\\\"clearSocialMediaForm()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Clear</span>\\n\" +\n    \"                        </button>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaView.html',\n    \"<div ng-controller=\\\"TuMediaSocialMediasController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Social Media</h3>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"sort-filter\\\">\\n\" +\n    \"            <a class=\\\"btn btn-link btn-overview\\\" ng-click=\\\"filter(typeOverview())\\\" ng-class=\\\"type === typeOverview() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                <span>Overview</span>\\n\" +\n    \"            </a>\\n\" +\n    \"            <a class=\\\"btn btn-link btn-university\\\" ng-click=\\\"filter(typeUndergraduate())\\\" ng-class=\\\"type === typeUndergraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-university\\\"></i>\\n\" +\n    \"                <span>Undergraduate</span>\\n\" +\n    \"            </a>\\n\" +\n    \"            <a class=\\\"btn btn-link btn-graduation\\\" ng-click=\\\"filter(typePostgraduate())\\\" ng-class=\\\"type === typePostgraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-graduation-cap\\\"></i>\\n\" +\n    \"                <span>Postgraduate</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view\\\" ng-repeat=\\\"(key, item) in socialMediaItems\\\" ng-class=\\\"type === key ? 'selected' : 'unselected'\\\" ng-click=\\\"selectSocialMedia(key)\\\">\\n\" +\n    \"                \\n\" +\n    \"                <div class=\\\"add-link\\\" ng-class=\\\"item.master || item.ug || item.pg ? 'hidden' : 'visible'\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"preview\\\" ng-class=\\\"item.master || item.ug || item.pg ? '' : 'overlay'\\\">\\n\" +\n    \"                    <img ng-src=\\\"/images/media/{{key}}-thumbnail.jpg\\\"/>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"info\\\">\\n\" +\n    \"                    <div class=\\\"title text-capitalize\\\">{{key}}</div>\\n\" +\n    \"                    <div class=\\\"types\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                        <i class=\\\"fa fa-university\\\" ng-show=\\\"item.ug\\\"></i>\\n\" +\n    \"                        <i class=\\\"fa fa-graduation-cap\\\" ng-show=\\\"item.pg\\\"></i>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"actions hidden\\\">\\n\" +\n    \"                        <a href=\\\"{{item.url}}\\\" target=\\\"_blank\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a ng-click=\\\"deleteVideo(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosSidebarView.html',\n    \"<div class=\\\"ibox\\\" ng-class=\\\"getSelected() === 2 ? 'selected' : 'collapsed'\\\" ng-controller=\\\"TuMediaVideosSidebarController as TuMediaVideosSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title clickable\\\" ng-click=\\\"setSelected(2)\\\">\\n\" +\n    \"        <h5>Videos ({{getVideoItems().length}})</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a>\\n\" +\n    \"                <i class=\\\"fa fa-chevron-up\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div class=\\\"addForm\\\">\\n\" +\n    \"            <form id=\\\"form-video\\\" class=\\\"form-horizontal\\\" name=\\\"forms.formVideo\\\" novalidate>\\n\" +\n    \"                <div class=\\\"alert alert-info\\\">\\n\" +\n    \"                    <p>\\n\" +\n    \"                        <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"                        <span>Please add a YouTube link. Shortened video links with .be extension are not allowed.</span><br />\\n\" +\n    \"                        <span>Video title & description will be retrieved from YouTube.</span><br />\\n\" +\n    \"                        <span>Drag and drop videos from left to right to change the order.</span>\\n\" +\n    \"                    </p>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div ng-class=\\\"getHasErrors()? 'has-errors' : ''\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\" use-tu-subtypes>\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"overview\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"overview\\\" id=\\\"overview\\\" focus-if=\\\"getDisplayTypesValidation()\\\" focus-delay=\\\"250\\\" ng-model=\\\"selectedVideo.master\\\" ng-change=\\\"selectedVideo.master? setDisplayTypesValidation(false) : ''\\\"/>\\n\" +\n    \"                                    <span>Overview</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"undergraduate\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"undergraduate\\\" id=\\\"undergraduate\\\" ng-model=\\\"selectedVideo.ug\\\" ng-change=\\\"selectedVideo.ug? setDisplayTypesValidation(false) : ''\\\" />\\n\" +\n    \"                                    <span>Undergraduate</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            \\n\" +\n    \"                            <div class=\\\"checkbox-inline i-checkbox\\\">\\n\" +\n    \"                                <label for=\\\"postgraduate\\\">\\n\" +\n    \"                                    <input i-checkbox type=\\\"checkbox\\\" name=\\\"postgraduate\\\" id=\\\"postgraduate\\\" ng-model=\\\"selectedVideo.pg\\\" ng-change=\\\"selectedVideo.pg? setDisplayTypesValidation(false) : ''\\\"/>\\n\" +\n    \"                                    <span>Postgraduate</span>\\n\" +\n    \"                                </label>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div ng-class=\\\"getDisplayTypesValidation()? 'has-errors' : ''\\\" >\\n\" +\n    \"                                <span \\n\" +\n    \"                                    custom-popover popover-html=\\\"Assign video to at least one of the three profiles\\\"\\n\" +\n    \"                                    popover-placement=\\\"left\\\"\\n\" +\n    \"                                    popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                    popover-visibility=\\\"{{getDisplayTypesValidation() ? true : false}}\\\"></span>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': getHasErrors()}\\\">\\n\" +\n    \"                        <label class=\\\"control-label col-sm-3 col-md-2\\\">\\n\" +\n    \"                            <span>URL *</span>\\n\" +\n    \"                        </label>\\n\" +\n    \"                        <div class=\\\"col-sm-9 col-md-10\\\">\\n\" +\n    \"                            <input class=\\\"form-control\\\"\\n\" +\n    \"                                   name=\\\"url\\\"\\n\" +\n    \"                                   type=\\\"url\\\"\\n\" +\n    \"                                   placeholder=\\\"http://\\\"\\n\" +\n    \"                                   ng-required=\\\"required\\\"\\n\" +\n    \"                                   focus-if=\\\"isHighlighted\\\"\\n\" +\n    \"                                   focus-delay=\\\"250\\\"\\n\" +\n    \"                                   ng-model=\\\"selectedVideo.url\\\"\\n\" +\n    \"                                   ng-pattern=\\\"youtubeUrlPattern\\\"\\n\" +\n    \"                                   ng-keyup=\\\"TuMediaVideosSidebarController.onKeyUp($event)\\\"\\n\" +\n    \"                                   ng-focus=\\\"setHasErrors(false)\\\"\\n\" +\n    \"\\n\" +\n    \"                                   custom-popover\\n\" +\n    \"                                   popover-html=\\\"Add a valid YouTube link\\\"\\n\" +\n    \"                                   popover-placement=\\\"left\\\"\\n\" +\n    \"                                   popover-trigger=\\\"manual\\\"\\n\" +\n    \"                                   popover-visibility=\\\"{{getHasErrors() ? true : false}}\\\"/>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"form-group m-b-none\\\">\\n\" +\n    \"                        <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                            <button class=\\\"btn btn-primary pull-right\\\" ng-click=\\\"saveVideoForm(selectedVideo)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                                <span>{{isEditMode() ? 'Update' : 'Save'}}</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                             <button class=\\\"btn btn-warning pull-right\\\" ng-click=\\\"clearVideoForm(selectedVideo)\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                                <span>Clear</span>\\n\" +\n    \"                            </button>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosView.html',\n    \"<div ng-controller=\\\"TuMediaVideosController\\\">\\n\" +\n    \"    <h3 class=\\\"heading\\\">Videos ({{videoItems.length}})</h3>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"sort-filter\\\" use-tu-subtypes>\\n\" +\n    \"            <a class=\\\"btn btn-link btn-overview\\\" ng-click=\\\"filter(typeOverview())\\\" ng-class=\\\"type === typeOverview() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                <span>Overview ({{(videoItems | filter:{master:true}).length}})</span>\\n\" +\n    \"            </a> |\\n\" +\n    \"            <a class=\\\"btn btn-link btn-university\\\" ng-click=\\\"filter(typeUndergraduate())\\\" ng-class=\\\"type === typeUndergraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-university\\\"></i>\\n\" +\n    \"                <span>Undergraduate ({{(videoItems | filter:{ug:true}).length}})</span>\\n\" +\n    \"            </a> |\\n\" +\n    \"            <a class=\\\"btn btn-link btn-graduation\\\" ng-click=\\\"filter(typePostgraduate())\\\" ng-class=\\\"type === typePostgraduate() ? 'active' : 'inactive'\\\">\\n\" +\n    \"                <i class=\\\"fa fa-graduation-cap\\\"></i>\\n\" +\n    \"                <span>Postgraduate ({{(videoItems | filter:{pg:true}).length}})</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"gallery\\\">\\n\" +\n    \"            <div class=\\\"grid-view upload\\\" ng-class=\\\"selectedItem().id === '' ? 'selected' : 'unselected'\\\" ng-click=\\\"selectVideo()\\\" ng-click=\\\"selectVideo()\\\">\\n\" +\n    \"                <div class=\\\"source-link\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div ui-sortable=\\\"sortableOptions\\\" ng-model=\\\"filteredVideoItems\\\">\\n\" +\n    \"                <div class=\\\"grid-view\\\" ng-class=\\\"selectedItem().id === item.id ? 'selected' : 'unselected'\\\" ng-click=\\\"selectVideo(item)\\\" ng-repeat=\\\"item in filteredVideoItems\\\">\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"preview\\\" ng-class=\\\"item.imageUrl ? '' : 'overlay' \\\">\\n\" +\n    \"                        <img ng-src=\\\"{{item.imageUrl || '/images/media/youtube-thumbnail.jpg'}}\\\"/>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    \\n\" +\n    \"                    <div class=\\\"info\\\">\\n\" +\n    \"                        <div class=\\\"title\\\" item-order=\\\"{{item['orderType'][type]}}\\\">\\n\" +\n    \"                            {{item.name || 'Retrieving title...' }}\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"types\\\" use-tu-subtypes>\\n\" +\n    \"                            <i class=\\\"fa fa-book\\\" ng-show=\\\"item.master\\\"></i>\\n\" +\n    \"                            <i class=\\\"fa fa-university\\\" ng-show=\\\"item.ug\\\"></i>\\n\" +\n    \"                            <i class=\\\"fa fa-graduation-cap\\\" ng-show=\\\"item.pg\\\"></i>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"actions\\\">\\n\" +\n    \"                            <a href=\\\"{{item.url}}\\\" target=\\\"_blank\\\" title=\\\"View {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-search\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a ng-click=\\\"deleteVideo(item)\\\" title=\\\"Delete {{item.name}}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-times-circle\\\"></i>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/tuProfileMediaLinkManagerView.html',\n    \"<div class=\\\"nested-ibox\\\" ng-hide=\\\"showUpgradeForm\\\" ng-controller=\\\"TuMediaCommonSidebarController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h4>Media Manager ({{getGeneralCounter()}})</h4>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox\\\">\\n\" +\n    \"        <div class=\\\"ibox-content\\\">\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesSidebarView.html'\\\"></div>\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosSidebarView.html'\\\"></div>\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaSidebarView.html'\\\"></div>\\n\" +\n    \"            <div include-replace ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresSidebarView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/media/tuProfileMediaView.html',\n    \"<div ng-controller=\\\"TuProfileMediaController as TuProfileMediaController\\\">\\n\" +\n    \"    <div upgrade-banner\\n\" +\n    \"         info-block-class=\\\"isRightSidePanelActive() ? 'col-lg-9' : 'col-lg-10'\\\"\\n\" +\n    \"         buttons-block-class=\\\"isRightSidePanelActive() ? 'col-lg-3' : 'col-lg-2'\\\"\\n\" +\n    \"         basic-profile=\\\"!tuIsAdvanced ? true : false\\\"\\n\" +\n    \"         upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"         upgrade-click=\\\"toggleUpgradeForm()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"    <div ng-class=\\\"tuIsAdvanced ? '': 'modal-overlay-35'\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isMediaReloading\\\"></div>\\n\" +\n    \"        <div ng-if=\\\"!isMediaReloading\\\">\\n\" +\n    \"            <div ng-show=\\\"TuProfileMediaController.isImagesTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/images/tuProfileMediaImagesView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"TuProfileMediaController.isVideosTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/videos/tuProfileMediaVideosView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"TuProfileMediaController.isSocialMediaTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/socialMedia/tuProfileMediaSocialMediaView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"TuProfileMediaController.isBrochuresTabActive()\\\" ng-include src=\\\"'/scripts/components/profiles/tu/media/subtabs/brochures/tuProfileMediaBrochuresView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/partial/advancedMasterSubTab.html',\n    \"<form name=\\\"forms.overviewAdvancedMasterForm\\\" enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"        <h3 class=\\\"heading\\\">Advanced Description *</h3>\\n\" +\n    \"        <a class=\\\"btn btn-warning btn-history\\\" ng-show=\\\"!historyDisabled\\\" ng-click=\\\"handleTuOverviewHistoryLogClick('master', true)\\\">\\n\" +\n    \"            <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"        <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"historyDisabled\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': isAdvancedOverviewEmpty}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TuProfileOverviewController.textEditorAdvancedOptions\\\"\\n\" +\n    \"                ng-model=\\\"tuProfile.advancedMasterOverview\\\"\\n\" +\n    \"                on-focus=\\\"TuProfileOverviewController.setOverviewInvalid('advancedOverview')\\\"\\n\" +\n    \"                on-change=\\\"TuProfileOverviewController.advancedMasterOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TuProfileOverviewController.advancedMasterOverviewWords = countWords(tuProfile.advancedMasterOverview)\\\"\\n\" +\n    \"                count-word=\\\"TuProfileOverviewController.advancedMasterOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"            <span ng-class=\\\"{'text-red': TuProfileOverviewController.isAdvancedOverviewInvalid(TuProfileOverviewController.advancedMasterOverviewWords)}\\\">\\n\" +\n    \"                <span class=\\\"bold\\\">{{TuProfileOverviewController.advancedMasterOverviewWords}}</span>\\n\" +\n    \"                <span>words inserted</span>\\n\" +\n    \"            </span>\\n\" +\n    \"            <span class=\\\"pull-right\\\">Maximum {{TuProfileOverviewController.advancedDescriptionWordLimit}} words</span>\\n\" +\n    \"            \\n\" +\n    \"            <div\\n\" +\n    \"                focus-delay=\\\"250\\\"\\n\" +\n    \"                custom-popover\\n\" +\n    \"                popover-html=\\\"Add a general description about your university\\\"\\n\" +\n    \"                popover-placement=\\\"left\\\"\\n\" +\n    \"                popover-trigger=\\\"manual\\\"\\n\" +\n    \"                popover-visibility=\\\"{{isAdvancedOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <div  class=\\\"row\\\">\\n\" +\n    \"            <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"                <div>\\n\" +\n    \"                    <h3>University Website</h3>\\n\" +\n    \"                </div>\\n\" +\n    \"                <input type=\\\"text\\\"\\n\" +\n    \"                       placeholder=\\\"http://\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.masterWebsiteUrl\\\"\\n\" +\n    \"                       ng-keyup=\\\"TuProfileOverviewController.onKeyUp($event)\\\"\\n\" +\n    \"                       class=\\\"form-control\\\" />\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"                <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"                    <h3 class=\\\"inline\\\">Request info</h3>\\n\" +\n    \"                    <span class=\\\"small dfn text-left text-nowrap\\\"> (please select one) </span>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"display-inline-request-info request-info-title\\\">\\n\" +\n    \"                    <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                        <input i-checkbox type=\\\"radio\\\" value=\\\"email\\\" ng-model=\\\"tuProfile.requestInfoTypeMaster\\\"> Email\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <span class=\\\"or-checkboxes-request-info\\\">OR</span>\\n\" +\n    \"                    <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                        <input i-checkbox type=\\\"radio\\\" value=\\\"url\\\" ng-model=\\\"tuProfile.requestInfoTypeMaster\\\"> URL\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div ng-show=\\\"tuProfile.requestInfoTypeMaster === 'url'\\\" class=\\\"url-option\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"text\\\" placeholder=\\\"Title\\\" ng-model=\\\"tuProfile.masterRequestInfoUrlTitle\\\" class=\\\"form-control\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"url\\\"\\n\" +\n    \"                            name=\\\"tuProfile.masterRequestInfoUrl\\\"\\n\" +\n    \"                            placeholder=\\\"URL\\\"\\n\" +\n    \"                            ng-model=\\\"tuProfile.masterRequestInfoUrl\\\"\\n\" +\n    \"                            ng-keyup=\\\"TuProfileOverviewController.onKeyUp($event)\\\"\\n\" +\n    \"                            class=\\\"form-control\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div ng-show=\\\"tuProfile.requestInfoTypeMaster === 'email'\\\" class=\\\"email-option\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"email\\\" placeholder=\\\"Email\\\" ng-model=\\\"tuProfile.masterRequestInfoEmail\\\" class=\\\"form-control\\\" >\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"tab-footer\\\">\\n\" +\n    \"            <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                ng-class=\\\"{'disabled': overviewAdvancedMasterFormSubmitInProgress}\\\"\\n\" +\n    \"                ng-click=\\\"handleOverviewAdvancedMasterDataSubmit()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                <span>Update</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</form>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/partial/advancedPgSubTab.html',\n    \"<form name=\\\"forms.overviewAdvancedPgForm\\\" enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"        <h3 class=\\\"heading\\\">Advanced Description *</h3>\\n\" +\n    \"        <a class=\\\"btn btn-warning btn-history\\\" ng-show=\\\"!historyDisabled\\\" ng-click=\\\"handleTuOverviewHistoryLogClick('pg', true)\\\">\\n\" +\n    \"            <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"        <div wave-spinner=\\\"\\\" class=\\\"text-right\\\" ng-show=\\\"historyDisabled\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': isAdvancedPgOverviewEmpty}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TuProfileOverviewController.textEditorAdvancedOptions\\\"\\n\" +\n    \"                ng-model=\\\"tuProfile.advancedPgOverview\\\"\\n\" +\n    \"                on-focus=\\\"TuProfileOverviewController.setOverviewInvalid('advancedPgOverview')\\\"\\n\" +\n    \"                on-change=\\\"TuProfileOverviewController.advancedPgOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TuProfileOverviewController.advancedPgOverviewWords = countWords(tuProfile.advancedPgOverview)\\\"\\n\" +\n    \"                count-word=\\\"TuProfileOverviewController.advancedPgOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"            <span ng-class=\\\"{'text-red': TuProfileOverviewController.isAdvancedOverviewInvalid(TuProfileOverviewController.advancedPgOverviewWords)}\\\">\\n\" +\n    \"                <span class=\\\"bold\\\">{{TuProfileOverviewController.advancedPgOverviewWords}}</span>\\n\" +\n    \"                <span>words inserted</span>\\n\" +\n    \"            </span>\\n\" +\n    \"            <span class=\\\"pull-right\\\">Maximum {{TuProfileOverviewController.advancedDescriptionWordLimit}} words</span>\\n\" +\n    \"            <div\\n\" +\n    \"              focus-delay=\\\"250\\\"\\n\" +\n    \"              custom-popover\\n\" +\n    \"              popover-html=\\\"Add a general description about the Postgraduate Courses you offer\\\"\\n\" +\n    \"              popover-placement=\\\"left\\\"\\n\" +\n    \"              popover-trigger=\\\"manual\\\"\\n\" +\n    \"              popover-visibility=\\\"{{isAdvancedPgOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"row\\\">\\n\" +\n    \"            <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"                <div>\\n\" +\n    \"                    <h3>University Website</h3>\\n\" +\n    \"                </div>\\n\" +\n    \"                <input type=\\\"text\\\"\\n\" +\n    \"                       placeholder=\\\"http://\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.pgWebsiteUrl\\\"\\n\" +\n    \"                       ng-keyup=\\\"TuProfileOverviewController.onKeyUp($event)\\\"\\n\" +\n    \"                       class=\\\"form-control\\\" />\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"                <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"                    <h3 class=\\\"inline\\\">Request info</h3>\\n\" +\n    \"                    <span class=\\\"small dfn text-left text-nowrap\\\"> (please select one) </span>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"display-inline-request-info request-info-title\\\">\\n\" +\n    \"                    <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                        <input i-checkbox type=\\\"radio\\\" name=\\\"requestInfoOverview\\\" value=\\\"email\\\" ng-model=\\\"tuProfile.requestInfoTypePg\\\"> Email\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <span class=\\\"or-checkboxes-request-info\\\">OR</span>\\n\" +\n    \"                    <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                        <input i-checkbox type=\\\"radio\\\" name=\\\"requestInfoOverview\\\" value=\\\"url\\\" ng-model=\\\"tuProfile.requestInfoTypePg\\\"> URL\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div ng-show=\\\"tuProfile.requestInfoTypePg === 'url'\\\" class=\\\"url-option\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"text\\\" placeholder=\\\"Title\\\" ng-model=\\\"tuProfile.pgRequestInfoUrlTitle\\\" class=\\\"form-control\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"url\\\"\\n\" +\n    \"                            name=\\\"tuProfile.pgRequestInfoUrl\\\"\\n\" +\n    \"                            placeholder=\\\"URL\\\"\\n\" +\n    \"                            ng-model=\\\"tuProfile.pgRequestInfoUrl\\\"\\n\" +\n    \"                            ng-keyup=\\\"TuProfileOverviewController.onKeyUp($event)\\\"\\n\" +\n    \"                            class=\\\"form-control\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div ng-show=\\\"tuProfile.requestInfoTypePg === 'email'\\\" class=\\\"email-option\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"email\\\" placeholder=\\\"Email\\\" ng-model=\\\"tuProfile.pgRequestInfoEmail\\\" class=\\\"form-control\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"tab-footer\\\">  \\n\" +\n    \"            <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                ng-class=\\\"{'disabled': overviewAdvancedPgFormSubmitInProgress}\\\"\\n\" +\n    \"                ng-click=\\\"handleOverviewAdvancedPgDataSubmit()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                <span>Update</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</form>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/partial/advancedUgSubTab.html',\n    \"<form name=\\\"forms.overviewAdvancedUgForm\\\" enctype=\\\"multipart/form-data\\\">    \\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"        <h3 class=\\\"heading\\\">Advanced Description *</h3>\\n\" +\n    \"        <a class=\\\"btn btn-warning btn-history\\\" ng-show=\\\"!historyDisabled\\\" ng-click=\\\"handleTuOverviewHistoryLogClick('ug', true)\\\">\\n\" +\n    \"            <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"        <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"historyDisabled\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': isAdvancedUgOverviewEmpty}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TuProfileOverviewController.textEditorAdvancedOptions\\\"\\n\" +\n    \"                ng-model=\\\"tuProfile.advancedUgOverview\\\"\\n\" +\n    \"                on-focus=\\\"TuProfileOverviewController.setOverviewInvalid('advancedUgOverview')\\\"\\n\" +\n    \"                on-change=\\\"TuProfileOverviewController.advancedUgOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TuProfileOverviewController.advancedUgOverviewWords = countWords(tuProfile.advancedUgOverview)\\\"\\n\" +\n    \"                count-word=\\\"TuProfileOverviewController.advancedUgOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"            <span ng-class=\\\"{'text-red': TuProfileOverviewController.isAdvancedOverviewInvalid(TuProfileOverviewController.advancedUgOverviewWords)}\\\">\\n\" +\n    \"                <span class=\\\"bold\\\">{{TuProfileOverviewController.advancedUgOverviewWords}}</span>\\n\" +\n    \"                <span>words inserted</span>\\n\" +\n    \"            </span>\\n\" +\n    \"            <span class=\\\"pull-right\\\">Maximum {{TuProfileOverviewController.advancedDescriptionWordLimit}} words</span>\\n\" +\n    \"        \\n\" +\n    \"            <div\\n\" +\n    \"              focus-delay=\\\"250\\\"\\n\" +\n    \"              custom-popover\\n\" +\n    \"              popover-html=\\\"Add a general description about the Undergraduate Courses you offer\\\"\\n\" +\n    \"              popover-placement=\\\"left\\\"\\n\" +\n    \"              popover-trigger=\\\"manual\\\"\\n\" +\n    \"              popover-visibility=\\\"{{isAdvancedUgOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <div  class=\\\"row\\\">\\n\" +\n    \"            <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"                <div>\\n\" +\n    \"                    <h3>University Website</h3>\\n\" +\n    \"                </div>\\n\" +\n    \"                <input type=\\\"text\\\"\\n\" +\n    \"                       placeholder=\\\"http://\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.ugWebsiteUrl\\\"\\n\" +\n    \"                       ng-keyup=\\\"TuProfileOverviewController.onKeyUp($event)\\\"\\n\" +\n    \"                       class=\\\"form-control\\\" />\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"                <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"                    <h3 class=\\\"inline\\\">Request info</h3>\\n\" +\n    \"                    <span class=\\\"small dfn text-left text-nowrap\\\"> (please select one) </span>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"display-inline-request-info request-info-title\\\">\\n\" +\n    \"                    <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                        <input i-checkbox type=\\\"radio\\\" name=\\\"requestInfoOverview\\\" value=\\\"email\\\" ng-model=\\\"tuProfile.requestInfoTypeUg\\\"> Email\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <span class=\\\"or-checkboxes-request-info\\\">OR</span>\\n\" +\n    \"                    <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                        <input i-checkbox type=\\\"radio\\\" name=\\\"requestInfoOverview\\\" value=\\\"url\\\" ng-model=\\\"tuProfile.requestInfoTypeUg\\\"> URL\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div ng-show=\\\"tuProfile.requestInfoTypeUg === 'url'\\\" class=\\\"url-option\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"text\\\" placeholder=\\\"Title\\\" ng-model=\\\"tuProfile.ugRequestInfoUrlTitle\\\" class=\\\"form-control\\\" >\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"url\\\"\\n\" +\n    \"                            name=\\\"tuProfile.ugRequestInfoUrl\\\"\\n\" +\n    \"                            placeholder=\\\"URL\\\"\\n\" +\n    \"                            ng-model=\\\"tuProfile.ugRequestInfoUrl\\\"\\n\" +\n    \"                            ng-keyup=\\\"TuProfileOverviewController.onKeyUp($event)\\\"\\n\" +\n    \"                            class=\\\"form-control\\\" />\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div ng-show=\\\"tuProfile.requestInfoTypeUg === 'email'\\\" class=\\\"email-option\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input type=\\\"email\\\" placeholder=\\\"Email\\\" ng-model=\\\"tuProfile.ugRequestInfoEmail\\\" class=\\\"form-control\\\" >\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        \\n\" +\n    \"        <div class=\\\"tab-footer\\\">\\n\" +\n    \"            <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                ng-class=\\\"{'disabled': overviewBasicUgFormSubmitInProgress}\\\"\\n\" +\n    \"                ng-click=\\\"handleOverviewAdvancedUgDataSubmit()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                <span>Update</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</form>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/partial/basicMasterSubTab.html',\n    \"<form name=\\\"forms.overviewBasicMasterForm\\\" enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"      <h3 class=\\\"heading\\\">Basic Description *</h3>\\n\" +\n    \"      <a class=\\\"btn btn-warning btn-history\\\" ng-show=\\\"!historyDisabled\\\" ng-click=\\\"handleTuOverviewHistoryLogClick('master')\\\">\\n\" +\n    \"          <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"      </a>\\n\" +\n    \"      <div wave-spinner=\\\"\\\" class=\\\"text-right\\\" ng-show=\\\"historyDisabled\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': isBasicOverviewEmpty}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TuProfileOverviewController.textEditorBasicOptions\\\"\\n\" +\n    \"                ng-model=\\\"tuProfile.basicMasterOverview\\\"\\n\" +\n    \"                on-focus=\\\"TuProfileOverviewController.setOverviewInvalid('basicOverview')\\\"\\n\" +\n    \"                on-change=\\\"TuProfileOverviewController.basicMasterOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TuProfileOverviewController.basicMasterOverviewWords = countWords(tuProfile.basicMasterOverview)\\\"\\n\" +\n    \"                count-word=\\\"TuProfileOverviewController.basicMasterOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"        <span ng-class=\\\"{'text-red': TuProfileOverviewController.isBasicOverviewInvalid(TuProfileOverviewController.basicMasterOverviewWords)}\\\">\\n\" +\n    \"          <span class=\\\"bold\\\">{{TuProfileOverviewController.basicMasterOverviewWords}}</span>\\n\" +\n    \"          <span>words inserted</span>\\n\" +\n    \"        </span>\\n\" +\n    \"        <span class=\\\"pull-right\\\">Maximum {{TuProfileOverviewController.basicDescriptionWordLimit}} words</span>\\n\" +\n    \"        <div\\n\" +\n    \"            focus-delay=\\\"250\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add a general description about your university\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{isBasicOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"      </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"tab-footer\\\">\\n\" +\n    \"          <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"            ng-class=\\\"{'disabled': overviewBasicMasterFormSubmitInProgress}\\\"\\n\" +\n    \"            ng-click=\\\"handleOverviewBasicMasterDataSubmit()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"            <span>Update</span>\\n\" +\n    \"          </a>\\n\" +\n    \"      </div>\\n\" +\n    \"\\n\" +\n    \"    </div>    \\n\" +\n    \"</form>\\n\" +\n    \"\\n\" +\n    \"<div upgrade-banner\\n\" +\n    \"     info-block-class=\\\"isRightSidePanelActive() ? 'col-lg-9' : 'col-lg-10'\\\"\\n\" +\n    \"     buttons-block-class=\\\"isRightSidePanelActive() ? 'col-lg-3' : 'col-lg-2'\\\"\\n\" +\n    \"     basic-profile=\\\"true\\\"\\n\" +\n    \"     upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"     upgrade-click=\\\"toggleUpgradeForm()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"locked\\\">\\n\" +\n    \"    <div  class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div>\\n\" +\n    \"                <h3>University Website</h3>\\n\" +\n    \"            </div>\\n\" +\n    \"            <input type=\\\"text\\\"\\n\" +\n    \"                   disabled\\n\" +\n    \"                   placeholder=\\\"http://\\\"\\n\" +\n    \"                   ng-model=\\\"tuProfile.masterWebsiteUrl\\\"\\n\" +\n    \"                   class=\\\"form-control\\\" />\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"                <h3 class=\\\"inline\\\">Request info</h3>\\n\" +\n    \"                <span class=\\\"small dfn text-left text-nowrap\\\"> (please select one) </span>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"display-inline-request-info request-info-title\\\">\\n\" +\n    \"                <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                    <input i-checkbox\\n\" +\n    \"                       disabled\\n\" +\n    \"                       type=\\\"radio\\\"\\n\" +\n    \"                       value=\\\"email\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.requestInfoTypeMaster\\\"> Email\\n\" +\n    \"                </div>\\n\" +\n    \"                <span class=\\\"or-checkboxes-request-info\\\">OR</span>\\n\" +\n    \"                <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                    <input i-checkbox\\n\" +\n    \"                       disabled\\n\" +\n    \"                       type=\\\"radio\\\"\\n\" +\n    \"                       value=\\\"url\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.requestInfoTypeMaster\\\"> URL\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ng-show=\\\"tuProfile.requestInfoTypeMaster === 'url'\\\" class=\\\"url-option\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"Title\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.masterRequestInfoUrlTitle\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"url\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"URL\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.masterRequestInfoUrl\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ng-show=\\\"tuProfile.requestInfoTypeMaster === 'email'\\\" class=\\\"email-option\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"email\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"Email\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.masterRequestInfoEmail\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/partial/basicPgSubTab.html',\n    \"<form name=\\\"forms.overviewBasicPgForm\\\" enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"      <h3 class=\\\"heading\\\">Basic Description *</h3>\\n\" +\n    \"      <a class=\\\"btn btn-warning btn-history\\\"\\n\" +\n    \"        ng-class=\\\"{'disabled': historyDisabled}\\\"\\n\" +\n    \"        ng-click=\\\"handleTuOverviewHistoryLogClick('pg')\\\">\\n\" +\n    \"        <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"      </a>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': isBasicPgOverviewEmpty}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TuProfileOverviewController.textEditorBasicOptions\\\"\\n\" +\n    \"                ng-model=\\\"tuProfile.basicPgOverview\\\"\\n\" +\n    \"                on-focus=\\\"TuProfileOverviewController.setOverviewInvalid('basicPgOverview')\\\"\\n\" +\n    \"                on-change=\\\"TuProfileOverviewController.basicPgOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TuProfileOverviewController.basicPgOverviewWords = countWords(tuProfile.basicPgOverview)\\\"\\n\" +\n    \"                count-word=\\\"TuProfileOverviewController.basicPgOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"        <span ng-class=\\\"{'text-red': TuProfileOverviewController.isBasicOverviewInvalid(TuProfileOverviewController.basicPgOverviewWords)}\\\">\\n\" +\n    \"          <span class=\\\"bold\\\">{{TuProfileOverviewController.basicPgOverviewWords}}</span>\\n\" +\n    \"          <span>words inserted</span>\\n\" +\n    \"        </span>\\n\" +\n    \"        <span class=\\\"pull-right\\\">Maximum {{TuProfileOverviewController.basicDescriptionWordLimit}} words</span>\\n\" +\n    \"      \\n\" +\n    \"        <div\\n\" +\n    \"            focus-delay=\\\"250\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add a general description about the Postgraduate Courses you offer\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{isBasicPgOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"      </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"tab-footer\\\">\\n\" +\n    \"        <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"          ng-class=\\\"{'disabled': overviewTabOverviewSubTabSubmitInProgress}\\\"\\n\" +\n    \"          ng-click=\\\"handleOverviewBasicPgDataSubmit()\\\">\\n\" +\n    \"          <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"          <span>Update</span>\\n\" +\n    \"        </a>\\n\" +\n    \"      </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</form>\\n\" +\n    \"\\n\" +\n    \"<div upgrade-banner\\n\" +\n    \"     info-block-class=\\\"isRightSidePanelActive() ? 'col-lg-9' : 'col-lg-10'\\\"\\n\" +\n    \"     buttons-block-class=\\\"isRightSidePanelActive() ? 'col-lg-3' : 'col-lg-2'\\\"\\n\" +\n    \"     basic-profile=\\\"true\\\"\\n\" +\n    \"     upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"     upgrade-click=\\\"toggleUpgradeForm()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"locked\\\">\\n\" +\n    \"    <div  class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div>\\n\" +\n    \"                <h3>University Website</h3>\\n\" +\n    \"            </div>\\n\" +\n    \"            <input type=\\\"text\\\"\\n\" +\n    \"                   disabled\\n\" +\n    \"                   placeholder=\\\"http://\\\"\\n\" +\n    \"                   ng-model=\\\"tuProfile.pgWebsiteUrl\\\"\\n\" +\n    \"                   class=\\\"form-control\\\" />\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"                <h3 class=\\\"inline\\\">Request info</h3>\\n\" +\n    \"                <span class=\\\"small dfn text-left text-nowrap\\\"> (please select one) </span>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"display-inline-request-info request-info-title\\\">\\n\" +\n    \"                <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                    <input i-checkbox\\n\" +\n    \"                       disabled\\n\" +\n    \"                       type=\\\"radio\\\"\\n\" +\n    \"                       value=\\\"email\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.requestInfoTypePg\\\"> Email\\n\" +\n    \"                </div>\\n\" +\n    \"                <span class=\\\"or-checkboxes-request-info\\\">OR</span>\\n\" +\n    \"                <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                    <input i-checkbox\\n\" +\n    \"                       disabled\\n\" +\n    \"                       type=\\\"radio\\\"\\n\" +\n    \"                       value=\\\"url\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.requestInfoTypePg\\\"> URL\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ng-show=\\\"tuProfile.requestInfoTypePg === 'url'\\\" class=\\\"url-option\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"Title\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.pgRequestInfoUrlTitle\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"url\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"URL\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.pgRequestInfoUrl\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ng-show=\\\"tuProfile.requestInfoTypePg === 'email'\\\" class=\\\"email-option\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"email\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"Email\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.pgRequestInfoEmail\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/partial/basicUgSubTab.html',\n    \"<form name=\\\"forms.overviewBasicUgForm\\\" enctype=\\\"multipart/form-data\\\">\\n\" +\n    \"    <div class=\\\"tab-header\\\">\\n\" +\n    \"      <h3 class=\\\"heading\\\">Basic Description *</h3>\\n\" +\n    \"      <a class=\\\"btn btn-warning btn-history\\\" ng-class=\\\"{'disabled': historyDisabled}\\\" ng-click=\\\"handleTuOverviewHistoryLogClick('ug')\\\">\\n\" +\n    \"        <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"      </a>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"summernote-container\\\" ng-class=\\\"{'has-errors': isBasicUgOverviewEmpty}\\\">\\n\" +\n    \"            <summernote\\n\" +\n    \"                config=\\\"TuProfileOverviewController.textEditorBasicOptions\\\"\\n\" +\n    \"                ng-model=\\\"tuProfile.basicUgOverview\\\"\\n\" +\n    \"                on-focus=\\\"TuProfileOverviewController.setOverviewInvalid('basicUgOverview')\\\"\\n\" +\n    \"                on-change=\\\"TuProfileOverviewController.basicUgOverviewWords = countWords(contents)\\\"\\n\" +\n    \"                on-init=\\\"TuProfileOverviewController.basicUgOverviewWords = countWords(tuProfile.basicUgOverview)\\\"\\n\" +\n    \"                count-word=\\\"TuProfileOverviewController.basicUgOverviewWords\\\">\\n\" +\n    \"            </summernote>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"editor-note form-group\\\">\\n\" +\n    \"        <span ng-class=\\\"{'text-red': TuProfileOverviewController.isBasicOverviewInvalid(TuProfileOverviewController.basicUgOverviewWords)}\\\">\\n\" +\n    \"          <span class=\\\"bold\\\">{{TuProfileOverviewController.basicUgOverviewWords}}</span>\\n\" +\n    \"          <span>words inserted</span>\\n\" +\n    \"        </span>\\n\" +\n    \"        <span class=\\\"pull-right\\\">Maximum {{TuProfileOverviewController.basicDescriptionWordLimit}} words</span>\\n\" +\n    \"        <div\\n\" +\n    \"            focus-delay=\\\"250\\\"\\n\" +\n    \"            custom-popover\\n\" +\n    \"            popover-html=\\\"Add a general description about the Undergraduate Courses you offer\\\"\\n\" +\n    \"            popover-placement=\\\"left\\\"\\n\" +\n    \"            popover-trigger=\\\"manual\\\"\\n\" +\n    \"            popover-visibility=\\\"{{isBasicUgOverviewEmpty ? true : false}}\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"      </div>\\n\" +\n    \"\\n\" +\n    \"      <div class=\\\"tab-footer\\\">\\n\" +\n    \"        <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"          ng-class=\\\"{'disabled': overviewBasicUgFormSubmitInProgress}\\\"\\n\" +\n    \"          ng-click=\\\"handleOverviewBasicUgDataSubmit()\\\">\\n\" +\n    \"          <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"          <span>Update</span>\\n\" +\n    \"        </a>\\n\" +\n    \"      </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</form>\\n\" +\n    \"\\n\" +\n    \"<div upgrade-banner\\n\" +\n    \"     info-block-class=\\\"isRightSidePanelActive() ? 'col-lg-9' : 'col-lg-10'\\\"\\n\" +\n    \"     buttons-block-class=\\\"isRightSidePanelActive() ? 'col-lg-3' : 'col-lg-2'\\\"\\n\" +\n    \"     basic-profile=\\\"true\\\"\\n\" +\n    \"     upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"     upgrade-click=\\\"toggleUpgradeForm()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"separator\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"locked\\\">\\n\" +\n    \"    <div  class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div>\\n\" +\n    \"                <h3>University Website</h3>\\n\" +\n    \"            </div>\\n\" +\n    \"            <input type=\\\"text\\\"\\n\" +\n    \"                   disabled\\n\" +\n    \"                   placeholder=\\\"http://\\\"\\n\" +\n    \"                   ng-model=\\\"tuProfile.ugWebsiteUrl\\\"\\n\" +\n    \"                   class=\\\"form-control\\\" />\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"col-lg-6 form-group\\\">\\n\" +\n    \"            <div class=\\\"display-inline-request-info margin-right-30\\\">\\n\" +\n    \"                <h3 class=\\\"inline\\\">Request info</h3>\\n\" +\n    \"                <span class=\\\"small dfn text-left text-nowrap\\\"> (please select one) </span>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"display-inline-request-info request-info-title\\\">\\n\" +\n    \"                <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                    <input i-checkbox\\n\" +\n    \"                       disabled\\n\" +\n    \"                       type=\\\"radio\\\"\\n\" +\n    \"                       value=\\\"email\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.requestInfoTypeUg\\\"> Email\\n\" +\n    \"                </div>\\n\" +\n    \"                <span class=\\\"or-checkboxes-request-info\\\">OR</span>\\n\" +\n    \"                <div class=\\\"display-inline-request-info\\\">\\n\" +\n    \"                    <input i-checkbox\\n\" +\n    \"                       disabled\\n\" +\n    \"                       type=\\\"radio\\\"\\n\" +\n    \"                       value=\\\"url\\\"\\n\" +\n    \"                       ng-model=\\\"tuProfile.requestInfoTypeUg\\\"> URL\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ng-show=\\\"tuProfile.requestInfoTypeUg === 'url'\\\" class=\\\"url-option\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"text\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"Title\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.ugRequestInfoUrlTitle\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"url\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"URL\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.ugRequestInfoUrl\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div ng-show=\\\"tuProfile.requestInfoTypeUg === 'email'\\\" class=\\\"email-option\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <input type=\\\"email\\\"\\n\" +\n    \"                           disabled\\n\" +\n    \"                           placeholder=\\\"Email\\\"\\n\" +\n    \"                           ng-model=\\\"tuProfile.ugRequestInfoEmail\\\"\\n\" +\n    \"                           class=\\\"form-control\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/tuProfileOverviewHistoryView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>History Log <small>showing last {{historyLog.totalReturned}} records of {{historyLog.total}}</small></h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"toggleHistory(false)\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner=\\\"\\\" ng-show=\\\"fetchingHistoryLog()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <p class=\\\"text-muted text-center\\\" ng-show=\\\"!fetchingHistoryLog() && !historyLog.total\\\">\\n\" +\n    \"            History log is empty\\n\" +\n    \"        </p>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"!fetchingHistoryLog()\\\" ng-repeat=\\\"log in historyLog.log\\\">\\n\" +\n    \"            <ul class=\\\"list-unstyled list-history break-word\\\">\\n\" +\n    \"                <li ng-if=\\\"log.modifiedAt\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Modified on:</span>\\n\" +\n    \"                    <spna>{{log.modifiedAt| date:'medium'}}</spna>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"log.modifiedByFullName\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Submitted by:</span>\\n\" +\n    \"                    <spna>{{log.modifiedByFullName}}</spna>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"!log.advanced\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Basic Description:</span>\\n\" +\n    \"                    <spna>\\n\" +\n    \"                        {{log.basicMasterOverview | htmlToPlaintext}}\\n\" +\n    \"                        {{log.basicUgOverview | htmlToPlaintext}}\\n\" +\n    \"                        {{log.basicPgOverview | htmlToPlaintext}}\\n\" +\n    \"                    </spna>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"log.advanced\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">Advanced Description:</span>\\n\" +\n    \"                    <spna>\\n\" +\n    \"                        {{log.advancedMasterOverview | htmlToPlaintext}}\\n\" +\n    \"                        {{log.advancedUgOverview | htmlToPlaintext}}\\n\" +\n    \"                        {{log.advancedPgOverview | htmlToPlaintext}}\\n\" +\n    \"                    </spna>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"log.advanced\\\">\\n\" +\n    \"                    <span class=\\\"bold\\\">University Website:</span>\\n\" +\n    \"                    <spna>\\n\" +\n    \"                        <a ng-show=\\\"log.masterWebsiteUrl\\\" href=\\\"{{log.masterWebsiteUrl}}\\\" target=\\\"_blank\\\">{{log.masterWebsiteUrl}}</a>\\n\" +\n    \"                        <a ng-show=\\\"log.ugWebsiteUrl\\\" href=\\\"{{log.ugWebsiteUrl}}\\\" target=\\\"_blank\\\">{{log.ugWebsiteUrl}}</a>\\n\" +\n    \"                        <a ng-show=\\\"log.pgWebsiteUrl\\\" href=\\\"{{log.pgWebsiteUrl}}\\\" target=\\\"_blank\\\">{{log.pgWebsiteUrl}}</a>\\n\" +\n    \"                    </spna>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-show=\\\"log.advanced\\\">\\n\" +\n    \"                    <div ng-show=\\\"!TopUniversitiesController.isRequestInfoTypeUrl(log)\\\">\\n\" +\n    \"                        <span class=\\\"bold\\\">Request info - Email:</span>\\n\" +\n    \"                        <span>\\n\" +\n    \"                            {{log.masterRequestInfoEmail}}\\n\" +\n    \"                            {{log.ugRequestInfoEmail}}\\n\" +\n    \"                            {{log.pgRequestInfoEmail}}\\n\" +\n    \"                        </span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div ng-show=\\\"TopUniversitiesController.isRequestInfoTypeUrl(log)\\\">\\n\" +\n    \"                        <span class=\\\"bold\\\">Request info - Title:</span>\\n\" +\n    \"                        <span>\\n\" +\n    \"                            {{log.masterRequestInfoUrlTitle}}\\n\" +\n    \"                            {{log.ugRequestInfoUrlTitle}}\\n\" +\n    \"                            {{log.pgRequestInfoUrlTitle}}\\n\" +\n    \"                        </span>\\n\" +\n    \"                        \\n\" +\n    \"                        <br>\\n\" +\n    \"                        \\n\" +\n    \"                        <span class=\\\"bold\\\">Request info - URL:</span>\\n\" +\n    \"                        <a ng-show=\\\"log.masterRequestInfoUrl\\\" href=\\\"{{log.masterRequestInfoUrl}}\\\" target=\\\"_blank\\\">{{log.masterRequestInfoUrl}}</a>\\n\" +\n    \"                        <a ng-show=\\\"log.ugRequestInfoUrl\\\" href=\\\"{{log.ugRequestInfoUrl}}\\\" target=\\\"_blank\\\">{{log.ugRequestInfoUrl}}</a>\\n\" +\n    \"                        <a ng-show=\\\"log.pgRequestInfoUrl\\\" href=\\\"{{log.pgRequestInfoUrl}}\\\" target=\\\"_blank\\\">{{log.pgRequestInfoUrl}}</a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"separator dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"row\\\" ng-show=\\\"handleHistoryLogVisibility()\\\">\\n\" +\n    \"            <div wave-spinner=\\\"\\\" ng-show=\\\"fetchingMoreHistoryLog()\\\"></div>\\n\" +\n    \"            <div class=\\\" col-lg-8 col-lg-offset-2\\\">\\n\" +\n    \"                <a class=\\\"btn btn-primary btn-block\\\" ng-click=\\\"handleLoadMoreHistoryLog()\\\" ng-disabled=\\\"fetchingMoreHistoryLog()\\\">\\n\" +\n    \"                    Load more\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/overview/tuProfileOverviewView.html',\n    \"<div ng-controller=\\\"TuProfileOverviewController as TuProfileOverviewController\\\">\\n\" +\n    \"    <div class=\\\"tabs-container\\\">\\n\" +\n    \"        <uib-tabset active=\\\"activeOverviewSubTab\\\">\\n\" +\n    \"            <uib-tab heading=\\\"Overview\\\">\\n\" +\n    \"                <div class=\\\"panel-body\\\">\\n\" +\n    \"                    <div ng-if=\\\"tuIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tu/overview/partial/advancedMasterSubTab.html'\\\"></div>\\n\" +\n    \"                    <div ng-if=\\\"!tuIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tu/overview/partial/basicMasterSubTab.html'\\\"></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </uib-tab>\\n\" +\n    \"            <uib-tab heading=\\\"Undergraduate\\\">\\n\" +\n    \"                <div class=\\\"panel-body\\\">\\n\" +\n    \"                    <div ng-if=\\\"tuIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tu/overview/partial/advancedUgSubTab.html'\\\"></div>\\n\" +\n    \"                    <div ng-if=\\\"!tuIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tu/overview/partial/basicUgSubTab.html'\\\"></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </uib-tab>\\n\" +\n    \"            <uib-tab heading=\\\"Postgraduate\\\">\\n\" +\n    \"                <div class=\\\"panel-body\\\">\\n\" +\n    \"                    <div ng-if=\\\"tuIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tu/overview/partial/advancedPgSubTab.html'\\\"></div>\\n\" +\n    \"                    <div ng-if=\\\"!tuIsAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tu/overview/partial/basicPgSubTab.html'\\\"></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </uib-tab>\\n\" +\n    \"        </uib-tabset>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/programs/datagrid/deleteCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents no-select text-center\\\" ng-click=\\\"$event.stopPropagation()\\\">\\n\" +\n    \"    <input ng-model=\\\"grid.appScope.programsToDelete[row.entity.id]\\\" i-checkbox type=\\\"checkbox\\\">\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/programs/datagrid/deleteHeaderCellTemplate.html',\n    \"<button type=\\\"button\\\"\\n\" +\n    \"        ng-disabled=\\\"grid.appScope.isDeleteButtonDisabled()\\\"\\n\" +\n    \"        class=\\\"btn btn-danger btn-sm\\\"\\n\" +\n    \"        ng-class=\\\"{'disabled': grid.appScope.isDeleteButtonDisabled()}\\\"\\n\" +\n    \"        ng-click=\\\"grid.appScope.handleDeleteClick()\\\">\\n\" +\n    \"    <span class=\\\"glyphicon glyphicon-trash\\\"></span> <!-- {{col.displayName}} -->\\n\" +\n    \"</button>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/programs/datagrid/rowTemplate.html',\n    \"<div grid=\\\"grid\\\" class=\\\"ui-grid-draggable-row\\\" draggable=\\\"true\\\">\\n\" +\n    \"    <div class=\\\"ui-grid-cell pointer\\\"\\n\" +\n    \"        ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\\\"\\n\" +\n    \"        ng-class=\\\"{ 'ui-grid-row-header-cell': col.isRowHeader, 'active': row.entity.id == grid.appScope.selectedProgramId }\\\"\\n\" +\n    \"        role=\\\"{{col.isRowHeader ? 'rowheader' : 'gridcell'}}\\\"\\n\" +\n    \"        ui-grid-cell>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/programs/tuProfileAddProgramFormView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>Add Program</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a ng-click=\\\"toggleProgramAddForm()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"fetchingHistoryLog()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <form class=\\\"form-horizontal add-program\\\" name=\\\"forms.addProgramForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-if=\\\"InstitutionNameTuPrograms\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Institution Name *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\n\" +\n    \"                           ng-model=\\\"InstitutionNameTuPrograms\\\"\\n\" +\n    \"                           ng-disabled=\\\"true\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidName}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Program Name *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Add name\\\" class=\\\"form-control\\\"\\n\" +\n    \"                           ng-model=\\\"newProgram.name\\\"\\n\" +\n    \"                           ng-required=\\\"true\\\"\\n\" +\n    \"\\n\" +\n    \"                           focus-delay=\\\"250\\\"\\n\" +\n    \"                           custom-popover popover-html=\\\"Add a Program name\\\"\\n\" +\n    \"                           popover-placement=\\\"left\\\"\\n\" +\n    \"                           popover-trigger=\\\"manual\\\"\\n\" +\n    \"                           popover-visibility=\\\"{{isInvalidName ? true : false}}\\\"\\n\" +\n    \"                           ng-focus=\\\"setIsInvalidName(false)\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidUrl}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">URL Landing Page *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add a Landing Page\\\"\\n\" +\n    \"                        ng-model=\\\"newProgram.url\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-maxlength=\\\"255\\\"\\n\" +\n    \"                        ng-keyup=\\\"ProgramFormController.onKeyUp($event)\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Add a valid landing page link. Maximum 255 characters\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidUrl ? true : false}}\\\"\\n\" +\n    \"                        ng-focus=\\\"setIsInvalidUrl(false)\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidDepartment}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Department *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-model=\\\"newProgram.departmentCoreId\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        ng-disabled=\\\"isClientDepartment\\\"\\n\" +\n    \"                        on-select=\\\"ProgramFormController.handleDepartmentChanges(newProgram.departmentCoreId)\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidDepartment ? true : false}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.coreId as option in departmentsListArr | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidBelongsTo}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Belongs to *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        placeholder=\\\"Select an option\\\"\\n\" +\n    \"                        ng-model=\\\"newProgram.belongsTo\\\"\\n\" +\n    \"                        ng-disabled=\\\"!newProgram.departmentCoreId\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidBelongsTo ? true : false}}\\\"\\n\" +\n    \"                        ng-change=\\\"setIsInvalidBelongsTo(false)\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">\\n\" +\n    \"                            <span>{{$select.selected.title}}</span>\\n\" +\n    \"                        </ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.id as option in belongsToList | filter: $select.search\\\"\\n\" +\n    \"                          ui-disable-choice=\\\"option.disabled\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.title | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': addInProgress}\\\" ng-click=\\\"handleProgramCreateClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                        <span>Save</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"toggleProgramAddForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Cancel</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/programs/tuProfileEditProgramFormView.html',\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>Edit Program</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a ng-click=\\\"toggleProgramEditForm()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"text-right\\\" ng-show=\\\"isFetchInProgress()\\\"></div>\\n\" +\n    \"        <form class=\\\"form-horizontal add-program\\\" ng-show=\\\"!isFetchInProgress()\\\" name=\\\"forms.editProgramForm\\\" novalidate>\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-if=\\\"InstitutionNameTuPrograms\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Institution Name *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"InstitutionNameTuPrograms\\\" class=\\\"form-control\\\" ng-required=\\\"true\\\" ng-disabled=\\\"true\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidName}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Program Name *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Add name\\\" ng-model=\\\"program.name\\\" class=\\\"form-control\\\"\\n\" +\n    \"                    ng-required=\\\"true\\\"\\n\" +\n    \"                    focus-delay=\\\"250\\\"\\n\" +\n    \"                    custom-popover popover-html=\\\"Add a Program name\\\"\\n\" +\n    \"                    popover-placement=\\\"left\\\"\\n\" +\n    \"                    popover-trigger=\\\"manual\\\"\\n\" +\n    \"                    popover-visibility=\\\"{{isInvalidName ? true : false}}\\\"\\n\" +\n    \"                    ng-focus=\\\"setIsInvalidName(false)\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidUrl}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">URL Landing Page *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add a Landing Page\\\"\\n\" +\n    \"                        ng-model=\\\"program.url\\\"\\n\" +\n    \"                        ng-keyup=\\\"ProgramFormController.onKeyUp($event)\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-maxlength=\\\"255\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Add a valid landing page link. Maximum 255 characters\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidUrl ? true : false}}\\\"\\n\" +\n    \"                        ng-focus=\\\"setIsInvalidUrl(false)\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidDepartment}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Department *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-model=\\\"program.departmentCoreId\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        ng-disabled=\\\"isClientDepartment\\\"\\n\" +\n    \"                        on-select=\\\"ProgramFormController.handleDepartmentChanges(newProgram.departmentCoreId)\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidDepartment ? true : false}}\\\"\\n\" +\n    \"                        >\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option.coreId as option in departmentsListArr | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors' : isInvalidBelongsTo}\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Belongs to *</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        placeholder=\\\"Select an option\\\"\\n\" +\n    \"                        ng-model=\\\"program.belongsTo\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\"\\n\" +\n    \"                        focus-delay=\\\"250\\\"\\n\" +\n    \"                        custom-popover popover-html=\\\"Select an option\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{isInvalidBelongsTo ? true : false}}\\\"\\n\" +\n    \"                        ng-change=\\\"setIsInvalidBelongsTo(false)\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an option\\\">\\n\" +\n    \"                            <span>{{$select.selected.title}}</span>\\n\" +\n    \"                        </ui-select-match>\\n\" +\n    \"                        <ui-select-choices\\n\" +\n    \"                          position=\\\"down\\\"\\n\" +\n    \"                          repeat=\\\"option.id as option in belongsToList | filter: $select.search\\\"\\n\" +\n    \"                          ui-disable-choice=\\\"option.disabled\\\">\\n\" +\n    \"                          <div class=\\\"test\\\" ng-bind-html=\\\"option.title | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"                       ng-class=\\\"{'disabled': editInProgress}\\\"\\n\" +\n    \"                       ng-click=\\\"handleProgramUpdateClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                        <span>Update</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"toggleProgramEditForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Cancel</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/programs/tuProfileProgramsView.html',\n    \"<div ng-controller=\\\"TuProfileProgramsController as ProgramsController\\\">\\n\" +\n    \"    <div upgrade-banner\\n\" +\n    \"         info-block-class=\\\"isRightSidePanelActive() ? 'col-sm-9' : 'col-sm-10'\\\"\\n\" +\n    \"         buttons-block-class=\\\"isRightSidePanelActive() ? 'col-sm-3' : 'col-sm-2'\\\"\\n\" +\n    \"         basic-profile=\\\"!tuIsAdvanced ? true : false\\\"\\n\" +\n    \"         upgrade-email=\\\"{{upgradeEmailsTo}}\\\"\\n\" +\n    \"         upgrade-click=\\\"toggleUpgradeForm()\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"alert alert-info\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Drag and Drop Rows to Order Program List or profiles.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-header\\\" ng-class=\\\"{'locked': !tuIsAdvanced}\\\">\\n\" +\n    \"        <div class=\\\"btn-toggle\\\">\\n\" +\n    \"            <switch class=\\\"green\\\"\\n\" +\n    \"                ng-disabled=\\\"alphabeticalOrderingInProgress\\\"\\n\" +\n    \"                ng-model=\\\"tuProfileData.programsAlphabeticalOrder\\\"\\n\" +\n    \"                ng-change=\\\"!alphabeticalOrderingInProgress ? handleAlphabeticalOrderClick(tuProfileData.programsAlphabeticalOrder) : null\\\">\\n\" +\n    \"            </switch>\\n\" +\n    \"            <span> Display in alphabetical order?</span>\\n\" +\n    \"        </div>\\n\" +\n    \"        <a class=\\\"btn btn-primary pull-right\\\"\\n\" +\n    \"            ng-class=\\\"{'disabled': programsTabSubmitInProgress}\\\"\\n\" +\n    \"            ng-click=\\\"handleAddProgramClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-plus\\\"></i>\\n\" +\n    \"            <span>Add Program</span>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"tab-body\\\" ng-class=\\\"{'locked': !tuIsAdvanced}\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isDatagridReloading || !isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <div id=\\\"programsTable\\\" \\n\" +\n    \"            ng-class=\\\"{'overlay-white': alphabeticalOrderingInProgress}\\\"\\n\" +\n    \"            ng-if=\\\"!isDatagridReloading && gridOptions\\\">\\n\" +\n    \"            <ui-grid-info ng-if=\\\"!isRightSidePanelActive()\\\"></ui-grid-info>\\n\" +\n    \"            <div class=\\\"grid\\\"\\n\" +\n    \"                ui-grid=\\\"gridOptions\\\"\\n\" +\n    \"                ui-grid-draggable-rows\\n\" +\n    \"                ui-grid-selection\\n\" +\n    \"                ui-grid-resize-columns\\n\" +\n    \"                ui-grid-auto-resize>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/publish/tuProfilePublishHistoryView.html',\n    \"<div class=\\\"ibox publish-logs\\\" ng-controller=\\\"TuProfilePublishLogsController as PublishLogsController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"        <h5>Publish Logs</h5>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div wave-spinner ng-show=\\\"fetchingPublishLog()\\\"></div>\\n\" +\n    \"        <div ng-show=\\\"!fetchingPublishLog()\\\" ng-repeat=\\\"logs in publishLogs\\\">\\n\" +\n    \"            <div class=\\\"panel panel-default\\\" ng-repeat=\\\"logsPerDay in logs\\\">\\n\" +\n    \"                <div class=\\\"panel-heading\\\">\\n\" +\n    \"                    <span>{{logsPerDay.date | date:'mediumDate'}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"panel-body\\\">\\n\" +\n    \"                    <ul class=\\\"list-unstyled\\\">\\n\" +\n    \"                        <li ng-repeat=\\\"log in logsPerDay.logs\\\">\\n\" +\n    \"                            <span class=\\\"status\\\">\\n\" +\n    \"                                <span class=\\\"icon text-success\\\" ng-if=\\\"log.status === 'success'\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-check\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <span class=\\\"icon text-danger\\\" ng-if=\\\"log.status === 'failure'\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-exclamation\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <span class=\\\"icon text-info\\\" ng-if=\\\"log.status === 'progress'\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <span class=\\\"icon text-warning\\\" ng-if=\\\"log.status === 'pending'\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-clock-o\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                            </span>\\n\" +\n    \"                            \\n\" +\n    \"                            <span>{{PublishLogsController.getPublishStatusMapped(log.status)}}:</span>\\n\" +\n    \"                            <span class=\\\"bold\\\">{{log.createdByFullName}}</span>\\n\" +\n    \"                            <span class=\\\"time\\\">[{{log.createdAt | date:'shortTime'}}]</span>\\n\" +\n    \"\\n\" +\n    \"                            <span class=\\\"program\\\">\\n\" +\n    \"                                <span class=\\\"icon round bg-info\\\" ng-if=\\\"log.type === 'ug'\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-university\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <span class=\\\"icon round bg-warning\\\" ng-if=\\\"log.type === 'pg'\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-graduation-cap\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <span class=\\\"icon round bg-primary\\\" ng-if=\\\"log.type === 'master'\\\">\\n\" +\n    \"                                    <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                                <span class=\\\"icon icon-star\\\" ng-if=\\\"log.type === 'stars'\\\">\\n\" +\n    \"                                    <i></i>\\n\" +\n    \"                                </span>\\n\" +\n    \"                            </span>\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"!publishLogs.results.length\\\">\\n\" +\n    \"            No publish history\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/publish/tuProfilePublishView.html',\n    \"<div ng-controller=\\\"TuProfilePublishController as PublishController\\\">\\n\" +\n    \"    <div class=\\\"clearfix\\\" ng-if=\\\"ugOrPgDisabled\\\" ng-include=\\\"'/scripts/shared/banners/ugPgProfileDisable.html'\\\"></div>\\n\" +\n    \"    <div class=\\\"alert alert-info\\\">\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Please be aware that published changes will not appear straight away and could take up to 6 hours to be visible on the frontend website.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"        <p>\\n\" +\n    \"            <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"            <span>Whilst a publish is occurring, you may navigate away from this page and it will still progress in the background.</span>\\n\" +\n    \"        </p>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div id=\\\"publishContainer\\\" class=\\\"tab-body\\\">\\n\" +\n    \"        <div class=\\\"row\\\">\\n\" +\n    \"            <div class=\\\"col-lg-4 meter\\\" ng-repeat=\\\"section in sections\\\"\\n\" +\n    \"                 ng-class=\\\"{'modal-overlay-35': section.publishDisabled || isProfileEnabled(section.type)}\\\">\\n\" +\n    \"                <div class=\\\"panel panel-default\\\">\\n\" +\n    \"                    <div class=\\\"panel-heading\\\">\\n\" +\n    \"                        <h5 class=\\\"pull-left\\\">\\n\" +\n    \"                            <span class=\\\"icon round bg-info\\\" ng-if=\\\"section.type == 'ug'\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-university\\\"></i>\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <span class=\\\"icon round bg-warning\\\" ng-if=\\\"section.type == 'pg'\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-graduation-cap\\\"></i>\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <span class=\\\"icon round bg-primary\\\" ng-if=\\\"section.type == 'master'\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-book\\\"></i>\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <span class=\\\"icon icon-star\\\" ng-if=\\\"section.type == 'stars'\\\">\\n\" +\n    \"                                <i></i>\\n\" +\n    \"                            </span>\\n\" +\n    \"                            <span>{{section.name}}</span>\\n\" +\n    \"                        </h5>\\n\" +\n    \"                        <a class=\\\"btn btn-primary btn-xs pull-right\\\"\\n\" +\n    \"                           ng-click=\\\"handlePublish(section)\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-cloud-upload\\\"></i>\\n\" +\n    \"                            <span>Publish</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"panel-body\\\">\\n\" +\n    \"                        <div class=\\\"clearfix m-b-md\\\">\\n\" +\n    \"                            <a class=\\\"btn btn-default btn-sm btn-block\\\"\\n\" +\n    \"                                target=\\\"_blank\\\"\\n\" +\n    \"                                ng-href=\\\"{{section.url}}\\\"\\n\" +\n    \"                                ng-class=\\\"{'disabled': section.viewDisabled}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-eye\\\"></i>\\n\" +\n    \"                                <span>View webpage</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                            <a class=\\\"btn btn-default btn-sm btn-block\\\"\\n\" +\n    \"                                ng-if=\\\"PublishController.devMode\\\"\\n\" +\n    \"                                target=\\\"_blank\\\"\\n\" +\n    \"                                ng-href=\\\"{{section.feedPreviewUrl}}\\\"\\n\" +\n    \"                                ng-class=\\\"{'disabled': section.viewDisabled}\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-eye\\\"></i>\\n\" +\n    \"                                <span>Preview feed</span>\\n\" +\n    \"                            </a>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"response\\\" ng-if=\\\"section.statusMessage\\\">\\n\" +\n    \"                            <p><strong>Reason for Failed Publish:</strong></p>\\n\" +\n    \"                            <span class=\\\"truncate\\\"><strong>{{section.statusMessage}}</strong></span>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div progress-circle=\\\"section.status\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/publish/tuProfileResubscribeView.html',\n    \"<div class=\\\"resubscribe\\\" ng-controller=\\\"TuProfileResubscribeController as TuResubscribeController\\\">\\n\" +\n    \"    <div class=\\\"ibox m-t-xl\\\" ng-show=\\\"TuResubscribeController.isAdvanced\\\">\\n\" +\n    \"        <div class=\\\"panel panel-default\\\">\\n\" +\n    \"            <div class=\\\"panel-body\\\">\\n\" +\n    \"                <div class=\\\"subscribe\\\">\\n\" +\n    \"                    <div class=\\\"pull-left\\\">\\n\" +\n    \"                        <p>Your subscription expires:</p>\\n\" +\n    \"                        <span class=\\\"bold\\\">{{TuResubscribeController.expiresDate | date:'dd MMMM yyyy'}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <button class=\\\"btn btn-warning btn-lg pull-right\\\"\\n\" +\n    \"                            ng-show=\\\"TuResubscribeController.showResubscribeButton()\\\"\\n\" +\n    \"                            ng-click=\\\"TuResubscribeController.resubscribeClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-envelope-o\\\"></i>\\n\" +\n    \"                        <span>Resubscribe</span>\\n\" +\n    \"                    </button>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox m-t-xl\\\" ng-show=\\\"TuResubscribeController.displayResubscribeForm\\\">\\n\" +\n    \"        <div class=\\\"ibox-title\\\">\\n\" +\n    \"            <h5>Resubscribe to Advance Profile</h5>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"ibox-content\\\">\\n\" +\n    \"            <form class=\\\"form-horizontal preview\\\" name=\\\"forms.resubscribeForm\\\" novalidate>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">To:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TuResubscribeController.formData.to}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Subject:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TuResubscribeController.formData.subject}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Name:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TuResubscribeController.formData.name}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Email:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <span class=\\\"text-label\\\">{{TuResubscribeController.formData.email}}</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label class=\\\"control-label col-sm-5 col-md-4\\\">Comments:</label>\\n\" +\n    \"                    <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                        <div class=\\\"textarea\\\"><textarea class=\\\"form-control full-width\\\" ng-model=\\\"TuResubscribeController.formData.comments\\\" name=\\\"comments\\\" ng-trim=\\\"true\\\" rows=\\\"5\\\" ></textarea></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': TuResubscribeController.inProgress}\\\" ng-click=\\\"TuResubscribeController.submitClick()\\\">\\n\" +\n    \"                           <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                           <span>Submit</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"TuResubscribeController.cancelClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                            <span>Cancel</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/subjects/tuProfileSubjectsListsView.html',\n    \"<div class=\\\"ibox-title m-t-xl\\\">\\n\" +\n    \"    <h5>Selected Subjects</h5>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"ibox block-institution\\\">\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div class=\\\"subject-selected\\\" ng-repeat=\\\"(groupName, groupSubjects) in TopUniversitiesController.subjects\\\">\\n\" +\n    \"            <h5 class=\\\"title bold\\\">\\n\" +\n    \"                <div class=\\\"name\\\">\\n\" +\n    \"                    <span>{{groupName}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"program\\\">\\n\" +\n    \"                    <span>\\n\" +\n    \"                        UG\\n\" +\n    \"                        <span> / </span>\\n\" +\n    \"                        PG\\n\" +\n    \"                    </span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </h5>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"subject\\\" ng-repeat=\\\"subject in groupSubjects | orderBy:'name'\\\" ng-show=\\\"tuProfile.ugSubjects[subject.handle] || tuProfile.pgSubjects[subject.handle]\\\">\\n\" +\n    \"                <div class=\\\"name\\\">\\n\" +\n    \"                    <span>{{subject.name}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"program\\\">\\n\" +\n    \"                    <span><i ng-show=\\\"tuProfile.ugSubjects[subject.handle]\\\" class=\\\"fa fa-check-square-o\\\"></i></span>\\n\" +\n    \"                    <span><i ng-show=\\\"tuProfile.pgSubjects[subject.handle]\\\" class=\\\"fa fa-check-square-o\\\"></i></span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"hr-line-dashed\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/subjects/tuProfileSubjectsView.html',\n    \"<div class=\\\"subject-tab\\\" ng-controller=\\\"TuProfileSubjectsController as SubjectsController\\\">\\n\" +\n    \"    <form name=\\\"forms.subjectsForm\\\">\\n\" +\n    \"        <div class=\\\"tab-header\\\">\\n\" +\n    \"            <div class=\\\"btn-toggle\\\">\\n\" +\n    \"                <switch class=\\\"green\\\" ng-model=\\\"tuProfile.hasPhdSubjects\\\"></switch>\\n\" +\n    \"                <span>Do you do PhD for any of the subjects selected below?</span>\\n\" +\n    \"            </div>\\n\" +\n    \"            <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': subjectsTabSubmitInProgress}\\\" ng-click=\\\"handleSubjectTabSubmit()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                <span>Update</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"tab-body\\\">\\n\" +\n    \"            <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isDatagridReloading\\\"></div>\\n\" +\n    \"            <div class=\\\"col-wrap\\\">\\n\" +\n    \"                <div class=\\\"col\\\" ng-repeat=\\\"(index, subjectsChunk) in SubjectsController.subjects\\\">\\n\" +\n    \"                    <div ng-repeat=\\\"(groupName, groupSubjects) in subjectsChunk\\\">\\n\" +\n    \"                        <h4 class=\\\"title\\\">\\n\" +\n    \"                            <div class=\\\"name\\\">\\n\" +\n    \"                                <span>{{groupName}}</span>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"program\\\">\\n\" +\n    \"                                <span>\\n\" +\n    \"                                    UG\\n\" +\n    \"                                    <span>/</span>\\n\" +\n    \"                                    PG\\n\" +\n    \"                                </span>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </h4>\\n\" +\n    \"\\n\" +\n    \"                        <div class=\\\"subject\\\" ng-repeat=\\\"subject in groupSubjects | orderBy:'name'\\\">\\n\" +\n    \"                            <div class=\\\"name\\\">\\n\" +\n    \"                                <span>{{subject.name}}</span>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"program\\\">\\n\" +\n    \"                                <input i-checkbox type=\\\"checkbox\\\" ng-model=\\\"tuProfile.ugSubjects[subject.handle]\\\" />\\n\" +\n    \"                                <input i-checkbox type=\\\"checkbox\\\" ng-model=\\\"tuProfile.pgSubjects[subject.handle]\\\" />\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"tab-footer\\\">\\n\" +\n    \"                <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': subjectsTabSubmitInProgress}\\\" ng-click=\\\"handleSubjectTabSubmit()\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                    <span>Update</span>\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </form>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/tuProfileUpgradeFormView.html',\n    \"<div class=\\\"ibox-title\\\">\\n\" +\n    \"    <h5>Upgrade to Advanced Profile</h5>\\n\" +\n    \"    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"        <a class=\\\"close-link\\\" ng-click=\\\"toggleUpgradeForm()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"ibox\\\">\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <form class=\\\"form-horizontal preview\\\" name=\\\"forms.upgradeProfile\\\" novalidate>\\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">To</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeEmailsTo}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Subject</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">I would like more information about Upgrading to an Advanced Profile</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Name</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeRequest.name}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Email</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <span class=\\\"text-label\\\">{{upgradeRequest.email}}</span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <label class=\\\"control-label col-sm-5 col-md-4\\\">Comments</label>\\n\" +\n    \"                <div class=\\\"col-sm-7 col-md-8\\\">\\n\" +\n    \"                    <div class=\\\"textarea\\\"><textarea rows=\\\"7\\\" cols=\\\"50\\\" placeholder=\\\"Comments...\\\" ng-model=\\\"upgradeRequest.comments\\\" class=\\\"form-control no-resize\\\" ></textarea></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            \\n\" +\n    \"            <div class=\\\"form-group\\\">\\n\" +\n    \"                <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-primary pull-right\\\" ng-class=\\\"{'disabled': upgradeInProgress}\\\" ng-click=\\\"handleUpgradeClick()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                        <span>Send</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right\\\" ng-click=\\\"toggleUpgradeForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Close</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/profiles/tu/tuProfileView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-profiles-tu\\\" ng-controller=\\\"TuProfileController as TopUniversitiesController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div ng-class=\\\"isRightSidePanelActive() ? 'col-sm-8' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"tabs-container\\\" ng-class=\\\"{'modal-overlay': loadInProgress()}\\\">\\n\" +\n    \"                <uib-tabset active=\\\"activeTab\\\">\\n\" +\n    \"                    <uib-tab heading=\\\"Overview\\\">\\n\" +\n    \"                        <div class=\\\"panel-body overview\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tu/overview/tuProfileOverviewView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                    <uib-tab heading=\\\"Departments\\\" ng-if=\\\"showDepartmentsTab()\\\">\\n\" +\n    \"                          <div class=\\\"panel-body departments\\\">\\n\" +\n    \"                              <div ng-include src=\\\"'/scripts/components/profiles/tu/departments/tuProfileDepartmentsView.html'\\\"></div>\\n\" +\n    \"                          </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                    <uib-tab heading=\\\"Subjects\\\">\\n\" +\n    \"                        <div class=\\\"panel-body subjects\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tu/subjects/tuProfileSubjectsView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                    <uib-tab heading=\\\"Programs\\\">\\n\" +\n    \"                        <div class=\\\"panel-body programs\\\">\\n\" +\n    \"                            <div ng-include src=\\\"'/scripts/components/profiles/tu/programs/tuProfileProgramsView.html'\\\"></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                     <uib-tab heading=\\\"Media\\\">\\n\" +\n    \"                         <div class=\\\"panel-body media\\\">\\n\" +\n    \"                             <div ng-include src=\\\"'/scripts/components/profiles/tu/media/tuProfileMediaView.html'\\\" id=\\\"mediaTab\\\"></div>\\n\" +\n    \"                         </div>\\n\" +\n    \"                     </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                   <uib-tab heading=\\\"Publish\\\">\\n\" +\n    \"                       <div class=\\\"panel-body publish\\\">\\n\" +\n    \"                           <div ng-include src=\\\"'/scripts/components/profiles/tu/publish/tuProfilePublishView.html'\\\"></div>\\n\" +\n    \"                       </div>\\n\" +\n    \"                   </uib-tab>\\n\" +\n    \"\\n\" +\n    \"                </uib-tabset>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"showUpgradeForm\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tu/tuProfileUpgradeFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"showHistory\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tu/overview/tuProfileOverviewHistoryView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div ng-show=\\\"showDepartmentEditForm || showDepartmentAddForm || showClientUpgradeForm\\\" id=\\\"departmentBlockPanel\\\"\\n\" +\n    \"             fixed-element-while-scrolling=\\\"#departmentsTable\\\"\\n\" +\n    \"             class=\\\"col-sm-4\\\"\\n\" +\n    \"             ng-controller=\\\"TuProfileDepartmentForm as DepartmentFormController\\\">\\n\" +\n    \"            <div class=\\\"department-form\\\" ng-show=\\\"showDepartmentEditForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/departments/tuProfileEditDepartmentFormView.html'\\\"></div>\\n\" +\n    \"            <div class=\\\"department-form\\\" ng-show=\\\"showDepartmentAddForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/departments/tuProfileAddDepartmentFormView.html'\\\"></div>\\n\" +\n    \"            <div class=\\\"department-form\\\" ng-show=\\\"showClientUpgradeForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/departments/tuProfileUpgradeClientDepartmentFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-if=\\\"isSubjectsTabActive()\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tu/subjects/tuProfileSubjectsListsView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"showProgramEditForm || showProgramAddForm\\\" id=\\\"programBlockPanel\\\"\\n\" +\n    \"             fixed-element-while-scrolling=\\\"#programsTable\\\"\\n\" +\n    \"             class=\\\"col-sm-4\\\"\\n\" +\n    \"             ng-controller=\\\"TuProfileProgramForm as ProgramFormController\\\">\\n\" +\n    \"            <div ng-show=\\\"showProgramAddForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/programs/tuProfileAddProgramFormView.html'\\\"></div>\\n\" +\n    \"            <div ng-show=\\\"showProgramEditForm\\\" ng-include src=\\\"'/scripts/components/profiles/tu/programs/tuProfileEditProgramFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"isMediaTabActive()\\\" class=\\\"col-sm-4\\\" ng-class=\\\"tuIsAdvanced ? '': 'modal-overlay-35'\\\" fixed-element-while-scrolling=\\\"#mediaTab\\\">\\n\" +\n    \"            <div id=\\\"mediaSidebar\\\" ng-include src=\\\"'/scripts/components/profiles/tu/media/tuProfileMediaLinkManagerView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"isPublishTabActive()\\\" class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tu/publish/tuProfileResubscribeView.html'\\\"></div>\\n\" +\n    \"            <div ng-include src=\\\"'/scripts/components/profiles/tu/publish/tuProfilePublishHistoryView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/tmDirectory/datagrid/campusCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents\\\">{{COL_FIELD CUSTOM_FILTERS | campusArrayToText:col.filter.selectOptions}}</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/tmDirectory/datagrid/selectCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents\\\">{{COL_FIELD CUSTOM_FILTERS | boolToText:col.filter.selectOptions}}</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/tmDirectory/edit/tmDirectoryEditProgramFormView.html',\n    \"<div class=\\\"ibox\\\" ng-controller=\\\"TmProfileProgramFormController as TmProfileProgramFormController\\\">\\n\" +\n    \"    <div class=\\\"ibox-title\\\">\\n\" +\n    \"        <h5>{{ TmDirectoryController.getFormTitle() }}</h5>\\n\" +\n    \"        <div class=\\\"ibox-tools\\\">\\n\" +\n    \"            <a class=\\\"close-link\\\" ng-click=\\\"TmDirectoryController.closeEditForm()\\\">\\n\" +\n    \"                <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"ibox-content\\\">\\n\" +\n    \"        <div>\\n\" +\n    \"            <form class=\\\"form-horizontal\\\" name=\\\"forms.editProgramForm\\\" novalidate autocomplete=\\\"off\\\">\\n\" +\n    \"                <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormDetailsView.html'\\\"></div>\\n\" +\n    \"                <div ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormStatisticsView.html'\\\"></div>\\n\" +\n    \"                <div ng-show=\\\"!TmDirectoryController.isProgramAdvanced\\\" ng-include src=\\\"'/scripts/components/profiles/tm/programs/tmProfileEditProgramFormCampusView.html'\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"separator dashed\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <div class=\\\"col-sm-12\\\">\\n\" +\n    \"                        <switch value=\\\"yes\\\"\\n\" +\n    \"                            class=\\\"green\\\"\\n\" +\n    \"                            ng-model=\\\"TmDirectoryController.sendEmailToClient\\\"\\n\" +\n    \"                            ng-disabled=\\\"TmDirectoryController.approved\\\"></switch>\\n\" +\n    \"                            <span>Include program requester in status update email</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'modal-overlay': TmProfileProgramFormController.editInProgress}\\\">\\n\" +\n    \"                    <div class=\\\"pull-right btn-float-fix\\\" ng-if=\\\"!TmDirectoryController.pendingDeletion\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-primary btn-float-fix\\\"\\n\" +\n    \"                           ng-click=\\\"TmDirectoryController.handleProgramApproveClick(TmProfileProgramFormController, false)\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>{{TmDirectoryController.approveButtonTitle}}</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a class=\\\"btn btn-default btn-float-fix\\\"\\n\" +\n    \"                           ng-click=\\\"TmDirectoryController.handleProgramApproveClick(TmProfileProgramFormController, true)\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>{{TmDirectoryController.approveButtonTitle}} & Publish</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"pull-right btn-float-fix\\\" ng-if=\\\"TmDirectoryController.pendingDeletion\\\">\\n\" +\n    \"                        <a class=\\\"btn btn-default btn-float-fix\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': TmDirectoryController.isProgramAdvanced}\\\"\\n\" +\n    \"                           ng-click=\\\"TmDirectoryController.handleCancelDeletionClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>Cancel Deletion</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <a class=\\\"btn btn-danger btn-float-fix\\\"\\n\" +\n    \"                           ng-class=\\\"{'disabled': TmDirectoryController.isProgramAdvanced}\\\"\\n\" +\n    \"                           ng-click=\\\"TmDirectoryController.handleDeleteAndPublishClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-check-circle\\\"></i>\\n\" +\n    \"                            <span>Delete & Publish</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <a class=\\\"btn btn-default pull-right m-r-xs btn-float-fix\\\" ng-click=\\\"TmDirectoryController.closeEditForm()\\\">\\n\" +\n    \"                        <i class=\\\"fa fa-ban\\\"></i>\\n\" +\n    \"                        <span>Cancel</span>\\n\" +\n    \"                    </a>\\n\" +\n    \"\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </form>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/tmDirectory/tmDirectoryView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-tm-directory\\\" ng-controller=\\\"TmDirectoryController as TmDirectoryController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div id=\\\"tmDirectoryTable\\\" ng-class=\\\"TmDirectoryController.showInfoBlock ? 'col-sm-8 hide-ng-table-pager' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"section\\\">\\n\" +\n    \"                <div class=\\\"section-body\\\">\\n\" +\n    \"                    <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"!TmDirectoryController.isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div ng-if=\\\"gridOptions\\\">\\n\" +\n    \"                        <ui-grid-info ng-if=\\\"!TmDirectoryController.showInfoBlock\\\"></ui-grid-info>\\n\" +\n    \"                        <div class=\\\"grid\\\"\\n\" +\n    \"                             ui-grid=\\\"gridOptions\\\"\\n\" +\n    \"                             ui-grid-selection\\n\" +\n    \"                             ui-grid-resize-columns\\n\" +\n    \"                             ui-grid-auto-resize\\n\" +\n    \"                             ui-grid-cellnav\\n\" +\n    \"                             ui-grid-exporter\\n\" +\n    \"                             ui-grid-pagination></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div ng-show=\\\"TmDirectoryController.showInfoBlock\\\"\\n\" +\n    \"             fixed-element-while-scrolling=\\\"#tmDirectoryTable\\\"\\n\" +\n    \"             class=\\\"col-sm-4\\\">\\n\" +\n    \"            <div class=\\\"nested-ibox\\\" ng-show=\\\"TmDirectoryController.showProgramEditForm\\\" ng-include src=\\\"'/scripts/components/tmDirectory/edit/tmDirectoryEditProgramFormView.html'\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html',\n    \"<div class=\\\"ui-grid-filter-container\\\" ng-repeat=\\\"colFilter in col.filters\\\" ng-if=\\\"colFilter.visible\\\">\\n\" +\n    \"    <input type=\\\"text\\\" class=\\\"ui-grid-filter-input date-picker\\\"\\n\" +\n    \"           ng-model=\\\"grid.appScope.filters.lastLoginAtRange\\\"\\n\" +\n    \"           date-range-picker=\\\"\\\"\\n\" +\n    \"           options=\\\"{eventHandlers: {'apply.daterangepicker': grid.appScope.handleLastLoginAtDateRange}, opens: 'left'}\\\" />\\n\" +\n    \"\\n\" +\n    \"    <div role=\\\"button\\\" class=\\\"ui-grid-filter-button-select\\\"\\n\" +\n    \"         ng-click=\\\"removeFilter(colFilter, $index)\\\"\\n\" +\n    \"         ng-if=\\\"!colFilter.disableCancelFilterButton\\\"\\n\" +\n    \"         ng-disabled=\\\"colFilter.term === undefined || colFilter.term === null || colFilter.term === ''\\\"\\n\" +\n    \"         ng-show=\\\"colFilter.term !== undefined && colFilter.term != null\\\">\\n\" +\n    \"        <i class=\\\"ui-grid-icon-cancel\\\" ui-grid-one-bind-aria-label=\\\"aria.removeFilter\\\">&nbsp;</i>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/institutions/datagrid/rowTemplate.html',\n    \"<div grid=\\\"grid\\\" draggable=\\\"true\\\">\\n\" +\n    \"    <div class=\\\"ui-grid-cell pointer\\\"\\n\" +\n    \"         ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\\\"\\n\" +\n    \"         ng-class=\\\"{ 'ui-grid-row-header-cell': col.isRowHeader, 'active': row.entity.id == grid.appScope.selectedUserId }\\\"\\n\" +\n    \"         role=\\\"{{col.isRowHeader ? 'rowheader' : 'gridcell'}}\\\"\\n\" +\n    \"         ui-grid-cell>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/institutions/institutions/institutionsUsersListInstitutionsView.html',\n    \"<div  class=\\\"panel-body institutions\\\" ng-controller=\\\"InstitutionsUsersInstitutionsController as InstitutionsController\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div wave-spinner class=\\\"load-bar col-lg-12\\\" ng-show=\\\"InstitutionsController.isProgressBarVisible()\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-12\\\" ng-show=\\\"selectedInstitutionsNamesLoaded\\\">\\n\" +\n    \"            <div class=\\\"row\\\">\\n\" +\n    \"                <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label>Access to Hub and Outreach *</label>\\n\" +\n    \"                        <ui-select multiple\\n\" +\n    \"                                   close-on-select=\\\"false\\\"\\n\" +\n    \"                                   ng-model=\\\"userInstitutions.assigned\\\"\\n\" +\n    \"                                   theme=\\\"bootstrap\\\"\\n\" +\n    \"                                   reset-search-input=\\\"true\\\"\\n\" +\n    \"                                   on-remove=\\\"InstitutionsController.handleItemRemove($item)\\\"\\n\" +\n    \"                                   on-select=\\\"InstitutionsController.handleItemSelect($item)\\\"\\n\" +\n    \"                                   ng-required=\\\"true\\\">\\n\" +\n    \"                            <ui-select-match placeholder=\\\"Type institution name...\\\">{{$item.name}}</ui-select-match>\\n\" +\n    \"                            <ui-select-choices refresh-delay=\\\"1000\\\"\\n\" +\n    \"                                               position=\\\"down\\\"\\n\" +\n    \"                                               refresh=\\\"InstitutionsController.searchInstitutions($select.search)\\\"\\n\" +\n    \"                                               repeat=\\\"option in institutionsSearchResults | filter:$select.search\\\">\\n\" +\n    \"                                <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                            </ui-select-choices>\\n\" +\n    \"                        </ui-select>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"row\\\">\\n\" +\n    \"                <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label>Primary Institution *</label>\\n\" +\n    \"                        <ui-select\\n\" +\n    \"                            id=\\\"primary-institution-dropdown\\\"\\n\" +\n    \"                            ng-model=\\\"user.primaryInstitutionCoreId\\\"\\n\" +\n    \"                            ng-required=\\\"true\\\"\\n\" +\n    \"                            on-select=\\\"InstitutionsController.handlePrimaryInstitutionChanges()\\\"\\n\" +\n    \"                            theme=\\\"bootstrap\\\"\\n\" +\n    \"                            >\\n\" +\n    \"                            <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                            <ui-select-choices \\n\" +\n    \"                                refresh-delay=\\\"1000\\\"\\n\" +\n    \"                                repeat=\\\"option.coreId as option in userInstitutions.assigned | filter:$select.search\\\">\\n\" +\n    \"                                <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                            </ui-select-choices>\\n\" +\n    \"                            <ui-select-no-choice>\\n\" +\n    \"                                Not found\\n\" +\n    \"                            </ui-select-no-choice>\\n\" +\n    \"                        </ui-select>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6\\\"></div>\\n\" +\n    \"        <div class=\\\"col-lg-6\\\">\\n\" +\n    \"            <a class=\\\"btn btn-primary btn-sm btn-block\\\"\\n\" +\n    \"               ng-class=\\\"{'disabled': InstitutionsController.disallowSubmit() || !UsersList.hasWriteAccess}\\\"\\n\" +\n    \"               ng-click=\\\"InstitutionsController.handleInstitutionSubmit()\\\">Update</a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/institutions/institutionsUsersListView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-institutions-users-list\\\" ng-controller=\\\"InstitutionsUsersListController as UsersList\\\">\\n\" +\n    \"\\n\" +\n    \"    <p>\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"UsersList.handleAddInstitutionsUserClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-user-plus\\\"></i>\\n\" +\n    \"            Add User\\n\" +\n    \"        </button>\\n\" +\n    \"    </p>\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div id=\\\"schoolUsersTable\\\" ng-class=\\\"showInfoBlock ? 'col-sm-3 hide-ng-table-pager' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                <div class=\\\"ibox-content table-responsive\\\">\\n\" +\n    \"                    <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"UsersList.isDatagridReloading || !UsersList.isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"full-width scroll-horizontal hide-vertical-overflow\\\" mouse-scroll-horizontal>\\n\" +\n    \"                        <div ng-if=\\\"UsersList.showDatagrid\\\" ng-class=\\\"{'modal-overlay-35': UsersList.isDatagridReloading}\\\">\\n\" +\n    \"                            <ui-grid-info ng-if=\\\"!showInfoBlock\\\"></ui-grid-info>\\n\" +\n    \"                            <div class=\\\"grid\\\"\\n\" +\n    \"                                 ui-grid=\\\"UsersList.grid.options\\\"\\n\" +\n    \"                                 ui-grid-pagination\\n\" +\n    \"                                 ui-grid-selection\\n\" +\n    \"                                 ui-grid-resize-columns\\n\" +\n    \"                                 ui-grid-auto-resize></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div fixed-element-while-scrolling=\\\"#schoolUsersTable\\\" ng-show=\\\"showInfoBlock\\\" class=\\\"col-sm-9 scroll-floating-element\\\">\\n\" +\n    \"            <div class=\\\"ibox block-user\\\">\\n\" +\n    \"                <div class=\\\"ibox-content\\\">\\n\" +\n    \"                    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                        <a class=\\\"close-link\\\" ng-click=\\\"UsersList.handleEditCloseClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"tab-content\\\">\\n\" +\n    \"                        <div class=\\\"tab-pane active\\\">\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"row m-b-lg\\\" ng-show=\\\"user.id\\\">\\n\" +\n    \"                                <div class=\\\"col-lg-4 text-center\\\">\\n\" +\n    \"                                    <div class=\\\"m-b-sm\\\">\\n\" +\n    \"                                        <img alt=\\\"image\\\" class=\\\"img-circle\\\" gravatar-src=\\\"user.email\\\" gravatar-size=\\\"100\\\">\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                    <div class=\\\"m-b-sm\\\">\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                                <div class=\\\"col-lg-8\\\">\\n\" +\n    \"                                    <h2>\\n\" +\n    \"                                        {{user.fullname}}\\n\" +\n    \"                                    </h2>\\n\" +\n    \"                                    <a href=\\\"mailto:{{user.email}}\\\" class=\\\"btn btn-primary btn-sm\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-envelope\\\"></i> Send Email\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                    <a ng-show=\\\"!user.active\\\" ng-click=\\\"handleActivateClick(user)\\\" class=\\\"btn btn-warning btn-sm\\\" ng-class=\\\"{'disabled':activateInProgress}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-undo\\\"></i> Activate\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                    <a ng-show=\\\"user.active\\\" ng-click=\\\"handleDeactivateClick(user)\\\" class=\\\"btn btn-danger btn-sm\\\" ng-class=\\\"{'disabled':deactivateInProgress}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-ban\\\"></i> Deactivate\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                    <!--\\n\" +\n    \"                                    <a class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"handleResetClick(user)\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-refresh\\\"></i> Reset unsaved changes\\n\" +\n    \"                                    </a>-->\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"\\n\" +\n    \"                            <div class=\\\"client-detail\\\">\\n\" +\n    \"                                <div class=\\\"full-height-scroll\\\">\\n\" +\n    \"                                    <div class=\\\"row\\\">\\n\" +\n    \"                                        <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                                            <div class=\\\"tabs-container\\\">\\n\" +\n    \"                                                <uib-tabset active=\\\"activeTab\\\">\\n\" +\n    \"                                                    <uib-tab heading=\\\"Personal details\\\" disable=\\\"disabledInstitutionsUserListSubTabs['personalDetails']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/institutions/personal-details/institutionsUsersListPersonalDetailsView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                    <uib-tab heading=\\\"Permissions\\\" disable=\\\"disabledInstitutionsUserListSubTabs['permissions']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/institutions/permissions/institutionsUsersListPermissionsView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                    <uib-tab heading=\\\"Institutions\\\" disable=\\\"disabledInstitutionsUserListSubTabs['institutions']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/institutions/institutions/institutionsUsersListInstitutionsView.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                </uib-tabset>\\n\" +\n    \"                                            </div>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <pre ng-show=\\\"UsersList.devMode\\\">{{user|json}}</pre>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/institutions/institutionsUsersView.html',\n    \"<div class=\\\"page-contacts\\\" ng-controller=\\\"InstitutionsUsersController as InstitutionsUsersController\\\">\\n\" +\n    \"    <div ng-include src=\\\"'/scripts/components/users/list/institutions/institutionsUsersListView.html'\\\"></div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/institutions/permissions/institutionsUsersListPermissionsView.html',\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6 block-permissions\\\">\\n\" +\n    \"            <p>\\n\" +\n    \"                <strong>Departments / Roles</strong>\\n\" +\n    \"            </p>\\n\" +\n    \"            <div ng-repeat=\\\"(groupName, roles) in UsersList.rolesList | groupBy: 'groupName'\\\">\\n\" +\n    \"                <label>{{groupName}}</label>\\n\" +\n    \"                <div ng-repeat=\\\"role in roles\\\" class=\\\"permission-row\\\">\\n\" +\n    \"                    <switch ng-model=\\\"user.roles[role.roleHandle]\\\"\\n\" +\n    \"                            ng-disabled=\\\"role.roleHandle !== 'custom' && user.roles.custom\\\"\\n\" +\n    \"                            name=\\\"{{role.roleHandle}}\\\"\\n\" +\n    \"                            class=\\\"{{role.roleHandle=='custom' ? 'red': 'green'}}\\\"\\n\" +\n    \"                            ng-change=\\\"handleRoleClick(role)\\\"\\n\" +\n    \"                    ></switch>{{role.roleName}}\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"col-lg-6\\\">\\n\" +\n    \"            <h3 ng-show=\\\"user.globalAdmin\\\" class=\\\"btn-sm badge-info\\\">\\n\" +\n    \"                Full Access\\n\" +\n    \"            </h3>\\n\" +\n    \"            <div ng-class=\\\"{'modal-overlay': user.globalAdmin}\\\">\\n\" +\n    \"                <p>\\n\" +\n    \"                    <strong>Assign Pages</strong>\\n\" +\n    \"                </p>\\n\" +\n    \"                <div class=\\\"table-responsive\\\">\\n\" +\n    \"                    <table class=\\\"table table-striped\\\">\\n\" +\n    \"                        <thead>\\n\" +\n    \"                        <tr>\\n\" +\n    \"                            <th>Section</th>\\n\" +\n    \"                            <th>Page</th>\\n\" +\n    \"                            <th>Assign</th>\\n\" +\n    \"                        </tr>\\n\" +\n    \"                        </thead>\\n\" +\n    \"                        <tbody>\\n\" +\n    \"                        <tr ng-repeat=\\\"(key, page) in UsersList.sectionsList\\\">\\n\" +\n    \"                            <td>{{page.sectionName}}</td>\\n\" +\n    \"                            <td>{{page.pageName}}</td>\\n\" +\n    \"                            <td>\\n\" +\n    \"                                <input i-checkbox type=\\\"checkbox\\\" name=\\\"{{page.pageHandle}}\\\" ng-model=\\\"user.accessTo[page.pageHandle]\\\" ng-change=\\\"activateCustomRole()\\\"  />\\n\" +\n    \"                            </td>\\n\" +\n    \"                        </tr>\\n\" +\n    \"                        </tbody>\\n\" +\n    \"                    </table>\\n\" +\n    \"                    <a class=\\\"btn btn-primary btn-sm btn-block\\\"\\n\" +\n    \"                       ng-class=\\\"{'disabled':permissionsSubmitInProgress || !UsersList.hasWriteAccess}\\\"\\n\" +\n    \"                       ng-click=\\\"handlePermissionsSubmit()\\\">Update</a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/institutions/personal-details/institutionsUsersListPersonalDetailsView.html',\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <form name=\\\"forms.personalDetailsForm\\\" class=\\\"clearfix\\\" novalidate>\\n\" +\n    \"            <div class=\\\"col-lg-6 block-personal-details\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>User type *</label>\\n\" +\n    \"                    <ui-select\\n\" +\n    \"                        name=\\\"typeId\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-disabled=\\\"true\\\"\\n\" +\n    \"                        ng-model=\\\"selectedItem.selectedOptionType\\\"\\n\" +\n    \"                        theme=\\\"bootstrap\\\">\\n\" +\n    \"                        <ui-select-match placeholder=\\\"Select an Option\\\">{{$select.selected.name}}</ui-select-match>\\n\" +\n    \"                        <ui-select-choices \\n\" +\n    \"                            refresh-delay=\\\"1000\\\"\\n\" +\n    \"                            repeat=\\\"option in UsersList.userTypes | filter:$select.search\\\">\\n\" +\n    \"                            <div ng-bind-html=\\\"option.name | highlight: $select.search\\\"></div>\\n\" +\n    \"                        </ui-select-choices>\\n\" +\n    \"                        <ui-select-no-choice>\\n\" +\n    \"                            Not found\\n\" +\n    \"                        </ui-select-no-choice>\\n\" +\n    \"                    </ui-select>\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Title</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"user.title\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !UsersList.isValidFirstName()}\\\">\\n\" +\n    \"                    <label>First (Given) Name *</label>\\n\" +\n    \"                    <input name=\\\"firstname\\\"\\n\" +\n    \"                        type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        ng-model=\\\"user.firstname\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-focus=\\\"UsersList.setValid('firstname')\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Add a first (given) name\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!UsersList.isValidFirstName()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !UsersList.isValidLastName()}\\\">\\n\" +\n    \"                    <label>Last (Family Name) *</label>\\n\" +\n    \"                    <input name=\\\"lastname\\\"\\n\" +\n    \"                        type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        ng-model=\\\"user.lastname\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-focus=\\\"UsersList.setValid('lastname')\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Add a last (family) name\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!UsersList.isValidLastName()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !UsersList.isValidEmail()}\\\">\\n\" +\n    \"                    <label>Email *</label>\\n\" +\n    \"                    <input name=\\\"email\\\"\\n\" +\n    \"                        type=\\\"email\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        ng-model=\\\"user.email\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-focus=\\\"UsersList.setValid('email')\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Add an email\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!UsersList.isValidEmail()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <user-password user=\\\"user\\\"></user-password>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Position</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"user.position\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Phone</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"user.phone\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Primary Institution</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"user.primaryInstitutionName\\\" disabled=\\\"disabled\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"col-lg-6 block-contact-types\\\">\\n\" +\n    \"                <table class=\\\"table table-striped\\\">\\n\" +\n    \"                    <thead>\\n\" +\n    \"                    <tr>\\n\" +\n    \"                        <th>Contact Type</th>\\n\" +\n    \"                        <th>Assign</th>\\n\" +\n    \"                        <th>Primary</th>\\n\" +\n    \"                    </tr>\\n\" +\n    \"                    </thead>\\n\" +\n    \"                    <tbody>\\n\" +\n    \"                    <tr ng-repeat=\\\"types in UsersList.contactTypes\\\">\\n\" +\n    \"                        <td>\\n\" +\n    \"                            {{types.name}}\\n\" +\n    \"                        </td>\\n\" +\n    \"                        <td>\\n\" +\n    \"                            <input ng-model=\\\"user.contactTypes[types.handle].assigned\\\" ng-change=\\\"handleContactTypeClick(types.handle)\\\" i-checkbox=\\\"{{types.assign}}\\\" type=\\\"checkbox\\\" />\\n\" +\n    \"                        </td>\\n\" +\n    \"                        <td>\\n\" +\n    \"                            <input ng-model=\\\"user.contactTypes[types.handle].primary\\\" ng-change=\\\"handlePrimaryContactTypeClick(types.handle)\\\" i-checkbox=\\\"{{types.primary}}\\\" type=\\\"checkbox\\\" />\\n\" +\n    \"                        </td>\\n\" +\n    \"                    </tr>\\n\" +\n    \"                    </tbody>\\n\" +\n    \"                </table>\\n\" +\n    \"\\n\" +\n    \"                <a class=\\\"btn btn-primary btn-sm btn-block\\\"\\n\" +\n    \"                   ng-class=\\\"{'disabled':personalDetailsSubmitInProgress || !UsersList.hasWriteAccess}\\\"\\n\" +\n    \"                   ng-click=\\\"handlePersonalDetailsSubmit()\\\">{{user.id ? 'Update' : 'Save'}}</a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/qs/partial/permissions.html',\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-6 block-permissions\\\">\\n\" +\n    \"            <p>\\n\" +\n    \"                <strong>Departments / Roles</strong>\\n\" +\n    \"            </p>\\n\" +\n    \"            <div ng-repeat=\\\"(groupName, roles) in UsersList.rolesList | groupBy: 'groupName'\\\">\\n\" +\n    \"                <label>{{groupName}}</label>\\n\" +\n    \"                <div ng-repeat=\\\"role in roles\\\" class=\\\"permission-row\\\">\\n\" +\n    \"                    <switch ng-model=\\\"user.roles[role.roleHandle]\\\"\\n\" +\n    \"                            ng-disabled=\\\"role.roleHandle !== 'custom' && user.roles.custom\\\"\\n\" +\n    \"                            name=\\\"{{role.roleHandle}}\\\"\\n\" +\n    \"                            class=\\\"{{role.roleHandle=='custom' ? 'red': 'green'}}\\\"\\n\" +\n    \"                            ng-change=\\\"handleRoleClick(role)\\\"\\n\" +\n    \"                    ></switch>{{role.roleName}}\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-6\\\">\\n\" +\n    \"            <div>\\n\" +\n    \"                <p>\\n\" +\n    \"                    <strong>Assign Pages</strong>\\n\" +\n    \"                </p>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"table-responsive panel\\\">\\n\" +\n    \"                    <div class=\\\"clickable panel-heading panel-primary-light\\\" ng-click=\\\"toggleClientSections()\\\">\\n\" +\n    \"                        Clients <i class=\\\"pull-right glyphicon\\\" ng-class=\\\"{'glyphicon-chevron-down': showClientSections, 'glyphicon-chevron-right': !showClientSections}\\\"></i>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <table ng-show=\\\"showClientSections\\\" class=\\\"table table-striped\\\">\\n\" +\n    \"                        <thead>\\n\" +\n    \"                        <tr>\\n\" +\n    \"                            <th>Section</th>\\n\" +\n    \"                            <th>Page</th>\\n\" +\n    \"                            <th>Assign</th>\\n\" +\n    \"                        </tr>\\n\" +\n    \"                        </thead>\\n\" +\n    \"                        <tbody>\\n\" +\n    \"                        <tr ng-repeat=\\\"(key, page) in UsersList.clientSectionsList\\\">\\n\" +\n    \"                            <td>{{page.sectionName}}</td>\\n\" +\n    \"                            <td>{{page.pageName}}</td>\\n\" +\n    \"                            <td>\\n\" +\n    \"                                <input i-checkbox type=\\\"checkbox\\\" name=\\\"{{page.pageHandle}}\\\" ng-model=\\\"user.accessTo[page.pageHandle]\\\" ng-change=\\\"activateCustomRole()\\\" />\\n\" +\n    \"                            </td>\\n\" +\n    \"                        </tr>\\n\" +\n    \"                        </tbody>\\n\" +\n    \"                    </table>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"clickable panel-heading panel-primary-light\\\" ng-click=\\\"toggleQsSections()\\\">\\n\" +\n    \"                        QS Staff <i class=\\\"pull-right glyphicon\\\" ng-class=\\\"{'glyphicon-chevron-down': showQsSections, 'glyphicon-chevron-right': !showQsSections}\\\"></i>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <table ng-show=\\\"showQsSections\\\" class=\\\"table table-striped\\\">\\n\" +\n    \"                        <thead>\\n\" +\n    \"                        <tr>\\n\" +\n    \"                            <th>Section</th>\\n\" +\n    \"                            <th>Page</th>\\n\" +\n    \"                            <th>Assign</th>\\n\" +\n    \"                        </tr>\\n\" +\n    \"                        </thead>\\n\" +\n    \"                        <tbody>\\n\" +\n    \"                        <tr ng-repeat=\\\"(key, page) in UsersList.qsSectionsList\\\">\\n\" +\n    \"                            <td>{{page.sectionName}}</td>\\n\" +\n    \"                            <td>{{page.pageName}}</td>\\n\" +\n    \"                            <td>\\n\" +\n    \"                                <input i-checkbox type=\\\"checkbox\\\" name=\\\"{{page.pageHandle}}\\\"\\n\" +\n    \"                                       ng-model=\\\"user.accessTo[page.pageHandle]\\\"\\n\" +\n    \"                                       ng-change=\\\"activateCustomRole()\\\"\\n\" +\n    \"                                       ng-disabled=\\\"{{page.disabled}}\\\"/>\\n\" +\n    \"                            </td>\\n\" +\n    \"                        </tr>\\n\" +\n    \"                        </tbody>\\n\" +\n    \"                    </table>\\n\" +\n    \"                </div>\\n\" +\n    \"                <a class=\\\"btn btn-primary btn-sm btn-block\\\" ng-class=\\\"{'disabled':permissionsSubmitInProgress}\\\" ng-click=\\\"handlePermissionsSubmit()\\\">Update</a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/qs/partial/personalDetails.html',\n    \"<div class=\\\"panel-body\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <form name=\\\"forms.personalDetailsForm\\\" class=\\\"form-horizontal clearfix\\\" novalidate>\\n\" +\n    \"            <div class=\\\"col-lg-6 block-personal-details\\\">\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Title</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"user.title\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !UsersList.isValidFirstName()}\\\">\\n\" +\n    \"                    <label>First (Given) Name *</label>\\n\" +\n    \"                    <input name=\\\"firstname\\\"\\n\" +\n    \"                        type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        ng-model=\\\"user.firstname\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-focus=\\\"UsersList.setValid('firstname')\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Add a first (given) name\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!UsersList.isValidFirstName()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !UsersList.isValidLastName()}\\\">\\n\" +\n    \"                    <label>Last (Family Name) *</label>\\n\" +\n    \"                    <input name=\\\"lastname\\\"\\n\" +\n    \"                        type=\\\"text\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        ng-model=\\\"user.lastname\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-focus=\\\"UsersList.setValid('lastname')\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Add a last (family) name\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!UsersList.isValidLastName()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\">\\n\" +\n    \"                    <label>Position</label>\\n\" +\n    \"                    <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"user.position\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !UsersList.isValidEmail()}\\\">\\n\" +\n    \"                    <label>Email *</label>\\n\" +\n    \"                    <input name=\\\"email\\\"\\n\" +\n    \"                        type=\\\"email\\\"\\n\" +\n    \"                        class=\\\"form-control\\\"\\n\" +\n    \"                        ng-model=\\\"user.email\\\"\\n\" +\n    \"                        ng-required=\\\"true\\\"\\n\" +\n    \"                        ng-focus=\\\"UsersList.setValid('email')\\\"\\n\" +\n    \"                        custom-popover\\n\" +\n    \"                        popover-html=\\\"Add an email\\\"\\n\" +\n    \"                        popover-placement=\\\"left\\\"\\n\" +\n    \"                        popover-trigger=\\\"manual\\\"\\n\" +\n    \"                        popover-visibility=\\\"{{!UsersList.isValidEmail()}}\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"\\n\" +\n    \"                <user-password user=\\\"user\\\"></user-password>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"col-lg-6 block-contact-types\\\">\\n\" +\n    \"                <table class=\\\"table table-striped\\\">\\n\" +\n    \"                    <thead>\\n\" +\n    \"                    <tr>\\n\" +\n    \"                        <th>Contact Type</th>\\n\" +\n    \"                        <th>Assign</th>\\n\" +\n    \"                        <th>Primary</th>\\n\" +\n    \"                    </tr>\\n\" +\n    \"                    </thead>\\n\" +\n    \"                    <tbody>\\n\" +\n    \"                    <tr ng-repeat=\\\"types in UsersList.contactTypes\\\">\\n\" +\n    \"                        <td>\\n\" +\n    \"                            {{types.name}}\\n\" +\n    \"                        </td>\\n\" +\n    \"                        <td>\\n\" +\n    \"                            <input ng-model=\\\"user.contactTypes[types.handle].assigned\\\" i-checkbox=\\\"{{types.assign}}\\\" type=\\\"checkbox\\\" />\\n\" +\n    \"                        </td>\\n\" +\n    \"                        <td>\\n\" +\n    \"                            <input ng-model=\\\"user.contactTypes[types.handle].primary\\\" ng-change=\\\"handlePrimaryContactTypeClick(types.handle)\\\" i-checkbox=\\\"{{types.primary}}\\\" type=\\\"checkbox\\\" />\\n\" +\n    \"                        </td>\\n\" +\n    \"                    </tr>\\n\" +\n    \"                    </tbody>\\n\" +\n    \"                </table>\\n\" +\n    \"                <a class=\\\"btn btn-primary btn-sm btn-block\\\" ng-class=\\\"{'disabled':personalDetailsSubmitInProgress}\\\" ng-click=\\\"handlePersonalDetailsSubmit()\\\">{{user.id ? 'Update' : 'Save'}}</a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </form>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/list/qs/qsUsersListView.html',\n    \"<div class=\\\"wrapper wrapper-content animated fadeInRight page-qs-users-list\\\" ng-controller=\\\"QsUsersListController as UsersList\\\">\\n\" +\n    \"    <p>\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"UsersList.handleAddQsUserClick()\\\">\\n\" +\n    \"            <i class=\\\"fa fa-user-plus\\\"></i>\\n\" +\n    \"            Add User\\n\" +\n    \"        </button>\\n\" +\n    \"    </p>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div id=\\\"usersTable\\\" ng-class=\\\"showInfoBlock ? 'col-sm-3 hide-ng-table-pager' : 'col-sm-12'\\\">\\n\" +\n    \"            <div class=\\\"ibox float-e-margins\\\">\\n\" +\n    \"                <div class=\\\"ibox-content table-responsive\\\">\\n\" +\n    \"                    <div wave-spinner class=\\\"wave-spinner\\\" ng-show=\\\"isDatagridReloading || !isDatagridRendered\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"full-width scroll-horizontal hide-vertical-overflow\\\" mouse-scroll-horizontal>\\n\" +\n    \"                        <div ng-if=\\\"UsersList.grid.options\\\" ng-class=\\\"{'modal-overlay-35': isDatagridReloading}\\\">\\n\" +\n    \"                            <ui-grid-info ng-if=\\\"!showInfoBlock\\\"></ui-grid-info>\\n\" +\n    \"                            <div class=\\\"grid\\\"\\n\" +\n    \"                                 ui-grid=\\\"UsersList.grid.options\\\"\\n\" +\n    \"                                 ui-grid-pagination\\n\" +\n    \"                                 ui-grid-selection\\n\" +\n    \"                                 ui-grid-resize-columns\\n\" +\n    \"                                 ui-grid-auto-resize></div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div fixed-element-while-scrolling=\\\"#usersTable\\\" ng-show=\\\"showInfoBlock\\\" class=\\\"col-sm-9 scroll-floating-element\\\">\\n\" +\n    \"            <div class=\\\"ibox block-user\\\">\\n\" +\n    \"                <div class=\\\"ibox-content\\\">\\n\" +\n    \"                    <div class=\\\"ibox-tools\\\">\\n\" +\n    \"                        <a class=\\\"close-link\\\" ng-click=\\\"UsersList.handleEditCloseClick()\\\">\\n\" +\n    \"                            <i class=\\\"fa fa-times\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"tab-content\\\">\\n\" +\n    \"                        <div class=\\\"tab-pane active\\\">\\n\" +\n    \"                            <div class=\\\"row m-b-lg\\\" ng-show=\\\"user.id\\\">\\n\" +\n    \"                                <div class=\\\"col-lg-4 text-center\\\">\\n\" +\n    \"                                    <div class=\\\"m-b-sm\\\">\\n\" +\n    \"                                        <img alt=\\\"image\\\" class=\\\"img-circle\\\" gravatar-src=\\\"user.email\\\" gravatar-size=\\\"100\\\">\\n\" +\n    \"                                    </div>\\n\" +\n    \"\\n\" +\n    \"                                    <div class=\\\"m-b-sm\\\">\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                                <div class=\\\"col-lg-8\\\">\\n\" +\n    \"                                    <h2>\\n\" +\n    \"                                        {{user.fullname}}\\n\" +\n    \"                                    </h2>\\n\" +\n    \"\\n\" +\n    \"                                    <a href=\\\"mailto:{{user.email}}\\\" class=\\\"btn btn-primary btn-sm\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-envelope\\\"></i> Send Email\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a ng-show=\\\"!user.active\\\" ng-click=\\\"handleActivateClick(user)\\\" class=\\\"btn btn-warning btn-sm\\\" ng-class=\\\"{'disabled':activateInProgress}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-undo\\\"></i> Activate\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a ng-show=\\\"user.active\\\" ng-click=\\\"handleDeactivateClick(user)\\\" class=\\\"btn btn-danger btn-sm\\\" ng-class=\\\"{'disabled':deactivateInProgress}\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-ban\\\"></i> Deactivate\\n\" +\n    \"                                    </a>\\n\" +\n    \"\\n\" +\n    \"                                    <a class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"handleResetClick(user)\\\">\\n\" +\n    \"                                        <i class=\\\"fa fa-refresh\\\"></i> Reset unsaved changes\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                            <div class=\\\"client-detail\\\">\\n\" +\n    \"                                <div class=\\\"full-height-scroll scroll-floating-element\\\" full-scroll>\\n\" +\n    \"                                    <div class=\\\"row\\\">\\n\" +\n    \"                                        <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                                            <div class=\\\"tabs-container\\\">\\n\" +\n    \"                                                <uib-tabset active=\\\"activeQsUserListSubTabs\\\">\\n\" +\n    \"                                                    <uib-tab heading=\\\"Personal details\\\" disable=\\\"disabledQsUserListSubTabs['personalDetails']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/qs/partial/personalDetails.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                    <uib-tab heading=\\\"Permissions\\\" disable=\\\"disabledQsUserListSubTabs['permissions']\\\">\\n\" +\n    \"                                                        <div ng-include src=\\\"'/scripts/components/users/list/qs/partial/permissions.html'\\\"></div>\\n\" +\n    \"                                                    </uib-tab>\\n\" +\n    \"                                                </uib-tabset>\\n\" +\n    \"                                            </div>\\n\" +\n    \"                                        </div>\\n\" +\n    \"                                    </div>\\n\" +\n    \"                                </div>\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <pre ng-show=\\\"UsersList.devMode\\\">{{user|json}}</pre>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/components/users/shared/password/passwordView.html',\n    \"<div class=\\\"password-box\\\">\\n\" +\n    \"    <div class=\\\"row\\\">\\n\" +\n    \"        <div class=\\\"col-lg-7 col-md-12 col-sm-12 col-xs-12\\\">\\n\" +\n    \"            <div ng-class=\\\"$ctrl.cnf.blockClass\\\">\\n\" +\n    \"                <div class=\\\"label-container col-lg-5 col-md-12 col-sm-12 col-xs-12\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <label ng-class=\\\"$ctrl.cnf.labelClass\\\">\\n\" +\n    \"                            {{$ctrl.cnf.label || 'Password'}} <span ng-show=\\\"$ctrl.isRequired()\\\">*</span>\\n\" +\n    \"                        </label>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"col-lg-7 col-md-12 col-sm-12 col-xs-12\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-class=\\\"{'has-errors': !$ctrl.isPassLen}\\\">\\n\" +\n    \"                        <input ng-class=\\\"$ctrl.isValid() ? 'valid' : 'invalid'\\\"\\n\" +\n    \"                            type=\\\"password\\\"\\n\" +\n    \"                            name=\\\"password\\\"\\n\" +\n    \"                            class=\\\"form-control\\\"\\n\" +\n    \"                            placeholder=\\\"{{$ctrl.isRequired() ? 'Enter password' : ' New password'}}\\\"\\n\" +\n    \"                            ng-model=\\\"$ctrl.user.password\\\"\\n\" +\n    \"                            ng-change=\\\"$ctrl.handleChanges()\\\"\\n\" +\n    \"                            autocomplete=\\\"new-password\\\"\\n\" +\n    \"                            ng-focus=\\\"$ctrl.data\\\"\\n\" +\n    \"                            custom-popover\\n\" +\n    \"                            popover-html=\\\"Add a password\\\"\\n\" +\n    \"                            popover-placement=\\\"left\\\"\\n\" +\n    \"                            popover-trigger=\\\"manual\\\"\\n\" +\n    \"                            popover-visibility=\\\"{{!$ctrl.isPassLen}}\\\">\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div ng-class=\\\"$ctrl.cnf.blockClass\\\" ng-if=\\\"$ctrl.cnf.resetOnLogin\\\">\\n\" +\n    \"                <div class=\\\"col-lg-12\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\">\\n\" +\n    \"                        <input ng-class=\\\"reset-on-login\\\" ng-model=\\\"$ctrl.user.passwordReset\\\" type=\\\"checkbox\\\" />\\n\" +\n    \"                        reset password on login\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"col-lg-5 col-md-12 col-sm-12 col-xs-12\\\">\\n\" +\n    \"            <div ng-class=\\\"$ctrl.cnf.blockClass\\\">\\n\" +\n    \"                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-left\\\">\\n\" +\n    \"                    <div class=\\\"form-group\\\" ng-if=\\\"$ctrl.user.password || $ctrl.isRequired()\\\">\\n\" +\n    \"                        <div class=\\\"validation-items\\\">\\n\" +\n    \"                            <div class=\\\"validation-item\\\" ng-repeat=\\\"item in $ctrl.validators\\\">\\n\" +\n    \"                                <i class=\\\"fa fa-circle\\\" ng-class=\\\"item.status ? 'text-navy' : 'text-danger'\\\"></i> {{item.name}}\\n\" +\n    \"                            </div>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/appUpdateMessage/appUpdateMessageView.html',\n    \"<div id=\\\"info-msg\\\" ng-if=\\\"$ctrl.isVisible()\\\">\\n\" +\n    \"    New version of QS Hub is available. Please reload the page.\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/banners/tmProfileView.html',\n    \"<div class=\\\"alert alert-warning ng-scope col-lg-12 \\\">\\n\" +\n    \"    <i class=\\\"fa fa-star\\\"></i> You are not subscribed currently for <strong>{{profileDisableName}}</strong> profile. If you like to do so, please contact:<strong> tusupportqs.com </strong>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/shared/banners/ugPgProfileDisable.html',\n    \"<div class=\\\"alert alert-warning ng-scope col-lg-12 \\\">\\n\" +\n    \"    <i class=\\\"fa fa-star\\\"></i> You are not subscribed currently for <strong>{{profileDisableName}}</strong> profile. If you like to do so, please contact:<strong> tusupport@qs.com </strong>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/shared/breadcrumbs/breadcrumbsView.html',\n    \"<div class=\\\"page-heading row\\\" >\\n\" +\n    \"    <div class=\\\"col-lg-12\\\">\\n\" +\n    \"        <h2>{{$state.current.data.label}}</h2>\\n\" +\n    \"        <ol class=\\\"breadcrumb\\\">\\n\" +\n    \"            <li ng-if=\\\"$state.$current.parent.data.label\\\">\\n\" +\n    \"                <span>{{$state.$current.parent.data.label}}</span>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li class=\\\"active\\\">\\n\" +\n    \"                <strong>{{$state.current.data.label}}</strong>\\n\" +\n    \"            </li>\\n\" +\n    \"        </ol>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/disabledInstitution/disabledInstitutionView.html',\n    \"<div class=\\\"widget red-bg p-lg text-center disabled-institution col-lg-4\\\">\\n\" +\n    \"    <div class=\\\"m-b-md\\\">\\n\" +\n    \"        <i class=\\\"fa fa-warning fa-4x\\\"></i>\\n\" +\n    \"        <h1 class=\\\"m-xs\\\">Institution is disabled</h1>\\n\" +\n    \"        <span class=\\\"font-bold no-margins\\\">\\n\" +\n    \"            Please contact <a href=\\\"mailto:tuonlinesupport@qs.com\\\"><strong>tuonlinesupport@qs.com</strong></a>\\n\" +\n    \"        </span>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/shared/displayFiltering/displayFilteringView.html',\n    \"<div class=\\\"ibox-tools dropdown\\\" uib-dropdown>\\n\" +\n    \"    <a aria-expanded=\\\"false\\\" aria-haspopup=\\\"true\\\" class=\\\"dropdown-toggle\\\" href=\\\"#\\\" uib-dropdown-toggle=\\\"\\\" ng-show=\\\"active\\\">\\n\" +\n    \"        <i class=\\\"fa fa-wrench\\\"></i>\\n\" +\n    \"    </a>\\n\" +\n    \"    <ul class=\\\"dropdown-menu dropdown-filter\\\" uib-dropdown-menu>\\n\" +\n    \"        <li class=\\\"hidden-column\\\" ng-repeat=\\\"column in columns\\\">\\n\" +\n    \"            <label><input type=\\\"checkbox\\\" ng-model-options=\\\"{getterSetter: true}\\\" ng-model=\\\"column.show\\\" ng-click=\\\"callback()\\\" />{{column.title}}</label>\\n\" +\n    \"        </li>\\n\" +\n    \"        <li class=\\\"display-filtering-buttons\\\" ng-if=\\\"columns.length > 0\\\">\\n\" +\n    \"            <div class=\\\"row\\\">\\n\" +\n    \"                <div class=\\\"col-lg-4\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-sm btn-primary\\\" ng-click=\\\"displayFilteringSelectAll()\\\">Select All</a>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"col-lg-4 col-lg-offset-2\\\">\\n\" +\n    \"                    <a class=\\\"btn btn-sm btn-danger\\\" ng-click=\\\"closeDisplayFiltering($event)\\\">Close</a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </li>\\n\" +\n    \"    </ul>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/shared/footer/footerView.html',\n    \"<p>\\n\" +\n    \"    <span>\\n\" +\n    \"    \t<strong>Copyright</strong>\\n\" +\n    \"    \tQS Quacquarelli Symonds Ltd &copy;\\n\" +\n    \"    \t<span current-date=\\\"yyyy\\\"></span>\\n\" +\n    \"    </span>\\n\" +\n    \"    <span class=\\\"pull-right\\\">\\n\" +\n    \"    \tVersion <strong>{{version}}</strong>\\n\" +\n    \"    </span>\\n\" +\n    \"</p>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/modal/modalTemplate.html',\n    \"<div class=modal-body ng-swipe-left=Lightbox.nextImage() ng-swipe-right=Lightbox.prevImage()>\\n\" +\n    \"    <div class=lightbox-nav><button class=close aria-hidden=true ng-click=$dismiss()>×</button>\\n\" +\n    \"        <div class=btn-group ng-if=\\\"Lightbox.images.length > 1\\\">\\n\" +\n    \"            <a class=\\\"btn btn-xs btn-default previous\\\" ng-click=Lightbox.prevImage()>‹</a>\\n\" +\n    \"            <a class=\\\"btn btn-xs btn-default next\\\" ng-click=Lightbox.nextImage()>›</a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=lightbox-image-container>\\n\" +\n    \"        <div class=lightbox-image-caption><span>{{Lightbox.imageCaption}}</span></div>\\n\" +\n    \"        <img ng-if=!Lightbox.isVideo(Lightbox.image) lightbox-src={{Lightbox.imageUrl}}>\\n\" +\n    \"        <div ng-if=Lightbox.isVideo(Lightbox.image) class=\\\"embed-responsive embed-responsive-16by9\\\">\\n\" +\n    \"            <video ng-if=!Lightbox.isSharedVideo(Lightbox.image) lightbox-src={{Lightbox.imageUrl}} controls autoplay></video>\\n\" +\n    \"            <embed-video ng-if=Lightbox.isSharedVideo(Lightbox.image) lightbox-src={{Lightbox.imageUrl}} ng-href={{Lightbox.imageUrl}} iframe-id=lightbox-video class=embed-responsive-item>\\n\" +\n    \"                <a ng-href={{Lightbox.imageUrl}}>Watch video</a>\\n\" +\n    \"            </embed-video>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"  \"\n  );\n\n\n  $templateCache.put('/scripts/shared/modal/modalView.html',\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"    <h3>{{modalOptions.headerText}}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"    <p>{{modalOptions.bodyText}}</p>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-ng-click=\\\"modalOptions.close()\\\">\\n\" +\n    \"        {{modalOptions.closeButtonText}}\\n\" +\n    \"    </button>\\n\" +\n    \"    <button class=\\\"btn btn-{{modalOptions.actionButtonClass}}\\\" data-ng-click=\\\"modalOptions.ok();\\\">\\n\" +\n    \"        {{modalOptions.actionButtonText}}\\n\" +\n    \"    </button>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/ng-table/filters/dateRangeFilter.html',\n    \"<input\\n\" +\n    \"    date-range-picker\\n\" +\n    \"    class=\\\"form-control date-picker filter\\\"\\n\" +\n    \"    type=\\\"text\\\"\\n\" +\n    \"    ng-model=\\\"params.filter()[name]\\\"\\n\" +\n    \"    clearable=\\\"true\\\"\\n\" +\n    \"    options=\\\"{locale: {format: 'D MMMM, YYYY'}}\\\"\\n\" +\n    \"    readonly />\"\n  );\n\n\n  $templateCache.put('/scripts/shared/noAccess/noAccessView.html',\n    \"<div class=\\\"widget red-bg p-lg text-center no-access-institution col-lg-4\\\">\\n\" +\n    \"    <div class=\\\"m-b-md\\\">\\n\" +\n    \"        <i class=\\\"fa fa-warning fa-4x\\\"></i>\\n\" +\n    \"        <h1 class=\\\"m-xs\\\">No access to this section</h1>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/shared/progressCircle/progressCircleView.html',\n    \"<div class=\\\"c100 p{{percent}} {{colour}}\\\">\\n\" +\n    \"    <span class=\\\"text-label\\\">{{text}}</span>\\n\" +\n    \"    <div class=\\\"slice\\\">\\n\" +\n    \"        <div class=\\\"bar\\\"></div>\\n\" +\n    \"        <div class=\\\"fill\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('/scripts/shared/sidebar/sidebarView.html',\n    \"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\" ng-controller=\\\"SidebarController as SidebarController\\\">\\n\" +\n    \"    <div class=\\\"sidebar-collapse\\\">\\n\" +\n    \"        <ul id=\\\"side-menu\\\" class=\\\"nav vnav media\\\" side-navigation=\\\"\\\">\\n\" +\n    \"            <li class=\\\"nav-header\\\">\\n\" +\n    \"                <div class=\\\"profile-element\\\">\\n\" +\n    \"                    <img src=\\\"/images/logo-white.svg\\\" alt=\\\"Logo\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"logo-element\\\">\\n\" +\n    \"                    <img src=\\\"/images/logo-small.svg\\\" alt=\\\"Logo\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li ui-sref-active=\\\"{'active':'clients'}\\\" >\\n\" +\n    \"                <a>\\n\" +\n    \"                    <span class=\\\"icon\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n\" +\n    \"                    <span class=\\\"text\\\">Institutions</span>\\n\" +\n    \"                    <span class=\\\"fa arrow\\\"></span>\\n\" +\n    \"                </a>\\n\" +\n    \"                <ul class=\\\"nav nav-second-level collapse\\\">\\n\" +\n    \"                    <li ui-sref-active=\\\"{'active':'clients.profiles'}\\\">\\n\" +\n    \"                        <a ui-sref=\\\"clients.profiles\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-book\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">Profiles</span>\\n\" +\n    \"                            <span class=\\\"fa arrow\\\"></span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <ul class=\\\"nav nav-third-level\\\">\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'clients.profiles.shared'}\\\">\\n\" +\n    \"                                <a ui-sref=\\\"clients.profiles.shared\\\" ng-show=\\\"MainController.userHasAccessTo(MainController.handles['clients.profiles.shared'])\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-info\\\"></i></span>\\n\" +\n    \"                                    <span class=\\\"text\\\">Institution Details</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'clients.profiles.tu'}\\\" ng-show=\\\"isTuEnabled\\\">\\n\" +\n    \"                                <a ui-sref=\\\"clients.profiles.tu\\\" ng-show=\\\"MainController.userHasAccessTo(MainController.handles['clients.profiles.tu'])\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-graduation-cap\\\"></i></span>\\n\" +\n    \"                                    <span class=\\\"text\\\">Undergraduate / Postgraduate</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'clients.profiles.tm'}\\\" ng-show=\\\"isTmEnabled\\\">\\n\" +\n    \"                                <a ui-sref=\\\"clients.profiles.tm\\\" ng-show=\\\"MainController.userHasAccessTo(MainController.handles['clients.profiles.tm'])\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-suitcase\\\"></i></span>\\n\" +\n    \"                                    <span class=\\\"text\\\">MBA</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                        </ul>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ui-sref-active=\\\"{'active':'clients.statistics'}\\\" ng-show=\\\"MainController.userHasAccessTo(MainController.handles['clients.statistics'])\\\">\\n\" +\n    \"                        <a href=\\\"{{SidebarController.coreUrl}}/{{SidebarController.getCoreFlag()}}statistics\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-bar-chart\\\"></i></span>&nbsp;\\n\" +\n    \"                            <span class=\\\"text\\\">Statistics</span>&nbsp;\\n\" +\n    \"                            <i class=\\\"fa fa-external-link\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ng-if=\\\"!isClient\\\" class=\\\"custom-popover\\\" ui-sref-active=\\\"{'active':'clients.contacts'}\\\">\\n\" +\n    \"                        <a ui-sref=\\\"clients.contacts\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-users\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">Contacts</span>\\n\" +\n    \"                            <i class=\\\"fa fa-lock\\\" aria-hidden=\\\"true\\\"></i>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </li>\\n\" +\n    \"                </ul>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li ng-show=\\\"!isClient\\\" ui-sref-active=\\\"{'active':'staff'}\\\">\\n\" +\n    \"                <a>\\n\" +\n    \"                    <span class=\\\"icon\\\"><i class=\\\"fa fa-star\\\"></i></span>\\n\" +\n    \"                    <span class=\\\"text\\\">QS Staff</span>\\n\" +\n    \"                    <span class=\\\"fa arrow\\\"></span>\\n\" +\n    \"                </a>\\n\" +\n    \"                <ul class=\\\"nav nav-second-level collapse\\\">\\n\" +\n    \"                    <li ui-sref-active=\\\"{'active':'staff.dashboard'}\\\">\\n\" +\n    \"                        <a ui-sref=\\\"staff.dashboard\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-th-large\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">Dashboard</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ui-sref-active=\\\"{'active':'staff.users'}\\\">\\n\" +\n    \"                        <a ui-sref=\\\"staff.users\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-users\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">Users &amp; Permissions</span>\\n\" +\n    \"                            <span class=\\\"fa arrow\\\"></span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <ul class=\\\"nav nav-third-level\\\">\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'staff.users.qs'}\\\">\\n\" +\n    \"                                <a ui-sref=\\\"staff.users.qs\\\" ng-show=\\\"MainController.userHasAccessTo(MainController.handles['staff.users.qs'])\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-user-secret\\\"></i></span>\\n\" +\n    \"                                    <span class=\\\"text\\\">QS Users</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'staff.users.institutions'}\\\">\\n\" +\n    \"                                <a ui-sref=\\\"staff.users.institutions\\\" ng-show=\\\"MainController.userHasAccessTo(MainController.handles['staff.users.institutions'])\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-graduation-cap\\\"></i></span>\\n\" +\n    \"                                    <span class=\\\"text\\\">Institutions Users</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                        </ul>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ui-sref-active=\\\"{'active':'staff.institutions'}\\\">\\n\" +\n    \"                        <a ui-sref=\\\"staff.institutions\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-bank\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">Institutions</span>\\n\" +\n    \"                            <span class=\\\"fa arrow\\\"></span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <ul class=\\\"nav nav-third-level\\\">\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'staff.institutions.list'}\\\">\\n\" +\n    \"                                <a ui-sref=\\\"staff.institutions.list\\\" ng-show=\\\"MainController.userHasAccessTo(MainController.handles['staff.institutions.list'])\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-bars\\\"></i></span>\\n\" +\n    \"                                    <span class=\\\"text\\\">List</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'staff.institutions.department'}\\\" ng-if=\\\"SidebarController.hasDepartmentsOverviewAccess()\\\">\\n\" +\n    \"                                <a ui-sref=\\\"staff.institutions.department\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-tasks\\\"></i>\\n\" +\n    \"                                    </span><span class=\\\"text\\\">Department Overview</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                            <li ui-sref-active=\\\"{'active':'staff.institutions.tu-programs'}\\\" ng-if=\\\"SidebarController.hasTuProgramsOverviewAccess()\\\">\\n\" +\n    \"                                <a ui-sref=\\\"staff.institutions.tu-programs\\\">\\n\" +\n    \"                                    <span class=\\\"icon\\\"><i class=\\\"fa fa-server\\\"></i>\\n\" +\n    \"                                    </span><span class=\\\"text\\\">TU Programs Overview</span>\\n\" +\n    \"                                </a>\\n\" +\n    \"                            </li>\\n\" +\n    \"                        </ul>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ui-sref-active=\\\"{'active':'staff.tm-directory'}\\\"\\n\" +\n    \"                        ng-show=\\\"MainController.userHasAccessTo(MainController.handles['staff.tm-directory'])\\\">\\n\" +\n    \"                        <a ui-sref=\\\"staff.tm-directory\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-tumblr\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">TM Directory</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ui-sref-active=\\\"{'active':'staff.master-password'}\\\"\\n\" +\n    \"                        ng-show=\\\"MainController.userHasAccessTo(MainController.handles['staff.master-password'])\\\">\\n\" +\n    \"                        <a ui-sref=\\\"staff.master-password\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-key\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">Master Password</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li>\\n\" +\n    \"                        <a href=\\\"{{SidebarController.coreUrl}}/{{SidebarController.getCoreFlag()}}admin/dashboard\\\">\\n\" +\n    \"                            <span class=\\\"icon\\\"><i class=\\\"fa fa-external-link\\\"></i></span>\\n\" +\n    \"                            <span class=\\\"text\\\">Return to Core</span>\\n\" +\n    \"                        </a>\\n\" +\n    \"                    </li>\\n\" +\n    \"                </ul>\\n\" +\n    \"            </li>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</nav>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/topNavigationBar/topNavigationBarView.html',\n    \"<nav class=\\\"navbar navbar-static-top\\\" role=\\\"navigation\\\">\\n\" +\n    \"\\n\" +\n    \"    <!-- START NAVBAR HEADFER -->\\n\" +\n    \"    <div class=\\\"navbar-header\\\">\\n\" +\n    \"        <span minimaliza-sidebar=\\\"\\\"></span>\\n\" +\n    \"    </div><!-- END NAVBAR HEADFER -->\\n\" +\n    \"\\n\" +\n    \"    <!-- START USER ACCOUNT/PROFILE -->\\n\" +\n    \"    <div class=\\\"user-profile\\\" uib-dropdown>\\n\" +\n    \"        <a class=\\\"truncate\\\" href=\\\"#\\\" uib-dropdown-toggle>\\n\" +\n    \"            <span class=\\\"user-dp\\\">\\n\" +\n    \"                <img class=\\\"img-circle\\\" ng-hide=\\\"MainController.profileLogo()\\\" alt=\\\"image\\\" gravatar-src=\\\"email\\\" gravatar-size=\\\"30\\\">\\n\" +\n    \"                <img class=\\\"img-circle\\\" ng-show=\\\"MainController.profileLogo()\\\" ng-src=\\\"{{MainController.profileLogo()}}\\\" alt=\\\"image\\\" style=\\\"width: 30px; height: 30px;\\\">\\n\" +\n    \"            </span>\\n\" +\n    \"            <span class=\\\"option\\\" ng-bind=\\\"MainController.fullName\\\"></span>\\n\" +\n    \"            <i class=\\\"fa fa-angle-down\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"        <ul class=\\\"dropdown-menu\\\">\\n\" +\n    \"            <li>\\n\" +\n    \"                <a ui-sref=\\\"user.my-profile\\\">\\n\" +\n    \"                    <i class=\\\"fa fa-user\\\"></i>\\n\" +\n    \"                    <span>My Profile</span>\\n\" +\n    \"                </a>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li>\\n\" +\n    \"                <a ui-sref=\\\"logout\\\">\\n\" +\n    \"                  <i class=\\\"fa fa-sign-out\\\"></i>\\n\" +\n    \"                  <span>Log out</span>\\n\" +\n    \"                </a>\\n\" +\n    \"            </li>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div><!-- END USER ACCOUNT/PROFILE -->\\n\" +\n    \"\\n\" +\n    \"    <!-- START SEARCH HELP -->\\n\" +\n    \"    <div class=\\\"user-help\\\">\\n\" +\n    \"        <a href=\\\"javascript:void(0)\\\" ng-click=\\\"helpIcon('md')\\\" title=\\\"Help\\\">\\n\" +\n    \"          <span>Help</span>\\n\" +\n    \"          <i class=\\\"fa fa-question-circle-o\\\"></i>\\n\" +\n    \"        </a>\\n\" +\n    \"    </div><!-- END SEARCH HELP -->\\n\" +\n    \"\\n\" +\n    \"    <!-- START SEARCHBAR -->\\n\" +\n    \"    <div class=\\\"search-dropdown\\\">\\n\" +\n    \"        <!-- Institution switch for QS users -->\\n\" +\n    \"        <ui-select\\n\" +\n    \"          theme=\\\"bootstrap\\\"\\n\" +\n    \"          ng-if=\\\"!isClient\\\"\\n\" +\n    \"          ng-model=\\\"institution.selected\\\"\\n\" +\n    \"          ng-change=\\\"handleSearchInstitutionClick(institution.selected)\\\">\\n\" +\n    \"\\n\" +\n    \"            <ui-select-match placeholder=\\\"Institution search...\\\">\\n\" +\n    \"                <i class=\\\"fa fa-building\\\" aria-hidden=\\\"true\\\"></i>\\n\" +\n    \"                {{$select.selected.name}}\\n\" +\n    \"            </ui-select-match>\\n\" +\n    \"\\n\" +\n    \"            <ui-select-choices\\n\" +\n    \"              refresh-delay=\\\"500\\\"\\n\" +\n    \"              refresh=\\\"searchInstitutions($select.search)\\\"\\n\" +\n    \"              position=\\\"down\\\"\\n\" +\n    \"              repeat=\\\"option in institutionsDropdownList | filter: $select.search\\\">\\n\" +\n    \"              <span class=\\\"option\\\" ng-bind-html=\\\"option.name | highlight: $select.search\\\"></span>\\n\" +\n    \"            </ui-select-choices>\\n\" +\n    \"\\n\" +\n    \"        </ui-select>\\n\" +\n    \"\\n\" +\n    \"        <!-- Institution switch for Clients -->\\n\" +\n    \"        <ui-select\\n\" +\n    \"          theme=\\\"bootstrap\\\"\\n\" +\n    \"          ng-if=\\\"isClient\\\"\\n\" +\n    \"          ng-model=\\\"institution.selected\\\"\\n\" +\n    \"          on-select=\\\"handleSearchInstitutionClick(institution.selected)\\\">\\n\" +\n    \"\\n\" +\n    \"            <ui-select-match placeholder=\\\"Institution search...\\\">\\n\" +\n    \"                <i class=\\\"fa fa-building\\\" aria-hidden=\\\"true\\\"></i>\\n\" +\n    \"                {{$select.selected.name}}\\n\" +\n    \"            </ui-select-match>\\n\" +\n    \"\\n\" +\n    \"            <ui-select-choices class=\\\"search-dropdown-results\\\"\\n\" +\n    \"              repeat=\\\"option in institutionsDropdownList | filter: $select.search\\\"\\n\" +\n    \"              position=\\\"down\\\">\\n\" +\n    \"              <span class=\\\"option\\\" ng-bind-html=\\\"option.name | highlight: $select.search\\\"></span>\\n\" +\n    \"            </ui-select-choices>\\n\" +\n    \"\\n\" +\n    \"        </ui-select>\\n\" +\n    \"        <div class=\\\"spinner\\\" ng-show=\\\"searchInProgress\\\" wave-spinner=\\\"\\\"></div>\\n\" +\n    \"    </div><!-- END SEARCHBAR -->\\n\" +\n    \"\\n\" +\n    \"    <!-- START GO BACK BUTTON -->\\n\" +\n    \"    \\n\" +\n    \"    <div class=\\\"go-back\\\" ng-if=\\\"MainController.allowParent()\\\">\\n\" +\n    \"      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"handleGoToParentInstitution()\\\">\\n\" +\n    \"          <i class=\\\"glyphicon glyphicon-upload\\\"></i>\\n\" +\n    \"          <span>Go to Parent Institution</span>\\n\" +\n    \"      </button>\\n\" +\n    \"    </div><!-- END GO BACK BUTTON -->\\n\" +\n    \"</nav>\"\n  );\n\n\n  $templateCache.put('/scripts/shared/ui-grid/templates/dateCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents\\\">{{COL_FIELD CUSTOM_FILTERS | date:\\\"medium\\\"}}</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/ui-grid/templates/selectCellTemplate.html',\n    \"<div class=\\\"ui-grid-cell-contents\\\">{{COL_FIELD CUSTOM_FILTERS | boolToText:col.filter.selectOptions}}</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n    \"<div class=\\\"ui-grid-filter-container\\\"\\n\" +\n    \"     ng-repeat=\\\"colFilter in col.filters\\\"\\n\" +\n    \"     ng-class=\\\"{'ui-grid-filter-cancel-button-hidden' : colFilter.disableCancelFilterButton === true }\\\">\\n\" +\n    \"\\n\" +\n    \"    <ui-select class=\\\"ui-grid-filter-select ui-grid-filter-input-{{$index}} select-{{col.field}}\\\"\\n\" +\n    \"        ng-model=\\\"colFilter.term\\\"\\n\" +\n    \"        theme=\\\"bootstrap\\\"\\n\" +\n    \"        search-enabled=\\\"{{colFilter.searchEnabled || false}}\\\"\\n\" +\n    \"        append-to-body=\\\"true\\\">\\n\" +\n    \"        <ui-select-match placeholder=\\\"{{colFilter.placeholder}}\\\">\\n\" +\n    \"            {{$select | uiGridSelectedLabel}}\\n\" +\n    \"        </ui-select-match>\\n\" +\n    \"        <ui-select-choices repeat=\\\"item in (colFilter.selectOptions | filter: $select.search) track by item.value\\\">\\n\" +\n    \"            <div ng-bind=\\\"item.label\\\"></div>\\n\" +\n    \"        </ui-select-choices>\\n\" +\n    \"    </ui-select>\\n\" +\n    \"\\n\" +\n    \"    <div role=\\\"button\\\" class=\\\"ui-grid-filter-button-select\\\"\\n\" +\n    \"         ng-click=\\\"removeFilter(colFilter, $index)\\\"\\n\" +\n    \"         ng-if=\\\"!colFilter.disableCancelFilterButton\\\"\\n\" +\n    \"         ng-disabled=\\\"colFilter.term === undefined || colFilter.term === null || colFilter.term === ''\\\"\\n\" +\n    \"         ng-show=\\\"colFilter.term !== undefined && colFilter.term != null\\\">\\n\" +\n    \"        <i class=\\\"ui-grid-icon-cancel\\\" ui-grid-one-bind-aria-label=\\\"aria.removeFilter\\\">&nbsp;</i>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/ui-grid/uiGridInfo/uiGridInfoPopupView.html',\n    \"<h5>\\n\" +\n    \"    Special search characters\\n\" +\n    \"</h5>\\n\" +\n    \"<table class=\\\"table table-striped no-margins\\\">\\n\" +\n    \"    <thead>\\n\" +\n    \"        <tr>\\n\" +\n    \"            <th>Character</th>\\n\" +\n    \"            <th>Explanation</th>\\n\" +\n    \"            <th>Example</th>\\n\" +\n    \"        </tr>\\n\" +\n    \"    </thead>\\n\" +\n    \"    <tbody>\\n\" +\n    \"        <tr>\\n\" +\n    \"            <td>=</td>\\n\" +\n    \"            <td>search for exact result</td>\\n\" +\n    \"            <td>=John Smith</td>\\n\" +\n    \"        </tr>\\n\" +\n    \"        <tr>\\n\" +\n    \"            <td>%</td>\\n\" +\n    \"            <td>search using word pattern matching</td>\\n\" +\n    \"            <td>Test Univ%sity</td>\\n\" +\n    \"        </tr>\\n\" +\n    \"        <tr>\\n\" +\n    \"            <td>,</td>\\n\" +\n    \"            <td>search for one or more</td>\\n\" +\n    \"            <td>John,Tom,Olga</td>\\n\" +\n    \"        </tr>\\n\" +\n    \"        <tr>\\n\" +\n    \"            <td>&amp;</td>\\n\" +\n    \"            <td>search for combination of</td>\\n\" +\n    \"            <td>London&University</td>\\n\" +\n    \"        </tr>\\n\" +\n    \"    </tbody>\\n\" +\n    \"</table>\\n\"\n  );\n\n\n  $templateCache.put('/scripts/shared/ui-grid/uiGridInfo/uiGridInfoView.html',\n    \"<span class=\\\"info pull-right clickable\\\"\\n\" +\n    \"      popover-placement=\\\"left-top\\\"\\n\" +\n    \"      popover-append-to-body=\\\"true\\\"\\n\" +\n    \"      popover-class=\\\"ui-grid-info\\\"\\n\" +\n    \"      uib-popover-template=\\\"'/scripts/shared/ui-grid/uiGridInfo/uiGridInfoPopupView.html'\\\">\\n\" +\n    \"    <i class=\\\"fa fa-info-circle\\\"></i>\\n\" +\n    \"</span>\"\n  );\n\n}]);\n}(window.angular));\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.AuthenticationService = function (\n        $resource,\n        $q,\n        $localStorage,\n        $http,\n        $window,\n        constants,\n        UserFactory,\n        $rootScope,\n        authInterceptor\n    ) {\n        var service = {\n                username: null\n            },\n            deferred = null;\n\n        /**\n         * Get programs list API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getAuthenticationModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/signin');\n        };\n\n        service.setData = function (response) {\n            var token = response.token,\n                userData = {\n                    coreId: response.userData.coreId,\n                    isClient: response.userData.isClient,\n                    title: response.userData.title,\n                    userName: service.username,\n                    email: response.userData.email,\n                    firstName: response.userData.firstName,\n                    phone: response.userData.phone,\n                    profileLogo: response.userData.profileLogo,\n                    primaryInstitutionName: response.userData.primaryInstitutionName,\n                    lastName: response.userData.lastName,\n                    fullName: response.userData.fullName,\n                    primaryInstitution: response.userData.primaryInstitution,\n                    accessTo: response.userData.accessTo,\n                    roles: response.userData.roles,\n                    position: response.userData.position,\n                    institutions: angular.isArray(response.userData.institutions) ? response.userData.institutions : [],\n                    passwordReset: !!response.userData.passwordReset,\n                };\n            // store username and token in local storage to keep user logged in between page refreshes\n            $localStorage.currentUser = {\n                token: token,\n                info: userData\n            };\n            UserFactory.setData(userData);\n\n            // add jwt token to auth header for all requests made by the $http service\n            service.setAuthorizationHeader(token);\n        };\n\n        service.handleSuccess = function (response) {\n            if (response.error && response.message) {\n                return service.handleFailure(response);\n            }\n            authInterceptor.resetUrl();\n\n            service.setData(response);\n\n            service.clearXLocalStorage();\n            $window.localStorage.setItem(constants.xStorage.keys.source, 'hub');\n            $window.localStorage.setItem(constants.xStorage.keys.data, angular.toJson({\n                token: $localStorage.currentUser.token,\n                userData: $localStorage.currentUser.info\n            }));\n\n            deferred.resolve(true);\n            deferred = null;\n        };\n\n        service.handleFailure = function (response) {\n            deferred.resolve(response);\n            deferred = null;\n        };\n\n        service.login = function (username, password) {\n            deferred = $q.defer();\n\n            if (!username || !username.length || !password || !password.length) {\n                deferred.resolve(false);\n            } else {\n                service.username = username;\n                var AuthModel = service.getAuthenticationModel();\n                AuthModel.save(null, {\n                    username: username,\n                    password: password\n                }, service.handleSuccess, service.handleFailure);\n            }\n\n            return deferred.promise;\n        };\n\n        service.logout = function () {\n            // remove user from local storage\n            delete $localStorage.currentUser;\n            // clear http auth header\n            $http.defaults.headers.common.Authorization = '';\n            // clear app data\n            $rootScope.$emit(constants.events.logout);\n\n            angular.forEach(constants.xStorage.keys, function (itemKey) {\n                $window.localStorage.removeItem(itemKey);\n            });\n        };\n\n        service.setAuthorizationHeader = function(token) {\n            $http.defaults.headers.common.Authorization = token;\n        };\n\n        service.getUserData = function () {\n            return $localStorage.currentUser && $localStorage.currentUser.info ? $localStorage.currentUser.info : null;\n        };\n\n        service.setUserData = function (data) {\n            if (typeof $localStorage.currentUser === 'undefined') {\n                $localStorage.currentUser = {};\n            }\n            $localStorage.currentUser.info = data;\n        };\n\n        service.clearXLocalStorage = function () {\n            angular.forEach(constants.xStorage.keys, function (itemKey) {\n                $window.localStorage.removeItem(itemKey);\n            });\n        };\n\n        service.setXLocalStorageLogout = function () {\n            $window.localStorage.setItem(constants.xStorage.keys.logout, 'hub');\n        };\n\n        service.hasUserData = function () {\n            return $localStorage.currentUser ? true: false;\n        };\n\n        service.getAuthorizationHeader = function () {\n            return $localStorage.currentUser && $localStorage.currentUser.token ?\n                { 'Authorization' : $localStorage.currentUser.token } : null;\n        };\n\n        service.getPublicPages = function () {\n            return ['/', '/forgot-password', '/reset-password'];\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('AuthenticationService', [\n            '$resource',\n            '$q',\n            '$localStorage',\n            '$http',\n            '$window',\n            'constants',\n            'UserFactory',\n            '$rootScope',\n            'authInterceptor',\n            App.services.AuthenticationService\n        ]);\n}(window.angular));\n\n(function (angular) {\n    'use strict';\n    angular.module('qsHub')\n        .config(['$provide', function ($provide) {\n            $provide.decorator('Grid', function ($delegate,$timeout) {\n                $delegate.prototype.renderingComplete = function () {\n                    if (angular.isFunction(this.options.onRegisterApi)) {\n                        this.options.onRegisterApi(this.api);\n                    }\n                    this.api.core.raise.renderingComplete(this.api);\n                    $timeout(function () {\n                        var $viewport =  angular.element(document.querySelectorAll('.ui-grid-render-container'));\n                        [\n                            'touchstart',\n                            'touchmove',\n                            'touchend',\n                            'keydown',\n                            'wheel',\n                            'mousewheel',\n                            'DomMouseScroll',\n                            'MozMousePixelScroll'\n                        ].forEach(function (eventName) {\n                            $viewport.unbind(eventName);\n                        });\n                    }.bind(this));\n                };\n                return $delegate;\n            });\n        }]);\n})(window.angular);\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {filters:{}});\n\n    App.filters.uiGridSelectedLabel = function () {\n        return function($select) {\n            if (!$select || typeof $select.selected === 'undefined' || $select.selected === null) {\n                return null;\n            }\n            if ($select.selected.label) {\n                return $select.selected.label;\n            }\n            var i = 0, total = $select.items.length;\n            for (i;i < total ;i++) {\n                if ($select.items[i].value === $select.selected) {\n                    return $select.items[i].label;\n                }\n            }\n            return null;\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .filter('uiGridSelectedLabel', App.filters.uiGridSelectedLabel);\n}(window.angular));\n\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {\n        components:{}\n    });\n\n    App.components.uiGridInfo = {\n        templateUrl: '/scripts/shared/ui-grid/uiGridInfo/uiGridInfoView.html'\n    };\n\n    angular.module('qsHub').component('uiGridInfo', App.components.uiGridInfo);\n\n}(window.angular));\n\n\n\n\n(function (angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.UiGrid = function (\n        $localStorage,\n        Grid,\n        UserFactory\n    ) {\n        var service = {},\n            exploded,\n            clear = Grid.prototype.clearAllFilters;\n\n        service.getKey = function (nameSpace) {\n            return nameSpace + UserFactory.getData().coreId;\n        };\n\n        /**\n        * Set qs users datagrid columns filters.\n        *\n        * @param {string} nameSpace\n        * @param {Object} columnsFilters\n        */\n        service.storeColumnsFilters = function (nameSpace, columnsFilters) {\n            $localStorage[service.getKey(nameSpace)] = columnsFilters;\n        };\n\n        /**\n         * Get qs users datagrid columns filters.\n         *\n         * @param {string} nameSpace\n         * @param {array} dateFilters\n         */\n        service.getColumnsFilters = function (nameSpace, dateFilters) {\n            if (typeof $localStorage[service.getKey(nameSpace)] !== 'undefined') {\n                return $localStorage[service.getKey(nameSpace)];\n            }\n\n            var filters = {};\n            if (angular.isDefined(dateFilters) &&\n                angular.isArray(dateFilters) &&\n                dateFilters.length > 0\n            ) {\n                angular.forEach(dateFilters, function (filterName) {\n                    filters[filterName] = {\n                        startDate: null,\n                        endDate: null\n                    };\n                });\n            }\n\n            return filters;\n        };\n\n        /**\n         * Set qs users datagrid columns visibility.\n         *\n         * @param {string} nameSpace\n         * @param {Object} columnsVisibility\n         */\n        service.storeColumnsVisibility = function (nameSpace, columnsVisibility) {\n            $localStorage[service.getKey(nameSpace)] = columnsVisibility;\n\n            // Clear filters for the hidden columns\n            var filterNameSpace = nameSpace.replace('Visibility', 'Filters'),\n                columnsFilters = service.getColumnsFilters(filterNameSpace);\n\n            if (columnsFilters) {\n                angular.forEach(columnsVisibility, function (value, key) {\n                    if (value === false) {\n                        columnsFilters['filter[' + key + ']'] = null;\n                    }\n                });\n                service.storeColumnsFilters(columnsFilters);\n            }\n\n            return columnsFilters;\n        };\n\n        /**\n         * Get qs users datagrid columns visibility.\n         *\n         * @param {string} nameSpace\n         * @returns {Object|*}\n         */\n        service.getColumnsVisibility = function (nameSpace) {\n            return $localStorage[service.getKey(nameSpace)];\n        };\n\n        /**\n         * Returns the names of the columns with its visibility (true visible, false not visible)\n         *\n         * @param {object|$scope.gridOptions.columnDefs} columns\n         * @returns {object}\n         */\n        service.getGridColumnsVisibility = function (columns) {\n            var visibility = {};\n            angular.forEach(columns, function (column) {\n                if (angular.isDefined(column.visible) && angular.isDefined(column.field)) {\n                    visibility[column.field] = column.visible;\n                }\n            });\n\n            return visibility;\n        };\n\n        /**\n         * Gets visibility based on field name\n         *\n         * @param {object} columns\n         * @param {string} fieldName\n         * @param {boolean} defaultValue\n         * @returns boolean\n         */\n        service.getVisibilityByField = function (columns, fieldName, defaultValue) {\n            return angular.isDefined(columns) && angular.isDefined(columns[fieldName]) ?\n                columns[fieldName] : defaultValue;\n        };\n\n        /**\n         * Gets filter based on field name\n         *\n         * @param {Object} filters\n         * @param {String} fieldName\n         * @param {mixed|null} defaultValue\n         * @returns {Object}\n         */\n        service.getFilterByField = function (filters, fieldName, defaultValue) {\n            var filter = 'filter[' + fieldName + ']',\n                defaultVal = typeof defaultValue === 'undefined' ? null : defaultValue;\n\n            return typeof filters[filter] === 'undefined' ? defaultVal : filters[filter];\n        };\n\n        /**\n         * Removes localstorage by key\n         *\n         * @param {string} nameSpace\n         */\n        service.removeByNameSpace = function (nameSpace) {\n            $localStorage.removeItem(service.getKey(nameSpace));\n        };\n\n        /**\n         *\n         * @param {type} column\n         * @returns {undefined}\n         */\n        service.applyFilters = function (column) {\n            if (column.filters[0].type !== 'select') {\n                if (column.filters[0].term.indexOf('=') > -1) {\n                    column.filters[0].condition = new RegExp('^' + column.filters[0].term.replace(' ', '\\\\s').replace('=', '') + '$', 'i');\n                } else if (column.filters[0].term.indexOf('%') > -1) {\n                    column.filters[0].condition = new RegExp(column.filters[0].term.replace('%', '(.*).+'), 'i');\n                } else if (column.filters[0].term.indexOf(',') > -1) {\n                    exploded = column.filters[0].term.split(',');\n                    angular.forEach(exploded, function (values, key) {\n                        exploded[key].replace(' ', '\\\\s');\n                        exploded[key] = '(\\\\b' + values + '\\\\b)';\n                    });\n                    column.filters[0].condition = new RegExp(exploded.join('|'), 'i');\n                } else if (column.filters[0].term.indexOf('&') > -1) {\n                    exploded = column.filters[0].term.split('&');\n                    angular.forEach(exploded, function (values, key) {\n                        exploded[key].replace(' ', '\\\\s');\n                        exploded[key] = '(?=.*' + values + ')';\n                    });\n                    column.filters[0].condition = new RegExp(exploded.join(''), 'i');\n                }\n            }\n        };\n\n        /**\n         *\n         * @param {type} columns\n         * @returns {undefined}\n         */\n        service.resetConditions = function (columns) {\n            angular.forEach(columns, function (column) {\n                delete (column.filters[0].condition);\n            });\n        };\n\n        /**\n         * Extend clear all filters u-grid function\n         *\n         * @param {object} columnBefore\n         * @param {object} columnDefs\n         * @param {function} clear\n         */\n        service.resetExtend = function (columnBefore, columnDefs, defaultFilters) {\n            Grid.prototype.clearAllFilters = function extendedClearAllFilters() {\n                clear.apply(this, Grid.prototype.clearAllFilters);\n                columnBefore.forEach(function (element, index) {\n                    if (element.visible) {\n                        columnDefs[index].visible = true;\n                        if (defaultFilters && columnDefs[index].filters) {\n                            defaultFilters.lastLoginAtRange = {\n                                startDate: null,\n                                endDate: null\n                            };\n                            if (defaultFilters.createdAt){\n                                defaultFilters.createdAt = {\n                                    startDate: null,\n                                    endDate: null\n                                };\n                            }\n                        }\n                    } else {\n                        var x = columnBefore.indexOf(element);\n                        columnDefs[x].visible = false;\n                    }\n                });\n            };\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('UiGridService', [\n            '$localStorage',\n            'Grid',\n            'UserFactory',\n            App.services.UiGrid\n        ]);\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.UiSelect = function () {\n        var service = {};\n\n        service.getYesNoOptions = function (excludeNa) {\n            excludeNa = excludeNa || false;\n            var options = [\n                { value: '', label: 'N/A' },\n                { value: 'yes', label: 'Yes' },\n                { value: 'no', label: 'No' },\n            ];\n            if (excludeNa) {\n                delete options[0];\n            }\n            return options;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('UiSelectService', [\n            App.services.UiSelect\n        ]);\n}(window.angular));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {directives:{}});\n\n    /**\n     * Animated Highlighter\n     *\n     * @returns {{restrict: string, template: string, transclude: boolean, link: method}}\n     */\n    App.directives.animatedHighlight = function ($animateCss) {\n        return {\n            restrict: 'A',\n            template:'<animated-highlight></animated-highlight><div ng-transclude></div>',\n            transclude:true,\n            link: function (scope, element, attrs) {\n                var colorBefore = \"#23a4f6\";\n                var colorAfter = \"none\";\n                var opacityBefore = 0.3;\n                var opacityAfter = 1;\n                var delay = 1; //one second\n                element.addClass(\"custom-highlight\");\n                element.css({\n                    position: \"relative\"\n                });\n                opacityBefore = attrs.highlightOpacityBefore || opacityBefore;\n                opacityAfter = attrs.highlightOpacityAfter || opacityAfter;\n                colorBefore = attrs.highlightColorBefore || colorBefore;\n                colorAfter = attrs.highlightColorAfter || colorAfter;\n                delay = attrs.highlightDelay || delay;\n                scope.$watch(attrs.animatedHighlight, function(value){\n                    if (value) {\n                        var animator = $animateCss(element.find(\"animated-highlight\"), {\n                            from: {\n                                background: colorBefore,\n                                opacity: opacityBefore,\n                                position: \"absolute\",\n                                height: \"100%\",\n                                width: \"100%\",\n                                \"z-index\": 1},\n                            to: {\n                                background: colorAfter,\n                                opacity: opacityAfter,\n                                \"z-index\": -1\n                            },\n                            duration: delay\n                        });\n                        animator.start();\n                    }\n                });\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .directive('animatedHighlight', [\"$animateCss\", App.directives.animatedHighlight]);\n\n}(window.angular));\n\n\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {directives:{}});\n\n    /**\n     * Directive for run metsiMenu on sidebar navigation\n     *\n     * @param $timeout\n     * @param InstitutionFactory\n     * @param UserFactory\n     * @param WatchService\n     * @returns {{restrict: string, link: link}}\n     */\n    App.directives.sideNavigation = function ($timeout, InstitutionFactory, UserFactory, WatchService) {\n        return {\n            restrict: 'A',\n            link: function($scope, element) {\n                // Call the metisMenu plugin and plug it to sidebar navigation\n                $timeout(function(){\n                    element.metisMenu();\n                });\n\n                var tuEnabledForInstitution = false,\n                    tuEnabledForUser = false,\n                    tmEnabledForInstitution = false,\n                    tmEnabledForUser = false,\n                    watches = [];\n\n                $scope.isTuEnabled = false;\n                $scope.isTmEnabled = false;\n\n                var toggleTuAccess = function () {\n                    $scope.isTuEnabled = UserFactory.isClient() ?\n                        tuEnabledForUser && tuEnabledForInstitution : tuEnabledForInstitution;\n                };\n                var toggleTmAccess = function () {\n                    $scope.isTmEnabled = UserFactory.isClient() ?\n                        tmEnabledForUser && tmEnabledForInstitution : tmEnabledForInstitution;\n                };\n\n                WatchService.create($scope, InstitutionFactory.isAdvancedProgram, function (is) {\n                    if (is) {\n                        $scope.isTuEnabled = false;\n                    }\n                });\n\n                var initWatches = function () {\n                    angular.forEach(watches, function (watch) {\n                        watch();\n                    });\n                    watches.push(WatchService.create($scope, InstitutionFactory.isTuSubscribed, function (isTuSubscribed) {\n                        tuEnabledForInstitution = !!(InstitutionFactory.getCoreId() && isTuSubscribed);\n                        toggleTuAccess();\n                    }));\n\n                    watches.push(WatchService.create($scope, UserFactory.isTuEnabled, function (isTuEnabled) {\n                        tuEnabledForUser = !!(InstitutionFactory.getCoreId() && isTuEnabled);\n                        toggleTuAccess();\n                    }));\n\n                    watches.push(WatchService.create($scope, InstitutionFactory.isTmSubscribed, function (isTmSubscribed) {\n                        tmEnabledForInstitution = !!(InstitutionFactory.getCoreId() && isTmSubscribed);\n                        toggleTmAccess();\n                    }));\n\n                    watches.push(WatchService.create($scope, UserFactory.isTmEnabled, function (isTmEnabled) {\n                        tmEnabledForUser = !!(InstitutionFactory.getCoreId() && isTmEnabled);\n                        toggleTmAccess();\n                    }));\n                };\n\n                WatchService.create($scope, InstitutionFactory.getCoreId, function (coreId) {\n                    // trigger watches only when institution data is loaded\n                    if (coreId) {\n                        initWatches();\n                        toggleTuAccess();\n                        toggleTmAccess();\n                    }\n                });\n            }\n        };\n    };\n\n    /**\n     * Directive for minimalize sidebar\n     *\n     * @returns {{restrict: string, template: string, controller: controller}}\n     */\n    App.directives.minimalizeSidebar = function () {\n        return {\n            restrict: 'A',\n            template: '<a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"\" ng-click=\"minimalize()\"><i class=\"fa fa-bars\"></i></a>',\n            controller: function ($scope) {\n                $scope.minimalize = function () {\n                    $(\"body\").toggleClass(\"mini-navbar\");\n                    if (!$('body').hasClass('mini-navbar') || $('body').hasClass('body-small')) {\n                        // Hide menu in order to smoothly turn on when maximize menu\n                        $('#side-menu').hide();\n                        // For smoothly turn on menu\n                        setTimeout(\n                            function () {\n                                $('#side-menu').fadeIn(500);\n                            }, 100);\n                    } else if ($('body').hasClass('fixed-sidebar')){\n                        $('#side-menu').hide();\n                        setTimeout(\n                            function () {\n                                $('#side-menu').fadeIn(500);\n                            }, 300);\n                    } else {\n                        // Remove all inline style from jquery fadeIn function to reset menu state\n                        $('#side-menu').removeAttr('style');\n                    }\n                };\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .directive('sideNavigation', ['$timeout', 'InstitutionFactory', 'UserFactory', 'WatchService', App.directives.sideNavigation])\n        .directive('minimalizaSidebar', App.directives.minimalizeSidebar);\n\n}(window.angular));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {directives:{}});\n\n\n    /**\n     * Horizontal Scroll with mouse wheel and with click and drag mouse.\n     */\n    App.directives.mouseScrollHorizontal = function($swipe, $window) {\n      return {\n        restrict: 'EA',\n        link: function(scope, element, attrs, ctrl) {\n            var pointX, pointY, startX, startY;\n            var isMouseDraged = false;\n            var isMouseDown = false;\n            //drag with mouse move\n            $swipe.bind(element, {\n                'start': function(coords,event) {\n                    isMouseDraged = false;\n                    isMouseDown = true;\n                    startX = coords.x;\n                    startY = coords.y;\n                },\n                'move': function(coords,event) {\n                    isMouseDraged = true;\n                    if (isMouseDown) {\n                        pointX = coords.x;\n                        pointY = coords.y;\n                        \n                        var delta =  startX - pointX;\n                        element[0].scrollLeft = delta;\n                    }\n                },\n                'end': function (coords, event) {\n                    isMouseDown = false;\n                    if (isMouseDraged) {\n                        angular.element(event.target).unbind('click');\n                    }\n                }\n            });\n\n            //scroll with mouse wheel\n            element.bind(\"DOMMouseScroll mousewheel onmousewheel\", function(event) {\n                var delta = 0;\n                event = $window.event || event;\n                if (event.originalEvent) {\n                    delta = Math.max(-1, Math.min(1, (event.originalEvent.wheelDelta || -event.originalEvent.detail)));\n                } else {\n                    delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\n                }\n        \n                scope.$apply(function(){\n                    element[0].scrollLeft -= delta * 40;\n                });\n                \n                // for IE\n                event.returnValue = false;\n                // for Chrome and Firefox\n                if(event.preventDefault) {\n                    event.preventDefault();                        \n                }\n            });\n        }\n      };\n    };\n    \n    angular\n        .module('qsHub')\n        .directive('mouseScrollHorizontal', [\"$swipe\", \"$window\", App.directives.mouseScrollHorizontal]);\n\n}(window.angular));\n\n\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {directives:{}});\n\n    App.directives.displayFiltering = function ($timeout) {\n        return {\n            restrict: 'E',\n            scope: {\n                columns:'=',\n                active:'=',\n                callback: '&'\n            },\n            templateUrl: '/scripts/shared/displayFiltering/displayFilteringView.html',\n            link: function (scope, element, attrs) {\n                element.find(\".dropdown-filter\").click(function(event){\n                    event.stopPropagation();\n                });\n                scope.displayFilteringSelectAll = function () {\n                    angular.forEach(scope.columns, function (column) {\n                        column.show = true;\n                    });\n                };\n                scope.closeDisplayFiltering = function (event) {\n                    $timeout(function() {\n                        element.click().trigger(event);\n                    },0);\n                };\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .directive('displayFiltering', [\"$timeout\", App.directives.displayFiltering]);\n\n}(window.angular));\n\n\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.InstitutionSwitchService = function ($resource, $q, $log, constants) {\n        var service = {};\n\n        /**\n         * Get institution search API endpoint.\n         *\n         * @returns $resource\n         */\n        service.getInstitutionSearchModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/search/:searchPhrase?sorting[coreId]=asc',\n                null,\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        service.getClientInstitutionsModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/allowed', null, {\n                get: {\n                    cancellable: true\n                }\n            });\n        };\n\n        /**\n         * Search for institution.\n         *\n         * @param {String} searchPhrase\n         * @returns {Promise.array}\n         */\n        service.searchInstitutions = function (searchPhrase) {\n            var deferred = $q.defer();\n\n            if (!searchPhrase || searchPhrase.length < 1) {\n                deferred.resolve([]);\n            } else {\n                var InstitutionsSearchModel = service.getInstitutionSearchModel();\n                InstitutionsSearchModel.get(\n                    {searchPhrase: searchPhrase},\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n                        deferred.resolve(data.results);\n                        deferred = null;\n                    },\n                    function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        deferred.resolve([]);\n                        deferred = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Get client user institutions.\n         *\n         * @returns {Promise}\n         */\n        service.getClientInstitutions = function () {\n            var ClientInstitutionsModel = service.getClientInstitutionsModel();\n            return ClientInstitutionsModel.get().$promise.then(\n                function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.results;\n                },\n                function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return [];\n                }\n            );\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('InstitutionSwitchService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.InstitutionSwitchService\n        ]);\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.LoginService = function (constants, $location) {\n        var service = {};\n\n        /**\n         * Allowed to login as institution?\n         *\n         * @param {Object} institution\n         * @returns {boolean}\n         */\n        service.allowLoginAs = function (institution) {\n            return institution && institution.active && institution.typeId && (\n                institution.typeId === constants.typeId.topLevelInstitutionId ||\n                institution.typeId === constants.typeId.clientDepartmentId ||\n                institution.typeId === constants.typeId.advancedProgramId ||\n                institution.typeId === constants.typeId.internalId\n            ) ? true : false;\n        };\n\n        /**\n         * Actions to do when login as button clicked\n         * @param  {[Object]} parameters\n         * @returns {boolean}\n         */\n        service.getTuProfilesRedirect = function (parameters) {\n            $location.path(constants.defaultClientPage).search(parameters);\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('LoginService', [\n            'constants',\n            '$location',\n            App.services.LoginService\n        ]);\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Url = function () {\n        var service = {},\n            youtubeIdPattern = /^(?:https?:\\/\\/)?(?:www\\.)?youtube\\.com\\/watch\\?(?=.*v=((\\w|-){11}))(?:\\S+)?$/,\n            youtubePattern = /^(?:https?:\\/\\/)?(?:www\\.)?youtube\\.com\\/watch\\?v=([A-Za-z0-9\\-_]){11}$|(\\&t=\\d+s)$/,\n            pattern = /^((?:http|ftp)s?:\\/\\/)(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)|localhost|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})(?::\\d+)?(?:\\/?|[\\/?]\\S+)$/i;\n\n        /**\n         * Prepend http into the url.\n         *\n         * @params {String} url\n         * @returns {String}\n         */\n        service.prependHttp = function (url) {\n            if (url && url.length && !/^(f|ht)tps?:\\/\\//i.test(url)) {\n                url = 'http://' + url;\n            }\n            return url;\n        };\n\n        /**\n         * Get the youtube id from url\n         *\n         * @param {string} url\n         * @returns {string}\n         */\n        service.extractYoutubeIdFromUrl = function (url) {\n            var match = url.match(youtubeIdPattern);\n            if (match && match[1].length === 11) {\n                return match[1];\n            }\n        };\n\n        service.getPattern = function() {\n            return pattern;\n        };\n\n        service.getYoutubePattern = function() {\n            return youtubePattern;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('UrlService', [\n            App.services.Url\n        ]);\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Text = function () {\n        var service = {};\n\n        service.countWords = function (text) {\n            if (text && text.length > 0) {\n                text = text.replace(/<(?:.|\\n)*?>/gm, '').replace(/&amp;nbsp;/g, '').replace(/&nbsp;/g, '').trim();\n                return text.length ? text.split(/\\s+/).length : 0;\n            }\n\n            return 0;\n        };\n\n        service.cleanHtmlTags = function (text) {\n            if (text && text.length > 0 && service.countWords(text) !== 0) {\n                return text.replace(/<[^>]+>/gm, \"\").trim();\n            }\n\n            return [];\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TextService', [\n            App.services.Text\n        ]);\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Object = function () {\n        var service = {};\n\n        /**\n         * Set object value.\n         *\n         * @param {Object} obj\n         * @param {string} prop\n         * @param {mixed} value\n         * @returns {boolean}\n         */\n        service.set = function (obj, prop, value) {\n            if (typeof obj === 'undefined' || typeof prop === 'undefined' || typeof value === 'undefined') {\n                return false;\n            }\n\n            var index = prop.indexOf('.');\n            if (index > -1) {\n                return service.set(obj[prop.substring(0, index)], prop.substr(index + 1), value);\n            }\n\n            obj[prop] = value;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('ObjectService', [\n            App.services.Object\n        ]);\n}(window.angular));\n\n(function(angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Time = function () {\n        var service = {};\n\n        service.now = function (unix) {\n            unix = typeof unix === 'undefined' ? false : unix;\n            return unix ? parseInt(moment().format('x')) : moment();\n        };\n\n        service.nowUnix = function () {\n            return service.now(true);\n        };\n\n        service.add = function (number, unit) {\n            return moment().add(number, unit);\n        };\n\n        service.formatInUnix = function (date) {\n            return moment(date, 'x');\n        };\n\n        service.getInUnix = function (date) {\n            return parseInt(date.format('x'));\n        };\n\n        service.isValid = function (date) {\n            return moment(date, 'x').isValid();\n        };\n\n        service.getMiliSeconds = function (momentObject) {\n            return momentObject.format('x');\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TimeService', [\n            App.services.Time\n        ]);\n}(window.angular, window.moment));\n\n(function (angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, { filters: {} });\n\n    App.filters.mDate = function (constants, $filter) {\n        return function (input) {\n            return input ? $filter('date')(input, 'mediumDate') : '';\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .filter('mDate', ['constants', '$filter', App.filters.mDate]);\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Object = function () {\n        var service = {};\n\n        /**\n         *\n         * @param {Object} institution\n         * @returns {boolean}\n         */\n        service.isTmViewingEnabled = function (institution) {\n            return !!(\n                angular.isDefined(institution) &&\n                institution &&\n                institution.enabled &&\n                institution.enabled.tm &&\n                institution.hasOwnProperty('nids') &&\n                institution.nids !== null &&\n                institution.nids.hasOwnProperty('tm') &&\n                institution.nids.tm\n            );\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('InstitutionService', [\n            App.services.Object\n        ]);\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n\n    App.handleMain = function (\n        version,\n        $scope,\n        $state,\n        $location,\n        $localStorage,\n        constants,\n        InstitutionsService,\n        InstitutionSwitchService,\n        AuthenticationService,\n        WatchService,\n        WebSocketsService,\n        InstitutionFactory,\n        TuProfileFactory,\n        UserFactory,\n        SharedProfileFactory,\n        AppUpdateMessageFactory,\n        ModalService,\n        AuthInterceptor\n    ) {\n        var controller = this;\n        controller.handles = UserFactory.getHandles();\n\n        $scope.version = version;\n        $scope.institution = {\n            selected: {\n                name: InstitutionFactory.getDisplayName(),\n                coreId: InstitutionFactory.getCoreId()\n            }\n        };\n        $scope.institutionsDropdownList = null;\n        $scope.email = null;\n        $scope.profileLogo = UserFactory.getProfileLogo();\n\n        /**\n         * Action to do on search for institution.\n         *\n         * @param {String} searchPhrase\n         */\n        $scope.searchInstitutions = function searchInstitutions(searchPhrase) {\n            $scope.searchInProgress = true;\n            InstitutionSwitchService.searchInstitutions(searchPhrase).then(function (results) {\n                $scope.institutionsDropdownList = results;\n                $scope.searchInProgress = false;\n            });\n        };\n\n        /**\n         * Action to do on select a searched institution.\n         *\n         * @param {Object} institution\n         */\n        $scope.handleSearchInstitutionClick = function (institution) {\n            if (!institution || !institution.coreId) {\n                return false;\n            }\n            if ($state.$current.includes.staff) {\n                $location.path(constants.defaultClientPage).search({ coreId: institution.coreId });\n            } else {\n                $location.path($location.path()).search({ coreId: institution.coreId });\n            }\n        };\n\n        /**\n         * Actions to do on goto parent institution button click.\n         */\n        $scope.handleGoToParentInstitution = function () {\n            if (!$scope.parentCoreId) {\n                return false;\n            }\n\n            $location.path(constants.defaultClientPage).search({ coreId: $scope.parentCoreId });\n        };\n\n        /**\n         * Checks if user has access to page\n         *\n         * @param page\n         * @returns {boolean}\n         */\n        controller.userHasAccessTo = function (page) {\n            var userHasAccessTo = false;\n            if (angular.isDefined($localStorage.currentUser) &&\n                angular.isArray($localStorage.currentUser.info.accessTo) &&\n                $localStorage.currentUser.info.accessTo.length > 0\n            ) {\n                userHasAccessTo = $localStorage.currentUser.info.accessTo.indexOf(page) !== -1;\n            }\n            if (angular.equals(UserFactory.getHandles()[$state.current.name], page)) {\n                userHasAccessTo = true;\n            }\n            return userHasAccessTo;\n        };\n\n        /**\n         * Is user allowed to login into institution.\n         *\n         * @param {Object} institutionData\n         */\n        controller.isInstitutionAllowed = function (institutionData) {\n            // institution data is loaded\n            if (institutionData && institutionData.typeId) {\n                // if it's a simple department - login to parent institution\n                if (institutionData.typeId === constants.typeId.simpleDepartmentId) {\n                    $location.path($location.path()).search({ coreId: institutionData.parentCoreId });\n                    return false;\n                }\n                // Check if user is accessing allowed institution\n                if (UserFactory.isClient() && !UserFactory.isAllowedToLogin($localStorage.currentInstitutionId)) {\n                    $location.path($location.path()).search({ coreId: $localStorage.currentUser.info.primaryInstitution });\n\n                    return false;\n                }\n                // if the institution is marked as deleted or inactive\n                if (\n                    institutionData.deleted ||\n                    (typeof institutionData.active !== 'undefined' && !institutionData.active)\n                ) {\n                    // show info message to a user about inactive institution\n                    return false;\n                }\n\n                return true;\n            } else {\n                // if its qs user\n                if (UserFactory.hasData() && !UserFactory.isClient()) {\n                    // send user to qs dashboard\n                    controller.resetInstitutionAndSendToQsDashboard();\n                    return false;\n                }\n                // logout user\n                AuthenticationService.logout();\n                InstitutionFactory.setData(null);\n                $location.path('/');\n                $location.search('coreId', null);\n                $location.replace();\n                return false;\n            }\n        };\n\n        /**\n         * Check if logged in user is allowed to login to the selected institution\n         *\n         * @returns {Boolean}\n         */\n        controller.isAllowed = function () {\n            return UserFactory.isAllowedToLogin($localStorage.currentInstitutionId);\n        };\n\n        /**\n         * Check if client user has access to parent institution\n         *\n         * @returns {Boolean}\n         */\n        controller.allowParent = function () {\n            var allowedInsitutes = UserFactory.getAllowedInstitutions();\n            var hasAccessTo = false;\n            if ($scope.parentCoreId) {\n                if (UserFactory.isClient()) {\n                    allowedInsitutes.forEach(function (item) {\n                        if (item === $scope.parentCoreId) {\n                            return (hasAccessTo = true);\n                        }\n                    });\n                }\n                else {\n                    hasAccessTo = true;\n                }\n                return hasAccessTo;\n            }\n        };\n\n        /**\n         * Show disable banner for:\n         *\n         * QS or school Users if:\n         * 1. institution is not active\n         * 2. the current page is client page\n         *\n         * @returns {Boolean}\n         */\n        controller.isDisabled = function () {\n            return InstitutionFactory.isActive() === false && $state.includes('clients');\n        };\n\n        /**\n         * When user with specific access is logged in\n         * and navigates institution that doesn't have that specific access\n         *\n         * @returns {boolean|*}\n         */\n        controller.noAccess = function () {\n            // if current page is TU/TM and institution doesn't have TU/TM\n            if (UserFactory.isClient() &&\n                ((typeof $state.current.name !== 'undefined' && $state.current.name.indexOf('.tu') !== -1 &&\n                    !InstitutionFactory.isTuSubscribed()) ||\n                    (typeof $state.current.name !== 'undefined' && $state.current.name.indexOf('.tm') !== -1 &&\n                        !InstitutionFactory.isTmSubscribed()))\n            ) {\n                return true;\n            }\n\n            return UserFactory.noAccess($state.current.name);\n        };\n\n        controller.resetInstitutionAndSendToQsDashboard = function () {\n            // reset institution to default\n            $localStorage.currentInstitutionId = InstitutionFactory.getDefaultCoreId();\n            // send user to qs dashboard\n            $location.path('/admin/dashboard');\n            $location.search('coreId', InstitutionFactory.getDefaultCoreId());\n            $location.replace();\n        };\n\n        /**\n         * help Icon action handler.\n         *\n         * @param item\n         */\n        $scope.helpIcon = function (size) {\n            var modalOptions = {\n                closeButtonText: 'Ok',\n                headerText: 'Need help?'\n\n            };\n            var modalDefaults = {\n                backdrop: true,\n                keyboard: true,\n                modalFade: true,\n                size: size,\n                templateUrl: '/scripts/components/modal/helpModal.html'\n            };\n            ModalService.show(modalDefaults, modalOptions);\n        };\n\n        controller.coreIdWatch = function (newCoreId, oldCoreId) {\n            if (AuthInterceptor.hasErrors()) {\n                return false;\n            }\n            if (\n                constants.publicPages.indexOf($location.path()) !== -1 ||\n                (\n                    !newCoreId &&\n                    !UserFactory.hasData() &&\n                    !AuthenticationService.hasUserData()\n                )\n            ) {\n                return false;\n            }\n            TuProfileFactory.closeSidebars();\n            SharedProfileFactory.closeSidebars();\n\n            // if user data is not loaded\n            if (!UserFactory.hasData()) {\n                // check if user data exists in the session\n                if (AuthenticationService.getUserData()) {\n                    UserFactory.setData(AuthenticationService.getUserData());\n                } else {\n                    // temporary fix as this file will be excluded from project.\n                    var publicPages = AuthenticationService.getPublicPages(),\n                        restrictedPage = publicPages.indexOf($location.path()) === -1;\n                    if (restrictedPage) {\n                        // send user to login page\n                        return $location.path('/');\n                    }\n\n                    return true;\n                }\n            }\n            $scope.email = UserFactory.getUserName();\n            $scope.profileLogo = UserFactory.getProfileLogo();\n            $scope.isClient = UserFactory.isClient();\n            //controller.fullName = UserFactory.getFullName();\n            // if no Core id in the URL\n            if (!newCoreId) {\n                // if user is client\n                if ($scope.isClient) {\n                    if (oldCoreId) {\n                        newCoreId = oldCoreId;\n                    } else if ($localStorage.currentInstitutionId && controller.isAllowed()) {\n                        newCoreId = $localStorage.currentInstitutionId;\n                    } else {\n                        newCoreId = UserFactory.getPrimaryInstitutionCoreId();\n                    }\n                } else {\n                    if (oldCoreId) {\n                        newCoreId = oldCoreId;\n                    } else if ($localStorage.currentInstitutionId) {\n                        newCoreId = $localStorage.currentInstitutionId;\n                    } else {\n                        newCoreId = InstitutionFactory.getDefaultCoreId();\n                    }\n                }\n            }\n            if ($scope.isClient) {\n                InstitutionSwitchService.getClientInstitutions().then(function (institutionsList) {\n                    // update institutions dropdown options\n                    $scope.institutionsDropdownList = institutionsList;\n                });\n                // Check if user has access to new core id, if not, sent to primary institution\n                if ($localStorage.currentUser.info.institutions.indexOf(parseInt(newCoreId)) === -1) {\n                    newCoreId = $localStorage.currentUser.info.primaryInstitution;\n                }\n            }\n\n            $localStorage.currentInstitutionId = newCoreId;\n            controller.fullName = UserFactory.getFullName();\n\n            controller.profileLogo = function () {\n                return UserFactory.getProfileLogo();\n            };\n            InstitutionsService.getInstitutionData(newCoreId).then(function (data) {\n                var institutionData = data && data.results ? data.results[0] : null;\n                if (institutionData) {\n                    controller.isInstitutionAllowed(institutionData);\n                    InstitutionFactory.setData(institutionData);\n\n                    var displayName = InstitutionFactory.getDisplayName();\n                    if (!UserFactory.isClient()) {\n                        displayName = displayName + ' [' + InstitutionFactory.getCoreId() + ']';\n                    }\n                    if (institutionData && institutionData.parentName) {\n                        $scope.institution.selected = {\n                            name: displayName,\n                            coreId: InstitutionFactory.getCoreId(),\n                            parentInstitutionName: institutionData.parentName\n                        };\n                    } else {\n                        $scope.institution.selected = {\n                            name: displayName,\n                            coreId: InstitutionFactory.getCoreId()\n                        };\n                    }\n                    $scope.parentCoreId = InstitutionFactory.getParentCoreId();\n                }\n            });\n        };\n\n        controller.releaseVersionWatch = function (releaseVersion) {\n            AppUpdateMessageFactory.setVisible(version < releaseVersion);\n        };\n\n        controller.initWatches = function () {\n            // watch for coreId changes in the URL\n            WatchService.create($scope, function () {\n                return $location.search().coreId;\n            }, controller.coreIdWatch);\n\n            WebSocketsService.subscribe('release', 'version', controller.releaseVersionWatch);\n\n            // watch for Username changes changes at profile page\n            WatchService.create($scope, UserFactory.getFullName, function (fullName) {\n                if (fullName) {\n                    controller.fullName = fullName;\n                }\n            });\n\n            // watch for Username changes changes at profile page\n            WatchService.create($scope, UserFactory.getProfileLogo, function (profileLogo) {\n                if (profileLogo) {\n                    $scope.profileLogo = profileLogo;\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('MainController', [\n            'version',\n            '$scope',\n            '$state',\n            '$location',\n            '$localStorage',\n            'constants',\n            'InstitutionsService',\n            'InstitutionSwitchService',\n            'AuthenticationService',\n            'WatchService',\n            'WebSocketsService',\n            'InstitutionFactory',\n            'TuProfileFactory',\n            'UserFactory',\n            'SharedProfileFactory',\n            'AppUpdateMessageFactory',\n            'ModalService',\n            'authInterceptor',\n            App.handleMain\n        ]);\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.Login = function (\n        $rootScope,\n        $scope,\n        $location,\n        $localStorage,\n        $state,\n        $window,\n        constants,\n        AuthenticationService,\n        PasswordService,\n        UserFactory,\n        InstitutionFactory,\n        NotifierFactory,\n        authInterceptor,\n        InstitutionsListService\n    ) {\n        var controller = this;\n        $scope.forms = {};\n        $scope.credentials = {};\n        $scope.forgottenPassword = {};\n        $scope.showForgotPassword = false;\n        $scope.showResetPassword = false;\n        $scope.showResetPasswordConfirmation = false;\n        $scope.showAfterResetPasswordConfirmation = false;\n        $scope.loginInProgress = false;\n        $scope.animate = false;\n        controller.getPasswordValidator = function () {\n            return [\n                {name: 'Minimum 8 characters', status: false}, // 0\n                {name: 'Maximum 32 characters', status: false}, // 1\n                {name: 'Lowercase letter (a-z)', status: false}, // 2\n                {name: 'Uppercase letter (A-Z)', status: false}, // 3\n                {name: 'Number (0-9)', status: false}, // 4\n                {name: 'Special characters', status: false}, // 5\n                {name: 'Both passwords match', status: false} // 6\n            ];\n        };\n\n        controller.isPasswordValid = function () {\n            var result = true;\n            angular.forEach($scope.validationItems, function (item) {\n                if (result && !item.status) {\n                    result = false;\n                }\n            });\n\n            return result;\n        };\n\n        controller.errors = {\n            missingRequired: 'Username and password are required',\n            invalidUsername: 'Please enter a valid username',\n            incorrectCredentials: 'Username or password is incorrect',\n            accountNotComplete: 'Your account setup is not completed',\n        };\n\n        if ($state.current.data.page === 'forgot-password') {\n            $scope.showResetPassword = false;\n            $scope.showForgotPassword = true;\n            $scope.showResetPasswordConfirmation = false;\n            $scope.showAfterResetPasswordConfirmation = false;\n        }\n\n        if ($state.current.data.page === 'reset-password') {\n            $scope.showResetPassword = true;\n            $scope.showForgotPassword = false;\n            $scope.showResetPasswordConfirmation = false;\n            $scope.showAfterResetPasswordConfirmation = false;\n            $scope.validationItems = controller.getPasswordValidator();\n            $scope.password = null;\n            $scope.repeatPassword = null;\n        }\n\n        $scope.validatePassword = function () {\n            if ($scope.showResetPassword) {\n                $scope.validationItems = controller.getPasswordValidator();\n                var pattern = null;\n                // 0\n                if ($scope.forms.resetPasswordForm.password.$viewValue !== null &&\n                    $scope.forms.resetPasswordForm.password.$viewValue.length > 7\n                ) {\n                    $scope.validationItems[0].status = true;\n                }\n                // 1\n                if ($scope.forms.resetPasswordForm.password.$viewValue !== null &&\n                    $scope.forms.resetPasswordForm.password.$viewValue.length < 33 &&\n                    $scope.forms.resetPasswordForm.password.$viewValue.length > 0\n                ) {\n                    $scope.validationItems[1].status = true;\n                }\n                // 2\n                pattern = new RegExp(/(?=.*?[a-z])/);\n                if (pattern.test($scope.forms.resetPasswordForm.password.$viewValue)\n                ) {\n                    $scope.validationItems[2].status = true;\n                }\n                // 3\n                pattern = new RegExp(/(?=.*?[A-Z])/);\n                if (pattern.test($scope.forms.resetPasswordForm.password.$viewValue)\n                ) {\n                    $scope.validationItems[3].status = true;\n                }\n                // 4\n                pattern = new RegExp(/(?=.*?[0-9])/);\n                if (pattern.test($scope.forms.resetPasswordForm.password.$viewValue)\n                ) {\n                    $scope.validationItems[4].status = true;\n                }\n                // 5\n                pattern = new RegExp(/(?=.*?[\\s\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\£\\¬\\€])/);\n                if (pattern.test($scope.forms.resetPasswordForm.password.$viewValue)\n                ) {\n                    $scope.validationItems[5].status = true;\n                }\n                // 6\n                if ((angular.isDefined($scope.forms.resetPasswordForm.password.$viewValue) &&\n                    angular.isDefined($scope.forms.resetPasswordForm.repeatPassword.$viewValue)) &&\n                    angular.equals(\n                        $scope.forms.resetPasswordForm.password.$viewValue,\n                        $scope.forms.resetPasswordForm.repeatPassword.$viewValue\n                    ) && ($scope.forms.resetPasswordForm.password.$viewValue.length > 0 &&\n                    $scope.forms.resetPasswordForm.repeatPassword.$viewValue.length > 0)) {\n                    $scope.validationItems[6].status = true;\n                }\n            }\n        };\n\n        $scope.handleForgotPasswordClick = function () {\n            $scope.showResetPasswordConfirmation = false;\n            $scope.resetSubmitInProgress = false;\n            $scope.email = null;\n            $scope.showForgotPassword = !$scope.showForgotPassword;\n            if ($scope.showResetPassword) {\n                $scope.showForgotPassword = false;\n                $scope.showResetPassword = false;\n                $state.go('logout');\n            } else {\n                $scope.showForgotPassword = !$scope.showForgotPassword;\n                if ($scope.showForgotPassword) {\n                    $state.go('forgot-password');\n                } else {\n                    $state.go('logout');\n                }\n            }\n        };\n\n        controller.showError = function (errorMessage) {\n            $scope.animate = true;\n            $scope.error = errorMessage;\n            setTimeout(function() {\n                $scope.animate = false;\n            }, 1000);\n        };\n\n        /**\n         * Reset errors.\n         */\n        $scope.resetErrors = function () {\n            $scope.error = false;\n        };\n\n        /**\n         * Actions to do when login button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleLogin = function () {\n            $scope.forms.loginForm.$setSubmitted();\n            if (\n                $scope.loginInProgress ||\n                !$scope.forms.loginForm ||\n                !$scope.forms.loginForm.$valid\n            ) {\n                var error = $scope.forms.loginForm.$error.email ?\n                    controller.errors.invalidUsername : controller.errors.missingRequired;\n                controller.showError(error);\n\n                return false;\n            }\n            $scope.loginInProgress = true;\n            $scope.animate = false;\n            AuthenticationService.login(\n                $scope.credentials.username,\n                $scope.credentials.password\n            ).then(controller.loginCallback);\n        };\n\n        /**\n         * Actions to do on login callback.\n         *\n         * @param {boolean} response\n         */\n        controller.loginCallback = function (response) {\n            if (angular.equals(response, true)) {\n                var redirectUrl = $location.search().url,\n                    coreId = null;\n\n                if (UserFactory.isClient()) {\n                    coreId = UserFactory.getPrimaryInstitutionCoreId();\n                    // if user has access to institution details page, send him there after login\n                    if (!angular.isDefined(redirectUrl) &&\n                        UserFactory.hasAccessToInstitutionDetails()\n                    ) {\n                        redirectUrl = constants.defaultClientPage;\n                    } else {\n                        if (angular.isDefined(redirectUrl) &&\n                            redirectUrl.indexOf('profiles') === -1\n                        ) {\n                            // Get subscriptions for the primary institutuion\n                            InstitutionsListService.getInstitution(coreId).then(function (response) {\n                                var allowState = UserFactory.getFirstAllowedState(response.subscriptions);\n                                // otherwise, send user to the first page in his access list\n                                if (!angular.equals('/', allowState)) {\n                                    if (allowState.indexOf('statistics') === -1) {\n                                        $state.go(allowState);\n                                    } else {\n                                        // Redirect to statistics core page\n                                        $window.location = constants.urls.core + '/statistics';\n                                    }\n                                } else {\n                                    $scope.animate = false;\n                                    $scope.loginInProgress = false;\n                                    controller.showError(controller.errors.accountNotComplete);\n\n                                    return false;\n                                }\n\n                                return true;\n                            });\n                        }\n                    }\n                    if (!UserFactory.hasAccess()) {\n                        $scope.loginInProgress = false;\n                        redirectUrl = '/';\n                        controller.showError('Your account setup is not completed');\n                    }\n                } else {\n                    if ($localStorage.currentInstitutionId) {\n                        coreId = $localStorage.currentInstitutionId;\n                    } else {\n                        coreId = InstitutionFactory.getDefaultCoreId();\n                    }\n                    if (redirectUrl) {\n                        // Check if the QS user has access to the area matching the\n                        var urlStates = $state.get().map(function(state) {\n                                var result = {};\n                                if ($state.href(state.name) && !state.abstract) {\n                                    result[$state.href(state.name).replace('#', '')] = state.name;\n                                } else {\n                                    result = null;\n                                }\n                                return result;\n                            }).filter(function(e){return e;}),\n                            resultUrlStates = {},\n                            keyResult = '';\n\n                        angular.forEach(urlStates, function (value, key) {\n                            keyResult = Object.keys(value)[0];\n                            resultUrlStates[keyResult] = value[keyResult];\n                        });\n                        var qsUserhasAccess = controller.userHasAccessTo(UserFactory.getHandles()[resultUrlStates[redirectUrl]]);\n                        if (qsUserhasAccess) {\n                            $location.url(redirectUrl);\n                        } else {\n                            redirectUrl = '/admin/dashboard';\n                        }\n                    } else {\n                        redirectUrl = '/admin/dashboard';\n                    }\n                }\n                redirectUrl = redirectUrl ? redirectUrl : constants.defaultClientPage;\n                redirectUrl = decodeURIComponent(redirectUrl);\n                $location.path(redirectUrl).search({coreId: coreId});\n            } else {\n                $scope.animate = true;\n                $scope.error = 'Username or password is incorrect';\n                $scope.loginInProgress = false;\n                var displayMessage = controller.errors.invalidUsername;\n                if (response.hasOwnProperty('message')) {\n                    displayMessage = response.message;\n                }\n                controller.showError(displayMessage);\n            }\n        };\n\n        /**\n         * Checks if user has access to page\n         *\n         * @param page\n         * @returns {boolean}\n         */\n        controller.userHasAccessTo = function (page) {\n            var userHasAccessTo = false;\n            if (angular.isDefined($localStorage.currentUser) &&\n                angular.isArray($localStorage.currentUser.info.accessTo) &&\n                $localStorage.currentUser.info.accessTo.length > 0\n            ) {\n                userHasAccessTo = $localStorage.currentUser.info.accessTo.indexOf(page) !== -1;\n            }\n            if (angular.equals(UserFactory.getHandles()[$state.current.name], page)) {\n                userHasAccessTo = true;\n            }\n            return userHasAccessTo;\n        };\n\n        /**\n         * Actions to do when send password button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleResetPasswordSubmitClick = function () {\n            $scope.forgottenPasswordError = false;\n            if (\n                $scope.resetSubmitInProgress ||\n                !$scope.forms.forgotPasswordForm ||\n                !$scope.forms.forgotPasswordForm.$valid\n            ) {\n                return false;\n            }\n            $scope.resetSubmitInProgress = true;\n            $scope.animate = false;\n            PasswordService.create($scope.forgottenPassword.email).then(controller.resetPasswordCallback);\n        };\n\n        controller.resetPasswordCallback = function (response) {\n            var responseObject = {\n                'status' : false,\n                'message' : 'Request failed, please try again'\n            };\n            if (response && response.hasOwnProperty('status')) {\n                responseObject.status = response.status;\n                if (!response.status) {\n                    responseObject.message = response.message;\n                }\n            }\n            $scope.resetSubmitInProgress = false;\n            if (response.status) {\n                // display confirmation\n                $scope.showResetPasswordConfirmation = true;\n                $scope.animate = false;\n                $scope.forgottenPasswordError = false;\n            } else {\n                $scope.animate = true;\n                $scope.forgottenPasswordError = true;\n                $scope.forgottenPasswordErrorMessage = responseObject.message;\n            }\n        };\n\n        controller.updateResetCallback = function (response) {\n            $scope.resetSubmitInProgress = false;\n            if (response) {\n                // login user with controller.loginPassword\n                // response will contain the email and the status\n                NotifierFactory.show(\n                    'success',\n                    'New Password Saved',\n                    'Password Reset'\n                );\n                AuthenticationService.login(response.email, controller.loginPassword).then(controller.loginCallback);\n            }\n        };\n\n        $scope.handleResetSubmitPasswordSubmitClick = function () {\n            if ($scope.resetSubmitInProgress ||\n                !$scope.forms.resetPasswordForm ||\n                !$scope.forms.resetPasswordForm.$valid\n            ) {\n                return false;\n            }\n            if (!controller.isPasswordValid()) {\n                return false;\n            }\n\n            $scope.resetSubmitInProgress = true;\n            controller.loginPassword = $scope.forms.resetPasswordForm.password.$modelValue;\n            PasswordService.update($scope.requestId, controller.loginPassword).then(controller.updateResetCallback);\n        };\n\n        $scope.toggleForgottenPasswordForm = function () {\n            $scope.forgottenPassword.email = '';\n            $scope.showResetPasswordConfirmation = false;\n            $scope.showForgotPassword = !$scope.showForgotPassword;\n            $scope.forgottenPasswordError = false;\n            $scope.animate = false;\n            $scope.forms.forgotPasswordForm.$setPristine();\n        };\n\n        controller.destruct = function () {\n            $location.path('/');\n        };\n\n        controller.init = function () {\n            // reset login status\n            AuthenticationService.logout();\n            AuthenticationService.setXLocalStorageLogout();\n            InstitutionFactory.setData(null);\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('LoginController', [\n            '$rootScope',\n            '$scope',\n            '$location',\n            '$localStorage',\n            '$state',\n            '$window',\n            'constants',\n            'AuthenticationService',\n            'PasswordService',\n            'UserFactory',\n            'InstitutionFactory',\n            'NotifierFactory',\n            'authInterceptor',\n            'InstitutionsListService',\n            App.controllers.Login\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    /**\n     * Directive for run metsiMenu on sidebar navigation\n     *\n     * @param $timeout\n     * @returns {{restrict: string, link: link}}\n     */\n    App.controllers.Sidebar = function ($window, constants , UserFactory) {\n        var controller = this;\n        controller.coreUrl = constants.urls.core;\n        controller.hasTuProgramsOverviewAccess = function () {\n            return UserFactory.hasTuProgramsOverviewAccess();\n        };\n        controller.hasDepartmentsOverviewAccess = function () {\n            return UserFactory.hasDepartmentsOverviewAccess();\n        };\n\n        controller.getCoreFlag = function () {\n            if ($window.localStorage[constants.xStorage.keys.sendToSession]) {\n                return $window.localStorage[constants.xStorage.keys.sendToSession] === 'true' ? constants.coreFlag.value : '';\n            }\n\n            return constants.coreFlag.value;\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('SidebarController', [\n            '$window',\n            'constants',\n            'UserFactory',\n            App.controllers.Sidebar\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    /**\n     * Service for comun functionality between InstitutionsUsersListService and QsUsersListService\n     */\n    App.services.usersList = function () {\n        var service = {};\n\n        /**\n         * Get contact type name by its handle.\n         *\n         * @param handle\n         * @param contactTypesList\n         * @returns {string}\n         */\n        service.getContactTypeNameByHandle = function (handle, contactTypesList) {\n            var contactTypeName = '';\n            if (contactTypesList) {\n                angular.forEach(contactTypesList, function(contactType) {\n                    if (contactType.handle && contactType.name && contactType.handle === handle) {\n                        contactTypeName = contactType.name;\n                        return;\n                    }\n                });\n            }\n\n            return contactTypeName;\n        };\n\n        /**\n         * Format sections list.\n         *\n         * @param {Object} sectionsList\n         * @returns {Array}\n         */\n        service.formatSections = function (sectionsList) {\n            var flatArray = [],\n                firstElement;\n\n            angular.forEach(sectionsList, function (section) {\n                firstElement = true;\n                angular.forEach(section.pages, function (page) {\n                    flatArray.push({\n                        'sectionName' : firstElement ? section.name : null,\n                        'pageName' : page.name,\n                        'pageHandle' : section.handle + '.' + page.handle,\n                        'disabled' : page.handle === 'dashboard',\n                        'assigned' : page.handle === 'dashboard'\n                    });\n                    firstElement = false;\n                });\n            });\n            return flatArray;\n        };\n\n        /**\n         * Assing sections and pages based on user's roles\n         *\n         * @param {object} userData\n         * @param {object} roleList\n         * @returns {object}\n         */\n        service.updateSectionsAndPages = function (userData, roleList) {\n            if (roleList !== 'undefined') {\n                if (userData.roles &&\n                    userData.roles.custom !== 'undefined' &&\n                    !userData.roles.custom\n                ) {\n                    for (var userRole in userData.roles) {\n                        if (userData.roles[userRole]) {\n                            for (var role in roleList) {\n                                if (roleList[role]) {\n                                    if (roleList[role].roleHandle !== userRole) {\n                                        continue;\n                                    }\n                                    for (var section in roleList[role].sections) {\n                                        if (roleList[role].sections[section]) {\n                                            userData.accessTo[roleList[role].sections[section]] = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return userData;\n        };\n\n        /**\n         * Select all the role children for those users that have All selected and not all the children selected on load\n         *\n         * @param {object} userData\n         * @param {object} roleList\n         * @returns {object}\n         */\n        service.updateRolesWithAll = function (userData, roleList) {\n            var childrenRolesHandles = null,\n                groupHandle = null;\n\n            for (var userRole in userData.roles) {\n                if (userRole.indexOf(\"all\") !== -1 &&\n                    userData.roles[userRole]\n                ) {\n                    groupHandle = userRole.replace('.all', '');\n                    childrenRolesHandles = service.getChildrenRoles(groupHandle, roleList);\n                    if (childrenRolesHandles) {\n                        for (var childrenRoleHandle in childrenRolesHandles) {\n                            if (childrenRoleHandle) {\n                                userData.roles[childrenRolesHandles[childrenRoleHandle]] = true;\n                            }\n                        }\n                    }\n                }\n            }\n            return userData;\n        };\n\n        /**\n         * Gets children roles for a given parent (all) role\n         *\n         * @param {string} groupHandle\n         * @param {object} rolesList\n         */\n        service.getChildrenRoles = function (groupHandle, rolesList) {\n            var childrenRoles = [];\n            angular.forEach(rolesList, function (role) {\n\n                if (role.all || role.groupHandle !== groupHandle) {\n                    return false;\n                }\n\n                childrenRoles.push(role.roleHandle);\n            });\n\n            return childrenRoles;\n        };\n\n        /**\n         * Gets parent role for a given child role\n         *\n         * @param {string} groupHandle\n         * @param {object} rolesList\n         */\n        service.getParentRoleHandle = function (groupHandle, rolesList) {\n            var parentRoleHandle = null;\n\n            if (rolesList) {\n                angular.forEach(rolesList, function (role) {\n                    if (!role.all || role.groupHandle !== groupHandle) {\n                        return false;\n                    }\n                    parentRoleHandle = role.roleHandle;\n                });\n            }\n\n            return parentRoleHandle;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('UsersListService', [\n            App.services.usersList\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.userTypes = function (\n    ) {\n        var service = {\n            userTypes: [\n                {\n                    uniqueId: 1,\n                    name: 'Contact',\n                    disabled: true\n                },\n                {\n                    uniqueId: 2,\n                    name: 'User',\n                    disabled: false\n                }\n            ]\n        };\n\n        service.getUserTypes = function () {\n            return service.userTypes;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('UserTypesService', [\n            App.services.userTypes\n        ]);\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n    App.controllers.Password = function (\n        $scope,\n        PasswordService,\n        WatchService\n    ) {\n        var controller = this;\n\n        controller.defaultConfig = {\n            resetOnLogin: true,\n            label: null,\n            labelClass: null,\n            blockClass: 'row'\n        };\n        PasswordService.setHasErrors(true);\n        controller.isValid = function () {\n            return PasswordService.isPasswordValid(controller.user.password);\n        };\n\n        controller.isRequired = function () {\n            return controller.user && controller.user.id || controller.user.coreId ? false : true;\n        };\n\n        controller.handleChanges = function () {\n            controller.isValid();\n            controller.user.password = controller.user.password.split(' ').join('');\n            controller.validators = PasswordService.validatePassword(controller.user.password);\n            PasswordService.setHasErrors(!!controller.user.password.length);\n        };\n\n        controller.initValidators = function () {\n            // get validation rules without password match\n            var validators = PasswordService.getPasswordValidator();\n            controller.validators = validators.splice(0, validators.length - 1);\n        };\n\n        controller.userWatch = function () {\n            controller.initValidators();\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, function () {\n                return controller.user;\n            }, controller.userWatch);\n\n            WatchService.create($scope, function () {\n                return controller.resetValidators;\n            }, controller.userWatch);\n\n            //watch for password entered\n            WatchService.create($scope, PasswordService.getHasErrors, function (newValue) {\n                newValue = controller.isRequired() ?  newValue : true;\n                controller.isPassLen = newValue;\n            });\n        };\n\n        controller.$onInit = function () {\n            controller.initValidators();\n            controller.initWatches();\n            controller.cnf = angular.extend({}, controller.defaultConfig, controller.config);\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('PasswordController', [\n            '$scope',\n            'PasswordService',\n            'WatchService',\n            App.controllers.Password\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {\n        components:{}\n    });\n\n    App.components.userPassword = {\n        templateUrl: '/scripts/components/users/shared/password/passwordView.html',\n        bindings: {\n            user: '=',\n            config: '<',\n            resetValidators: '<'\n        },\n        controller: 'PasswordController'\n    };\n\n    angular.module('qsHub').component('userPassword', App.components.userPassword);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.Profile = function (\n        $scope,\n        WatchService,\n        UserFactory,\n        AuthenticationService\n    ) {\n        var controller = this;\n        if (!UserFactory.hasData()) {\n            UserFactory.setData(AuthenticationService.getUserData());\n        }\n\n        WatchService.create($scope, UserFactory.isPasswordReset, function (isPasswordReset) {\n            $scope.isPasswordReset = isPasswordReset;\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('ProfileController', [\n            '$scope',\n            'WatchService',\n            'UserFactory',\n            'AuthenticationService',\n            App.controllers.Profile\n        ]);\n\n}(window.angular));\n\n/* global logoType */\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.profilePassword = function (\n        $scope,\n        constants,\n        ProfilePasswordService,\n        AuthenticationService,\n        PasswordService,\n        NotifierFactory,\n        UserFactory\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        controller.forms = {};\n        controller.passwordFieldsVisible = false;\n        controller.updateInProgress = false;\n        controller.password = null;\n        controller.confirmPassword = null;\n        controller.submitted = false;\n\n        $scope.user = angular.extend({}, UserFactory.getData());\n\n        controller.getForm = function() {\n            return controller.forms.password;\n        };\n\n        controller.togglePasswordFields = function () {\n            $scope.user.password = null;\n            controller.password = null;\n            controller.confirmPassword = null;\n            controller.passwordFieldsVisible = !controller.passwordFieldsVisible;\n        };\n\n        controller.isPasswordFieldsVisible = function () {\n            return controller.passwordFieldsVisible;\n        };\n\n        controller.isDisabled = function () {\n            return controller.updateInProgress;\n        };\n\n        controller.update = function () {\n            controller.submitted = true;\n\n            // validate program data\n            if (controller.updateInProgress ||\n                !PasswordService.isPasswordValid($scope.user.password)\n            ) {\n                return false;\n            }\n            controller.updateInProgress = true;\n            ProfilePasswordService.update($scope.user.password).then(controller.updatePasswordCallback);\n        };\n\n        controller.updatePasswordCallback = function (success) {\n            controller.updateInProgress = false;\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Updated successfully!' : 'Update failed!',\n                'Password'\n            );\n            if (success) {\n                UserFactory.clearPasswordReset();\n                AuthenticationService.setUserData(UserFactory.getData());\n                controller.passwordFieldsVisible = false;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('ProfilePasswordController', [\n            '$scope',\n            'constants',\n            'ProfilePasswordService',\n            'AuthenticationService',\n            'PasswordService',\n            'NotifierFactory',\n            'UserFactory',\n            App.controllers.profilePassword\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.ProfilePasswordService = function (\n        $resource,\n        $log,\n        constants\n    ) {\n        var service = {};\n\n        /**\n         * Get user update API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpdateModel = function () {\n             return $resource(constants.api.usersPermissions.url + '/v1/user-profile', null, {\n                update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Update user Details | Password.\n         *\n         * @param {String} password\n         * @returns {Promise}\n         */\n        service.update = function(password) {\n            var UpdateModel = service.getUpdateModel(),\n                dataToUpdate = {\n                    password : password\n                };\n\n            return UpdateModel.update(dataToUpdate).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('ProfilePasswordService', [\n            '$resource',\n            '$log',\n            'constants',\n            App.services.ProfilePasswordService\n        ]);\n\n}(window.angular));\n\n/* global logoType */\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.ProfilePersonalDetails = function (\n        $scope,\n        constants,\n        ProfilePersonalDetailsService,\n        AuthenticationService,\n        UserFactory,\n        NotifierFactory,\n        PasswordService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        controller.submitted = false;\n        controller.updateInProgress = false;\n        controller.forms = {};\n\n        $scope.user = angular.extend({}, UserFactory.getData());\n\n        controller.getForm = function() {\n            return controller.forms.personalDetails;\n        };\n\n        controller.isValidFirstName = function () {\n            return PasswordService.isValidFirstName(controller.getForm(), controller.user, 'firstName');\n        };\n\n        controller.isValidLastName = function () {\n            return PasswordService.isValidLastName(controller.getForm(), controller.user, 'lastName');\n        };\n\n        controller.isValid = function () {\n            return controller.isValidFirstName() &&\n                controller.isValidLastName();\n        };\n\n        controller.setValid = function (fieldName) {\n            controller.submitted = false;\n            return PasswordService.setValid(controller.getForm(), fieldName);\n        };\n        controller.isDisabled = function () {\n            return controller.updateInProgress;\n        };\n\n        /**\n         * Actions to do when personal details update button is clicked.\n         *\n         * @returns {boolean}\n         */\n        controller.update = function () {\n            controller.submitted = true;\n            controller.getForm().$setDirty();\n            controller.getForm().firstName.$setDirty();\n            controller.getForm().lastName.$setDirty();\n\n            // validate program data\n            if (controller.updateInProgress ||\n                !controller.isValid()\n            ) {\n                return false;\n            }\n\n            controller.updateInProgress = true;\n            ProfilePersonalDetailsService.update(controller.user, true).then(controller.updateDetailsCallback);\n        };\n\n        /**\n         * Actions to do when update request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.updateDetailsCallback = function (userObject) {\n            controller.updateInProgress = false;\n            NotifierFactory.show(\n                userObject ? 'success' : 'error',\n                userObject ? 'Updated successfully!' : 'Update failed!',\n                'Personal Details'\n            );\n            if (userObject) {\n                UserFactory.setFirstName(controller.user.firstName);\n                $scope.user.firstName = controller.user.firstName;\n                UserFactory.setLastName(controller.user.lastName);\n                $scope.user.lastName = controller.user.lastName;\n                UserFactory.setFullName(userObject.fullName);\n                $scope.user.fullName = controller.user.fullName = userObject.fullName;\n                UserFactory.setPosition(controller.user.position);\n                $scope.user.position = controller.user.position;\n                UserFactory.setTitle(controller.user.title);\n                $scope.user.title = controller.user.title;\n                if (controller.user.isClient) {\n                    UserFactory.setPhone(controller.user.phone);\n                    $scope.user.phone = controller.user.phone;\n                }\n                AuthenticationService.setUserData(UserFactory.getData());\n            }\n        };\n\n        controller.copyScopeUserToControllerUser = function () {\n            controller.user = angular.copy($scope.user);\n        };\n        controller.copyScopeUserToControllerUser();\n\n        // Personal details cancel button\n        controller.cancel = function () {\n            controller.copyScopeUserToControllerUser();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('ProfilePersonalDetailsController', [\n            '$scope',\n            'constants',\n            'ProfilePersonalDetailsService',\n            'AuthenticationService',\n            'UserFactory',\n            'NotifierFactory',\n            'PasswordService',\n            App.controllers.ProfilePersonalDetails\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.profilePersonalDetailsService = function (\n        $resource,\n        $q,\n        $log,\n        constants\n    ) {\n        var service = {};\n\n        /**\n         * Get user update API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpdateModel = function () {\n             return $resource(constants.api.usersPermissions.url + '/v1/user-profile', null, {\n                update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Update user Details | Password.\n         *\n         * @param {Object} user\n         * @returns {Promise}\n         */\n        service.update = function(user) {\n            var UpdateModel = service.getUpdateModel(),\n                dataToUpdate = {\n                    title: user.title,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    position: user.position\n                };\n                if (user.isClient) {\n                    dataToUpdate.phone = user.phone;\n                }\n\n            return UpdateModel.update(dataToUpdate).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data.user;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('ProfilePersonalDetailsService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.profilePersonalDetailsService\n        ]);\n\n}(window.angular));\n\n/* global logoType */\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.profileLogo = function (\n        $scope,\n        constants,\n        ProfileLogoService,\n        UserFactory,\n        NotifierFactory,\n        AuthenticationService,\n        $timeout\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        $scope.forms = {};\n        $scope.gravatar = false;\n        $scope.user = UserFactory.getData();\n\n        if (angular.isDefined($scope.user) &&\n            $scope.user !== null &&\n            !$scope.user.profileLogo\n        ) {\n            $scope.gravatar = true;\n            $scope.user.profileLogo = '';\n        }\n\n        $scope.uploadEnabled = true;\n        controller.acceptedFiles = 'image/jpeg, image/pjpeg';\n        // enable update button\n        $scope.generalSubmitDisabled = false;\n        $scope.displayRemoveLink = false;\n        $scope.profilePic = null;\n\n        /**\n         * Actions to do when image is removed.\n         */\n        $scope.handleRemoveLogoClick = function () {\n            $scope.profile[logoType].path = null;\n        };\n\n        /**\n         * Actions to do when update request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.updateDetailsCallback = function (success) {\n            $scope.updateDetailsInProgress = false;\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Updated successfully!' : 'Update failed!',\n                'User Details'\n            );\n            if (success) {\n                UserFactory.announceNameChanges($scope.user);\n            }\n        };\n\n        /**\n         * Modify scope variable on logo remove.\n         */\n        controller.handleLogoRemoved = function () {\n            // show upload area\n            $scope.uploadEnabled = true;\n            // enable update button\n            $scope.generalSubmitDisabled = false;\n            // hide remove link below uploader\n            $scope.displayRemoveLink = false;\n        };\n\n        /**\n         * Actions to do when profile form is submitted.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleGeneralSubmit = function () {\n            $scope.displaySpinner = true;\n            if (\n                //$scope.generalSubmitDisabled ||\n                !$scope.forms.imageForm ||\n                !$scope.forms.imageForm.$valid\n            ) {\n                return false;\n            }\n            $scope.generalSubmitDisabled = true;\n            ProfileLogoService.updateProfilePicture($scope.profilePic).then(function (response) {\n                NotifierFactory.show(\n                    response.status ? 'success' : 'error',\n                    response.status ? 'Saved successfully!' : 'Saving failed!',\n                    'User Profile image'\n                );\n                $scope.displaySpinner = false;\n                if (response.status) {\n                    $scope.user.profileLogo = response.url;\n                    $scope.gravatar = false;\n                    UserFactory.setProfileLogo($scope.user.profileLogo);\n                } else {\n                    if ($scope.user.profileLogo === '' ||\n                        !$scope.user.profileLogo ||\n                        $scope.user.profileLogo === undefined\n                    ) {\n                        $scope.user.profileLogo = '';\n                        $scope.gravatar = true;\n                    }\n                }\n                $scope.generalSubmitDisabled = false;\n                $scope.removeUploaderImage();\n            });\n        };\n\n        /**\n         * Remove dropZone files\n         */\n        controller.removeDropZoneUploadedImage = function () {\n            if (controller.dropZoneImageInstance &&\n                controller.dropZoneImageInstance.file &&\n                (controller.dropZoneImageInstance.file.length > 1)) {\n                controller.dropZoneImageInstance.removeFile(controller.dropZoneImageInstance.files[0]);\n            } else {\n                $scope.gravatar = false;\n                controller.dropZoneImageInstance.removeAllFiles();\n                $scope.displayRemoveLink = false;\n            }\n        };\n\n        /**\n         * Set of actions to remove uploader image\n         */\n        $scope.removeUploaderImage = function () {\n            if (!$scope.generalSubmitDisabled) {\n                $timeout(function() {\n                    controller.removeDropZoneUploadedImage();\n                    controller.handleLogoRemoved();\n                });\n            } else {\n                NotifierFactory.show(\n                    'info',\n                    'Image upload in progress, please wait.',\n                    ''\n                );\n            }\n        };\n\n        /**\n         * DropZone init.\n         */\n        controller.handleInit = function () {\n            this.isValid = true;\n            this.globalAccept = false;\n            this.localAccept = false;\n        };\n\n        /**\n         * DropZone handle accept.\n         *\n         * @param file\n         * @param done\n         */\n        controller.handleAccept = function(file, done) {\n            file.acceptFile = function () {\n                $scope.uploadEnabled = false;\n                $scope.displayRemoveLink = !$scope.displayRemoveLink;\n                $scope.$apply();\n                done();\n            };\n        };\n\n        /**\n         * Actions to do when file is uploaded to server.\n         *\n         * @param {Object} file - instance of dropzone file\n         * @param {Object} response - server response object\n         */\n        controller.handleImageUploaded = function(file, response) {\n            $scope.$apply(function() {\n                $scope.generalSubmitDisabled = false;\n                $scope.profilePic = response.path;\n                // display link below uploader\n                $scope.displayRemoveLink = true;\n            });\n        };\n\n        /**\n         * Actions to do when file uploaded fails.\n         */\n        controller.handleImageUploadError = function(error) {\n            var errorMessage = error.xhr !== undefined ? JSON.parse(error.xhr.responseText) : false;\n            errorMessage = errorMessage ? errorMessage.message : 'Image upload failed!';\n            if (this.files.length > 0) {\n                this.removeFile(this.files[0]);\n            }\n            $scope.$apply(function() {\n                $scope.displayRemoveLink = false;\n                $scope.generalSubmitDisabled = false;\n                NotifierFactory.show(\n                    'error',\n                    errorMessage,\n                    'Profile image'\n                );\n            });\n        };\n\n        /**\n         * Actions to do when file is added to upload queue.\n         */\n        controller.handleImageAdded = function (file) {\n            $scope.displayRemoveLink = true;\n            file.rejectExtension = function () {\n                NotifierFactory.show(\n                    'error',\n                    'Allowed types: ' + controller.acceptedFiles,\n                    'File type is unacceptable.'\n                );\n                controller.removeDropZoneUploadedImage();\n                controller.handleLogoRemoved();\n            };\n            if (this.files.length === 1) {\n                this.globalAccept = false;\n                this.localAccept = false;\n            }\n            if (!this.globalAccept && !this.localAccept && this.files.length === 1) {\n                this.isValid = true;\n                this.localAccept = true;\n            }\n            if (this.files.length > 1 && this.globalAccept) {\n                this.isValid = false;\n                this.globalAccept = true;\n                this.removeFile(this.files[1]);\n                $scope.$apply();\n            }\n            this.isValid = true;\n            // Validate image extension for drag and drop\n            var allowedExtensionsArray = controller.acceptedFiles.split(',');\n            if (allowedExtensionsArray.indexOf(file.type) === -1) {\n                this.isValid = false;\n                file.rejectExtension();\n            }\n            if (this.isValid) {\n                // disable update button\n                $scope.generalSubmitDisabled = true;\n                // hide upload area\n                $scope.uploadEnabled = false;\n            }\n        };\n\n        /**\n         * DropZone handle thumbnail.\n         *\n         * @param file\n         */\n        controller.handleThumbnail = function(file) {\n            file.rejectDimensions = function (globalAccept) {\n                globalAccept = (typeof globalAccept === 'undefined') ? true : globalAccept;\n                if (!globalAccept) {\n                    NotifierFactory.show(\n                        'error',\n                        'Image dimension is incorrect.',\n                        'Please upload 100px by 100px image.'\n                    );\n                    controller.removeDropZoneUploadedImage();\n                    controller.handleLogoRemoved();\n                    $scope.$apply();\n                }\n            };\n            file.rejectSize = function (globalAccept) {\n                globalAccept = (typeof globalAccept === 'undefined') ? true : globalAccept;\n                if (!globalAccept) {\n                    NotifierFactory.show(\n                        'error',\n                        'File size has exceeded the 1 MB limit.',\n                        'Please upload again'\n                    );\n                    $scope.$apply();\n                }\n            };\n            // Validate image dimensions\n            if (file.height < 100 || file.width < 100) {\n                this.isValid = false;\n                file.rejectDimensions(this.globalAccept);\n            }\n            // Validate image size\n            if (file.size > 400000) {\n                this.isValid = false;\n                file.rejectSize(this.globalAccept);\n            }\n            if (this.isValid && !this.globalAccept && this.localAccept) {\n                this.globalAccept = true;\n                file.acceptFile(this.localAccept);\n            } else {\n                $scope.generalSubmitDisabled = false;\n                if (this.files.length > 1 && this.globalAccept) {\n                    this.removeFile(this.files[1]);\n                }\n            }\n            if (false === this.isValid) {\n                this.isValid = true;\n            }\n\n        };\n\n        controller.imageConfig = {\n            // http://www.dropzonejs.com/#configuration-options\n            dropzone: {\n                url: ProfileLogoService.getUrl(),\n                maxFilesize: 0.4,\n                maxFiles: 1,\n                uploadMultiple: 0,\n                parallelUploads: 1,\n                autoProcessQueue: true,\n                addRemoveLinks: false,\n                acceptedFiles: controller.acceptedFiles,\n                previewsContainer: '.dropzone-previews',\n                headers: AuthenticationService.getAuthorizationHeader(),\n                thumbnailWidth: 100,\n                thumbnailHeight: 100,\n                clickable: '.upload-button',\n                paramName: \"file\",\n                init: controller.handleInit,\n                accept: controller.handleAccept\n            },\n            // http://www.dropzonejs.com/#event-list\n            eventHandlers: {\n                success: controller.handleImageUploaded,\n                addedfile: controller.handleImageAdded,\n                thumbnail: controller.handleThumbnail,\n                error: controller.handleImageUploadError\n            }\n        };\n\n        controller.initWatches = function () {\n            // watch for Username changes changes at profile page\n            $scope.$watch(UserFactory.getData, function (data) {\n                if (data) {\n                    $scope.user = data;\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('ProfileLogoController', [\n            '$scope',\n            'constants',\n            'ProfileLogoService',\n            'UserFactory',\n            'NotifierFactory',\n            'AuthenticationService',\n            '$timeout',\n            App.controllers.profileLogo\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.ProfileLogo = function (\n        $resource,\n        $q,\n        $log,\n        constants\n    ) {\n        var service = {};\n\n        service.getUrl = function () {\n            return constants.api.usersPermissions.url + '/v1/user-profile-logo';\n        };\n\n        /**\n         * Get user update API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpdateModel = function () {\n             return $resource(service.getUrl(), null, {\n                update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Update user.\n         *\n         * @param {String} logoUrl\n         * @returns {Promise}\n         */\n        service.updateProfilePicture = function (logoUrl) {\n            var UpdateModel = service.getUpdateModel();\n            return UpdateModel.update({\n                userImage: logoUrl\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return {\n                    status: data.$resolved,\n                    url: data.url\n                };\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('ProfileLogoService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.ProfileLogo\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {\n        components:{}\n    });\n\n    App.components.appUpdate = {\n        templateUrl: '/scripts/shared/appUpdateMessage/appUpdateMessageView.html',\n        controller: 'AppUpdateMessageController'\n    };\n\n    angular.module('qsHub').component('appUpdate', App.components.appUpdate);\n\n}(window.angular));\n\n\n\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n    App.controllers.AppUpdate = function (\n        AppUpdateMessageFactory\n    ) {\n        var controller = this;\n\n        controller.isVisible = function () {\n            return AppUpdateMessageFactory.isVisible();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('AppUpdateMessageController', [\n            'AppUpdateMessageFactory',\n            App.controllers.AppUpdate\n        ]);\n\n}(window.angular));\n\n(function(angular, airbrakeJs) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.AppUpdateMessage = function () {\n        var visible;\n        return {\n            setVisible: function (isVisible) {\n                visible = isVisible || true;\n            },\n            isVisible: function () {\n                return !!visible;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('AppUpdateMessageFactory', [\n            App.factories.AppUpdateMessage\n        ]);\n\n}(window.angular, window.airbrakeJs));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.qsUsersList = function (\n        $scope,\n        $resource,\n        $timeout,\n        constants,\n        uiGridConstants,\n        QsUsersService,\n        UsersListService,\n        NotifierFactory,\n        GridService,\n        PasswordService,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        controller.grid = {};\n        controller.defaultPaginationOptions = {\n            page: 1,\n            limit: constants.datagrid.contacts.defaultRowsNumber\n        };\n\n        controller.paginationOptions = GridService.getColumnsFilters(\n            constants.gridNameSpaces.qsUserGridFilters,\n            ['lastLoginAtRange']\n        );\n\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            constants.gridNameSpaces.qsUserGridVisibility\n        );\n        controller.defaultFilters = {\n            lastLoginAtRange: {\n                startDate: null,\n                endDate: null\n            }\n        };\n\n        $scope.user = {};\n        $scope.userBeforeChanges = {};\n        $scope.forms = {};\n        $scope.filterActive = true;\n        $scope.isDatagridReloading = false;\n        $scope.showQsSections = false;\n        $scope.showClientSections = false;\n        $scope.activeQsUserListSubTabs = 0;\n        $scope.disabledQsUserListSubTabs = {\n            'personalDetails': false,\n            'permissions': true\n        };\n        $scope.newUser = {};\n        $scope.newUserPanelNotClosed = false;\n        $scope.filters = controller.defaultFilters;\n        $scope.columnsBeforeHide = [];\n        $scope.visible = {};\n\n        /**\n         * Update active user data in datagrid.\n         */\n        controller.updateInDatagrid = function (item) {\n            var totalItems = controller.grid.options.data.length,\n                key = 0;\n            for (key; key < totalItems; ++key) {\n                if (controller.grid.options.data[key].id === item.id) {\n                    controller.grid.options.data[key] = angular.copy($scope.userBeforeChanges);\n                    return true;\n                }\n                $scope.columnsBeforeEdit = null;\n                $scope.filterActive = true;\n                $scope.newUserPanelNotClosed = false;\n            }\n            return false;\n        };\n\n        $scope.handleLastLoginAtDateRange = function (event) {\n            if (event.model.startDate && event.model.endDate) {\n                controller.grid.options.columnDefs[3].filters[0].term = event.model.startDate.format('x');\n                controller.grid.options.columnDefs[3].filters[1].term = event.model.endDate.format('x');\n            }\n        };\n\n        $scope.handleDatagridRowClick = function (user, addUser) {\n            PasswordService.setHasErrors(true);\n            $scope.disabledQsUserListSubTabs.permissions = false;\n            $scope.disabledQsUserListSubTabs.institutions = false;\n            if (angular.isDefined(addUser) && addUser) {\n                $scope.disabledQsUserListSubTabs.permissions = true;\n            }\n            if ($scope.selectedUserId === user.id) {\n                $scope.selectedUserId = 0;\n                $scope.showInfoBlock = false;\n                $scope.filterActive = true;\n                controller.toggleColumns(false);\n            } else { //edit mode\n                $scope.selectedUserId = user.id;\n                $scope.showInfoBlock = true;\n                $scope.filterActive = false;\n\n                $scope.user = angular.copy(user);\n                $scope.userBeforeChanges = user;\n                $scope.user = UsersListService.updateRolesWithAll($scope.user, controller.rolesList);\n                $scope.user = UsersListService.updateSectionsAndPages($scope.user, controller.rolesList);\n\n                controller.rolesBeforeChanges = [];\n                for (var role in user.roles) {\n                    if (user.roles[role]) {\n                        controller.rolesBeforeChanges[role] = true;\n                    }\n                }\n                controller.toggleColumns(true);\n            }\n        };\n\n        /**\n         * Toggle datagrid columns visibility.\n         *\n         * @param {boolean} hide\n         */\n        controller.toggleColumns = function (hide) {\n            if (!controller.grid.options) {\n                return;\n            }\n            if (hide) {\n                angular.forEach(controller.grid.options.columnDefs, function (column) {\n                    if (angular.isDefined(column.visible) && column.visible === true) {\n                        $scope.columnsBeforeHide.push(column);\n                    }\n                    $scope.visible[column.field] = column.visible;\n                });\n                // hide all columns except name\n                angular.forEach(controller.grid.options.columnDefs, function (column) {\n                    column.visible = column.field === 'email';\n                });\n            } else {\n                // show columns visible before hide\n                angular.forEach($scope.columnsBeforeHide, function (column) {\n                    column.visible = true;\n                });\n                $scope.columnsBeforeHide = [];\n\n                $scope.$broadcast(constants.events.closingInstitutionsUsers);\n            }\n\n            controller.grid.options.enableGridMenu = !hide;\n            controller.grid.options.enableColumnMenus = !hide;\n            controller.grid.options.enableColumnResizing = !hide;\n            controller.grid.options.enablePaginationControls = !hide;\n        };\n\n        /**\n         * Reset user form.\n         */\n        $scope.handleResetClick = function () {\n            $scope.user = angular.copy($scope.userBeforeChanges);\n        };\n\n        /**\n         * Actions to do when deactivation is triggered.\n         *\n         * @param {Object} user\n         * @returns {boolean}\n         */\n        $scope.handleDeactivateClick = function (user) {\n            if (!user.id || $scope.deactivateInProgress) {\n                return false;\n            }\n            $scope.deactivateInProgress = true;\n            QsUsersService.deactivate(user.id).then(controller.deactivationCallback);\n        };\n\n        $scope.handleActivateClick = function (user) {\n            if (!user.id || $scope.activateInProgress) {\n                return false;\n            }\n            $scope.activateInProgress = true;\n            QsUsersService.activate(user.id).then(controller.activationCallback);\n        };\n\n        controller.deactivationCallback = function (success) {\n            $scope.user.active = success ? false : true;\n            if (success) {\n                $scope.userBeforeChanges.active = $scope.user.active;\n                // update user data in datagrid\n                controller.updateInDatagrid($scope.user);\n            }\n            $scope.deactivateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Deactivated successfully!' : 'Deactivation failed!',\n                'Deactivation'\n            );\n        };\n\n        controller.activationCallback = function (success) {\n            $scope.user.active = success ? true : false;\n            if (success) {\n                $scope.userBeforeChanges.active = $scope.user.active;\n                // update user data in datagrid\n                controller.updateInDatagrid($scope.user);\n            }\n            $scope.activateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Activated successfully!' : 'Activation failed!',\n                'Activation'\n            );\n        };\n\n        $scope.handleNewUserResponse = function (response) {\n            if (response.hasOwnProperty('insertedId') && response.insertedId.length > 0) {\n                $scope.user.id = response.insertedId;\n                $scope.user.active = true;\n                angular.copy($scope.user, $scope.userBeforeChanges);\n                $scope.disabledQsUserListSubTabs.permissions = false;\n                // switch tab after user add\n                $scope.activeQsUserListSubTabs = 1;\n                angular.copy($scope.user, $scope.newUser);\n                controller.reloadDatagrid();\n                $scope.selectedUserId = $scope.user.id;\n                $scope.newUserPanelNotClosed = true;\n            }\n        };\n\n        /**\n         * Store user data.\n         */\n        $scope.handlePersonalDetailsSubmit = function () {\n            $scope.forms.personalDetailsForm.firstname.$setDirty();\n            $scope.forms.personalDetailsForm.lastname.$setDirty();\n            $scope.forms.personalDetailsForm.email.$setDirty();\n            PasswordService.setHasErrors(\n                $scope.user.id ||\n                !!$scope.forms.personalDetailsForm.password.$viewValue ? true : false\n            );\n            if (\n                $scope.personalDetailsSubmitInProgress ||\n                !$scope.forms.personalDetailsForm ||\n                !$scope.forms.personalDetailsForm.$valid ||\n                !PasswordService.isValid($scope.forms.personalDetailsForm, $scope.user) ||\n                !PasswordService.getHasErrors()\n\n            ) {\n                return false;\n            }\n            var newUser = typeof $scope.user.id === 'undefined';\n            // if is new user and the password is not set or setting password for existing user\n            if (\n                (newUser && !PasswordService.isPasswordValid($scope.user.password)) ||\n                (!newUser && typeof $scope.user.password !== 'undefined' && !PasswordService.isPasswordValid($scope.user.password))\n            ) {\n                NotifierFactory.show(\n                    'error',\n                    'Please set a valid password'\n                );\n\n                return false;\n            }\n            $scope.personalDetailsSubmitInProgress = true;\n            QsUsersService.savePersonalDetails($scope.user).then(function (response) {\n                var message = 'Personal Details';\n                var success = false;\n                if (response) {\n                    success = !response.error;\n                    if (!success) {\n                        if (response.hasOwnProperty('message') && response.message.length > 0) {\n                            message = response.message;\n                        }\n                    } else {\n                        $scope.user.fullname = QsUsersService.getFullName($scope.user);\n                        if ($scope.user.contactTypes) {\n                            QsUsersService.getContactTypes().then(function (contactTypesList) {\n                                if (!contactTypesList) {\n                                    return false;\n                                }\n                                var contactTypeNames = [],\n                                    contactTypeName = null;\n                                angular.forEach($scope.user.contactTypes, function (contactTypeData, handle) {\n                                    if (!contactTypeData.assigned) {\n                                        return false;\n                                    }\n                                    contactTypeName = UsersListService.getContactTypeNameByHandle(\n                                        handle, contactTypesList\n                                    );\n                                    contactTypeNames.push(contactTypeName);\n                                });\n                                $scope.user.contactTypesAsString = contactTypeNames.join(', ');\n                                $scope.handleNewUserResponse(response);\n                                // update original user object with changes\n                                $scope.userBeforeChanges = angular.copy($scope.user);\n                                controller.updateInDatagrid($scope.user);\n                            });\n                        } else {\n                            $scope.handleNewUserResponse(response);\n                        }\n                        //reset personalDetailsForm\n                        controller.resetPersonalDetailsForm();\n                    }\n                }\n                if (success) {\n                    delete $scope.user.password;\n                    // update original user object with changes\n                    $scope.userBeforeChanges = angular.copy($scope.user);\n                    // update user data in datagrid\n                    controller.updateInDatagrid($scope.user);\n                }\n                $scope.personalDetailsSubmitInProgress = false;\n\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    message\n                );\n            });\n        };\n\n        $scope.handlePermissionsSubmit = function () {\n            $scope.permissionsSubmitInProgress = true;\n            QsUsersService.savePermissions($scope.user).then(function (success) {\n                $scope.permissionsSubmitInProgress = false;\n                $scope.userBeforeChanges = angular.copy($scope.user);\n                // update user data in datagrid\n                controller.updateInDatagrid($scope.user);\n                controller.reloadDatagrid();\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Permissions'\n                );\n            });\n        };\n\n        $scope.handlePrimaryContactTypeClick = function (handle) {\n            $scope.user.contactTypes[handle].assigned = true;\n        };\n\n        $scope.handleAssignedContactTypeClick = function (handle) {\n            if ($scope.user.contactTypes[handle].assigned === false) {\n                $scope.user.contactTypes[handle].primary = false;\n            }\n        };\n\n        $scope.handleRoleClick = function (clickedRole) {\n            // do nothing if user has custom role\n            if ($scope.user.roles.custom || typeof clickedRole === 'undefined') {\n                return;\n            }\n\n            $scope.user.accessTo = {\n                'admin_dashboard.dashboard': true\n            };\n            var clickedRoleAssigned = $scope.user.roles[clickedRole.roleHandle],\n                parentRoleClicked = clickedRole.all,\n                globalAdminRoleClicked = clickedRole.roleHandle === 'global_admin.global_admin',\n                childrenRolesHandles = UsersListService.getChildrenRoles(clickedRole.groupHandle, controller.rolesList),\n                parentRoleHandle = null;\n\n            // check if it's global admin\n            if (globalAdminRoleClicked && clickedRoleAssigned) {\n                // walk threw all system roles\n                angular.forEach(controller.rolesList, function (role) {\n                    if (role.roleHandle === 'custom') {\n                        return false;\n                    }\n                    // assign all role sections to a user\n                    angular.forEach(role.sections, function (section) {\n                        $scope.user.accessTo[section] = true;\n                    });\n                });\n            } else {\n                if (!globalAdminRoleClicked) {\n                    // if role is assigned\n                    if (clickedRoleAssigned) {\n                        // if its parent role\n                        if (parentRoleClicked) {\n                            // assign children roles to a user\n                            childrenRolesHandles = UsersListService.getChildrenRoles(clickedRole.groupHandle, controller.rolesList);\n                            if (childrenRolesHandles) {\n                                angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                                    $scope.user.roles[childrenRoleHandle] = true;\n                                });\n                            }\n                        } else {\n                            if (childrenRolesHandles) {\n                                // Select parent if all children were selected\n                                var allDepartments = true;\n                                angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                                    if ($scope.user.roles[childrenRoleHandle] === false ||\n                                        $scope.user.roles[childrenRoleHandle] === undefined\n                                    ) {\n                                        allDepartments = false;\n                                        return;\n                                    }\n                                });\n                                if (allDepartments) {\n                                    parentRoleHandle = UsersListService.getParentRoleHandle(clickedRole.groupHandle, controller.rolesList);\n                                    if (parentRoleHandle) {\n                                        $scope.user.roles[parentRoleHandle] = true;\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        if (!parentRoleClicked) {\n                            // Uncheck parent if it was selected when unselecting one children\n                            parentRoleHandle = UsersListService.getParentRoleHandle(clickedRole.groupHandle, controller.rolesList);\n                            if (parentRoleHandle) {\n                                $scope.user.roles[parentRoleHandle] = false;\n                            }\n                        } else {\n                            // check if all children where selected to select the parent\n                            if (childrenRolesHandles) {\n                                angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                                    $scope.user.roles[childrenRoleHandle] = false;\n                                });\n                            }\n                        }\n                    }\n                }\n                // Update sections and pages based on the new roles\n                $scope.user = UsersListService.updateSectionsAndPages($scope.user, controller.rolesList);\n            }\n        };\n\n        $scope.toggleQsSections = function () {\n            $scope.showQsSections = !$scope.showQsSections;\n        };\n\n        $scope.toggleClientSections = function () {\n            $scope.showClientSections = !$scope.showClientSections;\n        };\n\n        $scope.activateCustomRole = function () {\n            if (!angular.isDefined($scope.user.roles)) {\n                $scope.user.roles = {\n                    custom: true\n                };\n            }\n            $scope.user.roles = {\n                custom: true\n            };\n        };\n\n        controller.loadData = function () {\n            QsUsersService.getContactTypes().then(function (contactTypes) {\n                controller.contactTypes = contactTypes;\n            });\n            QsUsersService.getRoles().then(function (rolesList) {\n                controller.rolesList = rolesList;\n            });\n            QsUsersService.getSections().then(function (sectionsList) {\n                controller.qsSectionsList = sectionsList;\n            });\n            QsUsersService.getSections(true).then(function (sectionsList) {\n                controller.clientSectionsList = sectionsList;\n            });\n        };\n\n        /**\n         * Actions to do when column is clicked under visible columns dropdown.\n         */\n        $scope.handleColumnClick = function () {\n            var columnsVisibility = {};\n            angular.forEach($scope.columns, function (column) {\n                columnsVisibility[column.field] = column.show;\n            });\n            QsUsersService.storeColumnsVisibility(columnsVisibility);\n        };\n\n        /**\n         * Apply datagrid columns visibility from browser cache.\n         */\n        controller.loadDatagridColumnsVisibility = function () {\n            var columnsVisibility = QsUsersService.getColumnsVisibility();\n            if (columnsVisibility) {\n                angular.forEach($scope.columns, function (column) {\n                    if (columnsVisibility[column.field] !== 'undefined') {\n                        column.show = columnsVisibility[column.field] ? true : false;\n                    }\n                });\n            }\n        };\n\n        controller.handleGridFiltersChanges = function () {\n            controller.paginationOptions = angular.copy(controller.defaultPaginationOptions);\n            var filterColumn, sortColumn;\n            angular.forEach($scope.gridApi.grid.columns, function (column) {\n                filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                if (column.field === 'lastLoginAt') {\n                    if (\n                        typeof column.filters !== 'undefined' &&\n                        typeof column.filters[0].term !== 'undefined' &&\n                        typeof column.filters[1].term !== 'undefined'\n                    ) {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = {\n                            startDate: column.filters[0].term && isNaN(column.filters[0].term) ?\n                                column.filters[0].term.format('x') : column.filters[0].term,\n                            endDate: column.filters[1].term && isNaN(column.filters[1].term) ?\n                                column.filters[1].term.format('x') : column.filters[1].term\n                        };\n                    } else {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = null;\n                    }\n                } else if ((column.field === 'contactTypesAsString' ||\n                    column.field === 'contactTypes.handle') &&\n                    typeof column.filters !== 'undefined' &&\n                    column.filters[0].term !== 'undefined' &&\n                    column.filters[0].term &&\n                    column.filters[0].term.value\n                ) {\n                    controller.paginationOptions['filter[contactTypes.handle]'] = column.filters[0].term.value;\n                } else {\n                    if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                    }\n                }\n\n                if (typeof column.sort.direction !== 'undefined') {\n                    sortColumn = column.sort.column ? column.sort.column : column.field;\n                    controller.paginationOptions['sorting[' + sortColumn + ']'] = column.sort.direction;\n                }\n            });\n            if (controller.paginationOptions[\"filter[lastLoginAt]\"] === null) {\n                controller.paginationOptions[\"filter[lastLoginAt]\"] = controller.defaultFilters.lastLoginAtRange;\n            }\n            if (controller.paginationOptions[\"filter[lastLoginAt]\"].startDate === null) {\n                controller.paginationOptions[\"filter[lastLoginAt]\"].endDate = null;\n                controller.defaultFilters.lastLoginAtRange = {\n                    startDate: null,\n                    endDate: null\n                };\n            }\n            GridService.storeColumnsFilters(\n                constants.gridNameSpaces.qsUserGridFilters,\n                controller.paginationOptions\n            );\n\n            if (angular.isDefined($scope.filterTimeout)) {\n                $timeout.cancel($scope.filterTimeout);\n            }\n            $scope.filterTimeout = $timeout(function () {\n                controller.getPage();\n            }, 500);\n        };\n\n        controller.getPage = function () {\n            $scope.isDatagridReloading = true;\n            return QsUsersService.getAllUsers(\n                angular.merge({}, controller.paginationOptions, controller.defaultPaginationOptions)\n            ).then(function (response) {\n                controller.grid.options.totalItems = response.totalMatching;\n                controller.grid.options.data = response.results;\n                controller.grid.options.minRowsToShow = response.totalFiltered;\n                $scope.isDatagridReloading = false;\n            });\n        };\n\n        controller.reloadDatagrid = function () {\n            controller.getPage();\n        };\n\n        controller.initDataGrid = function () {\n            var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n                selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html',\n                dateCellTemplate = '/scripts/shared/ui-grid/templates/dateCellTemplate.html';\n\n            controller.grid.options = {\n                enableSorting: true,\n                exporterMenuCsv: false,\n                enableGridMenu: true,\n                showGridFooter: false,\n                selectedItems: $scope.selectedUserId,\n                enableFiltering: true,\n                enableColumnResize: true,\n                enableFullRowSelection: true,\n                enableRowSelection: true,\n                multiSelect: false,\n                enableRowHeaderSelection: false,\n                paginationPageSizes: [constants.datagrid.contacts.defaultRowsNumber, 50, 100],\n                paginationPageSize: constants.datagrid.contacts.defaultRowsNumber,\n                useExternalPagination: true,\n                useExternalSorting: true,\n                useExternalFiltering: true,\n                rowTemplate: '/scripts/components/users/list/institutions/datagrid/rowTemplate.html',\n                columnDefs: [\n                    {\n                        displayName: 'Email',\n                        field: 'email',\n                        cellFilter: 'lowercase',\n                        visible: true,\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'email', '')\n                        }\n                    },\n                    {\n                        displayName: 'Full Name',\n                        field: 'fullname',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'fullname', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'fullname', '')\n                        }\n                    },\n                    {\n                        displayName: 'Contact Types',\n                        filter: {\n                            type: uiGridConstants.filter.SELECT,\n                            selectOptions: [],\n                            term: GridService.getFilterByField(controller.paginationOptions, 'contactTypes.handle')\n                        },\n                        field: 'contactTypesAsString',\n                        maxWidth: 130,\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'contactTypes.handle', true),\n                        filterHeaderTemplate: selectTemplate\n                    },\n                    {\n                        displayName: 'Last Login',\n                        field: 'lastLoginAt',\n                        filterCellFiltered: true,\n                        filters: [\n                            {\n                                visible: true,\n                                condition: uiGridConstants.filter.GREATER_THAN\n                            },\n                            {\n                                condition: uiGridConstants.filter.LESS_THAN\n                            }\n                        ],\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'lastLoginAt', ''),\n                            applyTextFilter: controller.applyDateFilter('lastLoginAt', '')\n                        },\n                        cellTemplate: dateCellTemplate,\n                        filterHeaderTemplate: '/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'lastLoginAt', true)\n                    }\n                ],\n                onRegisterApi: function (gridApi) {\n                    var columnsVisibilityBeforeChanges = angular.copy(controller.grid.options.columnDefs);\n                    $scope.gridApi = gridApi;\n                    gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                        $scope.handleDatagridRowClick(row.entity);\n                    });\n                    gridApi.core.on.rowsRendered($scope, function () {\n                        $scope.isDatagridRendered = true;\n                    });\n                    gridApi.core.on.filterChanged($scope, controller.handleGridFiltersChanges);\n                    gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n\n                    gridApi.pagination.on.paginationChanged($scope, function (newPage, limit) {\n                        controller.defaultPaginationOptions.page = newPage;\n                        controller.defaultPaginationOptions.limit = limit;\n                        controller.getPage();\n                    });\n                    $scope.gridApi.core.on.sortChanged($scope, controller.handleGridFiltersChanges);\n                    // reset columns visibility\n                    GridService.resetExtend(columnsVisibilityBeforeChanges, controller.grid.options.columnDefs, controller.defaultFilters);\n                }\n            };\n\n            // This is needed to add 'x' icon in date field when prepopulating dates\n            var lastLogin = GridService.getFilterByField(controller.paginationOptions, 'lastLoginAt', '');\n            if (lastLogin !== null && controller.paginationOptions[\"filter[lastLoginAt]\"] !== null) {\n                if (angular.isDefined(lastLogin) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"]) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"].startDate) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"].endDate)\n                ) {\n                    controller.grid.options.columnDefs[3].filters[0].term = controller.paginationOptions[\"filter[lastLoginAt]\"].startDate;\n                    controller.grid.options.columnDefs[3].filters[1].term = controller.paginationOptions[\"filter[lastLoginAt]\"].endDate;\n                }\n            }\n\n            controller.getPage().then(function () {\n                QsUsersService.getContactTypesFilter().then(function (options) {\n                    var list = [];\n\n                    angular.forEach(options, function (option) {\n                        list.push({\n                            value: option.id,\n                            label: option.title\n                        });\n                    });\n                    controller.grid.options.columnDefs[2].filter.selectOptions = list;\n                });\n            });\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(constants.gridNameSpaces.qsUserGridVisibility),\n                reload = false;\n\n            if (columnsVisibility && $scope.filterActive) {\n                angular.forEach(controller.grid.options.columnDefs, function (column, key) {\n                    if (columnsVisibility[column.field] === true &&\n                        column.visible === false\n                    ) {\n                        controller.grid.options.columnDefs[key].filter.term = null;\n                        controller.paginationOptions['filter[' + column.field + ']'] = null;\n                        reload = true;\n                        if (column.field === 'lastLoginAt') {\n                            delete controller.grid.options.columnDefs[key].filters[0].term;\n                            controller.defaultFilters.lastLoginAtRange = {\n                                startDate: null,\n                                endDate: null\n                            };\n                        }\n                    }\n                });\n            }\n            if ($scope.filterActive) {\n                controller.saveStateVisibility();\n            }\n            if (reload) {\n                controller.getPage();\n            }\n        };\n\n        /**\n         * Populates input text field for date field\n         *\n         * @param {string} filterName\n         * @param {mixed} defaultValue\n         */\n        controller.applyDateFilter = function (filterName, defaultValue) {\n            var filter = GridService.getFilterByField(controller.paginationOptions, filterName, defaultValue);\n            if (angular.isDefined(filter) &&\n                filter !== null\n            ) {\n                if (angular.isDefined(filter.startDate) &&\n                    angular.isDefined(filter.endDate)\n                ) {\n                    if (filter.startDate !== null &&\n                        filter.startDate !== null\n                    ) {\n                        controller.defaultFilters.lastLoginAtRange = {\n                            startDate: parseInt(filter.startDate, 10),\n                            endDate: parseInt(filter.endDate, 10)\n                        };\n                    } else {\n                        controller.defaultFilters.lastLoginAtRange = {\n                            startDate: null,\n                            endDate: null\n                        };\n                    }\n                }\n            }\n        };\n\n        controller.handleAddQsUserClick = function () {\n            var user = {\n                accessTo: {\n                    'admin_dashboard.dashboard': true\n                }\n            };\n            user.id = null;\n            $scope.activeQsUserListSubTabs = 0;\n            $scope.handleDatagridRowClick(user, true);\n            controller.resetPersonalDetailsForm();\n        };\n\n        //reset personalDetailsForm\n        controller.resetPersonalDetailsForm = function () {\n            if ($scope.forms.personalDetailsForm) {\n                $scope.forms.personalDetailsForm.$setPristine();\n            }\n        };\n        controller.handleEditCloseClick = function () {\n            var user = {};\n            user.id = $scope.selectedUserId;\n            $scope.handleDatagridRowClick(user, true);\n        };\n\n        controller.convertVisibleColumnsField = function (value) {\n            switch (value) {\n                case 'contactTypesAsString':\n                    return 'contactTypes.handle';\n            }\n        };\n\n        controller.isValidFirstName = function () {\n            return PasswordService.isValidFirstName($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.isValidLastName = function () {\n            return PasswordService.isValidLastName($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.isValidEmail = function () {\n            return PasswordService.isValidEmail($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.setValid = function (fieldName) {\n            return PasswordService.setValid($scope.forms.personalDetailsForm, fieldName);\n        };\n\n        controller.saveStateVisibility = function () {\n            var visibility = angular.copy(controller.grid.options.columnDefs);\n            angular.forEach(visibility, function (column) {\n                if (['contactTypesAsString'].indexOf(column.field) !== -1) {\n                    column.field = controller.convertVisibleColumnsField(column.field);\n                }\n            });\n            GridService.storeColumnsVisibility(\n                constants.gridNameSpaces.qsUserGridVisibility,\n                GridService.getGridColumnsVisibility(visibility)\n            );\n        };\n\n        controller.init = function () {\n            controller.loadData();\n            controller.initDataGrid();\n            controller.loadDatagridColumnsVisibility();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('QsUsersListController', [\n            '$scope',\n            '$resource',\n            '$timeout',\n            'constants',\n            'uiGridConstants',\n            'QsUsersListService',\n            'UsersListService',\n            'NotifierFactory',\n            'UiGridService',\n            'PasswordService',\n            'WatchService',\n            App.controllers.qsUsersList\n        ]);\n\n} (window.angular));\n\n(function(angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.QsUsers = function (\n        $resource,\n        $q,\n        $log,\n        $localStorage,\n        constants,\n        UsersListService,\n        RequestsQueueService,\n        InstitutionsUsersListService\n    ) {\n        var service = {\n            contactTypes : null,\n            roles : null,\n            sections : null,\n            deferred : {\n                getContactTypes: null,\n                getRoles: null,\n                getSections: []\n            }\n        };\n\n        service.getUsersListModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/list/qs-users', {}, {\n                get: {\n                    isArray:false,\n                    cancellable : true\n                }\n            });\n        };\n\n        service.getAllUsers = function (filters) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n            // cancel currently running requests\n            RequestsQueueService.cancelAll('getAllQsUsers');\n            var hasSorting = false,\n                allowedFilters = [\n                    'limit',\n                    'page',\n                ];\n            if (filters) {\n                for (var key in filters) {\n                    if (key.indexOf('sorting') !== -1) {\n                        hasSorting = true;\n                        break;\n                    } else {\n                        if (key.indexOf('filter') !== 0 && allowedFilters.indexOf(key) === -1) {\n                            delete filters[key];\n                        }\n                    }\n                }\n            }\n            if (!hasSorting) {\n                filters['sorting[createdAt]'] = 'desc';\n            }\n            var Api = service.getUsersListModel().get(filters);\n\n            // add new request to the queue\n            RequestsQueueService.add(Api, 'getAllQsUsers');\n\n            return Api.$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('getAllQsUsers');\n                data.results = service.formatList(data.results);\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            }).then(function (data) {\n                data.results = service.appendAccessData(data.results);\n                return data;\n            }).then(function (data) {\n                data.results = service.appendContactsData(data.results);\n                return data;\n            });\n        };\n\n        service.formateDate = function (date, format)\n        {\n            var formatedDate = '';\n            if (date && moment(date, 'x').isValid()) {\n                formatedDate = moment(date,  'x');\n                if (format) {\n                    formatedDate = formatedDate.format(format);\n                }\n            }\n\n            return formatedDate;\n        };\n        service.appendAccessData = function (userData) {\n            if (userData) {\n                service.getRoles().then(function (systemRoles) {\n                    if (systemRoles) {\n                        var hasCustomRole,\n                            originalRoles = null;\n                        angular.forEach(userData, function(userObject) {\n                            if (!userObject.roles) {\n                                return false;\n                            }\n                            originalRoles = angular.copy(userObject.roles);\n                            userObject.roles = {};\n                            //check if user has custom role\n                            hasCustomRole = false;\n                            angular.forEach(originalRoles, function(value) {\n                                if (value === constants.customRole) {\n                                    hasCustomRole = true;\n                                }\n                            });\n\n                            angular.forEach(originalRoles, function(value) {\n                                userObject.roles[value] = true;\n                                if (!hasCustomRole && value === constants.globalAdminRole) {\n                                    userObject.globalAdmin = true;\n                                    angular.forEach(systemRoles, function(role) {\n                                        angular.forEach(role.sections, function(section) {\n                                            userObject.accessTo[section] = true;\n                                        });\n                                    });\n                                }\n                            });\n                        });\n                    }\n                });\n            }\n\n            return userData;\n        };\n\n        service.appendContactsData = function (userData) {\n            if (userData) {\n                var contactTypeName = null,\n                    originalContactTypes = null;\n                service.getContactTypes().then(function(contactTypesList) {\n                    if (contactTypesList && contactTypesList.length) {\n                        angular.forEach(userData, function(userObject) {\n                            if (!userObject.contactTypesAsArray) {\n                                userObject.contactTypesAsArray = [];\n                            }\n                            if (!userObject.contactTypes) {\n                                return false;\n                            }\n                            originalContactTypes = angular.copy(userObject.contactTypes);\n                            userObject.contactTypes = {};\n                            angular.forEach(originalContactTypes, function(contactType, key) {\n                                contactTypeName = UsersListService.getContactTypeNameByHandle(\n                                    contactType.handle, contactTypesList\n                                );\n                                if (!contactTypeName) {\n                                    return false;\n                                }\n                                userObject.contactTypesAsArray.push(contactTypeName);\n                                userObject.contactTypesAsString = userObject.contactTypesAsArray.length ?\n                                    userObject.contactTypesAsArray.join(', ') : null;\n\n                                userObject.contactTypes[contactType.handle] = {\n                                    primary : contactType.primary,\n                                    assigned : true\n                                };\n                            });\n                        });\n                    }\n                });\n            }\n\n            return userData;\n        };\n\n        service.getContactTypesFilter = function () {\n            return service.getContactTypes().then(function(contactTypesList) {\n                var contactTypeFilters = [];\n                if (contactTypesList) {\n                    angular.forEach(contactTypesList, function(contactType) {\n                        contactTypeFilters.push({\n                            id: contactType.handle,\n                            title: contactType.name\n                        });\n                    });\n                }\n\n                return contactTypeFilters;\n            });\n        };\n\n        /**\n         * Format QS users list.\n         *\n         * @param {Object} userData\n         * @returns {Object}\n         */\n        service.formatList = function (userData) {\n            if (userData) {\n                var accessTo;\n                angular.forEach(userData, function(userObject) {\n                    if (userObject.accessTo) {\n                        accessTo = {};\n                        angular.forEach(userObject.accessTo, function(value) {\n                            accessTo[value] = true;\n                        });\n                        userObject.accessTo = angular.copy(accessTo);\n                    }\n                });\n            }\n            return userData;\n        };\n\n        /**\n         * Get contact types list.\n         *\n         * @returns {Promise:Object}\n         */\n        service.getContactTypes = function () {\n            return InstitutionsUsersListService.getContactTypes();\n        };\n\n        /**\n         * Format roles list.\n         *\n         * @param {Object} rolesList\n         * @returns {Array}\n         */\n        service.formatRoles = function (rolesList) {\n            var flatArray = [];\n\n            angular.forEach(rolesList, function (rolesGroup) {\n                angular.forEach(rolesGroup.roles, function (role) {\n                    flatArray.push({\n                        'groupHandle' : rolesGroup.handle,\n                        'groupName' : rolesGroup.name,\n                        'roleName' : role.name,\n                        'roleHandle' : rolesGroup.handle + '.' + role.handle,\n                        'all' : role.all ? role.all : false,\n                        'sections': role.sections\n                    });\n                });\n            });\n\n            flatArray.push({\n                'groupName' : 'Custom',\n                'roleName' : 'Switching off will revert changes to default',\n                'roleHandle' : 'custom',\n                'all' : false\n            });\n            return flatArray;\n        };\n\n        /**\n         * Get QS users roles list.\n         *\n         * @returns {Promise}\n         */\n        service.getRoles = function () {\n            // process already running\n            if (!service.deferred.getRoles) {\n                service.deferred.getRoles = $q.defer();\n            } else {\n                return service.deferred.getRoles.promise;\n            }\n            var deferred = service.deferred.getRoles;\n\n            // check if data exists in cache\n            if (service.roles) {\n                deferred.resolve(service.roles);\n            } else {\n                var Api = $resource(constants.api.usersPermissions.url + '/v1/list/qs-roles');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.roles = service.formatRoles(data.results);\n                    deferred.resolve(service.roles);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.roles = [];\n                    deferred.resolve(service.roles);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Get sections list\n         *\n         * @param {boolean} client\n         * @returns {Promise:Array}\n         */\n        service.getSections = function (client) {\n            var type = client ? 'client' : 'qs',\n                Api = $resource(constants.api.usersPermissions.url + '/v1/list/' + type + '-sections');\n\n            // process already running\n            if (!service.deferred.getSections[type]) {\n                service.deferred.getSections[type] = $q.defer();\n            } else {\n                return service.deferred.getSections[type].promise;\n            }\n            var deferred = service.deferred.getSections[type];\n\n            // check if data exists in cache\n            if (service.sections) {\n                deferred.resolve(service.sections);\n            } else {\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.sections = UsersListService.formatSections(data.results);\n                    deferred.resolve(service.sections);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.sections = [];\n                    deferred.resolve(service.sections);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Mark user as active.\n         *\n         * @param {String} id\n         * @returns {Promise:boolean}\n         */\n        service.activate = function (id) {\n            var Api = $resource(constants.api.usersPermissions.url + '/v1/user/:id/activate', {id:id});\n            return Api.get().$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Mark user as inactive.\n         *\n         * @param {String} id\n         * @returns {Promise:boolean}\n         */\n        service.deactivate = function (id) {\n            var Api = $resource(constants.api.usersPermissions.url + '/v1/user/:id/deactivate', {id:id});\n            return Api.get().$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getFullName = function(userObject) {\n            return [\n                userObject.title,\n                userObject.firstname,\n                userObject.lastname\n            ].filter(Boolean).join(' ');\n        };\n\n        service.getUserModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/user/:id', null, {\n                create:  { method: 'POST' },\n                update: { method:'PATCH' }\n            });\n        };\n\n        service.initQsUser = function (user) {\n            if (!user.hasOwnProperty('contactTypes')) {\n                user.contactTypes = [];\n            }\n            user.roles = [];\n            user.accessTo = [];\n            user.deleted = false;\n            user.active = true;\n            user.qs = true;\n\n            return user;\n        };\n\n        service.savePersonalDetails = function (userData) {\n            var UserModel = service.getUserModel(),\n                dataToUpdate = angular.copy(userData);\n            if (dataToUpdate.contactTypes) {\n                var formattedContactTypes = [];\n                angular.forEach(dataToUpdate.contactTypes, function(contactTypeData, handle) {\n                    if (contactTypeData.assigned) {\n                        formattedContactTypes.push({\n                            handle: handle,\n                            primary: contactTypeData.primary ? true : false\n                        });\n                    }\n                });\n                dataToUpdate.contactTypes = formattedContactTypes;\n\n                delete dataToUpdate.contactTypesAsString;\n            }\n\n            delete dataToUpdate.accessTo;\n            delete dataToUpdate.roles;\n            delete dataToUpdate.fullname;\n\n            if (userData.id) { // update\n                return UserModel.update({id: userData.id}, dataToUpdate).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else { // create\n                dataToUpdate = service.initQsUser(dataToUpdate);\n                return UserModel.create({}, dataToUpdate).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        service.savePermissions = function (userData) {\n            var UserModel = service.getUserModel(),\n                dataToUpdate = {\n                    accessTo : [],\n                    roles : [],\n                    qs: true\n                };\n\n            if (userData.accessTo) {\n                for (var section in userData.accessTo) {\n                    if (userData.accessTo[section]) {\n                        dataToUpdate.accessTo.push(section);\n                    }\n                }\n            }\n\n            if (userData.roles) {\n                for (var role in userData.roles) {\n                    if (userData.roles[role]) {\n                        dataToUpdate.roles.push(role);\n                    }\n                }\n            }\n\n            return UserModel.update({id: userData.id}, dataToUpdate).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set qs users datagrid columns visibility.\n         *\n         * @param {Object} columnsVisibility\n         */\n        service.storeColumnsVisibility = function (columnsVisibility) {\n            $localStorage.qsUsersGridColumnsVisibility = columnsVisibility;\n        };\n\n        /**\n         * Get qs users datagrid columns visibility.\n         * @returns {Object|*}\n         */\n        service.getColumnsVisibility = function () {\n            return $localStorage.qsUsersGridColumnsVisibility;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('QsUsersListService', [\n            '$resource',\n            '$q',\n            '$log',\n            '$localStorage',\n            'constants',\n            'UsersListService',\n            'RequestsQueueService',\n            'InstitutionsUsersListService',\n            App.services.QsUsers\n        ]);\n\n}(window.angular, window.moment));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.adminDashboard = function (\n        $scope, constants, UserFactory, QsUsersListService, AdminDashboardService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n\n        controller.loadData = function () {\n            QsUsersListService.getRoles().then(function (rolesList) {\n                var userData = UserFactory.getData();\n                $scope.userRoles = AdminDashboardService.getUserRoleNames(\n                    userData && userData.roles  ? userData.roles : [],\n                    rolesList\n                );\n            });\n        };\n\n        controller.init = function () {\n            controller.loadData();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('AdminDashboardController', [\n            '$scope',\n            'constants',\n            'UserFactory',\n            'QsUsersListService',\n            'AdminDashboardService',\n            App.controllers.adminDashboard\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.AdminDashboard = function (\n        constants\n    ) {\n        var service = {};\n\n        service.getUserRoleNames = function (userRoles, rolesList) {\n            var result = [],\n                totalUserRoles = userRoles ? userRoles.length : 0,\n                totalRoles = rolesList ? rolesList.length : 0,\n                i,\n                y;\n\n            if (totalUserRoles) {\n                for (i = 0; i < totalUserRoles; i++) {\n                    for (y = 0; y < totalRoles; y++) {\n                        if (rolesList[y].roleHandle === userRoles[i]) {\n                            if (rolesList[y].roleHandle === constants.globalAdminRole) {\n                                return [rolesList[y].roleName];\n                            }\n                            result.push(rolesList[y].roleName);\n                        }\n\n                    }\n                }\n            }\n\n            return result.sort();\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('AdminDashboardService', [\n            'constants',\n            App.services.AdminDashboard\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.usersInstitutions = function (\n        constants,\n        InstitutionsUsersFactory\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n\n        /**\n         * Class constructor.\n         */\n        controller.init = function () {\n            InstitutionsUsersFactory.setRequestFilters({});\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsUsersController', [\n            'constants',\n            'InstitutionsUsersFactory',\n            App.controllers.usersInstitutions\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.InstitutionsUsers = function () {\n        var defaultRequestFilters = null,\n            requestFilters;\n        return {\n            getRequestFilters: function () {\n                return requestFilters || angular.copy(defaultRequestFilters);\n            },\n            setRequestFilters: function (newRequestFilters) {\n                requestFilters = newRequestFilters;\n            },\n            resetRequestFilters : function () {\n                requestFilters = angular.copy(defaultRequestFilters);\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('InstitutionsUsersFactory', [App.factories.InstitutionsUsers]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.institutionsUsersList = function (\n        $scope,\n        $resource,\n        $timeout,\n        constants,\n        uiGridConstants,\n        InstitutionsUsersListService,\n        UsersListService,\n        NotifierFactory,\n        InstitutionsUsersListFactory,\n        InstitutionsUsersFactory,\n        WatchService,\n        UserTypesService,\n        PasswordService,\n        GridService,\n        UserFactory\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        controller.defaultFilters = {\n            lastLoginAtRange: {\n                startDate: null,\n                endDate: null\n            }\n        };\n        controller.showDatagrid = false;\n        controller.grid = {\n            options: {\n                data: []\n            }\n        };\n        controller.defaultPaginationOptions = {\n            page: 1,\n            limit: constants.datagrid.contacts.defaultRowsNumber\n        };\n\n        controller.paginationOptions = GridService.getColumnsFilters(\n            constants.gridNameSpaces.schoolUserGridFilters,\n            ['lastLoginAtRange']\n        );\n\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            constants.gridNameSpaces.schoolUserGridVisibility\n        );\n\n        controller.isDatagridReloading = false;\n        controller.isDatagridRendered = false;\n        controller.rolesBeforeChanges = [];\n\n        $scope.user = {};\n        $scope.newUser = {};\n        $scope.newUserPanelNotClosed = false;\n        $scope.userBeforeChanges = {};\n        $scope.forms = {};\n        $scope.showInfoBlock = false;\n        $scope.disabledInstitutionsUserListSubTabs = {\n            'personalDetails': false,\n            'permissions': true,\n            'institutions': true\n        };\n        $scope.filters = null;\n        $scope.columnsBeforeHide = [];\n        $scope.visible = {};\n\n        controller.hasWriteAccess = UserFactory.hasInstitutionsUsersAccess();\n        controller.userTypes = UserTypesService.getUserTypes();\n        controller.initSelectedItem = function () {\n            $scope.selectedItem = {};\n            $scope.selectedItem.selectedOptionType = controller.userTypes[1];\n        };\n        controller.initSelectedItem();\n\n        InstitutionsUsersListService.getContactTypes().then(function (contactTypes) {\n            controller.contactTypes = contactTypes;\n        });\n        InstitutionsUsersListService.getRoles().then(function (rolesList) {\n            controller.rolesList = rolesList;\n        });\n        InstitutionsUsersListService.getSections().then(function (sectionsList) {\n            controller.sectionsList = sectionsList;\n        });\n\n        $scope.handleLastLoginAtDateRange = function (event) {\n            if (event.model.startDate && event.model.endDate) {\n                controller.grid.options.columnDefs[7].filters[0].term = event.model.startDate.format('x');\n                controller.grid.options.columnDefs[7].filters[1].term = event.model.endDate.format('x');\n            }\n        };\n\n        /**\n         * Actions to do when datagrid row is clicked.\n         *\n         * @param {object} user\n         */\n        $scope.handleDatagridRowClick = function (user) {\n            PasswordService.setHasErrors(true);\n            $scope.disabledInstitutionsUserListSubTabs.permissions = false;\n            $scope.disabledInstitutionsUserListSubTabs.institutions = false;\n            if ($scope.selectedUserId === user.id) {\n                $scope.selectedUserId = null;\n                $scope.showInfoBlock = false;\n                $scope.filterActive = true;\n                InstitutionsUsersListFactory.resetActiveUserId();\n                controller.toggleColumns(false);\n            } else { //edit mode\n                $scope.selectedUserId = user.id;\n                $scope.showInfoBlock = true;\n                $scope.filterActive = false;\n\n                $scope.user = angular.copy(user);\n                $scope.userBeforeChanges = user;\n                $scope.user = UsersListService.updateRolesWithAll($scope.user, controller.rolesList);\n                $scope.user = UsersListService.updateSectionsAndPages($scope.user, controller.rolesList);\n\n                controller.rolesBeforeChanges = [];\n                for (var role in user.roles) {\n                    if (user.roles[role]) {\n                        controller.rolesBeforeChanges[role] = true;\n                    }\n                }\n\n                InstitutionsUsersListFactory.setActiveUserId($scope.selectedUserId);\n                controller.toggleColumns(true);\n            }\n        };\n\n        controller.updateInDatagrid = function (item) {\n            var totalItems = controller.grid.options.data.length,\n                key = 0;\n            for (key; key < totalItems; ++key) {\n                if (controller.grid.options.data[key].id === item.id) {\n                    controller.grid.options.data[key] = angular.copy($scope.userBeforeChanges);\n                    return true;\n                }\n                $scope.columnsBeforeEdit = null;\n                $scope.filterActive = true;\n                InstitutionsUsersListFactory.resetActiveUserId();\n                $scope.newUserPanelNotClosed = false;\n            }\n            return false;\n        };\n\n        /**\n         * Toggle datagrid columns visibility.\n         *\n         * @param {boolean} hide\n         */\n        controller.toggleColumns = function (hide) {\n            if (!controller.grid.options) {\n                return;\n            }\n            if (hide) {\n                angular.forEach(controller.grid.options.columnDefs, function (column) {\n                    if (angular.isDefined(column.visible) && column.visible === true) {\n                        $scope.columnsBeforeHide.push(column);\n                    }\n                    $scope.visible[column.field] = column.visible;\n                });\n                // hide all columns except name\n                angular.forEach(controller.grid.options.columnDefs, function (column) {\n                    column.visible = column.field === 'email';\n                });\n            } else {\n                // show columns visible before hide\n                angular.forEach($scope.columnsBeforeHide, function (column) {\n                    column.visible = true;\n                });\n                $scope.columnsBeforeHide = [];\n\n                $scope.$broadcast(constants.events.closingInstitutionsUsers);\n            }\n\n            controller.grid.options.enableGridMenu = !hide;\n            controller.grid.options.enableColumnMenus = !hide;\n            controller.grid.options.enableColumnResizing = !hide;\n            controller.grid.options.enablePaginationControls = !hide;\n        };\n\n        /**\n         * Reset user form.\n         */\n        $scope.handleResetClick = function () {\n            $scope.user = angular.copy($scope.userBeforeChanges);\n        };\n\n        /**\n         * Actions to do when deactivation is triggered.\n         *\n         * @param {Object} user\n         * @returns {boolean}\n         */\n        $scope.handleDeactivateClick = function (user) {\n            if (!user || !user.id || $scope.deactivateInProgress) {\n                return false;\n            }\n            $scope.deactivateInProgress = true;\n            InstitutionsUsersListService.deactivate(user.id).then(controller.deactivationCallback);\n        };\n\n        /**\n         * Handle activate click\n         *\n         * @param {object} user\n         * @returns {Boolean}\n         */\n        $scope.handleActivateClick = function (user) {\n            if (!user.id || $scope.activateInProgress) {\n                return false;\n            }\n            $scope.activateInProgress = true;\n            InstitutionsUsersListService.activate(user.id).then(controller.activationCallback);\n        };\n\n        controller.deactivationCallback = function (success) {\n            $scope.user.active = success ? false : true;\n            if (success) {\n                $scope.userBeforeChanges.active = $scope.user.active;\n                // update user data in datagrid\n                controller.updateInDatagrid($scope.userBeforeChanges);\n            }\n            $scope.deactivateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Deactivated successfully!' : 'Deactivation failed!',\n                'Deactivation'\n            );\n        };\n\n        controller.activationCallback = function (success) {\n            $scope.user.active = success ? true : false;\n            if (success) {\n                $scope.userBeforeChanges.active = $scope.user.active;\n                // update user data in datagrid\n                controller.updateInDatagrid($scope.userBeforeChanges);\n            }\n            $scope.activateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Activated successfully!' : 'Activation failed!',\n                'Activation'\n            );\n        };\n\n        $scope.handleNewUserResponse = function (response) {\n            if (response.hasOwnProperty('insertedId') && response.insertedId.length > 0) {\n                $scope.user.id = response.insertedId;\n                $scope.user.active = true;\n                angular.copy($scope.user, $scope.userBeforeChanges);\n                // switch tab after user add\n                $scope.activeTab = 1;\n                $scope.disabledInstitutionsUserListSubTabs.permissions = false;\n                $scope.disabledInstitutionsUserListSubTabs.institutions = false;\n                angular.copy($scope.user, $scope.newUser);\n                $scope.selectedUserId = $scope.user.id;\n                $scope.newUserPanelNotClosed = true;\n                // reload datagrid\n                controller.reloadDatagrid();\n            }\n        };\n\n        /**\n         * Store user data.\n         */\n        $scope.handlePersonalDetailsSubmit = function () {\n            $scope.forms.personalDetailsForm.firstname.$setDirty();\n            $scope.forms.personalDetailsForm.lastname.$setDirty();\n            $scope.forms.personalDetailsForm.email.$setDirty();\n            PasswordService.setHasErrors(\n                $scope.user.id ||\n                !!$scope.forms.personalDetailsForm.password.$viewValue ? true : false\n            );\n            var newUser = typeof $scope.user.id === 'undefined';\n            if (\n                $scope.personalDetailsSubmitInProgress ||\n                !$scope.forms.personalDetailsForm ||\n                !$scope.forms.personalDetailsForm.$valid ||\n                !PasswordService.isValid($scope.forms.personalDetailsForm, $scope.user) ||\n                !PasswordService.getHasErrors()\n            ) {\n                return false;\n            }\n\n            // if is new user and the password is not set or setting password for existing user\n            if (\n                (newUser && !PasswordService.isPasswordValid($scope.user.password)) ||\n                (!newUser && typeof $scope.user.password !== 'undefined' && !PasswordService.isPasswordValid($scope.user.password))\n            ) {\n                NotifierFactory.show(\n                    'error',\n                    'Please set a valid password'\n                );\n\n                return false;\n            }\n            $scope.personalDetailsSubmitInProgress = true;\n            InstitutionsUsersListService.savePersonalDetails($scope.user).then(function (response) {\n                var message = 'Personal Details',\n                    success = false;\n                if (response) {\n                    success = !response.error;\n                    if (!success) {\n                        if (response.hasOwnProperty('message') && response.message.length) {\n                            message = response.message;\n                        }\n                    } else {\n                        $scope.user.fullname = InstitutionsUsersListService.getFullName($scope.user);\n                        if (response.hasOwnProperty('insertedId') && response.insertedId.length) {\n                            $scope.user.id = response.insertedId;\n                            $scope.user.active = true;\n                            angular.copy($scope.user, $scope.userBeforeChanges);\n                            // switch tab after user add\n                            $scope.activeTab = 1;\n                            $scope.disabledInstitutionsUserListSubTabs.permissions = false;\n                            $scope.disabledInstitutionsUserListSubTabs.institutions = false;\n                            angular.copy($scope.user, $scope.newUser);\n                            $scope.selectedUserId = $scope.user.id;\n                        }\n                        //reset personalDetailsForm\n                        controller.resetPersonalDetailsForm();\n                    }\n\n                    if (success && $scope.user.contactTypes) {\n                        InstitutionsUsersListService.getContactTypes().then(function (contactTypesList) {\n                            if (!contactTypesList) {\n                                return false;\n                            }\n                            var contactTypeNames = [],\n                                contactTypeName = null;\n\n                            for (var contactType in $scope.user.contactTypes) {\n                                if ($scope.user.contactTypes[contactType].assigned) {\n                                    contactTypeName = UsersListService.getContactTypeNameByHandle(\n                                        contactType, contactTypesList\n                                    );\n                                    contactTypeNames.push(contactTypeName);\n                                }\n                            }\n                            $scope.user.contactTypesAsString = contactTypeNames.join(', ');\n                        });\n                    }\n                    if (success) {\n                        delete $scope.user.password;\n                        // update original user object with changes\n                        $scope.userBeforeChanges = angular.copy($scope.user);\n                        // reload  datagrid\n                        controller.reloadDatagrid();\n                    }\n                    $scope.personalDetailsSubmitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Saved successfully!' : 'Saving failed!',\n                        message\n                    );\n\n\n                }\n            });\n        };\n\n        $scope.handlePermissionsSubmit = function () {\n            $scope.permissionsSubmitInProgress = true;\n            InstitutionsUsersListService.savePermissions($scope.user).then(function (success) {\n                $scope.permissionsSubmitInProgress = false;\n                $scope.userBeforeChanges = angular.copy($scope.user);\n                controller.rolesBeforeChanges = [];\n                for (var role in $scope.user.roles) {\n                    if ($scope.user.roles[role]) {\n                        controller.rolesBeforeChanges[role] = true;\n                    }\n                }\n                if (success) {\n                    controller.updateInDatagrid($scope.user);\n                }\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Permissions'\n                );\n            });\n        };\n\n        $scope.handlePrimaryContactTypeClick = function (handle) {\n            $scope.user.contactTypes[handle].assigned = true;\n        };\n\n        $scope.handleContactTypeClick = function (handle) {\n            if ($scope.user.contactTypes[handle] &&\n                $scope.user.contactTypes[handle].primary &&\n                !$scope.user.contactTypes[handle].assigned\n            ) {\n                $scope.user.contactTypes[handle].primary = false;\n            }\n        };\n\n        $scope.handleAssignedContactTypeClick = function (handle) {\n            if ($scope.user.contactTypes[handle].assigned === false) {\n                $scope.user.contactTypes[handle].primary = false;\n            }\n        };\n\n        $scope.handleRoleClick = function (clickedRole) {\n            if ($scope.user.roles.custom || typeof clickedRole === 'undefined') {\n                return;\n            }\n\n            $scope.user.accessTo = {};\n            var clickedRoleAssigned = $scope.user.roles[clickedRole.roleHandle],\n                parentRoleClicked = clickedRole.all,\n                childrenRolesHandles = UsersListService.getChildrenRoles(clickedRole.groupHandle, controller.rolesList),\n                parentRoleHandle = null;\n\n            // if role is assigned\n            if (clickedRoleAssigned) {\n                // if its parent role\n                if (parentRoleClicked) {\n                    // assign children roles to a user\n                    if (childrenRolesHandles) {\n                        angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                            $scope.user.roles[childrenRoleHandle] = true;\n                        });\n                    }\n                } else {\n                    if (childrenRolesHandles) {\n                        // Select parent if all children were selected\n                        var allDepartments = true;\n                        angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                            if ($scope.user.roles[childrenRoleHandle] === false ||\n                                $scope.user.roles[childrenRoleHandle] === undefined\n                            ) {\n                                allDepartments = false;\n                                return;\n                            }\n                        });\n                        if (allDepartments) {\n                            parentRoleHandle = UsersListService.getParentRoleHandle(clickedRole.groupHandle, controller.rolesList);\n                            if (parentRoleHandle) {\n                                $scope.user.roles[parentRoleHandle] = true;\n                            }\n                        }\n                    }\n                }\n            } else {\n                if (!parentRoleClicked) {\n                    // Uncheck parent if it was selected when unselecting one children\n                    parentRoleHandle = UsersListService.getParentRoleHandle(clickedRole.groupHandle, controller.rolesList);\n                    if (parentRoleHandle) {\n                        $scope.user.roles[parentRoleHandle] = false;\n                    }\n                } else {\n                    // check if all children where selected to select the parent\n                    if (childrenRolesHandles) {\n                        angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                            $scope.user.roles[childrenRoleHandle] = false;\n                        });\n                    }\n                }\n            }\n            // Update sections and pages based on the new roles\n            $scope.user = UsersListService.updateSectionsAndPages($scope.user, controller.rolesList);\n        };\n\n        $scope.activateCustomRole = function () {\n            if (!angular.isDefined($scope.user.roles)) {\n                $scope.user.roles = {};\n            }\n            $scope.user.roles.custom = true;\n        };\n\n        /**\n         * Actions to do when column is clicked under visible columns dropdown.\n         */\n        $scope.handleColumnClick = function () {\n            var columnsVisibility = {};\n            angular.forEach($scope.columns, function (column) {\n                columnsVisibility[column.field] = column.show;\n            });\n            InstitutionsUsersListService.storeColumnsVisibility(columnsVisibility);\n        };\n\n        controller.handleAddInstitutionsUserClick = function () {\n            controller.resetPersonalDetailsForm();\n            $scope.selectedUserId = null;\n            $scope.user = {};\n            InstitutionsUsersListFactory.resetActiveUserId();\n            // set personal details tab as active\n            $scope.activeTab = 0;\n            $scope.disabledInstitutionsUserListSubTabs.permissions = true;\n            $scope.disabledInstitutionsUserListSubTabs.institutions = true;\n            // trigger edit mode\n            controller.toggleColumns(true);\n            $scope.showInfoBlock = true;\n            $scope.filterActive = false;\n        };\n\n        //reset personalDetailsForm\n        controller.resetPersonalDetailsForm = function () {\n            if ($scope.forms.personalDetailsForm) {\n                $scope.forms.personalDetailsForm.$setPristine();\n            }\n        };\n\n        controller.handleEditCloseClick = function () {\n            controller.toggleColumns(false);\n            $scope.showInfoBlock = false;\n            $scope.selectedUserId = null;\n            $scope.activeTab = 0;\n        };\n\n        /**\n         * Apply datagrid columns visibility from browser cache.\n         */\n        controller.loadDatagridColumnsVisibility = function () {\n            var columnsVisibility = InstitutionsUsersListService.getColumnsVisibility();\n            if (columnsVisibility) {\n                angular.forEach($scope.columns, function (column) {\n                    if (columnsVisibility[column.field] !== 'undefined') {\n                        column.show = columnsVisibility[column.field] ? true : false;\n                    }\n                });\n            }\n        };\n\n        controller.reloadDatagrid = function () {\n            controller.getPage();\n        };\n\n        controller.getPage = function () {\n            controller.isDatagridReloading = true;\n            return InstitutionsUsersListService.getAllUsers(\n                angular.merge({}, controller.paginationOptions, controller.defaultPaginationOptions)\n            ).then(function (response) {\n                controller.grid.options.totalItems = response.totalMatching;\n                controller.grid.options.data = response.results;\n                controller.grid.options.minRowsToShow = response.totalFiltered;\n                controller.isDatagridReloading = false;\n                controller.showDatagrid = true;\n            });\n        };\n\n        controller.reloadDatagrid = function () {\n            controller.getPage();\n        };\n\n        controller.initDataGridOptions = function () {\n            var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n                selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html',\n                dateCellTemplate = '/scripts/shared/ui-grid/templates/dateCellTemplate.html';\n            //controller.grid = {};\n            controller.grid.options = {\n                data: [],\n                enableSorting: true,\n                exporterMenuCsv: false,\n                enableGridMenu: true,\n                showGridFooter: false,\n                selectedItems: $scope.selectedUserId,\n                enableFiltering: true,\n                enableColumnResize: true,\n                enableFullRowSelection: true,\n                enableRowSelection: true,\n                multiSelect: false,\n                enableRowHeaderSelection: false,\n                paginationPageSizes: [constants.datagrid.contacts.defaultRowsNumber, 50, 100],\n                paginationPageSize: constants.datagrid.contacts.defaultRowsNumber,\n                useExternalPagination: true,\n                useExternalSorting: true,\n                useExternalFiltering: true,\n                rowTemplate: '/scripts/components/users/list/institutions/datagrid/rowTemplate.html',\n                columnDefs: [\n                    {\n                        displayName: 'Email',\n                        field: 'email',\n                        cellFilter: 'lowercase',\n                        visible:true,\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'email', '')\n                        }\n                    },\n                    {\n                        displayName: 'Full Name',\n                        field: 'fullname',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'fullname', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'fullname', '')\n                        }\n                    },\n                    {\n                        displayName: 'Position',\n                        field: 'position',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'position', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'position', '')\n                        }\n                    },\n                    {\n                        displayName: 'Phone',\n                        field: 'phone',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'phone', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'phone', '')\n                        }\n                    },\n                    {\n                        displayName: 'Primary Institution Core Id',\n                        field: 'primaryInstitutionCoreId',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'primaryInstitutionCoreId', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'primaryInstitutionCoreId', '')\n                        }\n                    },\n                    {\n                        displayName: 'Primary Institution',\n                        field: 'primaryInstitutionName',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'primaryInstitutionName', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'primaryInstitutionName', '')\n                        }\n                    },\n                    {\n                        displayName: 'Contact Types',\n                        filter: {\n                            type: uiGridConstants.filter.SELECT,\n                            selectOptions: [],\n                            term: GridService.getFilterByField(controller.paginationOptions, 'contactTypes.handle')\n                        },\n                        field: 'contactTypesAsString',\n                        maxWidth: 130,\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'contactTypes.handle', true),\n                        filterHeaderTemplate: selectTemplate\n                    },\n                    {\n                        displayName: 'Last Login',\n                        field: 'lastLoginAt',\n                        filterCellFiltered: true,\n                        filters: [\n                            {\n                                visible: true,\n                                condition: uiGridConstants.filter.GREATER_THAN\n                            },\n                            {\n                                condition: uiGridConstants.filter.LESS_THAN\n                            }\n                        ],\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'lastLoginAt', ''),\n                            applyTextFilter: controller.applyDateFilter('lastLoginAt', '')\n                        },\n                        cellTemplate: dateCellTemplate,\n                        filterHeaderTemplate: '/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'lastLoginAt', true)\n                    }\n                ],\n                onRegisterApi: function (gridApi) {\n                    var columnsVisibilityBeforeChanges = angular.copy(controller.grid.options.columnDefs);\n                    $scope.gridApi = gridApi;\n                    gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                        $scope.handleDatagridRowClick(row.entity);\n                    });\n                    gridApi.core.on.rowsRendered($scope, function () {\n                        controller.isDatagridRendered = true;\n                    });\n                    gridApi.core.on.filterChanged($scope, controller.handleGridFiltersChanges);\n                    gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n\n                    gridApi.pagination.on.paginationChanged($scope, function (newPage, limit) {\n                        controller.defaultPaginationOptions.page = newPage;\n                        controller.defaultPaginationOptions.limit = limit;\n                        controller.getPage();\n                    });\n                    $scope.gridApi.core.on.sortChanged($scope, controller.handleGridFiltersChanges);\n                    // reset columns visibility\n                    GridService.resetExtend(columnsVisibilityBeforeChanges, controller.grid.options.columnDefs, $scope.filters);\n                }\n            };\n\n            // This is needed to add 'x' icon in date field when prepopulating dates\n            var lastLogin = GridService.getFilterByField(controller.paginationOptions, 'lastLoginAt', '');\n            if (lastLogin !== null && controller.paginationOptions[\"filter[lastLoginAt]\"] !== null) {\n                if (angular.isDefined(lastLogin) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"]) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"].startDate) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"].endDate)\n                ) {\n                    controller.grid.options.columnDefs[7].filters[0].term = controller.paginationOptions[\"filter[lastLoginAt]\"].startDate;\n                    controller.grid.options.columnDefs[7].filters[1].term = controller.paginationOptions[\"filter[lastLoginAt]\"].endDate;\n                }\n            }\n        };\n\n        controller.handleGridFiltersChanges = function () {\n            controller.paginationOptions = angular.copy(controller.defaultPaginationOptions);\n            var filterColumn, sortColumn;\n            angular.forEach($scope.gridApi.grid.columns, function (column) {\n                filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                if (column.field === 'lastLoginAt') {\n                    if (\n                        typeof column.filters !== 'undefined' &&\n                        typeof column.filters[0].term !== 'undefined' &&\n                        typeof column.filters[1].term !== 'undefined'\n                    ) {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = {\n                            startDate: column.filters[0].term && isNaN(column.filters[0].term) ?\n                                column.filters[0].term.format('x') : column.filters[0].term,\n                            endDate: column.filters[1].term && isNaN(column.filters[1].term) ?\n                                column.filters[1].term.format('x') : column.filters[1].term\n                        };\n                    } else {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = null;\n                    }\n                } else if ((column.field === 'contactTypesAsString' ||\n                    column.field === 'contactTypes.handle') &&\n                    typeof column.filters !== 'undefined' &&\n                    column.filters[0].term !== 'undefined' &&\n                    column.filters[0].term &&\n                    column.filters[0].term.value\n                ) {\n                    controller.paginationOptions['filter[contactTypes.handle]'] = column.filters[0].term.value;\n                } else {\n                    if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                    }\n                }\n                if (typeof column.sort.direction !== 'undefined') {\n                    sortColumn = column.sort.column ? column.sort.column : column.field;\n                    controller.paginationOptions['sorting[' + sortColumn + ']'] = column.sort.direction;\n                }\n            });\n\n            if (controller.paginationOptions[\"filter[lastLoginAt]\"] === null) {\n                controller.paginationOptions[\"filter[lastLoginAt]\"] = $scope.filters.lastLoginAtRange;\n            }\n            if (controller.paginationOptions[\"filter[lastLoginAt]\"].startDate === null) {\n                controller.paginationOptions[\"filter[lastLoginAt]\"].endDate = null;\n                $scope.filters.lastLoginAtRange = {\n                    startDate: null,\n                    endDate: null\n                };\n            }\n            GridService.storeColumnsFilters(\n                constants.gridNameSpaces.schoolUserGridFilters,\n                controller.paginationOptions\n            );\n\n            if (angular.isDefined($scope.filterTimeout)) {\n                $timeout.cancel($scope.filterTimeout);\n            }\n            $scope.filterTimeout = $timeout(function () {\n                controller.getPage();\n            }, 500);\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(constants.gridNameSpaces.schoolUserGridVisibility),\n                reload = false;\n\n            if (columnsVisibility && $scope.filterActive) {\n                angular.forEach(controller.grid.options.columnDefs, function (column, key) {\n                    if (columnsVisibility[column.field] === true &&\n                        column.visible === false\n                    ) {\n                        controller.grid.options.columnDefs[key].filter.term = null;\n                        controller.paginationOptions['filter[' + column.field + ']'] = null;\n                        reload = true;\n                        if (column.field === 'lastLoginAt') {\n                            delete controller.grid.options.columnDefs[key].filters[0].term;\n                            $scope.filters.lastLoginAtRange = {\n                                startDate: null,\n                                endDate: null\n                            };\n                        }\n                    }\n                });\n            }\n            if ($scope.filterActive) {\n                controller.saveStateVisibility();\n            }\n            if (reload) {\n                controller.getPage();\n            }\n        };\n\n        /**\n         * Populates input text field for date field\n         *\n         * @param {string} filterName\n         * @param {mixed} defaultValue\n         */\n        controller.applyDateFilter = function (filterName, defaultValue) {\n            var filter = GridService.getFilterByField(controller.paginationOptions, filterName, defaultValue);\n            if (angular.isDefined(filter) &&\n                filter !== null\n            ) {\n                if (angular.isDefined(filter.startDate) &&\n                    angular.isDefined(filter.endDate)\n                ) {\n                    if (filter.startDate !== null &&\n                        filter.startDate !== null\n                    ) {\n                        controller.defaultFilters.lastLoginAtRange = {\n                            startDate: parseInt(filter.startDate, 10),\n                            endDate: parseInt(filter.endDate, 10)\n                        };\n                    } else {\n                        controller.defaultFilters.lastLoginAtRange = {\n                            startDate: null,\n                            endDate: null\n                        };\n                    }\n                }\n            }\n        };\n\n        controller.initDataGrid = function () {\n            $scope.filters = angular.extend({}, controller.defaultFilters);\n            controller.getPage().then(function () {\n                InstitutionsUsersListService.getContactTypesFilter().then(function (options) {\n                    var list = [];\n                    angular.forEach(options, function (option) {\n                        list.push({\n                            value: option.id,\n                            label: option.title\n                        });\n                    });\n                    controller.grid.options.columnDefs[6].filter.selectOptions = list;\n                });\n            });\n        };\n\n        controller.convertVisibleColumnsField = function (value) {\n            switch (value) {\n                case 'contactTypesAsString':\n                    return 'contactTypes.handle';\n            }\n        };\n\n        controller.saveStateVisibility = function () {\n            var visibility = angular.copy(controller.grid.options.columnDefs);\n            angular.forEach(visibility, function (column) {\n                if (['contactTypesAsString'].indexOf(column.field) !== -1) {\n                    column.field = controller.convertVisibleColumnsField(column.field);\n                }\n            });\n            GridService.storeColumnsVisibility(\n                constants.gridNameSpaces.schoolUserGridVisibility,\n                GridService.getGridColumnsVisibility(visibility)\n            );\n        };\n\n        controller.isValidFirstName = function () {\n            return PasswordService.isValidFirstName($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.isValidLastName = function () {\n            return PasswordService.isValidLastName($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.isValidEmail = function () {\n            return PasswordService.isValidEmail($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.setValid = function (fieldName) {\n            return PasswordService.setValid($scope.forms.personalDetailsForm, fieldName);\n        };\n\n        controller.initWatches = function () {\n            // listen to active profile tab changes\n            WatchService.create($scope, 'activeTab', function (newValue) {\n                InstitutionsUsersListFactory.setSelectedTabId(newValue);\n            });\n\n            $scope.$on(constants.events.institutionsUserPrimaryInstitutionChanges, function () {\n                $scope.userBeforeChanges = angular.copy($scope.user);\n                controller.updateInDatagrid($scope.user);\n            });\n        };\n\n        /**\n         * Class constructor.\n         */\n        controller.$onInit = function () {\n            controller.initDataGridOptions();\n            controller.initWatches();\n            controller.loadDatagridColumnsVisibility();\n            controller.initDataGrid();\n        };\n\n        controller.$onDestroy = function () {\n\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsUsersListController', [\n            '$scope',\n            '$resource',\n            '$timeout',\n            'constants',\n            'uiGridConstants',\n            'InstitutionsUsersListService',\n            'UsersListService',\n            'NotifierFactory',\n            'InstitutionsUsersListFactory',\n            'InstitutionsUsersFactory',\n            'WatchService',\n            'UserTypesService',\n            'PasswordService',\n            'UiGridService',\n            'UserFactory',\n            App.controllers.institutionsUsersList\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.InstitutionsUsers = function (\n        $resource,\n        $q,\n        $log,\n        $localStorage,\n        constants,\n        UsersListService,\n        RequestsQueueService\n    ) {\n        var service = {\n            contactTypes : null,\n            roles : null,\n            sections : null,\n            deferred : {\n                getContactTypes: null,\n                getRoles: null,\n                getSections: null\n            }\n        };\n\n        service.getInstitutionsUsersListModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/list/client-users', {}, {\n                get: {\n                    isArray:false,\n                    cancellable : true\n                }\n            });\n        };\n\n        service.getUserModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/user/:id', null, {\n                update: { method:'PATCH' },\n                replace: { method:'PUT' }\n            });\n        };\n\n        service.getUserInstitutionModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/user/institution', null, {\n                create: { method: 'POST' }\n            });\n        };\n\n        /**\n         * Get all QS users.\n         *\n         * @param {Object} params\n         * @returns {Promise:Array}\n         */\n        service.getAllUsers = function (filters) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n\n            // cancel currently running requests\n            RequestsQueueService.cancelAll('getAllInstitutionsUsers');\n            var hasSorting = false,\n                 allowedFilters = [\n                     'limit',\n                     'page'\n                 ];\n            if (filters) {\n                for (var key in filters) {\n                    if (key.indexOf('sorting') !== -1) {\n                        hasSorting = true;\n                        break;\n                    } else {\n                        if (key.indexOf('filter') !== 0 && allowedFilters.indexOf(key) === -1) {\n                            delete filters[key];\n                        }\n                    }\n                }\n            }\n            if (!hasSorting) {\n                filters['sorting[createdAt]'] = 'desc';\n            }\n            var Api = service.getInstitutionsUsersListModel().get(filters);\n\n            // add new request to the queue\n            RequestsQueueService.add(Api, 'getAllInstitutionsUsers');\n\n            return Api.$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('getAllInstitutionsUsers');\n                data.results = service.formatList(data.results);\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            }).then(function (data) {\n                data.results = service.appendContactsData(data.results);\n                return data;\n            });\n        };\n\n        service.appendContactsData = function (userData) {\n            if (userData) {\n                var contactTypeName = null;\n\n                service.getContactTypes().then(function(contactTypesList) {\n                    if (contactTypesList) {\n                        angular.forEach(userData, function(userObject) {\n                            if (!userObject.contactTypesAsArray) {\n                                userObject.contactTypesAsArray = [];\n                            }\n                            if (!userObject.contactTypes) {\n                                return false;\n                            }\n                            var contactTypes = angular.copy(userObject.contactTypes);\n                            userObject.contactTypes = {};\n                            angular.forEach(contactTypes, function(contactType) {\n                                contactTypeName = UsersListService.getContactTypeNameByHandle(\n                                    contactType.handle, contactTypesList\n                                );\n                                userObject.contactTypesAsArray.push(contactTypeName);\n                                userObject.contactTypesAsString = userObject.contactTypesAsArray.length ?\n                                    userObject.contactTypesAsArray.join(', ') : null;\n\n                                userObject.contactTypes[contactType.handle] = {\n                                    primary : contactType.primary,\n                                    assigned : true\n                                };\n                            });\n                        });\n                    }\n                });\n            }\n\n            return userData;\n        };\n\n        service.getContactTypesFilter = function () {\n            var deferred = $q.defer();\n            service.getContactTypes().then(function(contactTypesList) {\n                var contactTypeFilters = [];\n                if (contactTypesList) {\n                    angular.forEach(contactTypesList, function(contactType) {\n                        contactTypeFilters.push({\n                            id: contactType.handle,\n                            title: contactType.name\n                        });\n                    });\n                }\n\n                deferred.resolve(contactTypeFilters);\n            });\n\n            return deferred.promise;\n        };\n\n        /**\n         * Format QS users list.\n         *\n         * @param {Object} userData\n         * @returns {Object}\n         */\n        service.formatList = function (userData) {\n            if (userData) {\n                var accessTo, roles;\n                angular.forEach(userData, function(userObject) {\n                    accessTo = userObject.accessTo ? angular.copy(userObject.accessTo) : [];\n                    userObject.accessTo = {};\n                    angular.forEach(accessTo, function(value) {\n                        userObject.accessTo[value] = true;\n                    });\n\n                    roles = userObject.roles ? angular.copy(userObject.roles) : [];\n                    userObject.roles = {};\n                    angular.forEach(roles, function(value) {\n                        userObject.roles[value] = true;\n                        if (value === constants.globalAdminRole) {\n                            userObject.globalAdmin = true;\n                        }\n                    });\n                });\n            }\n\n            return userData;\n        };\n\n        /**\n         * Get contact types list.\n         *\n         * @returns {Promise:Object}\n         */\n        service.getContactTypes = function () {\n            // process already running\n            if (!service.deferred.getContactTypes) {\n                service.deferred.getContactTypes = $q.defer();\n            } else {\n                return service.deferred.getContactTypes.promise;\n            }\n            var deferred = service.deferred.getContactTypes;\n\n            // check if data exists in cache\n            if (service.contactTypes) {\n                deferred.resolve(service.contactTypes);\n            } else {\n                var Api = $resource(constants.api.usersPermissions.url + '/v1/list/contact-types');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.contactTypes = data.results;\n                    deferred.resolve(service.contactTypes);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.contactTypes = [];\n                    deferred.resolve(service.contactTypes);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Format roles list.\n         *\n         * @param {Object} rolesList\n         * @returns {Array}\n         */\n        service.formatRoles = function (rolesList) {\n            var flatArray = [];\n\n            angular.forEach(rolesList, function (rolesGroup) {\n                angular.forEach(rolesGroup.roles, function (role) {\n                    flatArray.push({\n                        'groupHandle' : rolesGroup.handle,\n                        'groupName' : rolesGroup.name,\n                        'roleName' : role.name,\n                        'roleHandle' : rolesGroup.handle + '.' + role.handle,\n                        'all' : role.all ? role.all : false,\n                        'sections': role.sections\n                    });\n                });\n            });\n\n            flatArray.push({\n                'groupName' : 'Custom',\n                'roleName' : 'Switching off will revert changes to default',\n                'roleHandle' : 'custom',\n                'all' : false\n            });\n\n            return flatArray;\n        };\n\n        /**\n         * Get Institutions users roles list.\n         *\n         * @returns {Promise}\n         */\n        service.getRoles = function () {\n            // process already running\n            if (!service.deferred.getRoles) {\n                service.deferred.getRoles = $q.defer();\n            } else {\n                return service.deferred.getRoles.promise;\n            }\n            var deferred = service.deferred.getRoles;\n\n            // check if data exists in cache\n            if (service.roles) {\n                deferred.resolve(service.roles);\n            } else {\n                var Api = $resource(constants.api.usersPermissions.url + '/v1/list/client-roles');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.roles = service.formatRoles(data.results);\n                    deferred.resolve(service.roles);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.roles = [];\n                    deferred.resolve(service.roles);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Get sections list.\n         *\n         * @returns {Promise:Array}\n         */\n        service.getSections = function () {\n            // process already running\n            if (!service.deferred.getSections) {\n                service.deferred.getSections = $q.defer();\n            } else {\n                return service.deferred.getSections.promise;\n            }\n            var deferred = service.deferred.getSections;\n\n            // check if data exists in cache\n            if (service.sections) {\n                deferred.resolve(service.sections);\n            } else {\n                var Api = $resource(constants.api.usersPermissions.url + '/v1/list/client-sections');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.sections = UsersListService.formatSections(data.results);\n                    deferred.resolve(service.sections);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.sections = [];\n                    deferred.resolve(service.sections);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Mark user as active.\n         *\n         * @param {String} id\n         * @returns {Promise:boolean}\n         */\n        service.activate = function (id) {\n            var Api = $resource(constants.api.usersPermissions.url + '/v1/user/:id/activate', {id:id});\n            return Api.get().$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Mark user as inactive.\n         *\n         * @param {String} id\n         * @returns {Promise:boolean}\n         */\n        service.deactivate = function (id) {\n            var Api = $resource(constants.api.usersPermissions.url + '/v1/user/:id/deactivate', {id:id});\n            return Api.get().$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getFullName = function(userObject) {\n            return [\n                userObject.title,\n                userObject.firstname,\n                userObject.lastname\n            ].filter(Boolean).join(' ');\n        };\n\n        service.initInstitutionsUser = function (user) {\n            if (!user.hasOwnProperty('contactTypes')) {\n                user.contactTypes = [];\n            }\n            user.roles = [];\n            user.accessTo = [];\n            user.deleted = false;\n            user.active = true;\n            user.qs = false;\n\n            return user;\n        };\n\n        service.savePersonalDetails = function (userData) {\n            var UserModel = service.getUserModel(),\n                dataToUpdate = angular.extend({}, userData);\n            if (dataToUpdate.contactTypes) {\n                var formattedContactTypes = [];\n\n                for (var contactType in dataToUpdate.contactTypes) {\n                    if (dataToUpdate.contactTypes[contactType].assigned) {\n                        formattedContactTypes.push({\n                            handle: contactType,\n                            primary: dataToUpdate.contactTypes[contactType].primary ? true : false\n                        });\n                    }\n                }\n\n                dataToUpdate.contactTypes = formattedContactTypes;\n            }\n\n            delete dataToUpdate.accessTo;\n            delete dataToUpdate.roles;\n            delete dataToUpdate.fullname;\n\n            if (userData.id) { // update\n                return UserModel.update({id: userData.id}, dataToUpdate).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else { // create\n                UserModel = service.getUserInstitutionModel();\n                dataToUpdate = service.initInstitutionsUser(dataToUpdate);\n                delete dataToUpdate.id;\n                return UserModel.create(dataToUpdate).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        service.savePermissions = function (userData) {\n            var UserModel = service.getUserModel(),\n                dataToUpdate = {\n                    accessTo : [],\n                    roles : []\n                };\n\n            if (userData.accessTo) {\n                for (var section in userData.accessTo) {\n                    if (userData.accessTo[section]) {\n                        dataToUpdate.accessTo.push(section);\n                    }\n                }\n            }\n            if (userData.roles) {\n                for (var role in userData.roles) {\n                    if (userData.roles[role]) {\n                        dataToUpdate.roles.push(role);\n                    }\n                }\n            }\n            return UserModel.update({id: userData.id}, dataToUpdate).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set institutions users datagrid columns visibility.\n         *\n         * @param {Object} columnsVisibility\n         */\n        service.storeColumnsVisibility = function (columnsVisibility) {\n            $localStorage.institutionUsersGridColumnsVisibility = columnsVisibility;\n        };\n\n        /**\n         * Get institutions users datagrid columns visibility.\n         * @returns {Object|*}\n         */\n        service.getColumnsVisibility = function () {\n            return $localStorage.institutionUsersGridColumnsVisibility;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('InstitutionsUsersListService', [\n            '$resource',\n            '$q',\n            '$log',\n            '$localStorage',\n            'constants',\n            'UsersListService',\n            'RequestsQueueService',\n            App.services.InstitutionsUsers\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.InstitutionsUsersListFactory = function () {\n        var selectedTabId = null,\n            activeUserId = null,\n            tabs = {\n                personal : 0,\n                permissions : 1,\n                institutions : 2\n            };\n\n        return {\n            setSelectedTabId: function (newSelectedTabId) {\n                selectedTabId = newSelectedTabId;\n            },\n            isInstitutionsTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined') && selectedTabId === tabs.institutions;\n            },\n            setActiveUserId: function (newActiveUserId) {\n                activeUserId = newActiveUserId;\n            },\n            resetActiveUserId: function () {\n                activeUserId = null;\n            },\n            getActiveUserId: function () {\n                return activeUserId;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('InstitutionsUsersListFactory', [App.factories.InstitutionsUsersListFactory]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.tuProfilePrograms = function (\n        $scope,\n        constants,\n        InstitutionsUsersListInstitutionsService,\n        InstitutionsUsersListFactory,\n        NotifierFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.searchInProgress = false;\n\n        controller.submitInProgress = false;\n        \n        $scope.selectedInstitutionsNamesLoaded = false;\n        $scope.userInstitutions = {\n            assigned : []\n        };\n        controller.newAssignedValues = {};\n        $scope.institutionsSearchResults = [];\n\n        controller.disallowSubmit = function () {\n            // submit process is on going\n            if (!$scope.user.id || controller.submitInProgress || !$scope.selectedInstitutionsNamesLoaded) {\n                return true;\n            }\n            // missing primary institution\n            if (!$scope.user.primaryInstitutionCoreId) {\n                return true;\n            }\n            // current list is not empty & assigned institutions already in the list\n            if (\n                $scope.user.institutions &&\n                $scope.user.institutions.length &&\n                $scope.userBeforeChanges.institutions &&\n                $scope.userBeforeChanges.institutions.length &&\n                $scope.userInstitutions.assigned &&\n                $scope.userInstitutions.assigned.length\n            ) {\n                var hasChanges = InstitutionsUsersListInstitutionsService.hasChanges(\n                    $scope.user.institutions,\n                    $scope.userBeforeChanges.institutions,\n                    $scope.userInstitutions.assigned\n                );\n                if (\n                    !hasChanges &&\n                    $scope.user.primaryInstitutionCoreId === $scope.userBeforeChanges.primaryInstitutionCoreId\n                ) {\n                    return true;\n                }\n            }\n            // current & assigned lists are empty\n            if (\n                $scope.user.institutions &&\n                !$scope.user.institutions.length &&\n                $scope.userBeforeChanges.institutions &&\n                !$scope.userBeforeChanges.institutions.length &&\n                $scope.userInstitutions.assigned &&\n                !$scope.userInstitutions.assigned.length\n            ) {\n                return true;\n            }\n\n            return false;\n        };\n\n        /**\n         * Is progress bar visible?\n         *\n         * @returns {boolean}\n         */\n        controller.isProgressBarVisible = function () {\n            return !$scope.selectedInstitutionsNamesLoaded || controller.searchInProgress;\n        };\n\n\n        /**\n         * Actions to do when institutions changes are submitted.\n         */\n        controller.handleInstitutionSubmit = function () {\n            controller.submitInProgress = true;\n\n            // fetch user institutions groups\n            InstitutionsUsersListInstitutionsService.getInstitutionsGroups(\n                $scope.user.primaryInstitutionCoreId\n            ).then(function (institutionsGroups) {\n                // re-format institution groups\n                if (angular.isArray(institutionsGroups) && institutionsGroups.length > 0) {\n                    var institutionsGroupsFormatted = {};\n                    institutionsGroupsFormatted[0] = {};\n                    angular.forEach(institutionsGroups, function (institutionsGroup) {\n                        institutionsGroupsFormatted[0][institutionsGroup.coreId] = {\n                            coreId: institutionsGroup.coreId,\n                            name: institutionsGroup.name\n                        };\n                    });\n                    institutionsGroups = institutionsGroupsFormatted;\n                }\n                $scope.user.institutionsGroups = institutionsGroups;\n                // update user institutions\n                InstitutionsUsersListInstitutionsService.saveInstitutions(\n                    $scope.user.id,\n                    $scope.userInstitutions.assigned,\n                    {\n                        primaryInstitutionCoreId : $scope.user.primaryInstitutionCoreId,\n                        primaryInstitutionCoreIdAsString : '' + $scope.user.primaryInstitutionCoreId,\n                        primaryInstitutionName : $scope.user.primaryInstitutionName,\n                        qs : $scope.user.qs\n                    },\n                    institutionsGroups\n                ).then(controller.saveInstitutionsCallback);\n            });\n        };\n\n        /**\n         * Actions to do after institutions changes are submission.\n         *\n         * @param {Boolean} success\n         */\n        controller.saveInstitutionsCallback = function (success) {\n            var assignedIds = InstitutionsUsersListInstitutionsService.getObjectColumn(\n                $scope.userInstitutions.assigned, 'coreId'\n            );\n            $scope.user.institutions = angular.copy(assignedIds);\n            $scope.userBeforeChanges.institutions = angular.copy(assignedIds);\n            $scope.userBeforeChanges.primaryInstitutionCoreId = $scope.user.primaryInstitutionCoreId;\n            controller.submitInProgress = false;\n\n            if (success) {\n                controller.userInstitutionsBeforeChanges = angular.copy($scope.userInstitutions);\n                $scope.user.primaryInstitutionCoreIdAsString = '' + $scope.user.primaryInstitutionCoreId;\n                $scope.$emit(constants.events.institutionsUserPrimaryInstitutionChanges);\n            }\n            controller.newAssignedValues = angular.copy($scope.userInstitutions.assigned);\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Updated successfully!' : 'Update failed!',\n                'User Institutions'\n            );\n        };\n\n        /**\n         * Actions to do after institutions search.\n         *\n         * @param {Array} results\n         */\n        controller.searchInstitutionsCallback = function (results) {\n            controller.searchInProgress = false;\n            $scope.institutionsSearchResults = results;\n        };\n\n        /**\n         * Search for institution by search phrase.\n         *\n         * @param {String} searchPhrase\n         */\n        controller.searchInstitutions = function (searchPhrase) {\n            controller.searchInProgress = true;\n            InstitutionsUsersListInstitutionsService.searchInstitutions(\n                searchPhrase,\n                $scope.user.primaryInstitutionCoreId,\n                $scope.userInstitutions.assigned\n            ).then(controller.searchInstitutionsCallback);\n        };\n\n        /**\n         * Actions to do after institutions full names search.\n         *\n         * @param {Array} results\n         */\n        controller.getInstitutionsNamesCallback = function (results) {\n            $scope.selectedInstitutionsNamesLoaded = true;\n            $scope.userInstitutions.assigned = results;\n            var addPrimary = true;\n            for (var r in results) {\n                if (results[r].coreId === $scope.user.primaryInstitutionCoreId) {\n                    addPrimary = false;\n                    break;\n                }\n            }\n            if (addPrimary &&\n                $scope.user.primaryInstitutionCoreId &&\n                $scope.user.primaryInstitutionName !== '' &&\n                $scope.user.primaryInstitutionName\n            ) {\n                $scope.userInstitutions.assigned.push({\n                    coreId : $scope.user.primaryInstitutionCoreId,\n                    name : $scope.user.primaryInstitutionName + ' [' + $scope.user.primaryInstitutionCoreId + ']'\n                });\n            }\n            controller.userInstitutionsBeforeChanges = angular.copy($scope.userInstitutions);\n        };\n\n        controller.handleItemSelect = function (item) {\n            if ($scope.userInstitutions.assigned.length === 1) {\n                $scope.user.primaryInstitutionCoreId = item.coreId;\n                $scope.user.primaryInstitutionName = item.name.replace(' [' + item.coreId + ']','');\n            }\n        };\n\n        controller.handleItemRemove = function (item) {\n            if (item && $scope.user.primaryInstitutionCoreId === item.coreId) {\n                $scope.user.primaryInstitutionCoreId = null;\n            }\n        };\n\n        controller.handlePrimaryInstitutionChanges = function () {\n            for (var i in  $scope.userInstitutions.assigned) {\n                // find primary institution object in assigned institutions list\n                if ($scope.userInstitutions.assigned[i].coreId === $scope.user.primaryInstitutionCoreId) {\n                    $scope.user.primaryInstitutionName = $scope.userInstitutions.assigned[i].name.replace(' [' + $scope.user.primaryInstitutionCoreId + ']', '');\n                    $scope.user.primaryInstitutionCoreIdAsString = ''+ $scope.userInstitutions.assigned[i].coreId;\n                    break;\n                }\n            }\n        };\n\n        /**\n         * Initialise user institutions.\n         */\n        controller.initUserInstitutions = function () {\n            $scope.selectedInstitutionsNamesLoaded = false;\n            if ($scope.user && $scope.user.institutions && $scope.user.institutions.length) {\n                InstitutionsUsersListInstitutionsService.getInstitutionNames(\n                    $scope.user.institutions\n                ).then(controller.getInstitutionsNamesCallback);\n            } else {\n                controller.getInstitutionsNamesCallback([]);\n            }\n        };\n\n        /**\n         * Initialise watches.\n         */\n        controller.initWatches = function () {\n            // listen to active user changes\n            WatchService.create($scope, InstitutionsUsersListFactory.getActiveUserId, function (userId) {\n                if (userId) {\n                    if (InstitutionsUsersListFactory.isInstitutionsTabSelected()) {\n                        controller.initUserInstitutions();\n                    }\n                } else {\n                    $scope.selectedInstitutionsNamesLoaded = true;\n                    controller.getInstitutionsNamesCallback([]);\n                }\n            });\n\n            /**\n             * Restore value for primaryInstitutionCoreId if it gets undefined\n             */\n            WatchService.create($scope, 'user.primaryInstitutionCoreId', function(newValue, oldValue) {\n                if (newValue === undefined) {\n                    $scope.user.primaryInstitutionCoreId = oldValue;\n                }\n            });\n\n            /**\n             * Restore value for primaryInstitutionCoreId if it gets undefined\n             */\n            WatchService.create($scope, 'userInstitutions.assigned', function(newValue, oldValue) {\n                if (newValue.length === 0 && oldValue.length > 0) {\n                    $scope.user.primaryInstitutionName = null;\n                    $scope.user.primaryInstitutionCoreId = null;\n                    $scope.user.primaryInstitutionCoreIdAsString = null;\n                }\n            });\n\n            WatchService.create($scope, function() {return controller.newAssignedValues;}, function(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.userInstitutions.assigned = angular.copy(newValue);\n                }\n            });\n\n            $scope.$on(constants.events.closingInstitutionsUsers, function () {\n                // reset unsaved changes\n                $scope.userInstitutions = angular.copy(controller.userInstitutionsBeforeChanges);\n                $scope.selectedInstitutionsNamesLoaded = false;\n            });\n\n            // listen if institution tab is selected, init user institutions\n            WatchService.create($scope, InstitutionsUsersListFactory.isInstitutionsTabSelected, function (isSelected) {\n                if (isSelected) {\n                    controller.initUserInstitutions();\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to institutions tab visibility changes\n        WatchService.create($scope, InstitutionsUsersListFactory.isInstitutionsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n            if (isActive && InstitutionsUsersListFactory.getActiveUserId() && !$scope.selectedInstitutionsNamesLoaded) {\n                controller.initUserInstitutions();\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsUsersInstitutionsController', [\n            '$scope',\n            'constants',\n            'InstitutionsUsersListInstitutionsService',\n            'InstitutionsUsersListFactory',\n            'NotifierFactory',\n            'WatchService',\n            App.controllers.tuProfilePrograms\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.InstitutionsUsersListInstitutionsService = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        RequestsQueueService\n    ) {\n        var service = {\n            institutionsNames : []\n        };\n\n        /**\n         * Institutions full names by core id(s) endpoint.\n         *\n         * @returns {$resource.*}\n         */\n        service.getInstitutionNamesByCoreIdsModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/all/parent-name?sorting[coreId]=asc',\n                null,\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        service.getInstitutionsGroupsModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/all?filter[coreId]=:id',\n                {\n                    'limit': 1,\n                    'columns[]' : 'groupMembers'\n                },\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n\n\n        /**\n         * Institutions search by full name endpoint.\n         *\n         * @returns {$resource.*}\n         */\n        service.getInstitutionsSearchModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/all/parent-name',\n                {\n                    'sorting[coreId]' : 'asc',\n                    'field[]': [\n                        'name',\n                        'coreId'\n                    ]\n                },\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        /**\n         * User update endpoint.\n         *\n         * @returns {$resource.*}\n         */\n        service.getUserModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/user/:id', null, {\n                update: {method:'PATCH', cancellable: true}\n            });\n        };\n\n        /**\n         * Search for institution by full name field.\n         *\n         * @param {String} searchPhrase\n         * @param {Number} primaryInstitutionCoreId\n         * @param {Array} assignedInstitutionsCoreIds\n         * @returns {Promise.Array}\n         */\n        service.searchInstitutions = function (searchPhrase, primaryInstitutionCoreId, assignedInstitutionsCoreIds)\n        {\n            var deferred = $q.defer(),\n                institutions = [];\n\n            if (!primaryInstitutionCoreId) {\n                primaryInstitutionCoreId = 0;\n            }\n\n            if (!searchPhrase || searchPhrase.length < 1) {\n                deferred.resolve(institutions);\n            } else {\n                if (constants.dev) {\n                    var startTime = new Date().getTime(), endTime;\n                }\n                var queryString = {\n                    'filter[name]' : searchPhrase,\n                    'exclude[coreIdAsString][]' : [\n                        primaryInstitutionCoreId\n                    ]\n                };\n                if (assignedInstitutionsCoreIds.length) {\n                    angular.forEach(assignedInstitutionsCoreIds, function (value) {\n                        if (value.coreId) {\n                            queryString['exclude[coreIdAsString][]'].push(value.coreId);\n                        }\n                    });\n                }\n\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('searchInstitutions');\n\n                var Api = service.getInstitutionsSearchModel().get(queryString);\n\n                // add new request to the queue\n                RequestsQueueService.add(Api, 'searchInstitutions');\n\n                Api.$promise.then(function (response) {\n                    if (constants.dev) {\n                        endTime = new Date().getTime();\n                        $log.log('success, got data: ', response, 'in ' + (endTime - startTime) + ' ms');\n                    }\n\n                    // cancel currently running requests\n                    RequestsQueueService.cancelAll('searchInstitutions');\n\n                    deferred.resolve(response.results);\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n\n                    deferred.resolve([]);\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        service.getObjectColumn = function (dataObject, column) {\n            var filteredData = [];\n            angular.forEach(dataObject, function (data) {\n                if (data[column]) {\n                    filteredData.push(data[column]);\n                }\n\n            });\n            return filteredData;\n        };\n\n        service.hasChanges = function (sourceOne, sourceTwo, assigned) {\n            var assignedIds = service.getObjectColumn(\n                assigned,\n                'coreId'\n            );\n            sourceOne = sourceOne.sort();\n            sourceTwo = sourceTwo.sort();\n            assignedIds = assignedIds.sort();\n\n            if (!angular.equals(sourceOne, sourceTwo)) {\n                return true;\n            }\n            if (!angular.equals(sourceTwo, assignedIds)) {\n                return true;\n            }\n            return false;\n        };\n\n        /**\n         * Save user institutions.\n         *\n         * @param {Integer} userId\n         * @param {Array} institutionsData\n         * @param {object} primaryInstitutionData\n         * @returns {Promise.boolean}\n         */\n        service.saveInstitutions = function (userId, institutionsData, primaryInstitutionData, institutionsGroups)\n        {\n            var deferred = $q.defer(),\n                institutions = [];\n\n            if (!userId || !institutionsData || !primaryInstitutionData) {\n                deferred.resolve(false);\n            } else {\n                if (constants.dev) {\n                    var startTime = new Date().getTime(), endTime;\n                }\n\n                if (institutionsData.length) {\n                    institutions = service.getObjectColumn(institutionsData, 'coreId');\n                }\n\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('saveInstitutions');\n\n                var Api = service.getUserModel().update({\n                    id : userId\n                }, {\n                    institutions : institutions,\n                    primaryInstitutionCoreId : primaryInstitutionData.primaryInstitutionCoreId,\n                    primaryInstitutionCoreIdAsString : primaryInstitutionData.primaryInstitutionCoreIdAsString,\n                    primaryInstitutionName : primaryInstitutionData.primaryInstitutionName,\n                    institutionsGroups: institutionsGroups\n                });\n\n                // add new request to the queue\n                RequestsQueueService.add(Api, 'saveInstitutions');\n\n                Api.$promise.then(function (response) {\n                    if (constants.dev) {\n                        endTime = new Date().getTime();\n                        $log.log('success, got data: ', response, 'in ' + (endTime - startTime) + ' ms');\n                    }\n\n                    // cancel currently running requests\n                    RequestsQueueService.cancelAll('saveInstitutions');\n\n                    deferred.resolve(response.modifiedCount === 1);\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n\n                    deferred.resolve(false);\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        service.getInstitutionsGroups = function (institutionCoreId) {\n            if (!institutionCoreId) {\n                throw 'Missing Required';\n            }\n\n            var Api = service.getInstitutionsGroupsModel();\n            return Api.get({ id: institutionCoreId }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return (data && data.results && data.results[0] && data.results[0].groupMembers) ?\n                    data.results[0].groupMembers : [];\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get institutions names by their core ids.\n         *\n         * @param {Array} coreIds\n         * @returns {Promise.Array}\n         */\n        service.getInstitutionNames = function (coreIds) {\n            var deferred = $q.defer(),\n                names = [];\n\n            // check if core ids are provided\n            if (!coreIds || !coreIds.length) {\n                deferred.resolve(names);\n            } else {\n                var cacheKey = coreIds.join(':');\n                // check if in cache\n                if (typeof service.institutionsNames[cacheKey] !== 'undefined') {\n                    if (constants.dev) {\n                        $log.log('serving from cache');\n                    }\n                    deferred.resolve(service.institutionsNames[cacheKey]);\n                } else {\n                    if (constants.dev) {\n                        var startTime = new Date().getTime(), endTime;\n                    }\n                    // cancel currently running requests\n                    RequestsQueueService.cancelAll('getInstitutionNames');\n\n                    var Api = service.getInstitutionNamesByCoreIdsModel().get(\n                        {\n                            'filter[coreId][]': coreIds,\n                            'field[]': ['coreId', 'name']\n                        }\n                    );\n\n                    // add new request to the queue\n                    RequestsQueueService.add(Api, 'getInstitutionNames');\n\n                    Api.$promise.then(function (response) {\n                        if (constants.dev) {\n                            endTime = new Date().getTime();\n                            $log.log('success, got data: ', response, 'in ' + (endTime - startTime) + ' ms');\n                        }\n\n                        // cancel currently running requests\n                        RequestsQueueService.cancelAll('getInstitutionNames');\n\n                        service.institutionsNames[cacheKey] = response.results;\n                        deferred.resolve(response.results);\n                    }, function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n\n                        deferred.resolve(names);\n                    });\n                }\n            }\n\n            return deferred.promise;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('InstitutionsUsersListInstitutionsService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'RequestsQueueService',\n            App.services.InstitutionsUsersListInstitutionsService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.departmentOverview = function (\n        $scope,\n        $rootScope,\n        $controller,\n        constants,\n        InstitutionFactory,\n        TuProfileFactory,\n        TuProfileService,\n        TuProfileDepartmentsService,\n        InstitutionsService,\n        InstitutionSwitchService,\n        WatchService,\n        GridService,\n        $stateParams\n    ) {\n        $controller('TuProfileDepartmentsController', {$scope: $scope});\n        var controller = this,\n            departmentControllerAs = $scope.getTuProfileDepartmentController();\n        $scope.showDepartmentEditForm = false;\n        $scope.showDepartmentAddForm = false;\n        controller.searchInProgress = false;\n        controller.isDatagridReloading = false;\n        controller.institution = {};\n        controller.institutionsList = [];\n        controller.showInstitutionDeps = false;\n\n        controller.searchInstitution = function (searchPhrase) {\n            controller.searchInProgress = true;\n            InstitutionSwitchService.searchInstitutions(searchPhrase).then(function (results) {\n                controller.institutionsList = results;\n                controller.searchInProgress = false;\n            });\n        };\n\n        controller.isAddButtonDisabled = function () {\n            return !controller.isInstitutionSelected() || controller.isRightSidePanelActive();\n        };\n\n        $scope.isDeleteButtonDisabled = function () {\n            return $scope.deleteInProgress ||\n                !InstitutionFactory.getInstitutionIdDepartmentOverview() ||\n                !departmentControllerAs.hasDepartmentsToDelete();\n        };\n\n        controller.handleSearchInstitutionClick = function (institution) {\n            if (institution && institution.coreId) {\n                InstitutionFactory.setInstitutionIdDepartmentOverview(institution.coreId);\n                controller.coreId = institution.coreId;\n                departmentControllerAs.clearDepartmentsToDelete();\n            }\n        };\n\n        controller.isInstitutionSelected = function () {\n            if(controller.showInstitutionDeps) {\n                return true;\n            }\n            if ((InstitutionFactory.getInstitutionIdDepartmentOverview() === null) ||\n                (typeof InstitutionFactory.getInstitutionIdDepartmentOverview() === 'undefined')\n            ) {\n                return false;\n            }\n            return true;\n        };\n\n        controller.isRightSidePanelActive = function () {\n            // departments tab is active and edit or add form is active\n            if ($scope.showDepartmentEditForm || $scope.showDepartmentAddForm) {\n                return true;\n            }\n            return false;\n        };\n\n        controller.reloadDatagrid = function (coreId) {\n            if (!coreId) {\n                return false;\n            }\n            controller.isDatagridReloading = true;\n            return TuProfileDepartmentsService.getAllDepartmentsByCoreId(coreId).then(function(response) {\n                controller.isDatagridReloading = false;\n\n                $scope.gridOptions.data = response;\n\n                return response;\n            });\n        };\n\n        controller.hasNewDepartmentWatch = function (newDepartmentId) {\n            if (newDepartmentId) {\n                // reload datagrid\n                controller.reloadDatagrid(controller.coreId).then(function (departmentsList) {\n                    if (departmentsList) {\n                        var i = 0,\n                            department = null,\n                            total = departmentsList.length;\n                        for (i; i < total; i++) {\n                            department = departmentsList[i];\n                            if (department.id === newDepartmentId) {\n                                TuProfileFactory.setDepartmentBeforeChanges(department);\n                                break;\n                            }\n                        }\n                    }\n                    // mark new department as selected in the datagrid\n                    $scope.selectedDepartmentId = newDepartmentId;\n\n                }).finally(function () {\n                    // open new department in edit mode\n                    TuProfileFactory.setDepartmentEditFormVisibility(true);\n                });\n            }\n        };\n\n        controller.isDepartmentAddFormVisibleWatch = function (visible) {\n            $scope.showDepartmentAddForm = visible;\n            visible = visible || TuProfileFactory.isDepartmentEditFormVisible(TuProfileFactory.getProfileTabs().departments);\n            departmentControllerAs.toggleColumns(visible);\n        };\n\n        controller.isDepartmentEditFormVisible = function (visible) {\n            $scope.showDepartmentEditForm = visible;\n            if (!visible) {\n                $scope.selectedDepartmentId = null;\n            } else {\n                $scope.selectedDepartmentId = TuProfileFactory.getDepartmentId();\n            }\n            visible = visible || TuProfileFactory.isDepartmentAddFormVisible(TuProfileFactory.getProfileTabs().departments);\n            departmentControllerAs.toggleColumns(visible);\n        };\n\n        controller.getInstitutionIdDepartmentOverviewWatch = function (newValue, oldValue) {\n            if ($stateParams.coreId) {\n                newValue = $stateParams.coreId;\n            }\n            if (newValue !== oldValue && newValue) {\n                controller.destruct();\n                InstitutionsService.getInstitutionData(newValue).then(function (data) {\n                    var institutionData = data && data.results ? data.results[0] : null;\n                    InstitutionFactory.setDataDepartmentOverview(institutionData);\n                    InstitutionFactory.setInstitutionIdDepartmentOverview(newValue);\n                });\n                controller.initWatches(newValue);\n                departmentControllerAs.initDataGrid(newValue);\n            }\n        };\n\n        controller.initWatches = function (coreId) {\n            if (!coreId) {\n                return false;\n            }\n\n            // watch for new departments\n            WatchService.create($scope, TuProfileFactory.hasNewDepartment, controller.hasNewDepartmentWatch);\n            // watch for department add form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentAddFormVisible(TuProfileFactory.getProfileTabs().departments);\n            }, controller.isDepartmentAddFormVisibleWatch);\n            // watch for department edit form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentEditFormVisible(TuProfileFactory.getProfileTabs().departments);\n            }, controller.isDepartmentEditFormVisible);\n\n            $rootScope.$on(constants.events.logout, controller.destruct);\n\n            // Listen for changes in the visibility of the columns\n            /*WatchService.create($scope, 'gridOptions.columnDefs',function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    departmentControllerAs.columnsVisibility = GridService.getGridColumnsVisibility(newValue);\n                    GridService.storeColumnsVisibility(\n                        departmentControllerAs.gridVisibilityNameSpace,\n                        departmentControllerAs.columnsVisibility\n                    );\n                    // Clear filter when column is hidden\n                    if (angular.isDefined(newValue) &&\n                        angular.isDefined(oldValue)\n                    ) {\n                        for (var i = 0; i < newValue.length; i++) {\n                            if (newValue[i].visible === false &&\n                                oldValue[i].visible === true &&\n                                angular.isDefined($scope.gridOptions.columnDefs[i].filter)\n                            ) {\n                                $scope.gridOptions.columnDefs[i].filter.term = null;\n                            }\n                        }\n                    }\n                }\n            },true);*/\n        };\n\n        controller.destruct = function () {\n            TuProfileFactory.reset();\n            TuProfileFactory.setDepartmentAddFormVisibility(false);\n            TuProfileFactory.setDepartmentEditFormVisibility(false);\n        };\n\n        /*\n        show departments for institution\n         */\n        controller.showInstitutionDepartments = function (){\n            if ($stateParams.coreId &&\n                $stateParams.name &&\n                typeof($stateParams.coreId) !== \"undefined\"\n            ) {\n                controller.initWatches($stateParams.coreId);\n                controller.institution.selected = {\n                    name: $stateParams.name +  ' [' + $stateParams.coreId + ']',\n                    coreId: $stateParams.coreId\n                };\n                departmentControllerAs.initDataGrid($stateParams.coreId);\n                controller.showInstitutionDeps = true;\n                controller.coreId = $stateParams.coreId;\n            }\n        };\n        controller.init = function () {\n            controller.showInstitutionDepartments();\n            InstitutionFactory.resetDepartmentOverview();\n            controller.destruct();\n            controller.activeInstitutionCoreId = $stateParams.coreId;\n\n        };\n\n        controller.init();\n\n        WatchService.create(\n            $scope,\n            InstitutionFactory.getInstitutionIdDepartmentOverview,\n            controller.getInstitutionIdDepartmentOverviewWatch\n        );\n\n    };\n\n    angular\n        .module('qsHub')\n        .controller('DepartmentOverviewController', [\n            '$scope',\n            '$rootScope',\n            '$controller',\n            'constants',\n            'InstitutionFactory',\n            'TuProfileFactory',\n            'TuProfileService',\n            'TuProfileDepartmentsService',\n            'InstitutionsService',\n            'InstitutionSwitchService',\n            'WatchService',\n            'UiGridService',\n            '$stateParams',\n            App.controllers.departmentOverview\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.departmentOverviewForm = function (\n        $scope,\n        $controller,\n        TuProfileFactory,\n        InstitutionFactory,\n        TuProfileDepartmentsService,\n        WatchService,\n        $stateParams\n    ) {\n        var TuProfileDepartmentFormController = $controller('TuProfileDepartmentForm', {$scope: $scope});\n        var controller = this,\n            departmentFormControllerAs = $scope.getTuProfileDepartmentForm();\n        \n        controller.handleUpgradeClick = departmentFormControllerAs.handleUpgradeClick;\n        controller.isUpgradeDisabled = departmentFormControllerAs.isUpgradeDisabled;\n        controller.tuSupportEmail = departmentFormControllerAs.tuSupportEmail;\n        controller.isLoginRestricted = departmentFormControllerAs.isLoginRestricted;\n\n        $scope.toggleDepartmentEditForm = function () {\n            TuProfileFactory.setDepartmentEditFormVisibility();\n        };\n\n        /**\n         * Actiosn to do on cancel button click in add form\n         */\n        $scope.toggleDepartmentAddForm = function () {\n            TuProfileDepartmentFormController.resetAddForm();\n            TuProfileFactory.setDepartmentAddFormVisibility();\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, InstitutionFactory.getCampusData, function (newValue) {\n                if (newValue) {\n                    $scope.campusList = TuProfileDepartmentsService.formatCampusList(newValue);\n                }\n            }, true);\n\n            WatchService.create($scope, InstitutionFactory.getInstitutionIdDepartmentOverview, function (newValue, oldValue) {\n                if (newValue !== oldValue && newValue) {\n                    $scope.newDepartmentBeforeChanges.parentCoreId = newValue;\n                    $scope.newDepartment.parentCoreId = newValue;\n                }\n            });\n            \n            WatchService.create($scope, TuProfileFactory.getDepartment, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.department = newValue;\n                    $scope.isInvalidDepartmentNameUpdate = false;\n                    $scope.isInvalidBelongsToUpdate = false;\n                    $scope.isInvalidNewDepartmentName = false;\n                    $scope.isInvalidNewBelongsTo = false;\n                }\n            }, true);\n\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentAddFormVisible(TuProfileFactory.getProfileTabs().departments);\n            }, function () {\n                if ($stateParams.coreId && typeof($stateParams.coreId) !== \"undefined\") {\n                    $scope.newDepartmentBeforeChanges.parentCoreId = $stateParams.coreId;\n                    $scope.newDepartment.parentCoreId = $stateParams.coreId;\n                    $stateParams.coreId = null;\n                }\n                TuProfileDepartmentFormController.resetAddForm();\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n            $scope.newDepartment.parentCoreId = $stateParams.coreId;\n            departmentFormControllerAs.initialiseForm();\n            if ($scope.forms && $scope.forms.addDepartmentForm) {\n                $scope.forms.addDepartmentForm.$setUntouched();\n            }\n        };\n\n        controller.init();\n\n    };\n\n    angular\n        .module('qsHub')\n        .controller('DepartmentOverviewFormController', [\n            '$scope',\n            '$controller',\n            'TuProfileFactory',\n            'InstitutionFactory',\n            'TuProfileDepartmentsService',\n            'WatchService',\n            '$stateParams',\n            App.controllers.departmentOverviewForm\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.InstitutionsTuPrograms = function (\n        $scope,\n        $rootScope,\n        $controller,\n        constants,\n        TuProfileFactory,\n        TuProfileService,\n        InstitutionSwitchService,\n        InstitutionFactory,\n        WatchService,\n        GridService\n    ) {\n        $controller('TuProfileProgramsController', {$scope: $scope});\n        var controller = this,\n            programsControllerAs = $scope.getTuProfileProgramsController();\n        $scope.showProgramEditForm = false;\n        $scope.showProgramAddForm = false;\n        controller.searchInProgress = false;\n        controller.institutionsDropdownList = [];\n\n        controller.searchInstitution = function (searchPhrase) {\n            controller.searchInProgress = true;\n            InstitutionSwitchService.searchInstitutions(searchPhrase).then(function (results) {\n                controller.institutionsDropdownList = results;\n                controller.searchInProgress = false;\n            });\n        };\n\n        // load TU profile data\n        controller.loadTuProfileData = function (coreId) {\n            TuProfileService.getTuProfileData(coreId).then(function (data) {\n                $scope.profileDataLoaded = true;\n                $scope.tuProfile = data;\n                TuProfileFactory.setData(data);\n                TuProfileFactory.setProgramAddFormVisibility(false);\n                TuProfileFactory.setProgramEditFormVisibility(false);\n                $scope.tuProfileBeforeChanges = angular.copy(data);\n                $scope.$broadcast(constants.events.institutionTuProfileChanges);\n            });\n        };\n\n        $scope.handleSearchInstitutionClick = function (institution) {\n            if (institution && institution.coreId) {\n                InstitutionFactory.setInstitutionIdTuProgramsOverview(institution.coreId);\n                programsControllerAs.clearProgramsToDelete();\n            }\n        };\n\n        $scope.isInstitutionSelected = function () {\n            if ((InstitutionFactory.getInstitutionIdTuProgramsOverview() === null) ||\n                !angular.isDefined(InstitutionFactory.getInstitutionIdTuProgramsOverview())) {\n                return false;\n            }\n            return true;\n        };\n\n        // check if Right side pannel is active for add/edit programme\n        $scope.isRightSidePanelActive = function () {\n            if ($scope.showProgramEditForm || $scope.showProgramAddForm) {\n                return true;\n            }\n            return false;\n        };\n\n        controller.getInstitutionIdTuProgramsOverviewWatch = function (newValue, oldValue) {\n            if (newValue !== oldValue && newValue) {\n                controller.coreId = newValue;\n                controller.initWatches(newValue);\n                controller.loadTuProfileData(newValue);\n                programsControllerAs.initDataGrid(newValue);\n            }\n            else{\n                InstitutionFactory.setInstitutionIdTuProgramsOverview(null);\n            }\n        };\n\n        controller.hasNewProgramWatch = function (newProgramId) {\n            if (newProgramId) {\n                // reload datagrid\n                programsControllerAs.reloadDatagrid(controller.coreId).then(function (programsList) {\n                    if (programsList) {\n                        var i = 0,\n                            program = null,\n                            total = programsList.length;\n                        for (i; i < total; i++) {\n                            program = programsList[i];\n                            if (program.id === newProgramId) {\n                                TuProfileFactory.setProgramBeforeChanges(program);\n                                break;\n                            }\n                        }\n                    }\n                    // mark new program as selected in the datagrid\n                    $scope.selectedProgramId = newProgramId;\n\n                }).finally(function () {\n                    // open new program in edit mode\n                    TuProfileFactory.setProgramEditFormVisibility(true);\n                });\n            }\n        };\n\n        controller.isProgramAddFormVisibleWatch = function (visible) {\n            $scope.showProgramAddForm = visible;\n            visible = visible || TuProfileFactory.isProgramEditFormVisible(TuProfileFactory.getProfileTabs().programs);\n            programsControllerAs.toggleColumns(visible);\n        };\n\n        controller.isProgramEditFormVisibleWatch = function (visible) {\n            $scope.showProgramEditForm = visible;\n            if (!visible) {\n                $scope.selectedProgramId = null;\n            } else {\n                $scope.selectedProgramId = TuProfileFactory.getProgramId();\n            }\n            visible = visible || TuProfileFactory.isProgramAddFormVisible(TuProfileFactory.getProfileTabs().programs);\n            programsControllerAs.toggleColumns(visible);\n        };\n\n        controller.initWatches = function (coreId) {\n            if (!coreId) {\n                return false;\n            }\n            // watch for new programs\n            WatchService.create($scope, TuProfileFactory.hasNewProgram, controller.hasNewProgramWatch);\n\n            // watch for program add form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramAddFormVisible(TuProfileFactory.getProfileTabs().programs);\n            }, controller.isProgramAddFormVisibleWatch);\n\n            // watch for program edit form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramEditFormVisible(TuProfileFactory.getProfileTabs().programs);\n            }, controller.isProgramEditFormVisibleWatch);\n\n            // Listen for changes in the visibility of the columns\n            /*WatchService.create($scope, 'gridOptions.columnDefs',function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    programsControllerAs.columnsVisibility = GridService.getGridColumnsVisibility(newValue);\n                    GridService.storeColumnsVisibility(\n                        programsControllerAs.gridVisibilityNameSpace,\n                        programsControllerAs.columnsVisibility\n                    );\n                    // Clear filter when column is hidden\n                    if (angular.isDefined(newValue) &&\n                        angular.isDefined(oldValue)\n                    ) {\n                        for (var i = 0; i < newValue.length; i++) {\n                            if (newValue[i].visible === false &&\n                                oldValue[i].visible === true &&\n                                angular.isDefined($scope.gridOptions.columnDefs[i].filter)\n                            ) {\n                                $scope.gridOptions.columnDefs[i].filter.term = null;\n                            }\n                        }\n                    }\n                }\n            },true);*/\n\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        controller.destruct = function () {\n            TuProfileFactory.reset();\n            $scope.showProgramEditForm = false;\n            $scope.showProgramAddForm = false;\n        };\n\n       WatchService.create(\n            $scope,\n            InstitutionFactory.getInstitutionIdTuProgramsOverview,\n            controller.getInstitutionIdTuProgramsOverviewWatch\n        );\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsTuProgramsController', [\n            '$scope',\n            '$rootScope',\n            '$controller',\n            'constants',\n            'TuProfileFactory',\n            'TuProfileService',\n            'InstitutionSwitchService',\n            'InstitutionFactory',\n            'WatchService',\n            'UiGridService',\n            App.controllers.InstitutionsTuPrograms\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.InstitutionsTuProgramsForm = function (\n        $scope,\n        $controller,\n        InstitutionFactory,\n        TuProfileDepartmentsService,\n        InstitutionsService,\n        WatchService\n    ) {\n        $controller('TuProfileProgramForm', {$scope: $scope});\n        var controller = this,\n        programFormControllerAs = $scope.getTuProfileProgramFormController();\n        controller.initWatches = function () {\n            WatchService.create($scope, InstitutionFactory.getInstitutionIdTuProgramsOverview, function (newValue) {\n                if (newValue) {\n                    TuProfileDepartmentsService.getAllDepartments(\n                        newValue,\n                        {\n                            page: 1, // show first page\n                            count: 1000, // count per page\n                        }\n                    );\n                    $scope.newProgram.institutionCoreId = newValue;\n                    $scope.newProgramBeforeChanges.institutionCoreId = newValue;\n\n                    //get institution data\n                    InstitutionsService.getInstitutionData(newValue).then(function (data) {\n                        var institutionData = data && data.results ? data.results[0] : null;\n                        $scope.InstitutionNameTuPrograms = institutionData.name;\n                    });\n\n                    // check if institution is client department\n                    $scope.isClientDepartment = InstitutionFactory.isClientDepartment();\n                    if ($scope.isClientDepartment) {\n                        $scope.newProgram.departmentCoreId = newValue;\n                        $scope.departmentsList = [{\n                            coreId: newValue,\n                            name: $scope.InstitutionNameTuPrograms\n                        }];\n                        $scope.newProgramBeforeChanges = {\n                            institutionCoreId: newValue,\n                            departmentCoreId: newValue\n                        };\n                    }\n                }\n            });\n        };\n        controller.init = function () {\n            programFormControllerAs.init();\n            programFormControllerAs.initForm();\n            if ($scope.forms && $scope.forms.addProgramForm) {\n                $scope.forms.addProgramForm.$setUntouched();\n            }\n            controller.initWatches();\n            angular.extend(controller, programFormControllerAs);\n        };\n\n        controller.init();\n\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsTuProgramsFormController', [\n            '$scope',\n            '$controller',\n            'InstitutionFactory',\n            'TuProfileDepartmentsService',\n            'InstitutionsService',\n            'WatchService',\n            App.controllers.InstitutionsTuProgramsForm\n        ]);\n\n}(window.angular));\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.institutionsList = function (\n        $scope,\n        $resource,\n        $stateParams,\n        constants,\n        InstitutionsListService,\n        SharedProfileFactory,\n        NotifierFactory,\n        InstitutionFactory,\n        InstitutionsListFactory,\n        orderBy,\n        LoginService,\n        TuProfileDepartmentsService,\n        uiGridConstants,\n        $timeout,\n        WatchService,\n        ModalService,\n        TmProfileProgramsService,\n        InstitutionService,\n        GridService,\n        InstitutionsListSubscriptionsFactory,\n        TimeService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        controller.filters = {};\n        controller.urls = {\n            'tu': constants.drupal.tu.url + '/node/',\n            'tm': constants.drupal.tm.url + '/node/'\n        };\n        controller.newInstitution = false;\n        controller.isClient = false;\n        controller.isSimple = false;\n        controller.isAdvancedProgram = false;\n        controller.subscriptionDates = [];\n        controller.isDisplayDepartmentEnabled = false;\n        $scope.institution = {};\n        $scope.institutionBeforeChanges = {};\n        $scope.columnsBeforeHide = [];\n        $scope.forms = {};\n        $scope.filterActive = true;\n        $scope.isDatagridReloading = false;\n        $scope.isSelectReloading = false;\n        $scope.basicDetailsSubmitInProgress = false;\n        $scope.subscriptionProfilesSubmitInProgress = false;\n        $scope.subscriptionStatisticsSubmitInProgress = false;\n        $scope.drupalSubmitInProgress = false;\n        $scope.institutionGroupSubmitInProgress = false;\n        $scope.institutionsWithoutGroup = [];\n        $scope.isDatagridRendered = false;\n        $scope.isProgramDowngradeDisabled = true;\n        $scope.noChanges = true;\n        $scope.visible = {};\n        $scope.datePickerTu = {\n            date: {\n                startDate: null,\n                endDate: null\n            },\n            options: {\n                ranges: {\n                    '6 months from today': [TimeService.now(), TimeService.add(6, 'months')],\n                    '12 months from today': [TimeService.now(), TimeService.add(12, 'months')]\n                },\n                eventHandlers: {\n                    'apply.daterangepicker': function (ev) {\n                        $scope.handleDateRangePickerApplyClick(ev, 'tu');\n                    }\n                },\n                opens: 'center',\n                alwaysShowCalendars: true\n            }\n        };\n        /**\n         * Initialize vars for selected item and type\n         */\n        controller.setSelectedItem = function (typeId) {\n            $scope.selectedItem = {\n                selectedOptionType: {},\n                parentCoreId: null\n            };\n            if (typeId) {\n                angular.forEach(controller.typesList, function (item) {\n                    if (item.uniqueId === typeId) {\n                        $scope.selectedItem.selectedOptionType = item;\n                    }\n                });\n            }\n        };\n\n        $scope.datePickerTm = {\n            date: {\n                startDate: null,\n                endDate: null\n            },\n            options: {\n                ranges: {\n                    '6 months from today': [TimeService.now(), TimeService.add(6, 'months')],\n                    '12 months from today': [TimeService.now(), TimeService.add(12, 'months')]\n                },\n                eventHandlers: {\n                    'apply.daterangepicker': function (ev) {\n                        $scope.handleDateRangePickerApplyClick(ev, 'tm');\n                    }\n                },\n                opens: 'center',\n                alwaysShowCalendars: true\n            }\n        };\n        $scope.activeTab = 0;\n\n        $scope.disabledInstitutionListTabs = {\n            'basicDetails': false,\n            'subscriptions': false,\n            'campuses': false,\n            'institutionGroups': false,\n            'drupal': false\n        };\n\n        $scope.handleDateRangePickerApplyClick = function (element, type) {\n            if (!element.model.startDate) {\n                element.model.startDate = TimeService.now();\n            }\n            if (!element.model.endDate) {\n                element.model.endDate = TimeService.now();\n            }\n\n            $scope.institution.subscriptions[type].startDate = TimeService.getInUnix(element.model.startDate);\n            $scope.institution.subscriptions[type].endDate = TimeService.getInUnix(element.model.endDate);\n        };\n\n        controller.similarNames = {\n            'display': false,\n            'loading': false,\n            'results': []\n        };\n\n        controller.showDepartments = {\n            'display': false,\n            'loading': false,\n            'results': []\n        };\n\n        SharedProfileFactory.setInstitutionListShowCampusInfoBlock(false);\n\n        $scope.disabledSubmit = function () {\n            return (\n                $scope.subscriptionProfilesSubmitInProgress ||\n                (\n                    $scope.institution.subscriptions &&\n                    $scope.institution.subscriptions.tm &&\n                    $scope.institution.subscriptions.tm.subscribed &&\n                    $scope.institution.subscriptions.tm.advanced &&\n                    (!$scope.institution.subscriptions.tm.startDate ||\n                        !$scope.institution.subscriptions.tm.endDate)\n                ) ||\n                (\n                    $scope.institution.subscriptions &&\n                    $scope.institution.subscriptions.tu &&\n                    $scope.institution.subscriptions.tu.subscribed &&\n                    $scope.institution.subscriptions.tu.advanced &&\n                    (!$scope.institution.subscriptions.tu.startDate ||\n                        !$scope.institution.subscriptions.tu.endDate)\n                )\n            );\n        };\n\n        controller.reloadDatagrid = function () {\n            controller.getPage();\n        };\n\n        controller.populateSubscriptionsDateDatepickers = function () {\n            if ($scope.institution && $scope.institution.subscriptions) {\n                if (\n                    $scope.institution.subscriptions.tu &&\n                    $scope.institution.subscriptions.tu.startDate &&\n                    $scope.institution.subscriptions.tu.endDate\n                ) {\n                    $scope.datePickerTu.date.startDate = InstitutionsListService.formatSubscriptionDate(\n                        $scope.institution.subscriptions.tu.startDate\n                    );\n                    $scope.datePickerTu.date.endDate = InstitutionsListService.formatSubscriptionDate(\n                        $scope.institution.subscriptions.tu.endDate\n                    );\n                }\n                if (\n                    $scope.institution.subscriptions.tm &&\n                    $scope.institution.subscriptions.tm.startDate &&\n                    $scope.institution.subscriptions.tm.endDate\n                ) {\n                    $scope.datePickerTm.date.startDate = InstitutionsListService.formatSubscriptionDate(\n                        $scope.institution.subscriptions.tm.startDate\n                    );\n                    $scope.datePickerTm.date.endDate = InstitutionsListService.formatSubscriptionDate(\n                        $scope.institution.subscriptions.tm.endDate\n                    );\n                }\n            }\n        };\n\n        controller.toggleColumns = function (hide, forceClose) {\n            if (angular.isUndefined(forceClose)) {\n                forceClose = false;\n            }\n            if (!$scope.gridOptions) {\n                return;\n            }\n            if (hide && !forceClose) {\n                // hide all columns except name\n                angular.forEach($scope.gridOptions.columnDefs, function (column) {\n                    $scope.visible[column.field] = column.visible;\n                    column.visible = column.field === 'name';\n                });\n            } else {\n                var columns = [];\n                // show columns visible before hide\n                angular.forEach($scope.columnsBeforeHide, function (column) {\n                    column.visible = true;\n                    columns.push(column.field);\n                });\n                angular.forEach($scope.gridOptions.columnDefs, function (column) {\n                    if (columns.indexOf(column.field) !== -1) {\n                        column.visible = true;\n                    }\n                });\n                $scope.columnsBeforeHide = [];\n                $scope.comesFromProfile = false;\n            }\n        };\n\n        controller.getTuWarningMessage = function () {\n            // if UG & PG front-end profile were enabled but now disabled\n            if ($scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tu &&\n                $scope.institution.subscriptions.tu.subscribed &&\n                $scope.institution.enabled &&\n                !$scope.institution.enabled.ug &&\n                !$scope.institution.enabled.pg &&\n                $scope.institutionBeforeChanges.enabled &&\n                $scope.institutionBeforeChanges.enabled.ug &&\n                $scope.institutionBeforeChanges.enabled.pg\n            ) {\n                return 'Institution will be unpublished from topuniversities.com. Press update to continue.';\n            }\n            // If UG front-end profile was enabled but now disabled\n            if ($scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tu &&\n                $scope.institution.subscriptions.tu.subscribed &&\n                $scope.institution.enabled &&\n                !$scope.institution.enabled.ug &&\n                $scope.institutionBeforeChanges.enabled &&\n                $scope.institutionBeforeChanges.enabled.ug\n            ) {\n                return 'Undergraduate profile will be unpublished on topuniversities.com. You can access profile in Qs Hub, however will not be able to publish. Press update to continue';\n            }\n            // if PG front-end profile was enabled but now disabled\n            if ($scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tu &&\n                $scope.institution.subscriptions.tu.subscribed &&\n                $scope.institution.enabled &&\n                !$scope.institution.enabled.pg &&\n                $scope.institutionBeforeChanges.enabled &&\n                $scope.institutionBeforeChanges.enabled.pg\n            ) {\n                return 'Postgraduate profile will be unpublished on topuniversities.com. You can access profile in Qs Hub, however will not be able to publish. Press update to continue';\n            }\n            // if TU hub profile was enabled but now disabled\n            if ($scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tu &&\n                !$scope.institution.subscriptions.tu.subscribed &&\n                $scope.institutionBeforeChanges.subscriptions &&\n                $scope.institutionBeforeChanges.subscriptions.tu &&\n                $scope.institutionBeforeChanges.subscriptions.tu.subscribed\n            ) {\n                return 'Disabling in QS Hub will also disable profile in topuniversities.com. If you wish to continue please press update.';\n            }\n            return false;\n        };\n\n        controller.hasTuWarning = function () {\n            return !!controller.getTuWarningMessage();\n        };\n\n        controller.getTmWarningMessage = function () {\n            // if MBA front-end profile were enabled but now disabled\n            if ($scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tm &&\n                $scope.institution.subscriptions.tm.subscribed &&\n                $scope.institution.enabled &&\n                !$scope.institution.enabled.tm &&\n                $scope.institutionBeforeChanges.enabled &&\n                $scope.institutionBeforeChanges.enabled.tm\n            ) {\n                return 'Mba profile will be unpublished on topmba.com. You can access profile in Qs Hub, however will not be able to publish. Press update to continue.';\n            }\n            // if TM hub profile was enabled but now disabled\n            if ($scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tm &&\n                !$scope.institution.subscriptions.tm.subscribed &&\n                $scope.institutionBeforeChanges.subscriptions &&\n                $scope.institutionBeforeChanges.subscriptions.tm &&\n                $scope.institutionBeforeChanges.subscriptions.tm.subscribed\n            ) {\n                return 'Disabling in QS Hub will also disable profile in topmba.com. If you wish to continue please press update.';\n            }\n            return false;\n        };\n\n        controller.hasTmWarning = function () {\n            return !!controller.getTmWarningMessage();\n        };\n\n        controller.isTuSubscriptionDatesInvalid = function () {\n            return $scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tu &&\n                $scope.institution.subscriptions.tu.subscribed &&\n                $scope.institution.subscriptions.tu.advanced && (\n                    !$scope.institution.subscriptions.tu.startDate ||\n                    $scope.institution.subscriptions.tu.startDate === '' ||\n                    !$scope.institution.subscriptions.tu.endDate ||\n                    $scope.institution.subscriptions.tu.endDate === '');\n        };\n\n        controller.isTmSubscriptionDatesInvalid = function () {\n            return $scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tm &&\n                $scope.institution.subscriptions.tm.subscribed &&\n                $scope.institution.subscriptions.tm.advanced && (\n                    !$scope.institution.subscriptions.tm.startDate ||\n                    $scope.institution.subscriptions.tm.startDate === '' ||\n                    !$scope.institution.subscriptions.tm.endDate ||\n                    $scope.institution.subscriptions.tm.endDate === '');\n        };\n\n        /**\n         * Actions to do when dataGrid row is clicked.\n         *\n         * @param {object} institution\n         * @param {boolean|null} forceClose\n         */\n        $scope.handleDatagridRowClick = function (institution, forceClose) {\n            controller.resetBasicDetailsForm();\n            controller.resetDrupalForm();\n            controller.isClient = InstitutionsListService.isClientDepartment(institution.typeId);\n            controller.isSimple = InstitutionsListService.isSimpleDepartment(institution.typeId);\n            if (angular.isUndefined(forceClose)) {\n                forceClose = false;\n            }\n            $scope.institutionBeforeChanges = institution;\n            $scope.noChanges = true;\n            $scope.selectedInstitutionId = $scope.selectedInstitutionId === institution.id ? null : institution.id;\n            if (institution.groupMembers) {\n                // filter out current institution\n                institution.groupMembers = InstitutionsListService.excludeGroupMember(\n                    institution.coreId,\n                    institution.groupMembers\n                );\n                $scope.institutionsWithoutGroup = institution.groupMembers;\n                $scope.institutionBeforeChanges.groupMembers = angular.copy(institution.groupMembers);\n            }\n            $scope.institution = angular.copy(institution);\n            // on load, order by order value that comes from database\n            $scope.institution.campus = orderBy($scope.institution.campus, 'order', false);\n            $scope.showInfoBlock = forceClose ? false : $scope.selectedInstitutionId === institution.id;\n            $scope.gridOptions.enableGridMenu = !$scope.showInfoBlock;\n            $scope.gridOptions.enableColumnResizing = $scope.selectedInstitutionId === null;\n            $scope.gridOptions.enablePaginationControls = $scope.selectedInstitutionId === null;\n\n            SharedProfileFactory.setInstitutionListShowCampusInfoBlock(false);\n            if ($scope.selectedInstitutionId) {\n                controller.setSelectedItem(institution.typeId);\n                controller.allowedInstitutionTypes(true);\n                $scope.disabledInstitutionListTabs.subscriptions = false;\n                $scope.disabledInstitutionListTabs.campuses = false;\n                $scope.disabledInstitutionListTabs.institutionGroups = false;\n                $scope.disabledInstitutionListTabs.drupal = false;\n            } else {\n                controller.allowedInstitutionTypes();\n                $scope.disabledInstitutionListTabs.subscriptions = true;\n                $scope.disabledInstitutionListTabs.campuses = true;\n                $scope.disabledInstitutionListTabs.institutionGroups = true;\n                $scope.disabledInstitutionListTabs.drupal = true;\n            }\n            $scope.filterActive = true;\n            if ($scope.selectedInstitutionId === institution.id && !forceClose) {\n                angular.forEach($scope.gridOptions.columnDefs, function (column) {\n                    if (angular.isDefined(column.visible) && column.visible === true) {\n                        $scope.columnsBeforeHide.push(column);\n                    }\n                });\n                $scope.filterActive = false;\n                controller.populateSubscriptionsDateDatepickers();\n\n                $scope.array = [];\n\n                $scope.institutionsWithoutGroup = [];\n\n            }\n\n            controller.isAdvancedProgram = InstitutionsListService.isAdvancedProgram(institution.typeId);\n            if (controller.isAdvancedProgram) {\n                controller.isProgramDowngradeEnabled();\n            }\n            //enable Display department button conditionally\n            if (controller.isAdvancedProgram || controller.isTopLevelInstitution(institution.typeId)) {\n                TuProfileDepartmentsService.getAllDepartmentsByCoreId(institution.coreId).then(function (response) {\n                    controller.isDisplayDepartmentEnabled = Object.keys(response).length ? true : false;\n                });\n            }\n            controller.toggleColumns(institution.id !== 'undefined' && $scope.selectedInstitutionId === institution.id, forceClose);\n        };\n\n        controller.allowProgramDowngrade = function () {\n            return !controller.programDowngradeInProgress &&\n                $scope.institution && $scope.institution.active &&\n                controller.isAdvancedProgram;\n        };\n\n        controller.handleProgramDowngradeClick = function (e) {\n            if ($scope.isProgramDowngradeDisabled) {\n                e.preventDefault();\n                return false;\n            }\n            var modalOptions = {\n                closeButtonText: 'Cancel',\n                actionButtonText: 'Yes',\n                actionButtonClass: 'danger',\n                headerText: 'Program Downgrade',\n                bodyText: 'Are you sure you want to downgrade this program?'\n            };\n            ModalService.show({}, modalOptions).then(function () {\n                controller.programDowngradeInProgress = true;\n                // make downgrade request\n                TmProfileProgramsService.downgrade($scope.institution.coreId).then(controller.programDowngradeCallback);\n            });\n        };\n\n        /**\n         * Actions to do when downgrade request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.programDowngradeCallback = function (success) {\n            if (success) {\n                // Fake \"click\" to close info panel\n                $scope.handleDatagridRowClick($scope.institution);\n                // reload datagrid\n                controller.reloadDatagrid();\n            }\n            controller.programDowngradeInProgress = false;\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Downgrade successfully!' : 'Downgrade failed!',\n                'Downgrade to Simple'\n            );\n        };\n\n        /**\n         * Set flag for downgrade program profile button\n         */\n        controller.isProgramDowngradeEnabled = function () {\n            $scope.isProgramDowngradeDisabled = ($scope.institution.subscriptions.tm.subscribed &&\n                $scope.institution.subscriptions.tm.advanced &&\n                $scope.institution.subscriptions.tm.startDate !== null &&\n                $scope.institution.subscriptions.tm.endDate !== null &&\n                $scope.institution.subscriptions.tm.startDate < TimeService.nowUnix() &&\n                $scope.institution.subscriptions.tm.endDate > TimeService.nowUnix()) ||\n                controller.isFutureTmSubscription();\n        };\n\n        /**\n         * Check if Tm subscription is in the future\n         *\n         * @returns {Boolean}\n         */\n        controller.isFutureTmSubscription = function () {\n            return $scope.institution.subscriptions.tm.subscribed &&\n                $scope.institution.subscriptions.tm.startDate !== null &&\n                $scope.institution.subscriptions.tm.startDate > TimeService.nowUnix();\n        };\n\n        /**\n         * Gets tooltip text for downgrade program profile button\n         *\n         * @returns {String}\n         */\n        controller.downgradeProgramTooltipText = function () {\n            var text = controller.isFutureTmSubscription() ? 'future' : 'current';\n\n            return 'Disabled due to tm ' + text + ' subscription';\n        };\n\n\n        /**\n         * Reset user form.\n         */\n        $scope.handleResetClick = function () {\n            $scope.institution = angular.copy($scope.institutionBeforeChanges);\n            $scope.noChanges = true;\n        };\n\n        /**\n         * Allowed to login as institution?\n         *\n         * @returns {boolean}\n         */\n        $scope.allowLoginAs = function () {\n            return LoginService.allowLoginAs($scope.institution);\n        };\n\n        /**\n         * Actions to do when login as button clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleLoginAsClick = function () {\n            LoginService.getTuProfilesRedirect({ coreId: $scope.institution.coreId });\n        };\n\n        /**\n         * Actions to do when deactivation is triggered.\n         *\n         * @param {Object} institution\n         * @returns {boolean}\n         */\n        $scope.handleDeactivateClick = function (institution) {\n            if (!institution || !institution.id || $scope.deactivateInProgress) {\n                return false;\n            }\n            $scope.deactivateInProgress = true;\n            InstitutionsListService.deactivate(institution.id).then(controller.deactivationCallback);\n        };\n\n        $scope.handleActivateClick = function (institution) {\n            if (!institution.id || $scope.activateInProgress) {\n                return false;\n            }\n            $scope.activateInProgress = true;\n            InstitutionsListService.activate(institution.id).then(controller.activationCallback);\n        };\n\n        controller.deactivationCallback = function (success) {\n            $scope.institution.active = success ? false : true;\n            if (success) {\n                $scope.institutionBeforeChanges.active = $scope.institution.active;\n                controller.reloadDatagrid();\n            }\n            $scope.deactivateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Deactivated successfully!' : 'Deactivation failed!',\n                'Deactivation'\n            );\n        };\n\n        controller.activationCallback = function (success) {\n            $scope.institution.active = success ? true : false;\n            if (success) {\n                $scope.institutionBeforeChanges.active = $scope.institution.active;\n                controller.reloadDatagrid();\n            }\n            $scope.activateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Activated successfully!' : 'Activation failed!',\n                'Activation'\n            );\n        };\n\n        controller.basicDetailsSubmitCallback = function (response) {\n            var message = 'Basic Details';\n            var success = false;\n            if (response) {\n                success = !response.error;\n                if (!success) {\n                    if (response.hasOwnProperty('message') && response.message.length > 0) {\n                        message = response.message;\n                    }\n                } else {\n                    if (response.hasOwnProperty('insertedId') && response.insertedId.length > 0) {\n                        $scope.institution.id = response.insertedId;\n                        $scope.institution.coreId = response.insertedCoreId;\n                        $scope.institution.coreIdAsString = response.insertedCoreId.toString();\n                        $scope.institution.tuAdvanced = false;\n                        $scope.institution.tmAdvanced = false;\n                        $scope.institution.active = true;\n                        $scope.institution.subscriptions = { all: { subscribed: true } };\n                        $scope.activeTab = 1;\n                        $scope.disabledInstitutionListTabs.subscriptions = false;\n                        $scope.disabledInstitutionListTabs.campuses = false;\n                        $scope.disabledInstitutionListTabs.institutionGroups = false;\n                        $scope.disabledInstitutionListTabs.drupal = false;\n                        controller.newInstitution = true;\n                        $scope.noChanges = true;\n                        $scope.selectedInstitutionId = $scope.institution.id;\n                        message = 'Institution added successfully!';\n                    }\n                    // update original institution object with changes\n                    $scope.institutionBeforeChanges = angular.copy($scope.institution);\n                    controller.reloadDatagrid();\n                    controller.isClient = InstitutionsListService.isClientDepartment($scope.institution.typeId);\n                }\n            }\n            $scope.basicDetailsSubmitInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Saved successfully!' : 'Saving failed!',\n                message\n            );\n        };\n\n        /**\n         * Store basic details data.\n         */\n        $scope.handleBasicDetailsSubmit = function () {\n            controller.resetBasicDetailsForm();\n            if ($scope.basicDetailsSubmitInProgress ||\n                !$scope.forms.basicDetailsForm ||\n                !$scope.forms.basicDetailsForm.$valid\n            ) {\n                if (!$scope.forms.basicDetailsForm.name.$valid) {\n                    controller.isInvalidNewSchoolName = true;\n                }\n                if (!$scope.forms.basicDetailsForm.typeId.$valid) {\n                    controller.isInvalidType = true;\n                }\n                if (!$scope.forms.basicDetailsForm.countryCode.$valid) {\n                    controller.isInvalidCountry = true;\n                }\n                if (!controller.isInvalidType && !$scope.forms.basicDetailsForm.belongsTo.$valid) {\n                    controller.isInvalidBelongsTo = true;\n                }\n                if (!controller.isInvalidType && typeof $scope.institution.parentName === \"undefined\") {\n                    controller.isInvalidParentInstitution = true;\n                }\n            }\n            if (controller.isInvalidType ||\n                controller.isInvalidNewSchoolName ||\n                controller.isInvalidCountry ||\n                controller.isInvalidBelongsTo ||\n                controller.isInvalidParentInstitution\n            ) {\n                return false;\n            }\n\n            $scope.basicDetailsSubmitInProgress = true;\n            if ($scope.institution.id) {\n                InstitutionsListService.saveBasicDetails($scope.institution).then(\n                    controller.basicDetailsSubmitCallback\n                );\n            } else {\n                InstitutionsListService.insertBasicDetails($scope.institution).then(\n                    controller.basicDetailsSubmitCallback\n                );\n            }\n        };\n\n        controller.resetBasicDetailsForm = function () {\n            controller.isInvalidNewSchoolName = false;\n            controller.isInvalidType = false;\n            controller.isInvalidCountry = false;\n            controller.isInvalidBelongsTo = false;\n            controller.isInvalidParentInstitution = false;\n        };\n\n        /**\n         * Validate Name field on Basic Details tab\n         * @param {boolean} flag\n         * @return {boolean}\n         */\n        controller.setIsInvalidNewSchoolName = function (flag) {\n            controller.isInvalidNewSchoolName = flag;\n        };\n\n        /**\n         * Validate field Belongs dropdown on Basic Details tab\n         * @param {boolean} value\n         * @return {boolean}\n         */\n        controller.setIsInvalidBelongsTo = function (value) {\n            controller.isInvalidBelongsTo = value;\n        };\n\n\n        /**\n         * Validate Parent Institution dropdown on Basic Details tab\n         * @param {boolean} flag\n         * @return {boolean}\n         */\n        controller.setIsInvalidParentInstitution = function (value) {\n            controller.isInvalidParentInstitution = value;\n        };\n\n        /**\n         * Store drupal related data.\n         */\n        $scope.handleDrupalSubmit = function () {\n            controller.resetDrupalForm();\n            if ($scope.drupalSubmitInProgress ||\n                !$scope.forms.drupalForm ||\n                !$scope.forms.drupalForm.$valid\n            ) {\n                if ($scope.forms.drupalForm.tuRegion && !$scope.forms.drupalForm.tuRegion.$valid) {\n                    controller.isInvalidTuRegion = true;\n                }\n                if ($scope.forms.drupalForm.tmRegion && !$scope.forms.drupalForm.tmRegion.$valid) {\n                    controller.isInvalidTmRegion = true;\n                }\n            }\n            if (controller.isInvalidTuRegion || controller.isInvalidTmRegion) {\n                return false;\n            }\n            //$scope.drupalSubmitInProgress = true;\n            InstitutionsListService.saveDrupal($scope.institution).then(function (success) {\n                $scope.drupalSubmitInProgress = false;\n                $scope.institutionBeforeChanges = angular.copy($scope.institution);\n                controller.reloadDatagrid();\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Drupal'\n                );\n            });\n        };\n\n        /**\n         * Reset Drupal from feilds\n         * @return {[type]} [description]\n         */\n        controller.resetDrupalForm = function () {\n            controller.isInvalidTuRegion = false;\n            controller.isInvalidTmRegion = false;\n        };\n\n        /**\n         * Validate tuRegion dropdown on Drupal tab\n         * @param {boolean} value\n         * @return {boolean}\n         */\n        controller.setIsInvalidTuRegion = function (value) {\n            controller.isInvalidTuRegion = value;\n        };\n\n        /**\n         * Validate tmRegion dropdown on Drupal tab\n         * @param {boolean} value\n         * @return {boolean}\n         */\n        controller.setIsInvalidTmRegion = function (value) {\n            controller.isInvalidTmRegion = value;\n        };\n\n        $scope.disallowGroupsSubmit = function () {\n            // submit process is on going\n            if ($scope.institutionGroupSubmitInProgress) {\n                return true;\n            }\n            // current group members list is not empty & assigned members already in the list\n            if (\n                $scope.institutionBeforeChanges.groupMembers &&\n                $scope.institution.groupMembers\n            ) {\n                return angular.equals($scope.institutionBeforeChanges.groupMembers, $scope.institution.groupMembers);\n            }\n            // current group members list is empty & no members assigned\n            if (\n                (\n                    !$scope.institutionBeforeChanges.groupMembers ||\n                    !$scope.institutionBeforeChanges.groupMembers.length\n                ) &&\n                (\n                    !$scope.institution.groupMembers ||\n                    !$scope.institution.groupMembers.length\n                )\n            ) {\n                return true;\n            }\n            return false;\n        };\n\n        /**\n         * Store basic Group Institutions.\n         */\n        $scope.handleInstitutionGroupSubmit = function () {\n            if (\n                $scope.institutionGroupSubmitInProgress ||\n                !$scope.forms.basicDetailsForm ||\n                !$scope.forms.basicDetailsForm.$valid\n            ) {\n                return false;\n            }\n            $scope.institutionGroupSubmitInProgress = true;\n            InstitutionsListService.saveInstitutionGroup($scope.institution).then(function (success) {\n                $scope.institutionGroupSubmitInProgress = false;\n                if (success) {\n                    $scope.institutionBeforeChanges.groupMembers = angular.copy($scope.institution.groupMembers);\n                    // refresh table, it needs to update the new members as well\n                    controller.reloadDatagrid();\n                }\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Group Institutions'\n                );\n            });\n        };\n\n        $scope.searchInstitutionsWithoutGroup = function (searchPhrase) {\n            $scope.isSelectReloading = true;\n            InstitutionsListService.searchInstitutionsWithoutGroup(\n                $scope.institution.coreId, searchPhrase\n            ).then(function (results) {\n                $scope.isSelectReloading = false;\n                $scope.institutionsWithoutGroup = results;\n            });\n        };\n\n        /**\n         * Store Subscriptions data.\n         */\n        $scope.handleSubscriptionSubmit = function () {\n            if (\n                $scope.subscriptionProfilesSubmitInProgress ||\n                !$scope.forms.subscriptionForm ||\n                !$scope.forms.subscriptionForm.$valid\n            ) {\n                return false;\n            }\n\n            $scope.subscriptionProfilesSubmitInProgress = true;\n            InstitutionsListService.saveSubscription($scope.institution).then(function (success) {\n                $scope.subscriptionProfilesSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Subscriptions'\n                );\n                $scope.institution.subscriptionsAsArray = [];\n                $scope.institution.subscriptionsAsString = '';\n                InstitutionsListService.getAllSubscriptions($scope.institution.coreId).then(function (res) {\n                    controller.subscriptionDates = res;\n                    var max = -Infinity,\n                        key;\n                    controller.subscriptionDates.forEach(function (v, k) {\n                        if (max < +v) {\n                            max = +v;\n                            key = k;\n                        }\n                    });\n                    InstitutionsListFactory.setInvalidDates(controller.subscriptionDates[key]);\n                });\n\n                if (success) {\n                    // check if subscription data is in the past or in the future\n                    if ($scope.institution.subscriptions) {\n                        angular.forEach($scope.institution.subscriptions, function (subscription) {\n                            if (subscription.subscribed &&\n                                subscription.advanced &&\n                                subscription.endDate < TimeService.nowUnix()\n                            ) {\n                                subscription.advanced = false;\n                            }\n                            if (subscription.subscribed &&\n                                subscription.advanced &&\n                                subscription.startDate > TimeService.nowUnix()\n                            ) {\n                                subscription.advanced = false;\n                            }\n                        });\n                    }\n                    InstitutionsListService.appendSubscriptionsData([$scope.institution]);\n                    // check if current active institution is same as edited one\n                    var currentCoreId = $scope.institution.coreId;\n                    if (currentCoreId) {\n                        var activeCoreId = InstitutionFactory.getCoreId();\n                        if (activeCoreId && currentCoreId === activeCoreId) {\n                            InstitutionFactory.setSubscriptions(angular.copy($scope.institution.subscriptions));\n                        }\n                    }\n                    if (controller.isAdvancedProgram) {\n                        controller.isProgramDowngradeEnabled();\n                    }\n                    // re-set institution edit instance\n                    $scope.institutionBeforeChanges = angular.copy($scope.institution);\n                    controller.reloadDatagrid();\n\n                    InstitutionsListSubscriptionsFactory.setHasSubscriptionsChanges(true);\n                }\n            });\n        };\n\n        $scope.updateCountryName = function () {\n            controller.isInvalidCountry = false;\n            InstitutionsListService.getCountryNameByCode($scope.institution.countryCode).then(function (countryName) {\n                $scope.institution.countryName = countryName;\n            });\n        };\n\n        controller.defaultPaginationOptions = {\n            page: 1,\n            limit: 25\n        };\n        controller.paginationOptions = GridService.getColumnsFilters(\n            constants.gridNameSpaces.institutionsGridFilters,\n            []\n        );\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            constants.gridNameSpaces.institutionsGridVisibility\n        );\n\n        controller.getPage = function () {\n            return InstitutionsListService.getAll(\n                angular.merge({}, controller.paginationOptions, controller.defaultPaginationOptions)\n            ).then(function (response) {\n                if (response && response.length === 0) {\n                    return false;\n                }\n                if (!$scope.gridOptions) {\n                    $scope.gridOptions = {};\n                }\n                // if new institution added, check if we shall add it in result set\n                if (controller.newInstitution) {\n                    var found = false;\n                    // search for institution in display results\n                    angular.forEach(response.results, function (institution) {\n                        if (angular.equals(institution.id, $scope.institution.id)) {\n                            found = true;\n                        }\n                    });\n                    // item was not found, add it into the result set\n                    if (!found) {\n                        // add new institution to top of the result set\n                        response.results.unshift($scope.institution);\n                        // if there are more results than a page can display, remove extra elements\n                        while (response.results.length > $scope.gridOptions.paginationPageSize) {\n                            response.results.pop();\n                        }\n                        // update total items\n                        response.totalMatching = response.results.length;\n                    }\n                    controller.newInstitution = false;\n                }\n                $scope.gridOptions.totalItems = response.totalMatching;\n                $scope.gridOptions.data = response.results;\n                $scope.gridOptions.minRowsToShow = response.totalFiltered.length < 25 ? response.totalFiltered : 25;\n            });\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(constants.gridNameSpaces.institutionsGridVisibility),\n                reload = false,\n                field = '';\n            if (columnsVisibility && !$scope.comesFromProfile && $scope.filterActive) {\n                angular.forEach($scope.gridOptions.columnDefs, function (column, key) {\n                    field = controller.convertVisibleColumnsField(column.field);\n                    if (columnsVisibility[field] === true &&\n                        column.visible === false\n                    ) {\n                        $scope.gridOptions.columnDefs[key].filter.term = null;\n                        controller.paginationOptions['filter[' + field + ']'] = null;\n                        reload = true;\n                    }\n                });\n            }\n            if (!$scope.comesFromProfile && $scope.filterActive) {\n                controller.saveStateVisibility();\n            }\n            if (reload) {\n                controller.getPage();\n            }\n        };\n\n        controller.handleGridFiltersChanges = function () {\n            if ($scope.gridApi !== null) {\n                var sortKeys = [];\n                angular.forEach($scope.gridApi.grid.columns, function (column) {\n                    if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                        if (\n                            column.filters[0].type === uiGridConstants.filter.SELECT &&\n                            typeof column.filters[0].term === 'object' &&\n                            column.filters[0].term !== null &&\n                            typeof column.filters[0].term.value !== 'undefined'\n                        ) {\n                            column.filters[0].term = column.filters[0].term.value;\n                        }\n                    }\n                    if (typeof column.sort.priority !== 'undefined') {\n                        sortKeys[column.sort.priority] = column.name;\n                    }\n                });\n                if (sortKeys.length > 1) {\n                    var latestSortKey = sortKeys.pop();\n                    angular.forEach($scope.gridApi.grid.columns, function (column) {\n                        if (typeof column.sort.priority !== 'undefined' && column.name !== latestSortKey) {\n                            column.sort = {};\n                        }\n                    });\n                }\n\n                controller.paginationOptions = angular.copy(controller.defaultPaginationOptions);\n                var filterColumn, sortColumn;\n                angular.forEach($scope.gridApi.grid.columns, function (column) {\n                    if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                        filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                    }\n                    if (typeof column.sort.direction !== 'undefined') {\n                        sortColumn = column.sort.column ? column.sort.column : column.field;\n                        controller.paginationOptions['sorting[' + sortColumn + ']'] = column.sort.direction;\n                    }\n                });\n                if (!$scope.comesFromProfile) {\n                    GridService.storeColumnsFilters(\n                        constants.gridNameSpaces.institutionsGridFilters,\n                        controller.paginationOptions\n                    );\n                }\n\n                if (angular.isDefined($scope.filterTimeout)) {\n                    $timeout.cancel($scope.filterTimeout);\n                }\n                $scope.filterTimeout = $timeout(function () {\n                    controller.getPage();\n                }, 500);\n            }\n        };\n\n        /**\n         * Allowed to view TU site\n         *\n         * @returns {boolean}\n         */\n        controller.allowViewTuSite = function () {\n            return $scope.institutionBeforeChanges &&\n                $scope.institutionBeforeChanges.subscriptions &&\n                $scope.institutionBeforeChanges.subscriptions.tu &&\n                $scope.institutionBeforeChanges.subscriptions.tu.subscribed;\n        };\n\n        /**\n         * Allowed to view TM site\n         *\n         * @returns {boolean}\n         */\n        controller.allowViewTmSite = function () {\n            return $scope.institutionBeforeChanges &&\n                $scope.institutionBeforeChanges.subscriptions &&\n                $scope.institutionBeforeChanges.subscriptions.tm &&\n                $scope.institutionBeforeChanges.subscriptions.tm.subscribed;\n        };\n\n        /**\n         * View TU Site enabled?\n         *\n         * @returns {boolean}\n         */\n        controller.isViewTuSiteEnabled = function () {\n            return angular.isDefined($scope.institutionBeforeChanges) &&\n                $scope.institutionBeforeChanges &&\n                $scope.institutionBeforeChanges.enabled &&\n                (\n                    $scope.institutionBeforeChanges.enabled.ug ||\n                    $scope.institutionBeforeChanges.enabled.pg\n                ) &&\n                $scope.institutionBeforeChanges.hasOwnProperty('nids') &&\n                $scope.institutionBeforeChanges.nids !== null &&\n                $scope.institutionBeforeChanges.nids.hasOwnProperty('master') &&\n                $scope.institutionBeforeChanges.nids.master;\n        };\n\n        /**\n         * Check its client department with active profile subscription.\n         * @returns {boolean}\n         */\n        controller.isClientDepartmentDowngradeDisabled = function () {\n            return controller.isClientDepartment($scope.institutionBeforeChanges.typeId) &&\n                $scope.institutionBeforeChanges &&\n                $scope.institutionBeforeChanges.subscriptions && (\n                    ($scope.institutionBeforeChanges.subscriptions.tu && $scope.institutionBeforeChanges.subscriptions.tu.subscribed) ||\n                    ($scope.institutionBeforeChanges.subscriptions.tm && $scope.institutionBeforeChanges.subscriptions.tm.subscribed)\n                );\n        };\n\n        /**\n         * View TM Site enabled?\n         *\n         * @returns {boolean}\n         */\n        controller.allowViewTmSiteButtonEnabled = function () {\n            return InstitutionService.isTmViewingEnabled($scope.institutionBeforeChanges);\n        };\n\n        controller.initDataGrid = function () {\n            $scope.isDatagridReloading = false;\n\n            $scope.typesList = [];\n            InstitutionsListService.getTypeFilterData(true).then(function (results) {\n                $scope.typesList = results;\n            });\n\n            var rankingsOptions = [];\n            angular.forEach(controller.subscriptionsList, function (item) {\n                if (InstitutionsListService.isStatisticsSubscription(item.type)) {\n                    rankingsOptions.push({\n                        value: item.handle,\n                        label: item.name\n                    });\n                }\n            });\n\n            // get core id from URL\n            controller.activeInstitutionCoreId = $stateParams.coreId;\n            if (controller.activeInstitutionCoreId) {\n                $scope.comesFromProfile = true;\n\n                var filters = angular.copy(controller.paginationOptions);\n                // update data fetch filters\n                angular.forEach(filters, function (item, key) {\n                    if (key.indexOf('filter') !== -1) {\n                        filters[key] = null;\n                        controller.paginationOptions[key] = null;\n                    }\n                });\n                GridService.storeColumnsFilters(\n                    constants.gridNameSpaces.institutionsGridFilters,\n                    filters\n                );\n                controller.activeInstitutionCoreId = '=' + controller.activeInstitutionCoreId;\n                controller.paginationOptions['filter[coreIdAsString]'] = controller.activeInstitutionCoreId;\n            }\n\n            $scope.countriesList = [];\n            InstitutionsListService.getCountries().then(function (results) {\n                controller.countriesList = results;\n                angular.forEach(results, function (data) {\n                    $scope.countriesList.push({\n                        value: data.countryCode,\n                        label: data.name\n                    });\n                });\n            });\n            var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n                selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html';\n            controller.getPage().then(function () {\n                $scope.gridOptions = angular.extend({}, $scope.gridOptions, {\n                    enableSorting: true,\n                    exporterMenuCsv: false,\n                    enableGridMenu: true,\n                    showGridFooter: false,\n                    selectedItems: $scope.selectedProgramId,\n                    enableFiltering: true,\n                    useExternalFiltering: true,\n                    enableColumnResize: true,\n                    enableFullRowSelection: true,\n                    enableRowSelection: true,\n                    multiSelect: false,\n                    enableRowHeaderSelection: false,\n                    paginationPageSizes: [25, 50, 100],\n                    paginationPageSize: 25,\n                    useExternalPagination: true,\n                    useExternalSorting: true,\n                    rowTemplate: '/scripts/components/institutions/list/datagrid/rowTemplate.html',\n                    columnDefs: [\n                        {\n                            displayName: 'Name',\n                            visible: true, //GridService.getVisibilityByField(controller.columnsVisibility, 'name', true),\n                            field: 'name',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'name')\n                            }\n                        },\n                        {\n                            displayName: 'Local Name',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'localName', false),\n                            field: 'localName',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'localName')\n                            }\n                        },\n                        {\n                            displayName: 'Core ID',\n                            visible: controller.activeInstitutionCoreId ?\n                                true : GridService.getVisibilityByField(controller.columnsVisibility, 'coreId', true),\n                            field: 'coreId',\n                            maxWidth: 120,\n                            filter: {\n                                term: controller.activeInstitutionCoreId ?\n                                    controller.activeInstitutionCoreId :\n                                    GridService.getFilterByField(controller.paginationOptions, 'coreId')\n                            }\n                        },\n                        {\n                            displayName: 'Parent Institution Core ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'parentCoreId', false),\n                            field: 'parentCoreId',\n                            maxWidth: 120,\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'parentCoreId')\n                            }\n                        },\n                        {\n                            displayName: 'Parent Institution Name',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'parentName', false),\n                            field: 'parentName',\n                            maxWidth: 300,\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'parentName')\n                            }\n                        },\n                        {\n                            displayName: 'Type',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'typeId', true),\n                            field: 'typeId',\n                            filter: {\n                                column: 'typeId',\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: $scope.typesList,\n                                term: GridService.getFilterByField(controller.paginationOptions, 'typeId')\n                            },\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Country Name',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'countryCode', true),\n                            field: 'countryCode',\n                            filter: {\n                                column: 'countryCode',\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: $scope.countriesList,\n                                searchEnabled: true,\n                                term: GridService.getFilterByField(controller.paginationOptions, 'countryCode')\n                            },\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Filemaker ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'filemakerId', false),\n                            field: 'filemakerId',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'filemakerId')\n                            }\n                        },\n                        {\n                            displayName: 'Has No Departments',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'hasNoDepartments', false),\n                            field: 'hasNoDepartments',\n                            filter: {\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'hasNoDepartments')\n                            },\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Active',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'active', true),\n                            field: 'active',\n                            filter: {\n                                column: 'active',\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'active')\n                            },\n                            maxWidth: 80,\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Advanced TU',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'tuAdvanced', true),\n                            field: 'tuAdvanced',\n                            filter: {\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'tuAdvanced')\n                            },\n                            enableSorting: false,\n                            maxWidth: 120,\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Advanced TM',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'tmAdvanced', true),\n                            field: 'tmAdvanced',\n                            filter: {\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'tmAdvanced')\n                            },\n                            enableSorting: false,\n                            maxWidth: 120,\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Rankings',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'subscriptionsAsString', true),\n                            field: 'subscriptionsAsString',\n                            enableSorting: false,\n                            filter: {\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: rankingsOptions,\n                                term: GridService.getFilterByField(controller.paginationOptions, 'subscriptionsAsString')\n                            },\n                            filterHeaderTemplate: selectTemplate\n                        },\n                        {\n                            displayName: 'UG node ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'nids.ug', false),\n                            field: 'nids.ug',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'nids.ug')\n                            }\n                        },\n                        {\n                            displayName: 'PG node ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'nids.pg', false),\n                            field: 'nids.pg',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'nids.pg')\n                            }\n                        },\n                        {\n                            displayName: 'Overview node ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'nids.master', false),\n                            field: 'nids.master',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'nids.master')\n                            }\n                        },\n                        {\n                            displayName: 'TM node ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'nids.tm', false),\n                            field: 'nids.tm',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'nids.tm')\n                            }\n                        },\n                        {\n                            displayName: 'Has UG',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'enabled.ug', false),\n                            field: 'enabledUg',\n                            filter: {\n                                column: 'enabled.ug',\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'enabled.ug')\n                            },\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Has PG',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'enabled.pg', false),\n                            field: 'enabledPg',\n                            filter: {\n                                column: 'enabled.pg',\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'enabled.pg')\n                            },\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Has TM',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'enabled.tm', false),\n                            field: 'enabledTm',\n                            filter: {\n                                column: 'enabled.tm',\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'enabled.tm')\n                            },\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        }\n                    ],\n                    onRegisterApi: function (gridApi) {\n                        var columnsVisibilityBeforeChanges = angular.copy($scope.gridOptions.columnDefs);\n                        $scope.gridApi = gridApi;\n                        gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                            $scope.handleDatagridRowClick(row.entity);\n                        });\n                        gridApi.core.on.rowsRendered($scope, function () {\n                            $scope.isDatagridRendered = true;\n                        });\n                        gridApi.pagination.on.paginationChanged($scope, function (newPage, limit) {\n                            controller.defaultPaginationOptions.page = newPage;\n                            controller.defaultPaginationOptions.limit = limit;\n                            controller.getPage();\n                        });\n                        // actions to do on filters changes\n                        $scope.gridApi.core.on.filterChanged($scope, controller.handleGridFiltersChanges);\n                        // actions to do on visible columns changes\n                        $scope.gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n                        // actions to do on sort order changes\n                        $scope.gridApi.core.on.sortChanged($scope, controller.handleGridFiltersChanges);\n                        // reset columns visibility\n                        GridService.resetExtend(columnsVisibilityBeforeChanges, $scope.gridOptions.columnDefs);\n                        if (\n                            controller.activeInstitutionCoreId &&\n                            $scope.gridOptions.data &&\n                            $scope.gridOptions.data.length === 1\n                        ) {\n                            // activate dit mode\n                            $scope.handleDatagridRowClick($scope.gridOptions.data[0]);\n                        }\n                    }\n                });\n            });\n        };\n\n        /**\n         * Disable institution types\n         *\n         * @param reset\n         */\n        controller.allowedInstitutionTypes = function (reset) {\n            if (angular.isUndefined(reset)) {\n                reset = false;\n            }\n            angular.forEach(controller.typesList, function (item) {\n                if ((item.uniqueId !== constants.typeId.clientDepartmentId &&\n                    item.uniqueId !== constants.typeId.topLevelInstitutionId) &&\n                    !reset\n                ) {\n                    item.disabled = true;\n                } else {\n                    item.disabled = false;\n                }\n            });\n        };\n\n        /**\n         * Add institution click action.\n         */\n        controller.handleAddInstitutionClick = function () {\n            controller.setSelectedItem();\n            controller.similarNames.display = false;\n            controller.showDepartments.display = false;\n            $scope.forms.basicDetailsForm.$setPristine();\n            $scope.forms.basicDetailsForm.$setUntouched();\n            $scope.activeTab = 0;\n            var institution = {};\n            institution.id = null;\n            controller.similarNames.display = false;\n            controller.similarNames.loading = false;\n            controller.similarNames.results = [];\n            $scope.handleDatagridRowClick(institution, $scope.selectedInstitutionId === null && $scope.showInfoBlock);\n        };\n\n\n        /**\n         * Close sidebar\n         */\n        controller.handleEditCloseClick = function () {\n            var institution = {};\n            institution.id = $scope.selectedInstitutionId;\n            $scope.handleDatagridRowClick(institution, true);\n        };\n\n        /**\n         * @param {Object} selectedType\n         */\n        controller.setSelectedOptionType = function (selectedType) {\n            controller.isInvalidType = false;\n            if (angular.isDefined(selectedType) && selectedType.hasOwnProperty('uniqueId')) {\n                $scope.institution.typeId = selectedType.uniqueId;\n            }\n        };\n\n        /**\n         * Search for similar institution names\n         *\n         * @param {Object} institution\n         */\n        controller.findSimilar = function (institution) {\n            if (institution.id === null && angular.isDefined(institution.name) && institution.name.length > 0) {\n                controller.similarNames.display = true;\n                controller.similarNames.loading = true;\n                InstitutionsListService.searchInstitutions(institution.name).then(function (results) {\n                    controller.similarNames.results = results;\n                    controller.similarNames.loading = false;\n                });\n            } else {\n                controller.similarNames.display = false;\n                controller.similarNames.loading = false;\n                controller.similarNames.results = [];\n            }\n        };\n\n        /**\n         * Remove [coreId] from a string.\n         *\n         * @param institutionName\n         * @returns {*}\n         */\n        controller.stripInstitutionId = function (institutionName) {\n            return institutionName.replace(/\\[[0-9]+]/g, '');\n        };\n\n        /**\n         * Search for institutions (for client department parent institution)\n         *\n         * @param {Object} searchResult\n         */\n        controller.handleSearchInstitutionClick = function (selectedSearchResult) {\n            $scope.institution.parentName = controller.stripInstitutionId(selectedSearchResult.name);\n            $scope.institution.parentCoreId = selectedSearchResult.coreId;\n            controller.showDepartments.display = false;\n            controller.showDepartments.results = [];\n            return true;\n        };\n\n        controller.initialiseBelongsTo = function () {\n            // get belongs to list\n            controller.belongsToList = InstitutionsListService.getBelongsToList();\n        };\n\n        controller.isClientDepartment = function (institutionTypeId) {\n            return InstitutionsListService.isClientDepartment(institutionTypeId);\n        };\n\n        controller.showParentInstitution = function (institutionTypeId) {\n            return InstitutionsListService.isClientDepartment(institutionTypeId) ||\n                InstitutionsListService.isSimpleDepartment(institutionTypeId) ||\n                InstitutionsListService.isAdvancedProgram(institutionTypeId);\n        };\n\n        controller.isTopLevelInstitution = function (institutionTypeId) {\n            return InstitutionsListService.isTopLevelInstitution(institutionTypeId);\n        };\n\n        /**\n         * Action to do on search for institution.\n         *\n         * @param {String} searchPhrase\n         */\n        $scope.searchInstitutions = function (searchPhrase) {\n            $scope.searchInProgress = true;\n            InstitutionsListService.searchTopLevelInstitutions(searchPhrase).then(function (results) {\n                $scope.parentInstitutionSearchResults = results;\n                $scope.searchInProgress = false;\n            });\n        };\n\n        /**\n         * Action to do on search for institution.\n         *\n         * @param {String} searchPhrase\n         */\n        $scope.searchTopLevelInstitutions = function (searchPhrase) {\n            $scope.searchInProgress = true;\n            InstitutionsListService.searchTopLevelInstitutions(searchPhrase).then(function (results) {\n                $scope.parentInstitutionSearchResults = results;\n                $scope.searchInProgress = false;\n            });\n        };\n\n        /**\n         * Show all departments button click (add institution, client department)\n         */\n        controller.showDepartments = function () {\n            controller.showDepartments.loading = true;\n            InstitutionsListService.getDepartments($scope.institution.parentCoreId).then(function (results) {\n                controller.showDepartments.results = results;\n                controller.showDepartments.loading = false;\n                controller.showDepartments.display = true;\n            });\n        };\n\n        controller.handleDepartmentsListCloseClick = function () {\n            controller.showDepartments.display = false;\n        };\n\n        controller.handleGetCampusesWatch = function (newCampuses) {\n            if ($scope.selectedInstitutionId) {\n                $scope.institution.campus = newCampuses;\n                $scope.institutionBeforeChanges.campus = newCampuses;\n            }\n        };\n\n        controller.handleDowngradeClick = function () {\n            if (controller.isClientDepartmentDowngradeDisabled()) {\n                return false;\n            }\n            var modalOptions = {\n                closeButtonText: 'Cancel',\n                actionButtonText: 'Yes',\n                actionButtonClass: 'danger',\n                headerText: 'Department Downgrade',\n                bodyText: 'Are you sure you want to downgrade this department?',\n            };\n            ModalService.show({}, modalOptions).then(function () {\n                $scope.downgradeInProgress = true;\n                // make downgrade request\n                TuProfileDepartmentsService.downgrade($scope.institution.id).then(controller.downgradeCallback);\n            });\n        };\n\n        controller.hasMissingFields = function () {\n            var uni = $scope.institutionBeforeChanges;\n            if (angular.equals(uni, {})) {\n                return;\n            }\n            if (InstitutionsListService.isSimpleDepartment(uni.typeId)) {\n                // check if:\n                // + name is valid\n                // + parent is assigned\n                // + country is valid\n                return (!uni.name || !uni.parentCoreId || !uni.countryCode);\n            } else if (InstitutionsListService.isAdvancedProgram(uni.typeId)) {\n                // check if:\n                // + name is valid\n                // + parent is assigned\n                // + country is valid\n                // + TM drupal region is assigned\n                return (!uni.name || !uni.parentCoreId || !uni.countryCode || !uni.drupalTmRegionId);\n            } else if (InstitutionsListService.isClientDepartment(uni.typeId)) {\n                // check if:\n                // + name is valid\n                // + parent is assigned\n                // + country is valid\n                // + belongs to is assigned\n                // + TU drupal region is assigned\n                // + TM drupal region is assigned\n                return (!uni.name || !uni.parentCoreId || !uni.countryCode ||\n                    !uni.belongsTo || !uni.belongsTo.length ||\n                    !uni.drupalTuRegionId ||\n                    !uni.drupalTmRegionId);\n            } else if (InstitutionsListService.isTopLevelInstitution(uni.typeId)) {\n                // check if:\n                // + name is valid\n                // + country is valid\n                // + TU drupal region is assigned\n                // + TM drupal region is assigned\n                return (!uni.name || !uni.parentCoreId || !uni.countryCode ||\n                    !uni.drupalTuRegionId ||\n                    !uni.drupalTmRegionId);\n            }\n        };\n\n        /**\n         * Actions to do when downgrade request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.downgradeCallback = function (success) {\n            if (success) {\n                controller.isClient = false;\n                controller.isSimple = true;\n                controller.setSelectedItem(constants.typeId.simpleDepartmentId);\n                $scope.institution.typeId = constants.typeId.simpleDepartmentId;\n                if ($scope.institution.enabled) {\n                    $scope.institution.enabled.ug = false;\n                    $scope.institution.enabled.pg = false;\n                }\n                if ($scope.institution.subscriptions && $scope.institution.subscriptions.tu) {\n                    delete $scope.institution.subscriptions.tu;\n                }\n                $scope.institutionBeforeChanges = angular.copy($scope.institution);\n                controller.reloadDatagrid();\n            }\n            $scope.downgradeInProgress = false;\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Downgrade successfully!' : 'Downgrade failed!',\n                'Downgrade to Simple'\n            );\n        };\n\n        /**\n         * Action to check if upgrade button at simple dipartment is disabled\n         * @return {boolean}\n         */\n        controller.isUpgradeButtonDisabled = function () {\n            return !$scope.institutionBeforeChanges.name ||\n                !$scope.institutionBeforeChanges.name.length ||\n                !$scope.institutionBeforeChanges.typeId ||\n                parseInt($scope.institution.typeId, 10) !== constants.typeId.simpleDepartmentId ||\n                !$scope.institutionBeforeChanges.countryCode ||\n                !$scope.institutionBeforeChanges.countryCode.length;\n        };\n\n        /**\n         * Actions to do when upgrade button clicked.\n         *\n         * @returns {boolean}\n         */\n        controller.handleUpgradeClick = function () {\n            if (!$scope.institution || !$scope.institution.id) {\n                return false;\n            }\n            $scope.upgradeInProgress = true;\n            TuProfileDepartmentsService.upgrade($scope.institution.id).then(controller.upgradeCallback);\n        };\n\n        /**\n         * Actions to do when upgrade request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.upgradeCallback = function (success) {\n            if (success) {\n                controller.isSimple = false;\n                controller.isClient = true;\n                $scope.institution.typeId = constants.typeId.clientDepartmentId;\n                controller.setSelectedItem(constants.typeId.clientDepartmentId);\n                $scope.institutionBeforeChanges = angular.copy($scope.institution);\n\n                controller.reloadDatagrid();\n            }\n            $scope.upgradeInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Upgraded successfully!' : 'Upgrade failed!',\n                'Upgrade to Client'\n            );\n        };\n\n        /**\n         * check if active institution is simple dipartment\n         * @param  {string} institutionTypeId\n         * @return {boolean}\n         */\n        controller.isSimpleDepartment = function (institutionTypeId) {\n            return InstitutionsListService.isSimpleDepartment(institutionTypeId);\n        };\n\n        /**\n         * Check if it is All statistics handle\n         * @param  {string} handle\n         * @return {boolean}\n         */\n        controller.isAllStatistic = function (handle) {\n            return InstitutionsListService.isAllStatistic(handle);\n        };\n\n        controller.convertVisibleColumnsField = function (value) {\n            switch (value) {\n                case 'enabledTm':\n                    return 'enabled.tm';\n                case 'enabledUg':\n                    return 'enabled.ug';\n                case 'enabledPg':\n                    return 'enabled.pg';\n                default:\n                    return value;\n            }\n        };\n\n        controller.saveStateVisibility = function () {\n            var visibility = angular.copy($scope.gridOptions.columnDefs);\n            angular.forEach(visibility, function (column) {\n                if ([\n                    'enabledTm',\n                    'enabledUg',\n                    'enabledPg'\n                ].indexOf(column.field) !== -1\n                ) {\n                    column.field = controller.convertVisibleColumnsField(column.field);\n                }\n            });\n            GridService.storeColumnsVisibility(\n                constants.gridNameSpaces.institutionsGridVisibility,\n                GridService.getGridColumnsVisibility(visibility)\n            );\n        };\n\n        controller.initWatches = function () {\n            // listen to active profile tab changes\n            WatchService.create($scope, 'activeTab', function (newValue, oldValue) {\n                if (!InstitutionsListFactory.hasSelectedTab() || !angular.equals(newValue, oldValue)) {\n                    InstitutionsListFactory.setSelectedTabId(newValue);\n                }\n            });\n            // listen to institution campuses changes\n            WatchService.create($scope, InstitutionsListFactory.getCampuses, controller.handleGetCampusesWatch);\n\n            WatchService.create($scope, InstitutionFactory.getActiveTab, function (newValue) {\n                if (newValue) {\n                    $scope.activeTab = 1;\n                }\n            });\n\n            WatchService.create($scope, InstitutionsListFactory.isInstitutionListReload, function (value) {\n                if (value) {\n                    controller.reloadDatagrid();\n                    InstitutionsListFactory.setReloadInstitutionList(false);\n                }\n            });\n\n            var dataLoadWatch = WatchService.create($scope, 'dataToLoad', function (leftToLoad) {\n                if (leftToLoad === 0) {\n                    dataLoadWatch();\n                    controller.initDataGrid();\n                }\n            });\n        };\n\n        controller.loadData = function () {\n            $scope.dataToLoad = 4;\n            InstitutionsListService.getSubscriptions().then(function (subscriptions) {\n                controller.subscriptionsList = subscriptions;\n                $scope.dataToLoad--;\n            });\n            InstitutionsListService.getTypes().then(function (list) {\n                controller.typesList = list;\n                $scope.dataToLoad--;\n            });\n            InstitutionsListService.getTuRegions().then(function (list) {\n                controller.tuRegionsList = list;\n                $scope.dataToLoad--;\n            });\n            InstitutionsListService.getTmRegions().then(function (list) {\n                controller.tmRegionsList = list;\n                $scope.dataToLoad--;\n            });\n        };\n\n        controller.init = function () {\n            controller.loadData();\n            controller.initWatches();\n            controller.initialiseBelongsTo();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsListController', [\n            '$scope',\n            '$resource',\n            '$stateParams',\n            'constants',\n            'InstitutionsListService',\n            'SharedProfileFactory',\n            'NotifierFactory',\n            'InstitutionFactory',\n            'InstitutionsListFactory',\n            'orderByFilter',\n            'LoginService',\n            'TuProfileDepartmentsService',\n            'uiGridConstants',\n            '$timeout',\n            'WatchService',\n            'ModalService',\n            'TmProfileProgramsService',\n            'InstitutionService',\n            'UiGridService',\n            'InstitutionsListSubscriptionsFactory',\n            'TimeService',\n            App.controllers.institutionsList\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.institutionsList = function () {\n        var selectedTabId = null,\n            tabIds = {\n                subscriptions: 1,\n                campuses : 2,\n                status: 5\n            },\n            isReload = false,\n            invalidDates,\n            campuses;\n        return {\n            setSelectedTabId: function (newSelectedTabId) {\n                selectedTabId = newSelectedTabId;\n            },\n            hasSelectedTab: function () {\n                return selectedTabId !== null;\n            },\n            isCampusesTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined') && (selectedTabId === tabIds.campuses);\n            },\n            isSubscriptionsTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined') && (selectedTabId === tabIds.subscriptions);\n            },\n            isStatusTabSelected: function () {\n                return (typeof selectedTabId !== 'undefined') && (selectedTabId === tabIds.status);\n            },\n            setCampuses: function (newCampuses) {\n                campuses = newCampuses;\n            },\n            getCampuses: function () {\n                return campuses;\n            },\n            setInvalidDates: function(val) {\n                invalidDates = val;\n            },\n            isInvalidDates: function() {\n                return invalidDates;\n            },\n            setReloadInstitutionList: function(val) {\n                isReload = val;\n            },\n            isInstitutionListReload: function() {\n                return isReload;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('InstitutionsListFactory', App.factories.institutionsList);\n\n}(window.angular));\n\n/* global google */\n(function(angular) {\n    \"use strict\";\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.campusesList = function (\n        $scope,\n        $resource,\n        NgTableParams,\n        constants,\n        InstitutionsListService,\n        CampusesService,\n        NotifierFactory,\n        SharedProfileFactory,\n        MapInitializerFactory,\n        InstitutionsListFactory,\n        WatchService\n    ) {\n        var controller = this,\n            newlyAdded,\n            alreadyInitialised = false,\n            notificationTitle = 'Campus';\n\n        $scope.refreshMapInProgress = false;\n\n        InstitutionsListService.getCountries().then(function (list) {\n            controller.countriesList = list;\n        });\n        /**\n         * Required to prevent selecting campus with null id (had\n         * ng-class=\"{'active': campus.id == selectedCampusId}\n         */\n        $scope.selectedCampusId = false;\n\n        controller.resetColumns = function () {\n            angular.forEach($scope.columns, function (column, key) {\n                column.show = SharedProfileFactory.getColumns()[key].show;\n            });\n        };\n\n        $scope.campusesToDelete = {};\n        $scope.deleteInProgress = false;\n        $scope.showCampusInfoBlock = false;\n        // reset values if user visits repeatedly edit campus and navigates out without reload\n        SharedProfileFactory.setInstitutionListShowCampusInfoBlock($scope.showCampusInfoBlock);\n\n        $scope.columns = [\n            {\n                title: 'Delete',\n                show: true,\n                field: 'delete',\n                headerTemplateURL: 'ng-table/templates/campus/delete-header.html'\n            },\n            {\n                title: 'Name',\n                show: true,\n                field: 'name'\n            },\n            {\n                title: 'Address',\n                show: true,\n                field: 'addressLine'\n            },\n            {\n                title: 'Postcode',\n                show: true,\n                field: 'postcode'\n            },\n            {\n                title: 'Town/City',\n                show: true,\n                field: 'city'\n            },\n            {\n                title: 'Country',\n                show: false,\n                field: 'country'\n            },\n            {\n                title: 'Country Name',\n                show: true,\n                field: 'countryName'\n            },\n            {\n                title: 'Primary Campus',\n                show: false,\n                field: 'primary'\n            },\n            {\n                title: 'Primary Campus',\n                show: true,\n                field: 'primaryName'\n            },\n            {\n                title: 'Order',\n                show: false,\n                field: 'order'\n            },\n        ];\n\n        SharedProfileFactory.setColumns($scope.columns);\n        $scope.campusMap = null;\n\n        var hiddenColumns = [];\n        angular.forEach($scope.columns, function (column) {\n            if (!column.show) {\n                hiddenColumns.push(column);\n            }\n        });\n        $scope.hiddenColumns = hiddenColumns;\n\n        /**\n         * Render campus in google map.\n         */\n        controller.renderMap = function () {\n            var campus = SharedProfileFactory.getCampus();\n            if (!campus.latitude) {\n                campus.latitude = null;\n            }\n            if (!campus.longitude) {\n                campus.longitude = null;\n            }\n            SharedProfileFactory.setCampus(campus);\n            var campusLatitude = campus.latitude,\n                campusLongitude = campus.longitude;\n            if (campusLatitude === null || campusLongitude === null) {\n                campusLatitude = 0;\n                campusLongitude = 0;\n            }\n            var googleMapsLatLng = new google.maps.LatLng({\n                lat: parseFloat(campusLatitude),\n                lng: parseFloat(campusLongitude)\n            });\n            $scope.campusMap.panTo(googleMapsLatLng);\n            $scope.campusMap.setOptions({\n                //center: googleMapsLatLng,\n                zoom: 15,\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\n                draggable: true\n            });\n            if (controller.googleMapsMarker) {\n                controller.googleMapsMarker.setMap(null);\n            }\n            controller.googleMapsMarker = new google.maps.Marker({\n                map: $scope.campusMap,\n                position: googleMapsLatLng,\n                draggable: true\n            });\n\n            google.maps.event.addListener(controller.googleMapsMarker, 'dragend', function (event) {\n                $scope.campusMap.panTo(event.latLng);\n                campus.autoGenerate = false;\n                campus.latitude = event.latLng.lat();\n                campus.longitude = event.latLng.lng();\n                google.maps.event.trigger($scope.campusMap, 'resize');\n                $scope.campusMap.setCenter(controller.googleMapsMarker.getPosition());\n                $scope.campus = campus;\n                $scope.$apply(); // otherwise the changes are not updated on sidebar\n            });\n\n            /**\n             * This fixes the bug when user already visited campus edit page,\n             * then navigated out, then returned to campuses edit page.\n             */\n            $scope.campusMap.addListener('idle', function() {\n                if (newlyAdded) {\n                    google.maps.event.trigger($scope.campusMap, 'resize');\n                    $scope.campusMap.setCenter(controller.googleMapsMarker.getPosition());\n                    newlyAdded = false;\n                }\n            });\n        };\n\n        /**\n         * Initialise google maps.\n         */\n        controller.initialiseMap = function () {\n            if (!$scope.campusMap) {\n                MapInitializerFactory.initStart();\n            }\n            MapInitializerFactory.mapsInitialized\n                .then(function() {\n                    if (null === $scope.campusMap) {\n                        $scope.campusMap = new google.maps.Map(document.getElementById(\"campusMap\"), {\n                            zoom: 15,\n                            mapTypeId: google.maps.MapTypeId.ROADMAP,\n                            draggable: true\n                        });\n                        newlyAdded = true;\n                    }\n                    controller.renderMap();\n                });\n        };\n\n        /**\n         * Actions to do when data grid row is clicked.\n         *\n         * @param {object} campus\n         * @param {boolean} mapInit\n         */\n        $scope.handleDataGridRowClickCampus = function (campus) {\n            $scope.submitted = false;\n            // create new copy of campus for making changes in it\n            var campusCopy = angular.copy(campus);\n            SharedProfileFactory.setCampus(campusCopy);\n\n            $scope.selectedCampusId = $scope.selectedCampusId === campusCopy.id ? false : campusCopy.id;\n            $scope.campus = campusCopy;\n            SharedProfileFactory.setCampus(campusCopy);\n            $scope.lat = campusCopy.latitude;\n            $scope.log = campusCopy.longitude;\n            $scope.displayMap = true;\n            $scope.showCampusInfoBlock = $scope.selectedCampusId === campusCopy.id;\n            SharedProfileFactory.setInstitutionListShowCampusInfoBlock($scope.showCampusInfoBlock);\n            if ($scope.selectedCampusId === campusCopy.id) {\n                angular.forEach($scope.columns, function (column) {\n                    if (column.field === 'name') {\n                        return;\n                    }\n                    column.show = false;\n                });\n            } else {\n                controller.resetColumns();\n            }\n            controller.initialiseMap();\n        };\n\n        /**\n         * Store organisation details.\n         */\n        $scope.handleCampusSubmit = function () {\n            if ($scope.campusSubmitInProgress ||\n                !$scope.forms.campusDetailsForm ||\n                !$scope.forms.campusDetailsForm.$valid\n            ) {\n                $scope.submitted = true;\n                NotifierFactory.show(\n                    'error',\n                    'Error: Please fill in all required fields',\n                    notificationTitle\n                );\n\n                return false;\n            }\n            $scope.campusSubmitInProgress = true;\n            InstitutionsListService.saveCampus($scope.institution.id, $scope.campus)\n                .then(function (success) {\n                    $scope.campusSubmitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Saved successfully!' : 'Saving failed!',\n                        notificationTitle\n                    );\n                    /**\n                     * Update generated data grid fields\n                     */\n                    if (success) {\n                        if (angular.isUndefined($scope.campus.id)) {\n                            $scope.campus.id = success.insertedId;\n                            if (!angular.isArray($scope.institution.campus)) {\n                                $scope.institution.campus = [];\n                            }\n                            $scope.institution.campus.push($scope.campus);\n                            $scope.selectedCampusId = $scope.campus.id;\n                            $scope.showCampusInfoBlock = true;\n                        }\n                        if (angular.isDefined(success.coordinates)) {\n                            $scope.campus.latitude = success.coordinates.latitude;\n                            $scope.campus.longitude = success.coordinates.longitude;\n                            SharedProfileFactory.setMapUpdateRequest(Math.random());\n                        }\n                        angular.forEach($scope.institution.campus, function(campus, index) {\n                            if (campus.id === $scope.campus.id) {\n                                $scope.institution.campus[index] = angular.copy($scope.campus);\n                                $scope.institution.campus[index].addressLine = InstitutionsListService.getCampusAddress(\n                                    $scope.campus\n                                );\n                                $scope.campus.addressLine = $scope.institution.campus[index].addressLine;\n                                $scope.institution.campus[index].primaryName = InstitutionsListService.getCampusIsPrimary(\n                                    $scope.campus\n                                );\n                                $scope.campus.primaryName = $scope.institution.campus[index].primaryName;\n                                InstitutionsListService.getCountryNameByCode($scope.campus.country).then(function (countryName) {\n                                    $scope.institution.campus[index].countryName = countryName;\n                                });\n                            } else {\n                                if ($scope.campus.primary) {\n                                    $scope.institution.campus[index].primary = false;\n                                    $scope.institution.campus[index].primaryName = InstitutionsListService.getCampusIsPrimary(\n                                        $scope.institution.campus[index]\n                                    );\n                                }\n                            }\n                        });\n                        controller.reloadDatagrid();\n                        InstitutionsListService.syncCampuses($scope.institution);\n                        InstitutionsListFactory.setReloadInstitutionList(true);\n                    }\n            });\n        };\n\n        /**\n         * Sortable options\n         */\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            start: function () {\n                controller.initialList = [];\n                controller.initialList = angular.copy($scope.institution.campus);\n            },\n            stop: function () {\n                $scope.sortableOptions.disabled = true;\n                // change campuses order\n                controller.reOrderCampuses();\n                InstitutionsListService.saveOrder($scope.institution.id, $scope.institution.campus)\n                    .then(function (success) {\n                        NotifierFactory.show(\n                            success ? 'success' : 'error',\n                            success ? ' Order saved successfully!' : 'Saving order failed!',\n                            notificationTitle\n                        );\n                        if (!success) {\n                            $scope.institution.campus = controller.initialList;\n                        } else {\n                            InstitutionsListService.syncCampuses($scope.institution);\n                        }\n                    })\n                    .finally(function () {\n                        $scope.sortableOptions.disabled = false;\n                    });\n            }\n        };\n\n        controller.getCampusesToDelete = function () {\n            var campusIds = [];\n            if ($scope.campusesToDelete) {\n                angular.forEach($scope.campusesToDelete, function (remove, id) {\n                    if (remove) {\n                        campusIds.push(id);\n                    }\n                });\n            }\n\n            return campusIds;\n        };\n\n        controller.hasCampusesToDelete = function () {\n            var departmentsIds = controller.getCampusesToDelete();\n            return departmentsIds.length !== 0;\n        };\n\n        $scope.isDeleteButtonDisabled = function () {\n            return $scope.deleteInProgress ||\n                !controller.hasCampusesToDelete();\n        };\n\n        /**\n         * Actions to do when campuses delete button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleDeleteClick = function () {\n            if ($scope.deleteInProgress || !controller.hasCampusesToDelete()) {\n                return false;\n            }\n            // set deletion in progress\n            $scope.deleteInProgress = true;\n            // get campuses ids to delete\n            var campusIds = controller.getCampusesToDelete();\n            // request deletion on server side\n            InstitutionsListService.deleteCampuses($scope.institution.id, campusIds).then(function (success) {\n                if (success) {\n                    // reset deletable campuses list\n                    $scope.campusesToDelete = {};\n                    // remove campuses from institution instance\n                    angular.forEach(campusIds, function (campusId) {\n                        angular.forEach($scope.institution.campus, function (campus, key) {\n                            if (campus.id === campusId) {\n                                delete $scope.institution.campus[key];\n                            }\n                        });\n                    });\n                    $scope.institution.campus = $scope.institution.campus.filter(function (item) {\n                        return item !== 'undefined';\n                    });\n                    // reload campuses datagrid\n                    controller.reloadDatagrid();\n\n                    InstitutionsListService.syncCampuses($scope.institution);\n                }\n                $scope.deleteInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Deleted successfully!' : 'Deletion failed!',\n                    notificationTitle\n                );\n            });\n        };\n\n        controller.reloadDatagrid = function () {\n            $scope.tableParams.reload();\n        };\n\n        /**\n         * Assigns new order for campuses starting with 1.\n         */\n        controller.reOrderCampuses = function () {\n            var assignedOrder = 1;\n            for (var index = 0; index < $scope.institution.campus.length; index++) {\n                $scope.institution.campus[index].order = assignedOrder;\n                assignedOrder++;\n            }\n        };\n\n        $scope.getMode = function () {\n            return $scope.showCampusInfoBlock && $scope.selectedCampusId;\n        };\n\n        /**\n         * Actions to do on add button click.\n         */\n        $scope.handleAddClick = function () {\n            if ($scope.selectedCampusId) {\n                SharedProfileFactory.setInstitutionListShowCampusInfoBlock(true);\n            } else {\n                SharedProfileFactory.setInstitutionListShowCampusInfoBlock(!$scope.showCampusInfoBlock);\n            }\n            $scope.selectedCampusId = false;\n            angular.forEach($scope.columns, function (column) {\n                if (column.field === 'name') {\n                    return;\n                }\n                column.show = false;\n            });\n            $scope.campus = {\n                displayInFrontEnd: true\n            };\n            if (!$scope.campus.latitude) {\n                $scope.lat = $scope.campus.latitude = null;\n            }\n            if (!$scope.campus.longitude) {\n                $scope.log = $scope.campus.longitude = null;\n            }\n            SharedProfileFactory.setCampus($scope.campus);\n            $scope.displayMap = true;\n            controller.initialiseMap();\n        };\n\n        $scope.coordinatesChanged = function () {\n            SharedProfileFactory.setMapUpdateRequest(Math.random());\n        };\n\n        /**\n         * Displays a message based on success.\n         *\n         * @param {boolean} success\n         * @param {string} message\n         */\n        controller.coordinatesUpdated = function (success, message) {\n            NotifierFactory.show(\n                success,\n                message,\n                'Address Search'\n            );\n        };\n\n        /**\n         * Get coordinates callback.\n         *\n         * @param {Array }response\n         */\n        controller.getCoordinatesByCampusCallback = function (response) {\n            if (response) {\n                if (angular.isArray(response) && !angular.isObject(response[0]) && !angular.isObject(response[1])) {\n                    $scope.campus.latitude = response[0];\n                    $scope.campus.longitude = response[1];\n                    SharedProfileFactory.setMapUpdateRequest(Math.random());\n                    SharedProfileFactory.announceCampusesChanges($scope.campus.id);\n                    controller.coordinatesUpdated('success', 'Coordinates updated!');\n                } else {\n                    controller.coordinatesUpdated('warning', 'Address not found!');\n                }\n            } else {\n                controller.coordinatesUpdated('error', 'Error requesting coordinates!');\n            }\n            $scope.refreshMapInProgress = false;\n        };\n\n        /**\n         * Refresh map function.\n         */\n        controller.refreshMap = function () {\n            $scope.refreshMapInProgress = true;\n            if ($scope.campus.autoGenerate) { // generate map by address fields\n                CampusesService.getCoordinatesByCampus($scope.campus).then(\n                    controller.getCoordinatesByCampusCallback\n                );\n            } else {  // generate map by coordinates\n                // announce map reload request\n                SharedProfileFactory.setMapUpdateRequest(Math.random());\n                //SharedProfileFactory.announceCampusesChanges($scope.campus.id);\n                $scope.refreshMapInProgress = false;\n            }\n        };\n\n        /**\n         * Initialise datagrid.\n         */\n        controller.initDataGrid = function () {\n            $scope.tableParams = new NgTableParams({\n                page: 1, // show first page\n                count: 1000 // count per page\n            }, {\n                filterDelay: 0,\n                getData: function() {\n                    return $scope.institution.campus;\n                }\n            });\n            alreadyInitialised = true;\n        };\n\n        /**\n         * Initialise watches & events.\n         */\n        controller.initWatches = function () {\n            // re-check the campus values and trigger map update\n            WatchService.create($scope, SharedProfileFactory.mapUpdateRequest, function (newValue) {\n                if (newValue && newValue !== null) {\n                    if (angular.isDefined($scope.campus) &&\n                        angular.isDefined($scope.campus.latitude) &&\n                        angular.isDefined($scope.campus.longitude) &&\n                        null !== $scope.campus\n                    ) {\n                        var campus = $scope.campus;\n                        var intLatitude = parseInt(campus.latitude, 10),\n                            intLongitude = parseInt(campus.longitude, 10);\n                        if (-90 <= intLatitude && intLatitude <= 90 &&\n                            -180 <= intLongitude && intLongitude <= 180) {\n                            var googleMapsLatLng = new google.maps.LatLng({\n                                lat: parseFloat(campus.latitude),\n                                lng: parseFloat(campus.longitude)\n                            });\n                            if (angular.isDefined(controller.googleMapsMarker)) {\n                                controller.googleMapsMarker.setPosition(googleMapsLatLng);\n                                google.maps.event.trigger($scope.campusMap, 'resize');\n                                $scope.campusMap.setCenter(controller.googleMapsMarker.getPosition());\n                            }\n                        }\n                    }\n\n                }\n            });\n\n            // watch to active institution changes\n            WatchService.create($scope, 'institution.id', function (newId, oldId) {\n                if (newId && newId !== oldId) {\n                    $scope.campusesToDelete = {};\n                    controller.reloadDatagrid();\n                }\n            });\n\n            // listen to campus edit/add visibility changes\n            WatchService.create($scope, SharedProfileFactory.getInstitutionListShowCampusInfoBlock, function (show) {\n                if (!show) {\n                    $scope.selectedCampusId = false;\n                    controller.resetColumns();\n                }\n                $scope.showCampusInfoBlock = show;\n            });\n        };\n\n        /**\n         * Initialise controller.\n         */\n        controller.init = function () {\n            controller.initWatches();\n            controller.initDataGrid();\n        };\n\n        // listen to departments tab visibility changes\n       \n        var cancelInitWatch =  WatchService.create($scope, InstitutionsListFactory.isCampusesTabSelected, function (isActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive) {\n                alreadyInitialised = true;\n                controller.init();\n                cancelInitWatch();\n            }\n        });\n\n        /**\n         * Display on front end switch clicked.\n         */\n        controller.displayOnFrontEndClick = function () {\n            if ($scope.campus.displayInFrontEnd &&\n                (($scope.campus.longitude === null || !$scope.campus.longitude) ||\n                ($scope.campus.latitude === null || !$scope.campus.latitude))\n            ) {\n                $scope.campus.autoGenerate = true;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('CampusesListController', [\n            '$scope',\n            '$resource',\n            'NgTableParams',\n            'constants',\n            'InstitutionsListService',\n            'CampusesService',\n            'NotifierFactory',\n            'SharedProfileFactory',\n            'MapInitializerFactory',\n            'InstitutionsListFactory',\n            'WatchService',\n            App.controllers.campusesList,\n        ]);\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.InstitutionsList = function (\n        $resource,\n        $q,\n        $log,\n        $localStorage,\n        constants,\n        RequestsQueueService,\n        InstitutionFactory,\n        InstitutionsListFactory,\n        TuProfileService,\n        TimeService\n    ) {\n        var service = {\n            types: null,\n            tuRegions: null,\n            subscriptions: null,\n            countries: null,\n            tmRegions: null,\n            deferred: {\n                getSubscriptions: null,\n                searchInstitutionsWithoutGroup: null,\n                getCountries: null,\n                getTypes: null,\n                getInstitution: null,\n                getTmRegions: null\n            },\n            institutionGroupsRequest: null\n        };\n\n        // @todo moveout models to standalone component/module\n\n        service.getCampusesOrderingModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:id/campusesOrder', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getInstitutionListModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/all', null, {\n                get: {\n                    isArray: false,\n                    cancellable: true\n                }\n            });\n        };\n\n        service.getInstitutionModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:id', null, {\n                create: { method: 'POST' },\n                update: { method: 'PATCH' },\n                replace: { method: 'PUT' }\n            });\n        };\n\n        service.getInstitutionGroupsSaveModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution-groups/:id', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getInstitutionGroupsModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/institution-groups/:searchPhrase?sorting[coreId]=asc',\n                null,\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        /**\n         * Returns campus model resource\n         *\n         * @returns {string}\n         */\n        service.getCampusModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:id/campus/:campusId', null, {\n                update: { method: 'PATCH' },\n                replace: { method: 'PUT' },\n                create: { method: 'POST' },\n                delete: { method: 'DELETE' },\n            });\n        };\n\n        /**\n         * Returns campuses model resource\n         *\n         * @returns {string}\n         */\n        service.getDeleteCampusesModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:id/delete-campus', null, {\n                create: { method: 'POST' }\n            });\n        };\n\n        /**\n         * Get institution search API endpoint.\n         *\n         * @returns $resource\n         */\n        service.getTopLevelInstitutionSearchModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/search/:searchPhrase?sorting[coreId]=asc&filter[typeId]=' + constants.typeId.topLevelInstitutionId,\n                null,\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        /**\n         * Get institution departments search API endpoint.\n         *\n         * @returns $resource\n         */\n        service.getDepartmentsListModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/departments/core-id/:parentCoreId?filter[fieldName]=active&filter[typeId]=' + constants.typeId.clientDepartmentId,\n                null,\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        /**\n         * Search institutions model\n         *\n         * @returns {*}\n         */\n        service.getInstitutionSearchModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/search/:searchPhrase?sorting[coreId]=asc&filter[fieldName]=active',\n                null,\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        service.getDepartmentModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:id', null, {\n                create: { method: 'POST' }\n            });\n        };\n\n        /**\n         * Get all institutions.\n         *\n         * @param {object} params\n         * @returns {Promise.<Array>}\n         */\n        service.getAll = function (filters) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n            var hasSorting = false;\n            if (filters) {\n                for (var key in filters) {\n                    if (key.indexOf('sorting') !== -1) {\n                        hasSorting = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasSorting) {\n                filters['sorting[createdAt]'] = 'desc';\n            }\n\n            // cancel currently running requests\n            RequestsQueueService.cancelAll('getAll');\n\n            var Api = service.getInstitutionListModel().get(filters);\n\n            // add new request to the queue\n            RequestsQueueService.add(Api, 'getAll');\n\n            return Api.$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('getAll');\n\n                data.results = service.formatList(data.results);\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                } else {\n                    return [];\n                }\n            }).then(service.appendSubscriptionsData);\n        };\n\n        /**\n         * Get all institutions subscriptions.\n         *\n         * @param {Number} institutionCoreId\n         * @returns {Promise.<Array>}\n         */\n        service.getAllSubscriptions = function (institutionCoreId) {\n            var Api = service.getInstitutionListModel().get({\n                'filter[parentCoreId]': '=' + institutionCoreId,\n                'limit' :  1,\n                'columns[]' : 'subscriptions'\n            });\n            var subscriptions;\n            // add new request to the queue\n            return Api.$promise.then(function (data) {\n                if (data.results) {\n                    subscriptions = data.results.reduce(function (all, item, index) {\n                        if (item.subscriptions.hasOwnProperty('tm') && item.subscriptions.tm.endDate !== null) {\n                            all[item.coreIdAsString] = item.subscriptions.tm.endDate;\n                        }\n                        return all;\n                    }, []);\n                }\n                return subscriptions;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                } else {\n                    return [];\n                }\n            });\n        };\n\n        service.getTmSubscriptions = function (institutionCoreId) {\n            var Api = service.getInstitutionListModel().get({\n                'filter[coreId]': '=' + institutionCoreId,\n                'limit' :  1,\n                'columns[]' : 'subscriptions'\n            });\n            var subscriptions = [];\n            // add new request to the queue\n            return Api.$promise.then(function (data) {\n                return data.results &&\n                data.results[0] &&\n                data.results[0].subscriptions &&\n                data.results[0].subscriptions.tm ? data.results[0].subscriptions.tm : [];\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                } else {\n                    return [];\n                }\n            });\n        };\n\n        service.isStatisticsSubscription = function (handle, subscriptionsList) {\n            var statsType = 'statistics';\n            if (subscriptionsList) {\n                var total = subscriptionsList.length,\n                    i = 0;\n                for (i; i < total; i++) {\n                    if (subscriptionsList[i].handle === handle) {\n                        return subscriptionsList[i].type === statsType;\n                    }\n                }\n            } else {\n                return handle === statsType;\n            }\n\n            return false;\n        };\n\n        service.appendSubscriptionsData = function (institutionsData) {\n            if (!institutionsData) {\n                return institutionsData;\n            }\n            var subscriptionName = null;\n            return service.getSubscriptions().then(function (subscriptionsList) {\n                if (subscriptionsList) {\n                    angular.forEach(institutionsData.results, function (institutionData) {\n                        if (!institutionData.subscriptionsAsArray) {\n                            institutionData.subscriptionsAsArray = [];\n                        }\n                        if (!institutionData.subscriptions) {\n                            return false;\n                        }\n                        angular.forEach(institutionData.subscriptions, function (subscription, key) {\n                            if (\n                                !subscription.subscribed ||\n                                !service.isStatisticsSubscription(key, subscriptionsList)\n                            ) {\n                                return false;\n                            }\n                            subscriptionName = service.getSubscriptionNameByHandle(key, subscriptionsList);\n                            if (!subscriptionName) {\n                                return false;\n                            }\n                            institutionData.subscriptionsAsArray.push(subscriptionName);\n                            institutionData.subscriptionsAsString = institutionData.subscriptionsAsArray ?\n                                institutionData.subscriptionsAsArray.join(', ') : null;\n                        });\n                    });\n                }\n                return institutionsData;\n            });\n        };\n        service.formatSubscriptionDate = function (date) {\n            var formattedDate = '';\n            if (date && TimeService.isValid(date)) {\n                formattedDate = TimeService.formatInUnix(date);\n            }\n\n            return formattedDate;\n        };\n\n        service.getTypeFilterData = function (grid) {\n            grid = grid || false;\n            var deferred = $q.defer();\n            service.getTypes().then(function (types) {\n                var typesFilterData = [];\n                if (types) {\n                    angular.forEach(types, function (data) {\n                        if (grid) {\n                            typesFilterData.push({\n                                value: data.uniqueId,\n                                label: data.name\n                            });\n                        } else {\n                            typesFilterData.push({\n                                id: data.uniqueId,\n                                title: data.name\n                            });\n                        }\n                    });\n                }\n                deferred.resolve(typesFilterData);\n            });\n\n            return deferred.promise;\n        };\n\n        service.getTypes = function () {\n            // process already running\n            if (!service.deferred.getTypes) {\n                service.deferred.getTypes = $q.defer();\n            } else {\n                return service.deferred.getTypes.promise;\n            }\n            var deferred = service.deferred.getTypes;\n\n            // check if data exists in cache\n            if (service.types) {\n                deferred.resolve(service.types);\n            } else {\n                var Api = $resource(constants.api.institutions.url + '/v1/list/types');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.types = data.results;\n                    deferred.resolve(service.types);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.types = [];\n                    deferred.resolve(service.types);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        service.getTuRegions = function () {\n            var deferred = $q.defer();\n            if (service.tuRegions) {\n                deferred.resolve(service.tuRegions);\n            } else {\n                var Api = $resource(constants.api.institutions.url + '/v1/list/tu-regions');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.tuRegions = data.results;\n                    deferred.resolve(service.tuRegions);\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                        service.tuRegions = [];\n                    }\n                    deferred.resolve(service.tuRegions);\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        service.getTmRegions = function () {\n            // process already running\n            if (!service.deferred.getTmRegions) {\n                service.deferred.getTmRegions = $q.defer();\n            } else {\n                return service.deferred.getTmRegions.promise;\n            }\n            var deferred = service.deferred.getTmRegions;\n\n            if (service.tmRegions) {\n                deferred.resolve(service.tmRegions);\n            } else {\n                var Api = $resource(constants.api.institutions.url + '/v1/list/tm-regions');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.tmRegions = data.results;\n                    deferred.resolve(service.tmRegions);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.tmRegions = [];\n                    deferred.resolve(service.tmRegions);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        service.getTypeNameById = function (typeId) {\n            var deferred = $q.defer(),\n                typeName;\n\n            service.getTypes().then(function (types) {\n                angular.forEach(types, function (type) {\n                    if (type.uniqueId === typeId) {\n                        typeName = type.name;\n\n                    }\n                });\n                deferred.resolve(typeName);\n            });\n\n            return deferred.promise;\n        };\n\n        /**\n         * Format institutions list.\n         *\n         * @param {object} institutionsData\n         * @returns {object}\n         */\n        service.formatList = function (institutionsData) {\n            if (angular.isArray(institutionsData)) {\n                angular.forEach(institutionsData, function (institutionData) {\n                    service.processInstitution(institutionData);\n                });\n            } else {\n                service.processInstitution(institutionsData);\n            }\n\n            return institutionsData;\n        };\n\n        /**\n         * Format institution\n         *\n         * @param {object} institutionData\n         * @returns {object}\n         */\n        service.processInstitution = function (institutionData) {\n            service.getTypeNameById(institutionData.typeId).then(function (typeName) {\n                institutionData.typeName = typeName;\n            });\n            service.getCountryNameByCode(institutionData.countryCode).then(function (countryName) {\n                institutionData.countryName = countryName;\n            });\n            institutionData = service.processCampuses(institutionData);\n            institutionData.isActive = institutionData.active ? 'Yes' : 'No';\n            institutionData.enabledUg = institutionData.enabled && typeof institutionData.enabled.ug !== 'undefined' ? institutionData.enabled.ug : null;\n            institutionData.enabledPg = institutionData.enabled && typeof institutionData.enabled.pg !== 'undefined' ? institutionData.enabled.pg : null;\n            institutionData.enabledTm = institutionData.enabled && typeof institutionData.enabled.tm !== 'undefined' ? institutionData.enabled.tm : null;\n            institutionData.tuAdvanced = !!institutionData.tuAdvanced;\n            institutionData.tmAdvanced = !!institutionData.tmAdvanced;\n            institutionData.hasNoDepartments = !!institutionData.hasNoDepartments;\n            if (typeof institutionData.nids === 'undefined' || institutionData.nids === null) {\n                institutionData.nids = {\n                    ug: null,\n                    pg: null,\n                    master: null,\n                    tm: null\n                };\n            }\n\n            service.getTuRegions().then(function (list) {\n                if (!institutionData.drupalTuRegionId) {\n                    return false;\n                }\n                var validTid = false;\n                angular.forEach(list, function (item) {\n                    if (item.tid === institutionData.drupalTuRegionId && item.tu) {\n                        validTid = true;\n                    }\n                });\n                if (!validTid) {\n                    institutionData.drupalTuRegionId = null;\n                }\n            });\n\n            service.getTmRegions().then(function (list) {\n                var validTid = false;\n                if (!institutionData.drupalTmRegionId) {\n                    return false;\n                }\n                angular.forEach(list, function (item) {\n                    if (item.tid === institutionData.drupalTmRegionId && item.tm) {\n                        validTid = true;\n                    }\n                });\n                if (!validTid) {\n                    institutionData.drupalTmRegionId = null;\n                }\n            });\n        };\n\n        /**\n         * Format campuses\n         *\n         * @returns {object}\n         * @param {object} institutionData\n         * @param {any} campusId\n         * @param {boolean} unCheckAll\n         */\n        service.processCampuses = function (institutionData, campusId, unCheckAll) {\n            if (!angular.isDefined(campusId)) {\n                campusId = null;\n            }\n            if (!angular.isDefined(unCheckAll)) {\n                unCheckAll = false;\n            }\n            var primaryCount = 0;\n            angular.forEach(institutionData.campus, function (campus, index) {\n                service.getCountryNameByCode(campus.country).then(function (countryName) {\n                    campus.countryName = countryName;\n                });\n                if (campusId === null) {\n                    if (angular.isDefined(institutionData.campus[index].primary) && institutionData.campus[index].primary) {\n                        primaryCount++;\n                    } else {\n                        institutionData.campus[index].primary = false;\n                    }\n                    if (primaryCount > 1) {\n                        institutionData.campus[index].primary = false;\n                        primaryCount--;\n                    }\n                    if (unCheckAll) {\n                        institutionData.campus[index].primary = false;\n                    }\n                } else {\n                    if (institutionData.campus[index].id === campusId) {\n                        institutionData.campus[index].primary = true;\n                    } else {\n                        institutionData.campus[index].primary = false;\n                    }\n                }\n                campus.primaryName = service.getCampusIsPrimary(campus);\n                campus.addressLine = service.getCampusAddress(campus);\n            });\n\n            return institutionData;\n        };\n\n        /**\n         *  Get subscription name by its handle.\n         *\n         * @param {string} handle\n         * @param {object} subscriptionsList\n         * @returns {string}\n         */\n        service.getSubscriptionNameByHandle = function (handle, subscriptionsList) {\n            var subscriptionName = '';\n            if (handle === 'ug') {\n                return 'Undergraduate Profile';\n            } else if (handle === 'pg') {\n                return 'Postgraduate Profile';\n            } else if (handle === 'tm') {\n                return 'TopMBA Profile';\n            }\n            if (subscriptionsList) {\n                angular.forEach(subscriptionsList, function (subscription) {\n                    if (subscription.handle && subscription.name && subscription.handle === handle) {\n                        subscriptionName = subscription.name;\n                        return;\n                    }\n                });\n            }\n            return subscriptionName;\n        };\n\n        /**\n         * Get subscriptions list.\n         *\n         * @returns {Promise:Object}\n         */\n        service.getSubscriptions = function () {\n            // process already running\n            if (!service.deferred.getSubscriptions) {\n                service.deferred.getSubscriptions = $q.defer();\n            } else {\n                return service.deferred.getSubscriptions.promise;\n            }\n            var deferred = service.deferred.getSubscriptions;\n\n            // check if data exists in cache\n            if (service.subscriptions) {\n                deferred.resolve(service.subscriptions);\n            } else {\n                var Api = $resource(constants.api.institutions.url + '/v1/list/subscriptions?filter[type]=statistics&sorting[name]=asc');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.subscriptions = data.results;\n                    deferred.resolve(service.subscriptions);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.subscriptions = [];\n                    deferred.resolve(service.subscriptions);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Mark user as active.\n         *\n         * @param {string} id\n         * @returns {Promise.<boolean>}\n         */\n        service.activate = function (id) {\n            var Api = $resource(constants.api.institutions.url + '/v1/institution/:id/activate', { id: id });\n            return Api.get().$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Mark user as inactive.\n         *\n         * @param {string} id\n         * @returns {Promise.<boolean>}\n         */\n        service.deactivate = function (id) {\n            var Api = $resource(constants.api.institutions.url + '/v1/institution/:id/deactivate', { id: id });\n            return Api.get().$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getInstitutionGroupsSaveModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution-groups/:id', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getInstitutionGroupsModel = function () {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/institution-groups/:searchPhrase?sorting[coreId]=asc',\n                null,\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        service.filterObject = function (filters, object) {\n            var filteredObject = angular.copy(filters);\n            angular.forEach(filters, function (value, key) {\n                if (value && typeof value === 'object') {\n                    angular.forEach(value, function (subValue, subKey) {\n                        if (subValue === null && object !== null && object.hasOwnProperty(key) && object[key] !== null && object[key].hasOwnProperty(subKey) && object[key][subKey] !== 'undefined') {\n                            filteredObject[key][subKey] = object[key][subKey];\n                        }\n                    });\n                } else if (value === null && object[key] !== 'undefined') {\n                    filteredObject[key] = object[key];\n                }\n            });\n\n            return filteredObject;\n        };\n\n        /**\n         * Filter out non subscriptions related data.\n         *\n         * @param {Object} filters\n         * @param {Object} object\n         * @returns {Object}\n         */\n        service.filterObjectForSubscriptions = function (filters, object) {\n            var filteredObject = angular.copy(filters);\n            angular.forEach(filters, function (value, key) {\n                if (value && typeof value === 'object') {\n                    angular.forEach(value, function (subValue, subKey) {\n                        if (subValue && typeof subValue === 'object') {\n                            angular.forEach(subValue, function (subValue2, subKey2) {\n                                if (subValue2 === null) {\n                                    if (\n                                        typeof object[key] !== 'undefined' &&\n                                        object[key] !== null &&\n                                        typeof object[key][subKey] !== 'undefined' &&\n                                        object[key][subKey][subKey2] !== null\n                                    ) {\n                                        filteredObject[key][subKey][subKey2] = object[key][subKey][subKey2] ?\n                                            object[key][subKey][subKey2] : false;\n                                    } else {\n                                        filteredObject[key][subKey][subKey2] = null;\n                                    }\n                                }\n                            });\n                        } else if (subValue === null && object[key] && object[key][subKey]) {\n                            filteredObject[key][subKey] = object[key][subKey];\n                        }\n                    });\n                } else if (value === null && object[key]) {\n                    filteredObject[key] = object[key];\n                }\n            });\n\n            return filteredObject;\n        };\n\n        service.isSimpleDepartment = function (institutionTypeId) {\n            return institutionTypeId === constants.typeId.simpleDepartmentId;\n        };\n\n        service.isClientDepartment = function (institutionTypeId) {\n            return institutionTypeId === constants.typeId.clientDepartmentId;\n        };\n\n        service.isTopLevelInstitution = function (institutionTypeId) {\n            return institutionTypeId === constants.typeId.topLevelInstitutionId;\n        };\n\n        service.isAdvancedProgram = function (institutionTypeId) {\n            return institutionTypeId === constants.typeId.advancedProgramId;\n        };\n\n        service.insertBasicDetails = function (institutionData) {\n            var EndpointModel,\n                dataToInsert = {};\n\n            if (service.isClientDepartment(institutionData.typeId)) {\n                EndpointModel = service.getDepartmentModel();\n                dataToInsert = {\n                    active: null,\n                    belongsTo: null,\n                    businessSchool: null,\n                    countryCode: null,\n                    countryName: null,\n                    filemakerId: null,\n                    localName: null,\n                    name: null,\n                    parentCoreId: null,\n                    parentName: null,\n                    typeId: null\n                };\n            } else {\n                EndpointModel = service.getInstitutionModel();\n                dataToInsert = {\n                    active: null,\n                    businessSchool: null,\n                    countryCode: null,\n                    countryName: null,\n                    filemakerId: null,\n                    hasNoDepartments: null,\n                    localName: null,\n                    name: null,\n                    parentCoreId: null,\n                    parentName: null,\n                    typeId: null\n                };\n            }\n\n            return EndpointModel.create(\n                {},\n                service.filterObject(dataToInsert, institutionData)\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n\n                return false;\n            });\n        };\n\n        service.saveBasicDetails = function (institutionData) {\n            var InstitutionModel = service.getInstitutionModel(),\n                dataToUpdate = {\n                    name: null,\n                    localName: null,\n                    typeId: null,\n                    filemakerId: null,\n                    businessSchool: null,\n                    hasNoDepartments: null,\n                    countryCode: null\n                };\n            if (service.isClientDepartment(institutionData.typeId)) {\n                dataToUpdate = {\n                    name: null,\n                    localName: null,\n                    typeId: null,\n                    filemakerId: null,\n                    businessSchool: null,\n                    hasNoDepartments: null,\n                    countryCode: null,\n                    belongsTo: null\n                };\n            }\n\n            return InstitutionModel.update(\n                { id: institutionData.id },\n                service.filterObject(dataToUpdate, institutionData)\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n\n                return false;\n            });\n        };\n\n        service.saveDrupal = function (institutionData) {\n            var InstitutionModel = service.getInstitutionModel(),\n                dataToUpdate = {\n                    nids: {\n                        overview: null,\n                        ug: null,\n                        pg: null,\n                        tm: null\n                    },\n                    drupalTmRegionId: null,\n                    drupalTuRegionId: null\n                };\n\n            return InstitutionModel.update(\n                { id: institutionData.id },\n                service.filterObject(dataToUpdate, institutionData)\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.saveSubscription = function (institutionData) {\n            var InstitutionModel = service.getInstitutionModel(),\n                dataToUpdate = {\n                    linkedWithAdvancedPrograms: null,\n                    subscriptions: {\n                        tu: {\n                            subscribed: null,\n                            advanced: null,\n                            startDate: null,\n                            endDate: null\n                        },\n                        tm: {\n                            subscribed: null,\n                            advanced: null,\n                            startDate: null,\n                            endDate: null\n                        },\n                        all: {\n                            subscribed: true\n                        },\n                        aw: {\n                            subscribed: null\n                        },\n                        brics: {\n                            subscribed: null\n                        },\n                        aur: {\n                            subscribed: null\n                        },\n                        eeca: {\n                            subscribed: null\n                        },\n                        wur: {\n                            subscribed: null\n                        },\n                        ger: {\n                            subscribed: null\n                        },\n                        lau: {\n                            subscribed: null\n                        }\n                    },\n                    enabled: {\n                        ug: null,\n                        pg: null,\n                        tm: null\n                    }\n                };\n\n            return InstitutionModel.update(\n                { id: institutionData.id },\n                service.filterObjectForSubscriptions(dataToUpdate, institutionData)\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.saveInstitutionGroup = function (institutionData) {\n            var deferred = $q.defer(),\n                institutionGroupsSaveModel = service.getInstitutionGroupsSaveModel();\n            institutionGroupsSaveModel.update(\n                { id: institutionData.id },\n                institutionData.groupMembers\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                deferred.resolve(true);\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                deferred.resolve(false);\n            });\n\n            return deferred.promise;\n        };\n\n        service.searchInstitutionsWithoutGroup = function (institutionId, searchPhrase) {\n\n            if (service.deferred.searchInstitutionsWithoutGroup) {\n                // cancel previous call\n                service.deferred.searchInstitutionsWithoutGroup.resolve();\n                if (service.institutionGroupsRequest) {\n                    service.institutionGroupsRequest.$cancelRequest();\n                }\n            }\n            service.deferred.searchInstitutionsWithoutGroup = $q.defer();\n\n            var deferred = service.deferred.searchInstitutionsWithoutGroup,\n                institutionsWithoutGroup = [];\n\n            if (!searchPhrase || searchPhrase.length < 1) {\n                deferred.resolve(institutionsWithoutGroup);\n            } else {\n                var InstitutionGroupsModel = service.getInstitutionGroupsModel();\n                service.institutionGroupsRequest = InstitutionGroupsModel.get(\n                    { searchPhrase: searchPhrase },\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n                        if (data && data.results) {\n                            angular.forEach(data.results, function (item) {\n                                if (item.coreId !== institutionId) {\n                                    institutionsWithoutGroup.push({\n                                        coreId: item.coreId,\n                                        name: item.name\n                                    });\n                                }\n                            });\n                        }\n                        deferred.resolve(institutionsWithoutGroup);\n                        deferred = null;\n                        service.institutionGroupsRequest = null;\n                    },\n                    function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        deferred.resolve(institutionsWithoutGroup);\n                        deferred = null;\n                        service.institutionGroupsRequest = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        service.getCountryFilterData = function () {\n            var deferred = $q.defer();\n            service.getCountries().then(function (countries) {\n                var countriesFilterData = [\n                ];\n                if (countries) {\n                    angular.forEach(countries, function (data) {\n                        countriesFilterData.push({\n                            id: data.countryCode,\n                            title: data.name\n                        });\n                    });\n                }\n                deferred.resolve(countriesFilterData);\n            });\n\n            return deferred.promise;\n        };\n\n        /**\n         * List of countries, ordered by name, ascending\n         *\n         * @returns {Promise.<Array>}\n         */\n        service.getCountries = function () {\n            // process already running\n            if (!service.deferred.getCountries) {\n                service.deferred.getCountries = $q.defer();\n            } else {\n                return service.deferred.getCountries.promise;\n            }\n            var deferred = service.deferred.getCountries;\n\n            if (service.countries) {\n                deferred.resolve(service.countries);\n            } else {\n                var Api = $resource(constants.api.institutions.url + '/v1/list/countries?sorting[name]=asc');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.countries = data.results;\n                    deferred.resolve(service.countries);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.countries = [];\n                    deferred.resolve(service.countries);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Saving a campus for organisation in institutions collection\n         *\n         * @param {string} organisationId\n         * @param {object} campus\n         * @returns {boolean}\n         */\n        service.saveCampus = function (organisationId, campus) {\n            var CampusModel = service.getCampusModel(),\n                dataToUpdate = {\n                    name: null,\n                    addressLine1: null,\n                    addressLine2: null,\n                    postcode: null,\n                    city: null,\n                    state: null,\n                    displayInFrontEnd: null,\n                    country: null,\n                    primary: null,\n                    region: null,\n                    latitude: null,\n                    longitude: null,\n                    autoGenerate: null,\n                    primaryInPrograms: null\n                };\n\n            if (angular.isDefined(campus.id)) {\n                return CampusModel.update(\n                    { id: organisationId, campusId: campus.id },\n                    service.filterObject(dataToUpdate, campus)\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else {\n                return CampusModel.create(\n                    { id: organisationId },\n                    service.filterObject(dataToUpdate, campus)\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    if (angular.isDefined(data.createdCount) && data.createdCount && angular.isDefined(data.insertedId)) {\n                        return data;\n                    }\n\n                    return false;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        service.deleteCampuses = function (institutionId, campusIds) {\n            var CampusModel = service.getDeleteCampusesModel();\n\n            return CampusModel.save({\n                id: institutionId\n            }, campusIds).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n\n        };\n\n        /**\n         * Returns country name by country code (UK=United Kingdom)\n         *\n         * @param {string} countryCode\n         * @returns {Promise.<String>}\n         */\n        service.getCountryNameByCode = function (countryCode) {\n            var deferred = $q.defer(),\n                countryName;\n\n            service.getCountries().then(function (countries) {\n                angular.forEach(countries, function (country) {\n                    if (country.countryCode === countryCode) {\n                        countryName = country.name;\n                    }\n                });\n                deferred.resolve(countryName);\n            });\n\n            return deferred.promise;\n        };\n\n        /**\n         * Returns joined campus address\n         *\n         * @param {Object} campus\n         * @returns {string}\n         */\n        service.getCampusAddress = function (campus) {\n            campus.addressLine = [];\n            if (angular.isDefined(campus.addressLine1) && campus.addressLine1 !== null) {\n                campus.addressLine.push(campus.addressLine1);\n            }\n            if (angular.isDefined(campus.addressLine2) && campus.addressLine2 !== null) {\n                campus.addressLine.push(campus.addressLine2);\n            }\n\n            return campus.addressLine.join(', ');\n        };\n\n        /**\n         * Returns user friendly yes/no instead of true/false for campus.primary field\n         *\n         * @param {Object} campus\n         * @returns {string}\n         */\n        service.getCampusIsPrimary = function (campus) {\n            return campus.primary ? 'Yes' : 'No';\n        };\n\n        /**\n         * Returns institution\n         *\n         * @param {string} id\n         * @returns {Promise}\n         */\n        service.getInstitution = function (id) {\n            // process already running\n            if (!service.deferred.getInstitution) {\n                service.deferred.getInstitution = $q.defer();\n            } else {\n                return service.deferred.getInstitution.promise;\n            }\n            var deferred = service.deferred.getInstitution;\n\n            // check if data exists in cache\n            if (service.institution) {\n                deferred.resolve(service.institution);\n            } else {\n                var Api = $resource(constants.api.institutions.url + '/v1/list/all?filter[coreId]=:id&limit=1', { id: id });\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.institution = service.formatList(data.results)[0];\n                    deferred.resolve(service.institution);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.institution = [];\n                    deferred.resolve(service.institution);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Delete campus\n         *\n         * @param {string} organisationId\n         * @param {object} campus\n         * @returns {Promise}\n         */\n        service.deleteCampus = function (organisationId, campus) {\n            var CampusModel = service.getCampusModel();\n            if (angular.isDefined(campus.id)) {\n                return CampusModel.delete(\n                    { id: organisationId, campusId: campus.id }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return true;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        /**\n         * Save campuses order\n         *\n         * @param organisationId\n         * @param campuses\n         * @returns {*}\n         */\n        service.saveOrder = function (organisationId, campuses) {\n            var institutionModel = service.getCampusesOrderingModel();\n            return institutionModel.update(\n                { id: organisationId },\n                {\n                    'campus': service.formatForOrdering(campuses)\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Format campuses before sending API request to save order\n         *\n         * @param {Object} items\n         * @returns {Array}\n         */\n        service.formatForOrdering = function (items) {\n            var formattedItems = [];\n            angular.forEach(items, function (item) {\n                formattedItems.push({\n                    'id': item.id,\n                    'order': item.order\n                });\n            });\n\n            return formattedItems;\n        };\n\n        service.excludeGroupMember = function (institutionCoreId, groupMembers) {\n            var groupMembersClone = angular.copy(groupMembers);\n            for (var i = 0; i < groupMembersClone.length; i++) {\n                if (parseInt(groupMembersClone[i].coreId, 10) === parseInt(institutionCoreId, 10)) {\n                    groupMembersClone.splice(i, 1);\n                    break;\n                }\n            }\n\n            return groupMembersClone;\n        };\n\n        /**\n         * Get institutions datagrid columns visibility.\n         *\n         * @returns {Object|*}\n         */\n        service.getColumnsVisibility = function () {\n            return $localStorage.institutionGridColumnsVisibility;\n        };\n\n        /**\n         * Copy campuses from institution to currently logged institution.\n         *\n         * @param {Object} institution\n         */\n        service.syncCampuses = function (institution) {\n            var currentCoreId = institution.coreId;\n            if (currentCoreId) {\n                var activeCoreId = InstitutionFactory.getCoreId();\n                if (activeCoreId && currentCoreId === activeCoreId) {\n                    InstitutionFactory.setCampuses(angular.copy(institution.campus));\n                }\n                InstitutionsListFactory.setCampuses(angular.copy(institution.campus));\n            }\n        };\n\n        /**\n         * Search for institution.\n         *\n         * @param {String} searchPhrase\n         * @returns {Promise.array}\n         */\n        service.searchInstitutions = function (searchPhrase) {\n            var deferred = $q.defer(),\n                institutions = [];\n\n            if (!searchPhrase || !searchPhrase.length) {\n                deferred.resolve(institutions);\n            } else {\n                var InstitutionsSearchModel = service.getInstitutionSearchModel();\n                InstitutionsSearchModel.get(\n                    { searchPhrase: searchPhrase },\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n\n                        if (data && data.results) {\n                            angular.forEach(data.results, function (item) {\n                                institutions.push({\n                                    coreId: item.coreId,\n                                    name: item.name,\n                                    active: item.active,\n                                });\n                            });\n                        }\n\n                        deferred.resolve(institutions);\n                        deferred = null;\n                    },\n                    function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        deferred.resolve(institutions);\n                        deferred = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Gets the belongs to list\n         *\n         * @returns {array}\n         */\n        service.getBelongsToList = function () {\n            return TuProfileService.getBelongsToList();\n        };\n\n        /**\n         * Search for institution.\n         *\n         * @param {String} searchPhrase\n         * @returns {Promise.array}\n         */\n        service.searchTopLevelInstitutions = function (searchPhrase) {\n            var deferred = $q.defer();\n\n            if (!searchPhrase || searchPhrase.length < 1) {\n                deferred.resolve([]);\n            } else {\n                var InstitutionsSearchModel = service.getTopLevelInstitutionSearchModel();\n                InstitutionsSearchModel.get(\n                    { searchPhrase: searchPhrase },\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n                        deferred.resolve(data.results);\n                        deferred = null;\n                    },\n                    function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        deferred.resolve([]);\n                        deferred = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Search for institution departments.\n         *\n         * @param {int} parentCoreId\n         * @returns {Promise.array}\n         */\n        service.getDepartments = function (parentCoreId) {\n            var deferred = $q.defer();\n\n            if (!parentCoreId) {\n                deferred.resolve([]);\n            } else {\n                var InstitutionsSearchModel = service.getDepartmentsListModel();\n                InstitutionsSearchModel.get(\n                    { parentCoreId: parentCoreId },\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n                        deferred.resolve(data.results);\n                        deferred = null;\n                    },\n                    function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        deferred.resolve([]);\n                        deferred = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        service.isAllStatistic = function (handle) {\n            return handle === 'all';\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('InstitutionsListService', [\n            '$resource',\n            '$q',\n            '$log',\n            '$localStorage',\n            'constants',\n            'RequestsQueueService',\n            'InstitutionFactory',\n            'InstitutionsListFactory',\n            'TuProfileService',\n            'TimeService',\n            App.services.InstitutionsList\n        ]);\n\n} (window.angular));\n\n(function (angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.institutionsSubscriptions = function (\n        $scope,\n        constants,\n        InstitutionsSubscriptionsService,\n        InstitutionsListFactory,\n        InstitutionFactory,\n        WatchService,\n        InstitutionsListSubscriptionsFactory\n    ) {\n        var controller = this;\n        controller.isLogVisible = {};\n        controller.subscriptionsLog = {};\n        controller.subscriptionsLogLoading = {};\n        controller.downgradeCheckInProgress = false;\n        controller.maxDate = null;\n        controller.types = {\n            tu: 'tu',\n            tm: 'tm'\n        };\n\n        controller.getCurrentDate = function () {\n            return moment().format('x');\n        };\n\n        controller.initDowngradeAllowed = function () {\n            controller.downgradeAllowed = {\n                'tu': true,\n                'tm': true\n            };\n        };\n        controller.initDowngradeAllowed();\n\n        controller.handleHistoryLogClick = function (type) {\n            if (!controller.isHistoryLogVisible(type)) {\n                // load subscriptions log\n                controller.loadSubscriptions(type);\n            }\n            controller.toggleSubscriptionsLog(type);\n        };\n\n        controller.loadSubscriptions = function (type) {\n            controller.subscriptionsLogLoading[type] = true;\n            InstitutionsSubscriptionsService.getLog($scope.institution.id, type).then(function (results) {\n                controller.subscriptionsLogLoading[type] = false;\n                controller.subscriptionsLog[type] = results;\n            });\n        };\n\n        controller.toggleSubscriptionsLog = function (type) {\n            controller.isLogVisible[type] = !controller.isLogVisible[type];\n        };\n\n        controller.isHistoryLogVisible = function (type) {\n            return controller.isLogVisible[type] || false;\n        };\n\n        controller.isSubscriptionsLogLoading = function (type) {\n            return controller.subscriptionsLogLoading[type] || false;\n        };\n\n        controller.getSubscriptionsLog = function (type) {\n            return controller.subscriptionsLog[type] || [];\n        };\n\n        /**\n         * Check if should display loading screen for subscriptions tab - profiles side\n         *\n         * @returns {boolean}\n         */\n        controller.isProfilesLoading = function () {\n            return controller.downgradeCheckInProgress;\n        };\n\n        /**\n         * Gets whether TU/TM sliders has to be disabled in subscription tab\n         * Triggers only for top level institutions and client departments\n         */\n        controller.isDowngradeAllowed = function () {\n            var coreIdKey = 'coreId',\n                typeIdKey = 'typeId';\n            // reset check child data\n            controller.initDowngradeAllowed();\n            if ($scope.institution &&\n                $scope.institution.hasOwnProperty(coreIdKey) &&\n                $scope.institution[coreIdKey] !== null &&\n                angular.isNumber($scope.institution[coreIdKey]) &&\n                $scope.institution[coreIdKey] > 0 &&\n                $scope.institution.hasOwnProperty(typeIdKey) &&\n                $scope.institution[typeIdKey] !== null &&\n                (\n                    $scope.institution[typeIdKey] === constants.typeId.topLevelInstitutionId ||\n                    $scope.institution[typeIdKey] === constants.typeId.clientDepartmentId\n                )\n            ) {\n                controller.downgradeCheckInProgress = true;\n                InstitutionsSubscriptionsService.isDowngradeAllowed($scope.institution[coreIdKey]).then(function (results) {\n                    controller.downgradeAllowed = results;\n                    controller.downgradeCheckInProgress = false;\n                });\n            }\n        };\n\n        /**\n         * Is TU downgrade allowed on UI\n         *\n         * @returns {boolean}\n         */\n        controller.isDowngradeAllowedTu = function (isSubscribed) {\n            // if the institution is not subscribed, allow downgrade.\n            if (typeof isSubscribed !== 'undefined' && isSubscribed !== null && isSubscribed) {\n                return controller.downgradeAllowed.tu && isSubscribed;\n            }\n\n            return true;\n        };\n\n        /**\n         * Is TM downgrade allowed on UI\n         *\n         * @returns {boolean}\n         */\n        controller.isDowngradeAllowedTm = function (isSubscribed) {\n            // if the institution is not subscribed, allow downgrade.\n            if (typeof isSubscribed !== 'undefined' && isSubscribed !== null && isSubscribed) {\n                return controller.downgradeAllowed.tm && isSubscribed;\n            }\n\n            return true;\n        };\n\n        controller.handleInstitutionChange = function () {\n            controller.isDowngradeAllowed();\n            controller.isLogVisible = {};\n        };\n\n        controller.maxDateWatch = function (value) {\n            if (value) {\n                controller.maxDate = value;\n                if ($scope.institution.subscriptions &&\n                    $scope.institution.subscriptions.tm &&\n                    $scope.institution.subscriptions.tm.endDate\n                ) {\n                    $scope.institution.subscriptions.tm.endDate = value;\n                }\n            }\n        };\n\n        controller.subscriptionsWatch = function (value) {\n            if (value &&\n                $scope.institution.subscriptions &&\n                $scope.institution.subscriptions.tm &&\n                $scope.institution.subscriptions.tm.endDate\n            ) {\n                var currentDate = parseInt($scope.institution.subscriptions.tm.endDate);\n                if (currentDate < controller.maxDate) {\n                    $scope.institution.subscriptions.tm.endDate = controller.maxDate;\n                }\n            }\n        };\n\n        /**\n         * Allow to assign TU subscriptions.\n         *\n         * @returns {boolean}\n         */\n        controller.allowTu = function () {\n            return !!($scope.institution && $scope.institution.typeId !== constants.typeId.advancedProgramId);\n        };\n\n        controller.hasSubscriptionsChangesWatch = function (has) {\n            if (has) {\n                InstitutionsListSubscriptionsFactory.setHasSubscriptionsChanges(false);\n                controller.handleInstitutionChange();\n            }\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, 'institution.id', controller.handleInstitutionChange);\n            WatchService.create($scope, InstitutionsListFactory.isInvalidDates, controller.maxDateWatch);\n            WatchService.create($scope, InstitutionFactory.getSubscriptions, controller.subscriptionsWatch);\n            WatchService.create($scope, InstitutionsListSubscriptionsFactory.hasSubscriptionsChanges, controller.hasSubscriptionsChangesWatch);\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to subscriptions tab visibility changes\n        var cancelSubscriptionTabWatch = WatchService.create(\n            $scope,\n            InstitutionsListFactory.isSubscriptionsTabSelected,\n            function (selected) {\n                if (selected) {\n                    cancelSubscriptionTabWatch();\n                    controller.init();\n                }\n            });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsSubscriptionsController', [\n            '$scope',\n            'constants',\n            'InstitutionsSubscriptionsService',\n            'InstitutionsListFactory',\n            'InstitutionFactory',\n            'WatchService',\n            'InstitutionsListSubscriptionsFactory',\n            App.controllers.institutionsSubscriptions\n        ]);\n\n} (window.angular, window.moment));\n\n(function(angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.institutionsSubscriptions = function (\n        $resource,\n        $log,\n        constants\n    ) {\n        var service = {};\n\n        service.getModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/subscription-history/:id?field[]=startDate&field[]=endDate&field[]=createdByFullName&sorting[createdAt]=desc', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        service.getDowngradeAllowedModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/core-id/:id/allow-downgrade');\n        };\n\n        service.filterByDate = function (subscritpions) {\n            var filtered = [];\n\n            angular.forEach(subscritpions, function(subscritpion) {\n                if (subscritpion.startDate && subscritpion.endDate) {\n                    filtered.push(subscritpion);\n                }\n            });\n\n            return filtered;\n        };\n\n        service.getLog = function (institutionId, type) {\n            if (!institutionId || !type) {\n                throw 'Missing Required';\n            }\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n\n            return service.getModel().get({\n                id: institutionId,\n                'filter[type]' : '=' + type\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                return data.results;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                } else {\n                    return [];\n                }\n            }).then(service.filterByDate);\n        };\n\n        /**\n         * Checks if TU/TM downgrade is allowed for institution core id\n         *\n         * @param institutionId\n         * @returns {*}\n         */\n        service.isDowngradeAllowed = function (institutionId) {\n            if (!institutionId) {\n                throw 'Missing Required';\n            }\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n\n            return service.getDowngradeAllowedModel().get({\n                id: institutionId\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                } else {\n                    return [];\n                }\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('InstitutionsSubscriptionsService', [\n            '$resource',\n            '$log',\n            'constants',\n            App.services.institutionsSubscriptions\n        ]);\n\n}(window.angular, window.moment));\n\n(function(angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.institutionsListSubscriptions = function () {\n        var hasSubscriptionsChanges;\n        return {\n            setHasSubscriptionsChanges: function (has) {\n                hasSubscriptionsChanges = has;\n            },\n            hasSubscriptionsChanges: function() {\n                return hasSubscriptionsChanges;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('InstitutionsListSubscriptionsFactory', App.factories.institutionsListSubscriptions);\n\n}(window.angular, window.moment));\n\n(function (angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.institutionsListStatus = function (\n        $scope,\n        constants,\n        InstitutionsListFactory,\n        InstitutionsListService,\n        WatchService\n    ) {\n        var controller = this;\n\n        controller.handleInstitutionChange = function (institution) {\n            if (!institution) {\n                return;\n            }\n            controller.institution = angular.copy(institution);\n            controller.setType();\n            controller.setCountry();\n            controller.setBelongsTo();\n            controller.setTuRegion();\n            controller.setTmRegion();\n\n            controller.isAdvancedProgram = InstitutionsListService.isAdvancedProgram(controller.institution.typeId);\n        };\n\n        controller.setType = function () {\n            angular.forEach(controller.typesList, function (item) {\n                if (item.value === controller.institution.typeId) {\n                    controller.institution.type = item.label;\n                }\n            });\n        };\n\n        controller.setCountry = function () {\n            angular.forEach(controller.countryList, function (item) {\n                if (item.countryCode === controller.institution.countryCode) {\n                    controller.institution.country = item.name;\n                }\n            });\n        };\n\n        controller.setBelongsTo = function () {\n            angular.forEach(controller.belongsToList, function (item) {\n                if (item.id === controller.institution.belongsTo) {\n                    controller.institution.belongsToName = item.title;\n                }\n            });\n        };\n\n        controller.setTuRegion = function () {\n            angular.forEach(controller.tuRegionsList, function (item) {\n                if (item.tid === controller.institution.drupalTuRegionId) {\n                    controller.institution.tuRegion = item.name;\n                }\n            });\n        };\n\n        controller.setTmRegion = function () {\n            angular.forEach(controller.tmRegionsList, function (item) {\n                if (item.tid === controller.institution.drupalTmRegionId) {\n                    controller.institution.tmRegion = item.name;\n                }\n            });\n        };\n\n        controller.initLists = function () {\n            controller.typesList = [];\n            InstitutionsListService.getTypeFilterData(true).then(function (results) {\n                controller.typesList = results;\n                controller.setType();\n            });\n            controller.countryList = [];\n            InstitutionsListService.getCountries().then(function (results) {\n                controller.countryList = results;\n                controller.setCountry();\n            });\n            controller.belongsToList = InstitutionsListService.getBelongsToList();\n            InstitutionsListService.getTuRegions().then(function (list) {\n                controller.tuRegionsList = list;\n                controller.setTuRegion();\n            });\n            InstitutionsListService.getTmRegions().then(function (list) {\n                controller.tmRegionsList = list;\n                controller.setTmRegion();\n            });\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, 'institutionBeforeChanges', controller.handleInstitutionChange);\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n            controller.initLists();\n        };\n\n        // listen to subscriptions tab visibility changes\n        var cancelTabWatch = WatchService.create(\n            $scope,\n            InstitutionsListFactory.isStatusTabSelected,\n            function (selected) {\n                if (selected) {\n                    cancelTabWatch();\n                    controller.init();\n                }\n            }\n        );\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsListStatusController', [\n            '$scope',\n            'constants',\n            'InstitutionsListFactory',\n            'InstitutionsListService',\n            'WatchService',\n            App.controllers.institutionsListStatus\n        ]);\n\n} (window.angular, window.moment));\n\n(function(angular, airbrakeJs) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.ExceptionHandler = function ($log, constants, version, InstitutionFactory, UserFactory) {\n        if (!constants.airbrake.enabled) {\n            return function (exception) {\n                $log.error(exception);\n            };\n        }\n        var airbrake = new airbrakeJs.Client({\n            projectId: constants.airbrake.projectId,\n            projectKey: constants.airbrake.key\n        });\n        airbrake.addFilter(function (notice) {\n            notice.context.environment = constants.env;\n            notice.context.version = version;\n            notice.params = {};\n            if (!InstitutionFactory.isEmpty()) {\n                notice.params.institutionCoreId = InstitutionFactory.getCoreId();\n            }\n            if (UserFactory.hasData()) {\n                notice.params.username = UserFactory.getUserName();\n            }\n\n            return notice;\n        });\n\n        return function (exception, cause) {\n            $log.error(exception);\n            airbrake.notify({error: exception, params: {angular_cause: cause}});\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('$exceptionHandler', [\n            '$log',\n            'constants',\n            'version',\n            'InstitutionFactory',\n            'UserFactory',\n            App.factories.ExceptionHandler\n        ]);\n\n}(window.angular, window.airbrakeJs));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Modal = function ($uibModal) {\n        var service = {\n            modalDefaults : {\n                backdrop: true,\n                keyboard: true,\n                modalFade: true,\n                templateUrl: '/scripts/shared/modal/modalView.html'\n            },\n            modalOptions : {\n                closeButtonText: 'Close',\n                actionButtonText: 'OK',\n                actionButtonClass: 'danger',\n                headerText: 'Proceed?',\n                bodyText: 'Perform this action?'\n            }\n        };\n\n        service.show = function (customModalDefaults, customModalOptions) {\n            if (!customModalDefaults) {\n                customModalDefaults = {};\n            }\n\n            // create temp objects to work with since we're in a singleton service\n            var tempModalDefaults = {},\n                tempModalOptions = {};\n\n            //Map angular-ui modal custom defaults to modal defaults defined in service\n            angular.extend(tempModalDefaults, service.modalDefaults, customModalDefaults);\n\n            //Map modal.html $scope custom properties to defaults defined in service\n            angular.extend(tempModalOptions, service.modalOptions, customModalOptions);\n\n            if (!tempModalDefaults.controller) {\n                tempModalDefaults.controller = function ($scope, $uibModalInstance) {\n                    $scope.modalOptions = tempModalOptions;\n                    $scope.modalOptions.ok = function (result) {\n                        $uibModalInstance.close(result);\n                    };\n                    $scope.modalOptions.close = function (result) {\n                        $uibModalInstance.dismiss('cancel');\n                    };\n                };\n            }\n\n            return $uibModal.open(tempModalDefaults).result;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('ModalService', [\n            '$uibModal',\n            App.services.Modal\n        ]);\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Watch = function () {\n        var service = {};\n\n        service.create = function ($scope, watchExpression, listener, objectEquality, prettyPrintExpression) {\n            if (typeof $scope !== 'object' || typeof listener !== 'function') {\n                return false;\n            }\n            var stopWatch = $scope.$watch(watchExpression, function (newValue, oldValue) {\n                try {\n                    listener(newValue, oldValue);\n                } catch (e) {\n                    stopWatch();\n                    throw e;\n                }\n            }, objectEquality, prettyPrintExpression);\n\n            return stopWatch;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('WatchService', [\n            App.services.Watch\n        ]);\n}(window.angular));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {directives:{}});\n\n    App.directives.progressCircle = function () {\n        return {\n            scope: {\n                progressCircle: '='\n            },\n            link: function (scope) {\n                scope.getParams = function (progressCircle) {\n                    switch (progressCircle) {\n                        case 'pending':\n                            scope.percent = 0;\n                            scope.colour = 'grey';\n                            scope.text = 'Pending';\n                            break;\n                        case 'progress':\n                            scope.percent = 50;\n                            scope.colour = 'blue';\n                            scope.text = 'Progress';\n                            break;\n                        case 'success':\n                            scope.percent = 100;\n                            scope.colour = 'green';\n                            scope.text = 'Success';\n                            break;\n                        case 'failure':\n                            scope.percent = 100;\n                            scope.colour = 'red';\n                            scope.text = 'Failed';\n                            break;\n                        default:\n                            scope.percent = 0;\n                            scope.colour = '';\n                            scope.text = 'No Status';\n                            break;\n                    }\n                };\n                scope.$watch('progressCircle', function(value, oldValue) {\n                    if (!angular.equals(value, oldValue)) {\n                        scope.getParams(value);\n                    }\n                });\n                scope.getParams(scope.progressCircle);\n            },\n            restrict: 'A',\n            templateUrl: '/scripts/shared/progressCircle/progressCircleView.html'\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .directive('progressCircle', App.directives.progressCircle);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.sharedProfile = function (\n        $scope,\n        $location, \n        $log,\n        $state,\n        constants, \n        SharedProfileService,\n        SharedProfileFactory,\n        InstitutionFactory,\n        UserFactory,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n\n        $scope.loadInProgress = true;\n        $scope.generalHistoryDisabled = false;\n        $scope.fetchingHistory = false;\n        $scope.showGeneralHistoryBlock = false;\n        SharedProfileFactory.setCampusFormVisibility(false);\n        $scope.showCampusForm = SharedProfileFactory.isCampusFormVisible();\n        $scope.activeTab = SharedProfileFactory.getActiveTabs().general;\n        controller.historyLog = {\n            totalReturned: 0,\n            total: 0\n        };\n\n        /**\n         * Request history log from service.\n         */\n        controller.loadHistoryLog = function () {\n            $scope.fetchingHistory = false;\n            $scope.generalHistoryDisabled = true;\n            if (!SharedProfileFactory.isLoadMoreInProgress()) {\n                $scope.fetchingHistory = true;\n            }\n            SharedProfileService.getGeneralHistory(SharedProfileFactory.getId(), true, SharedProfileFactory.getLogLimit()).then(function (data) {\n                $scope.generalHistoryDisabled = false;\n                $scope.fetchingHistory = false;\n                $scope.showGeneralHistoryBlock = true;\n                $scope.generalHistoryLog = data.results;\n                controller.historyLog.total = data.totalMatching;\n                controller.historyLog.totalReturned = data.totalFiltered;\n                SharedProfileFactory.setLoadMoreInProgress(false);\n            });\n        };\n\n        /**\n         * Handle history log load more click.\n         */\n        controller.handleLoadMoreHistoryLog = function() {\n            SharedProfileFactory.setLogLimit(SharedProfileFactory.getLogLimit()+5);\n            SharedProfileFactory.setLoadMoreInProgress(true);\n            controller.loadHistoryLog();\n        };\n\n        /**\n         * Get status of loading more history log .\n         *\n         * @returns {bool}\n         */\n        controller.fetchingMoreHistoryLog = function () {\n            return SharedProfileFactory.isLoadMoreInProgress();\n        };\n\n        /**\n         * Actions to do when general history log is activated.\n         */\n        $scope.handleHistoryLogClick = function () {\n            $scope.handleGeneralHistoryCloseClick();\n            if ($scope.showGeneralHistoryBlock) {\n                controller.loadHistoryLog();\n            }\n        };\n\n        $scope.isGeneralTabActive = function () {\n            return SharedProfileFactory.isGeneralTabSelected();\n        };\n\n        $scope.isCampusesTabActive = function () {\n            return SharedProfileFactory.isCampusesTabSelected();\n        };\n\n        $scope.isRightSidePanelActive = function () {\n            // general tab is active\n            if (SharedProfileFactory.isGeneralTabSelected() && $scope.showGeneralHistoryBlock) {\n                return true;\n            }\n            // campus tab is active\n            if (SharedProfileFactory.isCampusesTabSelected() && $scope.showCampusForm) {\n                return true;\n            }\n        };\n\n        /**\n         * Actions to do when general history log is closed.\n         */\n        $scope.handleGeneralHistoryCloseClick = function () {\n            SharedProfileFactory.setLogLimit(1);\n            $scope.generalHistoryLog = {};\n            $scope.showGeneralHistoryBlock = !$scope.showGeneralHistoryBlock;\n        };\n\n        controller.handleHistoryLogVisibility = function() {\n            return SharedProfileFactory.getLogLimit() < controller.historyLog.total;\n        };\n\n        controller.initWatches = function () {\n            // listen to active profile tab changes\n            WatchService.create($scope, 'activeTab', function (newValue, oldValue) {\n                if (!SharedProfileFactory.hasSelectedTab() || !angular.equals(newValue, oldValue)) {\n                    SharedProfileFactory.setSelectedTabId(newValue);\n                }\n            });\n\n            // watch for core ID changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, function (coreId) {\n                if (!coreId) {\n                    return false;\n                }\n                $scope.loadInProgress = true;\n                if (!UserFactory.noAccess($state.current.name)) {\n                    // load institution's shared profile by Core ID\n                    SharedProfileService.getSharedProfile(coreId).then(function (data) {\n                        $scope.loadInProgress = false;\n                        // set shared profile for system wide use\n                        SharedProfileFactory.setData(data);\n\n                        $scope.sharedProfile = data;\n                        $scope.showGeneralHistoryBlock = false;\n                        $scope.$broadcast(constants.events.institutionSharedProfileChanges);\n                    });\n                } else {\n                    // if user doesn't have access, empty previously loaded data\n                    $scope.loadInProgress = false;\n                    SharedProfileFactory.setData(null);\n                }\n            });\n\n            // watch for campus form visibility changes\n            WatchService.create($scope, SharedProfileFactory.isCampusFormVisible, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.showCampusForm = newValue;\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('SharedProfileController', [\n            '$scope',\n            '$location',\n            '$log',\n            '$state',\n            'constants',\n            'SharedProfileService',\n            'SharedProfileFactory',\n            'InstitutionFactory',\n            'UserFactory',\n            'WatchService',\n            App.controllers.sharedProfile\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.SharedProfileService = function ($resource, $q, $log, constants) {\n        var service = {\n            generalHistory: null,\n            deferred : {\n                getGeneralHistory: null\n            }\n        };\n\n        /**\n         * Get shared profile model instance when Core ID is used.\n         *\n         * @returns {$resource}\n         */\n        service.getSharedProfilesCoreModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/shared-profile/core-id/:id');\n        };\n\n        /**\n         * Get shared profile history model instance.\n         * \n         * @returns {$resource}\n         */\n        service.getSharedProfilesHistoryModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/shared-profile-history?sorting[modifiedAt]=desc&count=10&filter[recordId]=:recordId');\n        };\n\n        /**\n         * Get shared profile model instance.\n         *\n         * @returns {$resource}\n         */\n        service.getSharedProfilesModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/shared-profile/:id', null, {\n                update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Get shared profile data.\n         *\n         * @param {int} coreId\n         * @returns {Promise}\n         */\n        service.getSharedProfile = function (coreId) {\n            if (!coreId) {\n                throw 'Missing Required';\n            }\n\n            var SharedProfilesModel = service.getSharedProfilesCoreModel();\n            return SharedProfilesModel.get({id: coreId}).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.toJSON();\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return [];\n                }\n            );\n        };\n\n        /**\n         * Get shared profile history log.\n         * \n         * @param {string} recordId\n         * @param {boolean} noCache\n         * @param {int} limit\n         * @returns {Promise}\n         */\n        service.getGeneralHistory = function (recordId, noCache, limit) {\n            if (!recordId) {\n                return false;\n            }\n            noCache = noCache || false;\n            // process already running\n            if (!service.deferred.getGeneralHistory) {\n                service.deferred.getGeneralHistory = $q.defer();\n            } else {\n                return service.deferred.getGeneralHistory.promise;\n            }\n            var deferred = service.deferred.getGeneralHistory;\n\n            if (!noCache && service.generalHistory) {\n                deferred.resolve(service.generalHistory);\n            } else {\n                var SharedProfilesHistoryModel = service.getSharedProfilesHistoryModel();\n                SharedProfilesHistoryModel.get(\n                    {\n                        recordId: recordId,\n                        limit: limit\n                    },\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n                        service.generalHistory = data;\n                        deferred.resolve(service.generalHistory);\n                        service.deferred.getGeneralHistory = null;\n                    }, function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        service.generalHistory = [];\n                        deferred.resolve(service.generalHistory);\n                        service.deferred.getGeneralHistory = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Submit shared profile general data.\n         *\n         * @param {Object} profileData\n         * @returns {Promise}\n         */\n        service.saveGeneral = function (profileData) {\n            var SharedProfilesModel = service.getSharedProfilesModel(),\n                dataToUpdate = {\n                    foundationYear:null,\n                    fullName: null,\n                    smallLogo: {\n                        \"path\": null,\n                        \"title\": null,\n                        \"description\": null\n                    },\n                    mediumLogo: {\n                        \"path\": null,\n                        \"title\": null,\n                        \"description\": null\n                    },\n                    largeLogo: {\n                        \"path\": null,\n                        \"title\": null,\n                        \"description\": null\n                    }\n                };\n\n            return SharedProfilesModel.update(\n                {id: profileData.id},\n                service.filterObject(dataToUpdate, profileData)\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.update = function (sharedProfileId, dataToUpdate) {\n            var UpdateModel = service.getSharedProfilesModel();\n            return UpdateModel.update(\n                {id: sharedProfileId},\n                dataToUpdate\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n        \n        /**\n         * Fill one object keys with other object values.\n         *\n         * @param {Object} filters\n         * @param {Object} object\n         * @returns {Object}\n         */\n        service.filterObject = function (filters, object) {\n            var filteredObject = {};\n            if (filters && object && typeof filters === 'object' && typeof object === 'object') {\n                filteredObject = angular.copy(filters);\n                angular.forEach(filters, function (value, key) {\n                    if (value && typeof value === 'object' && object[key]) {\n                        angular.forEach(value, function (subValue, subKey) {\n                            if (subValue === null && object[key][subKey]) {\n                                filteredObject[key][subKey] = object[key][subKey];\n                            }\n                        });\n                    } else if (value === null && object[key]) {\n                        filteredObject[key] = object[key];\n                    }\n                });\n            }\n\n            return filteredObject;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('SharedProfileService', ['$resource', '$q', '$log', 'constants', App.services.SharedProfileService]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.sharedProfile = function (\n        $scope,\n        $log,\n        constants,\n        SharedProfileService,\n        NotifierFactory,\n        SharedProfileFactory,\n        InstitutionFactory,\n        AuthenticationService,\n        ModalService,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        controller.devMode = constants.dev;\n        controller.acceptedFiles = 'image/jpeg, image/pjpeg, image/jpeg, image/pjpeg';\n        $scope.generalSubmitDisabled = false;\n        $scope.displayRemoveLink = false;\n        $scope.uploadEnabled = true;\n        $scope.forms = {};\n        $scope.profileBeforeChanges = {};\n        $scope.foundationYearSpinOptions = {\n            verticalbuttons: true,\n            min: 0,\n            max: new Date().getFullYear()\n        };\n        $scope.displaySpinner = false;\n        SharedProfileFactory.setSelectedTabId(0);\n\n        /**\n         * Last uploaded image holder\n         *\n         * @param {string} smallLogoPath\n         * @param {string} mediumLogoPath\n         * @param {string} largeLogoPath\n         * @returns {{smallLogoPath: string, mediumLogoPath: string, largeLogoPath: string}}\n         */\n        controller.initLastUploaded = function (smallLogoPath, mediumLogoPath, largeLogoPath) {\n            smallLogoPath = (typeof smallLogoPath === 'undefined') ? null : smallLogoPath;\n            mediumLogoPath = (typeof mediumLogoPath === 'undefined') ? null : mediumLogoPath;\n            largeLogoPath = (typeof largeLogoPath === 'undefined') ? null : largeLogoPath;\n\n            return { 'smallLogoPath': smallLogoPath, 'mediumLogoPath': mediumLogoPath, 'largeLogoPath': largeLogoPath };\n        };\n        // init lastUploaded variable\n        controller.lastUploaded = controller.initLastUploaded();\n\n        /**\n         * Modify scope variable on logo remove.\n         */\n        controller.handleLogoRemoved = function () {\n            // show upload area\n            $scope.uploadEnabled = true;\n            // enable update button\n            $scope.generalSubmitDisabled = false;\n            // hide remove link below uploader\n            $scope.displayRemoveLink = false;\n        };\n\n        /**\n         * Check profile logo data and normalize it.\n         */\n        controller.checkProfileLogos = function () {\n            if (!$scope.profile) {\n                $scope.profile = {};\n            }\n            if (!$scope.profile.smallLogo) {\n                $scope.profile.smallLogo = {};\n            }\n            if (!$scope.profile.mediumLogo) {\n                $scope.profile.mediumLogo = {};\n            }\n            if (!$scope.profile.largeLogo) {\n                $scope.profile.largeLogo = {};\n            }\n        };\n\n        /**\n         * Initialize display logo paths.\n         */\n        controller.assignDefaultDisplayLogos = function () {\n            $scope.profile.smallLogoPath = null;\n            $scope.profile.mediumLogoPath = null;\n            $scope.profile.largeLogoPath = null;\n        };\n\n        /**\n         * Copy profile logo details to display logo.\n         */\n        controller.copyProfileToDisplayLogos = function () {\n            if (angular.isDefined($scope.profile.smallLogo) && $scope.profile.smallLogo.hasOwnProperty('path')) {\n                $scope.profile.smallLogoPath = $scope.profile.smallLogo.path;\n            }\n            if (angular.isDefined($scope.profile.mediumLogo) && $scope.profile.mediumLogo.hasOwnProperty('path')) {\n                $scope.profile.mediumLogoPath = $scope.profile.mediumLogo.path;\n            }\n            if (angular.isDefined($scope.profile.largeLogo) && $scope.profile.largeLogo.hasOwnProperty('path')) {\n                $scope.profile.largeLogoPath = $scope.profile.largeLogo.path;\n            }\n        };\n\n        /**\n         * Copy last uploaded logo paths to profile logo.\n         */\n        controller.copyLastUploadedToProfileLogos = function () {\n            controller.checkProfileLogos();\n            if (controller.lastUploaded.smallLogoPath) {\n                $scope.profile.smallLogo.path = controller.lastUploaded.smallLogoPath;\n            }\n            if (controller.lastUploaded.mediumLogoPath) {\n                $scope.profile.mediumLogo.path = controller.lastUploaded.mediumLogoPath;\n            }\n            if (controller.lastUploaded.largeLogoPath) {\n                $scope.profile.largeLogo.path = controller.lastUploaded.largeLogoPath;\n            }\n        };\n\n        /**\n         * Copy last uploaded logo paths to profile display logo paths\n         */\n        controller.copyLastUploadedToProfileDisplayLogos = function () {\n            if (controller.lastUploaded.smallLogoPath) {\n                $scope.profile.smallLogoPath = controller.lastUploaded.smallLogoPath;\n            }\n            if (controller.lastUploaded.mediumLogoPath) {\n                $scope.profile.mediumLogoPath = controller.lastUploaded.mediumLogoPath;\n            }\n            if (controller.lastUploaded.largeLogoPath) {\n                $scope.profile.largeLogoPath = controller.lastUploaded.largeLogoPath;\n            }\n        };\n\n        /**\n         * Assign display logos on init\n         */\n        controller.assignDisplayLogos = function () {\n            controller.checkProfileLogos();\n            controller.assignDefaultDisplayLogos();\n            controller.copyProfileToDisplayLogos();\n        };\n\n        controller.copyResponseToLastUploaded = function (response) {\n            if (response.small.path && response.small.status) {\n                controller.lastUploaded.smallLogoPath = response.small.path;\n            }\n            if (response.medium.path && response.medium.status) {\n                controller.lastUploaded.mediumLogoPath = response.medium.path;\n            }\n            if (response.large.path && response.large.status) {\n                controller.lastUploaded.largeLogoPath = response.large.path;\n            }\n        };\n\n        /**\n         * Assign display logos on submit\n         */\n        controller.assignDisplayLogo = function (clearLogos, response) {\n            response = (typeof response === 'undefined') ? false : response;\n            controller.checkProfileLogos();\n            if (response) {\n                controller.copyResponseToLastUploaded(response);\n                controller.copyLastUploadedToProfileLogos();\n            }\n            controller.copyLastUploadedToProfileDisplayLogos();\n            if (!clearLogos) {\n                controller.lastUploaded = controller.initLastUploaded();\n            }\n        };\n\n        /**\n         * DropZone options url function.\n         *\n         * @returns {string}\n         */\n        controller.getUploadUrl = function () {\n            return constants.api.institutions.url + '/v1/shared-profile-logo/core-id/' + InstitutionFactory.getCoreId();\n        };\n\n        /**\n         * Remove profile images from scope.\n         */\n        $scope.handleClearLogosClick = function () {\n            var modalOptions = {\n                closeButtonText: 'No',\n                actionButtonText: 'Yes',\n                headerText: 'Delete Logo',\n                bodyText: 'Are you sure you wish to delete profile logos?'\n            };\n            ModalService.show({}, modalOptions).then(function (result) {\n                $scope.handleGeneralSubmit(true);\n            });\n        };\n\n        /**\n         * Actions to do when profile form is submitted.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleGeneralSubmit = function (clearLogos) {\n            $scope.displaySpinner = true;\n            clearLogos = angular.isDefined(clearLogos) ? clearLogos : false;\n            if (\n                $scope.generalSubmitDisabled ||\n                !$scope.forms.generalForm ||\n                !$scope.forms.generalForm.$valid\n            ) {\n                return false;\n            }\n            $scope.generalSubmitDisabled = true;\n            controller.copyLastUploadedToProfileLogos();\n            if (clearLogos) {\n                $scope.profile.smallLogo.path = null;\n                $scope.profile.mediumLogo.path = null;\n                $scope.profile.largeLogo.path = null;\n            }\n            SharedProfileService.saveGeneral($scope.profile).then(function (response) {\n                $scope.generalSubmitDisabled = false;\n                // if successful update\n                if (response.status) {\n                    // update profile object\n                    controller.assignDisplayLogo(clearLogos, response);\n                    if (clearLogos) {\n                        $scope.profile.smallLogoPath = null;\n                        $scope.profile.mediumLogoPath = null;\n                        $scope.profile.largeLogoPath = null;\n                        // show status message\n                        NotifierFactory.show(\n                            'success',\n                            'Logos removed successfully!',\n                            'Institution Details General data'\n                        );\n                    } else {\n                        // show status message\n                        NotifierFactory.show(\n                            response.status ? 'success' : 'error',\n                            response.status ? 'Saved successfully!' : 'Saving failed!',\n                            'Institution Details General data'\n                        );\n                    }\n                    $scope.profileBeforeChanges = angular.copy($scope.profile);\n                } else {\n                    $scope.profile = angular.copy($scope.profileBeforeChanges);\n                }\n\n                if (!clearLogos) {\n                    $scope.removeUploaderImage();\n                }\n                $scope.displaySpinner = false;\n            });\n        };\n\n        /**\n         * Remove dropZone files\n         */\n        controller.removeDropZoneUploadedImage = function () {\n            if (controller.logoDropzoneInstance.files.length > 1) {\n                controller.logoDropzoneInstance.removeFile(controller.logoDropzoneInstance.files[0]);\n            } else {\n                controller.logoDropzoneInstance.removeAllFiles();\n            }\n        };\n\n        /**\n         * Set of actions to remove uploader image\n         */\n        $scope.removeUploaderImage = function () {\n            if (!$scope.generalSubmitDisabled) {\n                controller.removeDropZoneUploadedImage();\n                controller.handleLogoRemoved();\n                controller.lastUploaded = controller.initLastUploaded();\n            } else {\n                NotifierFactory.show(\n                    'info',\n                    'Logo upload in progress, please wait.',\n                    ''\n                );\n            }\n        };\n\n        /**\n         * DropZone init.\n         */\n        controller.handleInit = function () {\n            this.isValid = true;\n            this.globalAccept = false;\n            this.localAccept = false;\n        };\n\n        /**\n         * DropZone handle accept.\n         *\n         * @param file\n         * @param done\n         */\n        controller.handleAccept = function (file, done) {\n            file.acceptFile = function () {\n                $scope.uploadEnabled = false;\n                $scope.$apply();\n                done();\n            };\n        };\n\n        /**\n         * Actions to do when file is uploaded to server.\n         *\n         * @param {Object} file - instance of dropzone file\n         * @param {Object} response - server response object\n         */\n        controller.handleLogoUploaded = function (file, response) {\n            var success = response &&\n                response.hasOwnProperty('large') &&\n                response.hasOwnProperty('medium') &&\n                response.hasOwnProperty('small');\n            if (success) {\n                angular.forEach(response, function (data) {\n                    if (!data.status) {\n                        success = false;\n                    }\n                });\n            }\n            if (success) {\n                $scope.generalSubmitDisabled = false;\n                controller.lastUploaded = controller.initLastUploaded();\n                controller.copyResponseToLastUploaded(response);\n                // display link below uploader\n                $scope.displayRemoveLink = true;\n            } else {\n                var message = 'Logo image upload failed!';\n                if (response !== null && response.hasOwnProperty('code')) {\n                    message = response.message;\n                }\n                controller.removeDropZoneUploadedImage();\n                controller.handleLogoRemoved();\n                NotifierFactory.show(\n                    'error',\n                    message,\n                    'Institution Details - General'\n                );\n            }\n            $scope.$apply();\n        };\n\n        /**\n         * Actions to do when file is added to upload queue.\n         */\n        controller.handleLogoAdded = function (file) {\n            file.rejectExtension = function () {\n                NotifierFactory.show(\n                    'error',\n                    'Allowed types: ' + controller.acceptedFiles,\n                    'File type is unacceptable.'\n                );\n                controller.removeDropZoneUploadedImage();\n                controller.handleLogoRemoved();\n                $scope.$apply();\n            };\n            if (this.files.length === 1) {\n                this.globalAccept = false;\n                this.localAccept = false;\n            }\n            if (!this.globalAccept && !this.localAccept && this.files.length === 1) {\n                this.isValid = true;\n                this.localAccept = true;\n            }\n            if (this.files.length > 1 && this.globalAccept) {\n                this.isValid = false;\n                this.globalAccept = true;\n                this.removeFile(this.files[1]);\n                $scope.$apply();\n            }\n            this.isValid = true;\n            // Validate image extension for drag and drop\n            var allowedExtensionsArray = controller.acceptedFiles.split(',');\n            if (allowedExtensionsArray.indexOf(file.type) === -1) {\n                this.isValid = false;\n                file.rejectExtension();\n            }\n            if (this.isValid) {\n                // disable update button\n                $scope.generalSubmitDisabled = true;\n                // hide upload area\n                $scope.uploadEnabled = false;\n                $scope.$apply();\n            }\n        };\n\n        /**\n         * DropZone handle thumbnail.\n         *\n         * @param file\n         */\n        controller.handleThumbnail = function (file) {\n            file.rejectDimensions = function (globalAccept) {\n                globalAccept = (typeof globalAccept === 'undefined') ? true : globalAccept;\n                if (!globalAccept) {\n                    NotifierFactory.show(\n                        'error',\n                        'Logo dimension is incorrect.',\n                        'Please upload 200px by 200px logo.'\n                    );\n                    controller.removeDropZoneUploadedImage();\n                    controller.handleLogoRemoved();\n                    $scope.$apply();\n                }\n            };\n            file.rejectSize = function (globalAccept) {\n                globalAccept = (typeof globalAccept === 'undefined') ? true : globalAccept;\n                if (!globalAccept) {\n                    NotifierFactory.show(\n                        'error',\n                        'Please upload less than 400 KB.',\n                        'Uploaded Image is greater than the limit.'\n                    );\n                    controller.removeDropZoneUploadedImage();\n                    controller.handleLogoRemoved();\n                    $scope.$apply();\n                }\n            };\n            // Validate image dimensions\n            if (file.height !== 200 || file.width !== 200) {\n                this.isValid = false;\n                file.rejectDimensions(this.globalAccept);\n            }\n            // Validate image size\n            if (file.size > 400000) {\n                this.isValid = false;\n                file.rejectSize(this.globalAccept);\n            }\n            if (this.isValid && !this.globalAccept && this.localAccept) {\n                this.globalAccept = true;\n                file.acceptFile(this.localAccept);\n            } else {\n                $scope.generalSubmitDisabled = false;\n                if (this.files.length > 1 && this.globalAccept) {\n                    this.removeFile(this.files[1]);\n                }\n                $scope.$apply();\n            }\n            if (false === this.isValid) {\n                this.isValid = true;\n            }\n        };\n\n        controller.logoConfig = {\n            // http://www.dropzonejs.com/#configuration-options\n            dropzone: {\n                url: controller.getUploadUrl,\n                maxFilesize: 1,\n                maxFiles: 1,\n                uploadMultiple: 0,\n                parallelUploads: 1,\n                autoProcessQueue: true,\n                addRemoveLinks: false,\n                acceptedFiles: controller.acceptedFiles,\n                previewsContainer: '.dropzone-previews',\n                headers: AuthenticationService.getAuthorizationHeader(),\n                thumbnailWidth: 200,\n                thumbnailHeight: 200,\n                paramName: \"file\",\n                init: controller.handleInit,\n                accept: controller.handleAccept\n            },\n            // http://www.dropzonejs.com/#event-list\n            eventHandlers: {\n                success: controller.handleLogoUploaded,\n                addedfile: controller.handleLogoAdded,\n                thumbnail: controller.handleThumbnail\n            }\n        };\n\n        controller.isRemoveLogosDisabled = function () {\n            return !$scope.profile || (\n                !$scope.profile.smallLogoPath && !$scope.profile.mediumLogoPath && !$scope.profile.largeLogoPath\n            ) || $scope.generalSubmitDisabled;\n        };\n\n        controller.initWatches = function () {\n            // watch for shared profile changes\n            WatchService.create($scope, SharedProfileFactory.getData, function (newValue) {\n                $scope.profile = newValue;\n                controller.assignDisplayLogos();\n                controller.removeDropZoneUploadedImage();\n                controller.handleLogoRemoved();\n                $scope.profileBeforeChanges = angular.copy(newValue);\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, SharedProfileFactory.isGeneralTabSelected, function (isActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('SharedProfileGeneralController', [\n            '$scope',\n            '$log',\n            'constants',\n            'SharedProfileService',\n            'NotifierFactory',\n            'SharedProfileFactory',\n            'InstitutionFactory',\n            'AuthenticationService',\n            'ModalService',\n            'WatchService',\n            App.controllers.sharedProfile\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.SharedProfileCampuses = function (\n        $scope,\n        NgTableParams,\n        constants,\n        CampusesService,\n        SharedProfileService,\n        InstitutionsListService,\n        NotifierFactory,\n        SharedProfileFactory,\n        InstitutionFactory,\n        MapInitializerFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false,\n            newlyAdded = false;\n        controller.devMode = constants.dev;\n        controller.googleMapsMarker = null;\n        controller.noCache = false;\n\n        $scope.isQsUser = true; // @todo replace with real data\n        $scope.campusesInEventsInclusionDisbaled = false;\n        $scope.loadInProgress = true;\n        $scope.displayMapBlock = false;\n        $scope.selectedCampusId = null;\n        $scope.mapMarkers = [];\n        $scope.campusesToDelete = {};\n        $scope.deleteInProgress = false;\n        $scope.columns = [\n            {\n                title: 'Delete',\n                show: true,\n                field: 'delete',\n                headerTemplateURL: 'ng-table/templates/campus/delete-header.html'\n            },\n            {\n                title: 'Campus Name',\n                show: true,\n                field: 'name'\n            },\n            {\n                title: 'Address',\n                show: true,\n                field: 'addressLine'\n            },\n            {\n                title: 'Postcode',\n                show: true,\n                field: 'postcode'\n            },\n            {\n                title: 'Town/City',\n                show: true,\n                field: 'city'\n            },\n            {\n                title: 'Latitude',\n                show: true,\n                field: 'latitude'\n            },\n            {\n                title: 'Longitude',\n                show: true,\n                field: 'longitude'\n            },\n            {\n                title: 'Country Name',\n                show: true,\n                field: 'countryName'\n            },\n            {\n                title: 'Primary Campus',\n                show: true,\n                field: 'primaryName'\n            },\n            {\n                title: 'Order',\n                show: false,\n                field: 'order'\n            }\n        ];\n        $scope.campusMap = null;\n\n        /**\n         * Render campus in google map.\n         */\n        controller.renderMap = function () {\n            var campus = SharedProfileFactory.getCampus();\n            if (!campus.latitude) {\n                campus.latitude = null;\n            }\n            if (!campus.longitude) {\n                campus.longitude = null;\n            }\n            SharedProfileFactory.setCampus(campus);\n            var campusLatitude = campus.latitude,\n                campusLongitude = campus.longitude;\n            if (campusLatitude === null || campusLongitude === null) {\n                campusLatitude = 0;\n                campusLongitude = 0;\n            }\n            var googleMapsLatLng = new google.maps.LatLng({\n                lat: parseFloat(campusLatitude),\n                lng: parseFloat(campusLongitude)\n            });\n\n            $scope.campusMap.panTo(googleMapsLatLng);\n            $scope.campusMap.setOptions({\n                //center: googleMapsLatLng,\n                zoom: 15,\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\n                draggable: true\n            });\n            if (controller.googleMapsMarker) {\n                controller.googleMapsMarker.setMap(null);\n            }\n            controller.googleMapsMarker = new google.maps.Marker({\n                map: $scope.campusMap,\n                position: googleMapsLatLng,\n                draggable: true\n            });\n\n            google.maps.event.addListener(controller.googleMapsMarker, 'dragend', function (event) {\n                $scope.campusMap.panTo(event.latLng);\n                campus.autoGenerate = false;\n                campus.latitude = event.latLng.lat();\n                campus.longitude = event.latLng.lng();\n                google.maps.event.trigger($scope.campusMap, 'resize');\n                $scope.campusMap.setCenter(controller.googleMapsMarker.getPosition());\n                $scope.$apply(); // otherwise the changes are not updated on sidebar\n            });\n\n            /**\n             * This fixes the bug when user already visited campus edit page,\n             * then navigated out, then returned to campuses edit page.\n             */\n            $scope.campusMap.addListener('idle', function() {\n                if (newlyAdded) {\n                    google.maps.event.trigger($scope.campusMap, 'resize');\n                    $scope.campusMap.setCenter(controller.googleMapsMarker.getPosition());\n                    newlyAdded = false;\n                }\n            });\n        };\n\n        /**\n         * Initialise google maps.\n         */\n        controller.initialiseMap = function () {\n            if (!$scope.campusMap) {\n                MapInitializerFactory.initStart();\n            }\n            MapInitializerFactory.mapsInitialized\n                .then(function() {\n                    if (null === $scope.campusMap) {\n                        $scope.campusMap = new google.maps.Map(document.getElementById(\"campusMap\"), {\n                            zoom: 15,\n                            mapTypeId: google.maps.MapTypeId.ROADMAP,\n                            draggable: true\n                        });\n                        newlyAdded = true;\n                    }\n                    controller.renderMap();\n                });\n        };\n\n        /**\n         * Actions to do on add button click\n         */\n        $scope.handleAddClick = function () {\n            SharedProfileFactory.setCampus({\n                displayInFrontEnd: true\n            });\n            SharedProfileFactory.setCampusAddFormVisibility();\n            $scope.displayMapBlock = false;\n            $scope.selectedCampusId = null;\n            if (SharedProfileFactory.isCampusFormVisible() && !SharedProfileFactory.isCampusEditForm()) {\n                controller.initialiseMap();\n                $scope.displayMapBlock = true;\n            }\n        };\n\n        /**\n         * Actions to do when data grid row is clicked.\n         *\n         * @param {Object} campus\n         */\n        $scope.handleDatagridRowClick = function (campus) {\n            $scope.selectedCampusId = ($scope.selectedCampusId === campus.id) ? null : campus.id;\n\n            // create new copy of campus for making changes in it\n            var campusCopy = angular.copy(campus);\n            SharedProfileFactory.setCampus(campusCopy);\n\n            SharedProfileFactory.setCampusEditFormVisibility(\n                $scope.selectedCampusId === campus.id && campus.id !== 'undefined'\n            );\n            $scope.displayMapBlock = true;\n            controller.initialiseMap();\n        };\n\n        /**\n         * Actions to do when campuses are included/excluded from events pages.\n         */\n        $scope.handleIncludeInEventsClick = function () {\n            // indicate progress\n            $scope.campusesInEventsInclusionDisbaled = true;\n            // store changes\n            SharedProfileService.update($scope.sharedProfile.id, {\n                campusesOnEvents: $scope.sharedProfile.campusesOnEvents\n            }).then(function (success) {\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Success!' : 'Failure!',\n                    $scope.sharedProfile.campusesOnEvents ? 'Including campuses on events pages' : 'Excluding campuses on events pages'\n                );\n                // indicate progress end\n                $scope.campusesInEventsInclusionDisbaled = false;\n            });\n        };\n\n        /**\n         * Sortable options\n         */\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            stop: function () {\n                $scope.sortableOptions.disabled = true;\n                // change campuses order\n                controller.reOrderCampuses();\n                InstitutionsListService.saveOrder(InstitutionFactory.getId(), $scope.tableParams.data)\n                    .then(function (success) {\n                        NotifierFactory.show(\n                            success ? 'success' : 'error',\n                            success ? ' Order saved successfully!' : 'Saving order failed!',\n                            'Campus'\n                        );\n                    })\n                    .finally(function () {\n                        $scope.sortableOptions.disabled = false;\n                    });\n            }\n        };\n\n        /**\n         * Assigns new order for campuses starting with 1.\n         */\n        controller.reOrderCampuses = function () {\n            var assignedOrder = 1;\n            for (var index = 0; index < $scope.tableParams.data.length; index++) {\n                $scope.tableParams.data[index].order = assignedOrder;\n                assignedOrder++;\n            }\n        };\n\n        controller.getCampusesToDelete = function () {\n            var campusIds = [];\n            if ($scope.campusesToDelete) {\n                angular.forEach($scope.campusesToDelete, function (remove, id) {\n                    if (remove) {\n                        campusIds.push(id);\n                    }\n                });\n            }\n\n            return campusIds;\n        };\n\n        controller.hasCampusesToDelete = function () {\n            var departmentsIds = controller.getCampusesToDelete();\n            return departmentsIds.length !== 0;\n        };\n\n        $scope.isDeleteButtonDisabled = function () {\n            return $scope.deleteInProgress ||\n                !controller.hasCampusesToDelete();\n        };\n\n        /**\n         * Actions to do when campuses delete button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleDeleteClick = function () {\n            if ($scope.deleteInProgress || !controller.hasCampusesToDelete()) {\n                return false;\n            }\n            var campusIds = controller.getCampusesToDelete();\n            $scope.deleteInProgress = true;\n            CampusesService.deleteCampuses(InstitutionFactory.getId(), campusIds).then(function (success) {\n                $scope.deleteInProgress = false;\n                if (success) {\n                    // Check if current campus form belonged to one of the deleted campuses\n                    for (var objectId in $scope.campusesToDelete) {\n                        if (objectId === $scope.selectedCampusId) {\n                            SharedProfileFactory.setCampusFormVisibility(false);\n                            break;\n                        }\n                    }\n                    $scope.campusesToDelete = {};\n                    // reload campus datagrid\n                    controller.noCache = true;\n                    $scope.tableParams.reload();\n                }\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Deleted successfully!' : 'Deletion failed!',\n                    'Campus'\n                );\n            });\n        };\n\n        controller.initWatches = function () {\n            // watch for campuses list changes\n            WatchService.create($scope, SharedProfileFactory.hasCampusesChanges, function (newValue) {\n                if (newValue) {\n                    controller.noCache = true;\n                    $scope.campusesToDelete = {};\n                    $scope.tableParams.reload();\n                    $scope.selectedCampusId = newValue;\n                }\n            });\n\n            // watch for campus form changes\n            WatchService.create($scope, SharedProfileFactory.isCampusFormVisible, function (newValue) {\n                // actions to do when form is not visible anymore\n                if (!newValue) {\n                    // reset selected campus ID\n                    $scope.selectedCampusId = null;\n                    // hide google maps\n                    $scope.displayMapBlock = false;\n                }\n            });\n\n            // Re-check the campus values and trigger map update\n            WatchService.create($scope, SharedProfileFactory.mapUpdateRequest, function (newValue) {\n                if (newValue && newValue !== null) {\n                    var campus = SharedProfileFactory.getCampus(),\n                        intLatitude,\n                        intLongitude;\n                    if (campus.latitude === null || campus.longitude === null) {\n                        intLatitude = null;\n                        intLongitude = null;\n                    } else {\n                        intLatitude = parseInt(campus.latitude, 10);\n                        intLongitude = parseInt(campus.longitude, 10);\n                    }\n\n                    // check if latitude and longitude are correct\n                    if (intLatitude === null || intLongitude === null ||\n                        intLatitude < -90 || intLatitude > 90 ||\n                        intLongitude < -180 || intLongitude > 180\n                    ) {\n                        return;\n                    }\n\n                    var googleMapsLatLng = new google.maps.LatLng({\n                        lat: parseFloat(campus.latitude),\n                        lng: parseFloat(campus.longitude)\n                    });\n                    if (null !== controller.googleMapsMarker) {\n                        controller.googleMapsMarker.setPosition(googleMapsLatLng);\n                        google.maps.event.trigger($scope.campusMap, 'resize');\n                        $scope.campusMap.setCenter(controller.googleMapsMarker.getPosition());\n                    }\n                }\n            });\n        };\n\n        controller.initDataGrid = function () {\n            // get institution campuses\n            $scope.tableParams = new NgTableParams({\n                page: 1, // show first page\n                count: 200, // count per page\n                coreId: InstitutionFactory.getCoreId()\n            }, {\n                counts: [],\n                debugMode: constants.dev,\n                getData: function (params) {\n                    var results = CampusesService.getCampusList(params, controller.noCache);\n                    controller.noCache = false;\n\n                    return results;\n                }\n            });\n        };\n\n        controller.initEvents = function () {\n            $scope.$on(constants.events.institutionSharedProfileChanges, function() {\n                alreadyInitialised = false;\n                if (SharedProfileFactory.isCampusesTabSelected()) {\n                    controller.initDataGrid();\n                    alreadyInitialised = true;\n                }\n                $scope.campusesToDelete = {};\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n            controller.initEvents();\n            controller.initDataGrid();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, SharedProfileFactory.isCampusesTabSelected, function (isActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('SharedProfileCampusesController', [\n            '$scope',\n            'NgTableParams',\n            'constants',\n            'CampusesService',\n            'SharedProfileService',\n            'InstitutionsListService',\n            'NotifierFactory',\n            'SharedProfileFactory',\n            'InstitutionFactory',\n            'MapInitializerFactory',\n            'WatchService',\n            App.controllers.SharedProfileCampuses\n        ]);\n}(window.angular));\n\n/* global google */\n(function(angular) {\n    \"use strict\";\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.sharedProfileCampusForm = function (\n        $scope,\n        CampusesService,\n        SharedProfileService,\n        NotifierFactory,\n        InstitutionFactory,\n        SharedProfileFactory,\n        WatchService\n    ) {\n        var controller = this,\n            notificationTitle = 'Campus';\n\n        controller.submitted = false;\n        $scope.forms = {};\n        $scope.refreshMapInProgress = false;\n\n        // watch for core ID changes\n        var coreId = InstitutionFactory.getCoreId();\n\n        // watch for active campus changes\n        $scope.campus = SharedProfileFactory.getCampus();\n\n        controller.isValidName = function () {\n            return !!(\n                $scope.forms.campusForm &&\n                (\n                    $scope.forms.campusForm.$pristine ||\n                    ($scope.forms.campusForm.name && $scope.forms.campusForm.name.$pristine)\n                ) ||\n                ($scope.campus && $scope.campus.name && $scope.campus.name.trim().length));\n        };\n\n        controller.isValidCountry = function () {\n            return !!(\n                $scope.forms.campusForm &&\n                ($scope.forms.campusForm.$pristine ||\n                ($scope.forms.campusForm.country && $scope.forms.campusForm.country.$pristine)) ||\n                ($scope.campus && $scope.campus.country && $scope.campus.country.trim().length)\n            );\n        };\n\n        controller.isValidAddress = function () {\n            return !!(\n                $scope.forms.campusForm &&\n                ($scope.forms.campusForm.$pristine ||\n                ($scope.forms.campusForm.addressLine1 && $scope.forms.campusForm.addressLine1.$pristine)) ||\n                ($scope.campus && $scope.campus.addressLine1 && $scope.campus.addressLine1.trim().length)\n            );\n        };\n\n        controller.isValidCity = function () {\n            return !!(\n                $scope.forms.campusForm &&\n                ($scope.forms.campusForm.$pristine ||\n                ($scope.forms.campusForm.city && $scope.forms.campusForm.city.$pristine)) ||\n                ($scope.campus && $scope.campus.city && $scope.campus.city.trim().length)\n            );\n        };\n\n        controller.setValid = function (fieldName) {\n            controller.submitted = null;\n            if (fieldName) {\n                if ($scope.forms.campusForm && $scope.forms.campusForm[fieldName]) {\n                    $scope.forms.campusForm[fieldName].$setPristine();\n                }\n            } else {\n                $scope.forms.campusForm.$setPristine();\n            }\n        };\n\n        controller.isValid = function () {\n            return controller.isValidName() &&\n                controller.isValidCountry() &&\n                controller.isValidAddress() &&\n                controller.isValidCity();\n        };\n\n        /**\n         * Toggle edit mode.\n         *\n         * @param edit\n         */\n        controller.editToggle = function (edit) {\n            $scope.displayDelete = edit;\n            $scope.editMode = edit;\n        };\n\n        controller.editToggle(SharedProfileFactory.isCampusEditForm());\n\n        // get countries list\n        CampusesService.getCountries().then(function (list) {\n            $scope.countriesList = list;\n        });\n\n        // get TU regions list\n        CampusesService.getTuRegions().then(function (list) {\n            $scope.tuRegionsList = list;\n        });\n\n        /**\n         * Actions to do when cancel button is clicked.\n         */\n        $scope.handleCancelClick = function () {\n            SharedProfileFactory.setCampusFormVisibility();\n        };\n\n        /**\n         * Actions to do when delete button is clicked.\n         */\n        $scope.handleDeleteClick = function () {\n            CampusesService.deleteCampus($scope.institutionId, $scope.campus.id).then(controller.deleteCallback, controller.isValidName());\n        };\n\n        controller.deleteCallback = function (success) {\n            $scope.campusSubmitInProgress = false;\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Deleted successfully!' : 'Deletion failed!',\n                notificationTitle\n            );\n            if (success) {\n                SharedProfileFactory.setCampus({});\n                SharedProfileFactory.setCampusFormVisibility(false);\n                SharedProfileFactory.announceCampusesChanges(true);\n            }\n        };\n\n        /**\n         * Actiosn to do when save button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleCreateClick = function () {\n            controller.submitted = true;\n            $scope.forms.campusForm.$setDirty();\n            $scope.forms.campusForm.name.$setDirty();\n            $scope.forms.campusForm.country.$setDirty();\n            $scope.forms.campusForm.addressLine1.$setDirty();\n            $scope.forms.campusForm.city.$setDirty();\n\n            if (\n                $scope.campusSubmitInProgress ||\n                !$scope.forms.campusForm ||\n                !controller.isValid()\n            ) {\n                return false;\n            }\n            $scope.campusSubmitInProgress = true;\n            CampusesService.create($scope.institutionId, $scope.campus).then(controller.createCallback);\n        };\n\n        controller.createCallback = function (response) {\n            $scope.campusSubmitInProgress = false;\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Saved successfully!' : 'Saving failed!',\n                notificationTitle\n            );\n\n            if (response) {\n                $scope.campus.id = response.insertedId;\n                if (angular.isDefined(response.coordinates)) {\n                    $scope.campus.latitude = response.coordinates.latitude;\n                    $scope.campus.longitude = response.coordinates.longitude;\n                    SharedProfileFactory.setMapUpdateRequest(Math.random());\n                }\n                SharedProfileFactory.setCampus($scope.campus);\n                SharedProfileFactory.setCampusAddFormVisibility(false);\n                SharedProfileFactory.setCampusEditFormVisibility(true);\n                SharedProfileFactory.announceCampusesChanges($scope.campus.id);\n\n                // Add new campus to factory\n                var currentCampuses = InstitutionFactory.getCampuses();\n                currentCampuses.push($scope.campus);\n                InstitutionFactory.setCampuses(currentCampuses);\n            }\n        };\n\n        /**\n         * Reset campus form\n         */\n        controller.resetCampusForm = function () {\n            if ($scope.forms.campusForm) {\n                $scope.forms.campusForm.$setPristine();\n            }\n        };\n\n        /**\n         * Actions to do when update button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleUpdateClick = function () {\n            controller.submitted = true;\n            $scope.forms.campusForm.$setDirty();\n            $scope.forms.campusForm.name.$setDirty();\n            $scope.forms.campusForm.country.$setDirty();\n            $scope.forms.campusForm.addressLine1.$setDirty();\n            $scope.forms.campusForm.city.$setDirty();\n\n            if (\n                $scope.campusSubmitInProgress ||\n                !$scope.forms.campusForm ||\n                !$scope.forms.campusForm.$valid\n            ) {\n                return false;\n            }\n            $scope.campusSubmitInProgress = true;\n            CampusesService.update($scope.institutionId, $scope.campus).then(controller.updateCallback);\n            controller.resetCampusForm();\n        };\n\n        controller.updateCallback = function (response) {\n            $scope.campusSubmitInProgress = false;\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Updated successfully!' : 'Updated failed!',\n                notificationTitle\n            );\n            if (response) {\n                if (angular.isDefined(response.coordinates)) {\n                    $scope.campus.latitude = response.coordinates.latitude;\n                    $scope.campus.longitude = response.coordinates.longitude;\n                    SharedProfileFactory.setMapUpdateRequest(Math.random());\n                }\n                SharedProfileFactory.announceCampusesChanges($scope.campus.id);\n                var currentCampuses = InstitutionFactory.getCampuses(),\n                    i = 0,\n                    total = currentCampuses.length;\n                for (i; i < total; i++) {\n                    if (currentCampuses[i].id === $scope.campus.id) {\n                        currentCampuses[i] = angular.copy($scope.campus);\n                        InstitutionFactory.setCampuses(currentCampuses);\n                        break;\n                    }\n                }\n            }\n        };\n\n        /**\n         * Displays a message based on success\n         *\n         * @param {boolean} success\n         * @param {string} message\n         */\n        controller.coordinatesUpdated = function (success, message) {\n            NotifierFactory.show(\n                success,\n                message,\n                'Address Search'\n            );\n        };\n\n        /**\n         * Get coordinates callback\n         *\n         * @param response\n         */\n        controller.getCoordinatesByCampusCallback = function (response) {\n            var success = false;\n            if (response) {\n                if (angular.isArray(response) && !angular.isObject(response[0]) && !angular.isObject(response[1])) {\n                    success = true;\n                    $scope.campus.latitude = response[0];\n                    $scope.campus.longitude = response[1];\n                    SharedProfileFactory.setMapUpdateRequest(Math.random());\n                    SharedProfileFactory.announceCampusesChanges($scope.campus.id);\n                    controller.coordinatesUpdated('success', 'Coordinates updated successfully!');\n                } else {\n                    controller.coordinatesUpdated('warning', 'Address not found!');\n                }\n            } else {\n                controller.coordinatesUpdated('error', 'Error requesting coordinates!');\n            }\n            $scope.refreshMapInProgress = false;\n        };\n\n        /**\n         * Refresh map function\n         */\n        controller.refreshMap = function () {\n            $scope.refreshMapInProgress = true;\n            if ($scope.campus.autoGenerate) { // generate map by address fields\n                CampusesService.getCoordinatesByCampus($scope.campus).then(controller.getCoordinatesByCampusCallback);\n            } else {  // generate map by coordinates\n                // announce map reload request\n                SharedProfileFactory.setMapUpdateRequest(Math.random());\n                //SharedProfileFactory.announceCampusesChanges($scope.campus.id);\n                $scope.refreshMapInProgress = false;\n            }\n        };\n\n        /**\n         * Display on front end switch clicked.\n         */\n        controller.displayOnFrontEndClick = function () {\n            if ($scope.campus.displayInFrontEnd &&\n                (($scope.campus.longitude === null || !$scope.campus.longitude) ||\n                ($scope.campus.latitude === null || !$scope.campus.latitude))\n            ) {\n                $scope.campus.autoGenerate = true;\n            }\n        };\n\n        controller.initWatches = function () {\n            // watch for edit mode changes\n            WatchService.create($scope, SharedProfileFactory.isCampusEditForm, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    controller.editToggle(newValue);\n                }\n            });\n\n            WatchService.create($scope, SharedProfileFactory.getCampus, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.campus = newValue;\n                    controller.resetCampusForm();\n                }\n            });\n\n            WatchService.create($scope, InstitutionFactory.getCoreId, function (newValue) {\n                $scope.institutionId = InstitutionFactory.getId();\n            });\n        };\n\n        /**\n         * Class constructor.\n         */\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('SharedProfileCampusFormController', [\n            '$scope',\n            'CampusesService',\n            'SharedProfileService',\n            'NotifierFactory',\n            'InstitutionFactory',\n            'SharedProfileFactory',\n            'WatchService',\n            App.controllers.sharedProfileCampusForm\n        ]);\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Campuses = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        InstitutionsListService,\n        InstitutionsService,\n        InstitutionFactory,\n        DataHandlerFactory,\n        orderBy\n    ) {\n        var service = {\n            deferred: {\n                getCampusList : null\n            }\n        };\n\n        /**\n         * Get countries list.\n         *\n         * @returns {Promise.<Array>}\n         */\n        service.getCountries = function () {\n            return InstitutionsListService.getCountries();\n        };\n\n        /**\n         * Get TU regions list.\n         */\n        service.getTuRegions = function () {\n            return InstitutionsListService.getTuRegions();\n        };\n\n        service.getCampusList = function (params, noCache) {\n            var coreId = params.parameters().coreId;\n            // process already running\n            if (!service.deferred.getCampusList) {\n                service.deferred.getCampusList = $q.defer();\n            } else {\n                return service.deferred.getCampusList.promise;\n            }\n            var deferred = service.deferred.getCampusList,\n                campuses = null,\n                total = 0;\n            if (!noCache) {\n                // check if campuses are already loaded\n                campuses = InstitutionFactory.getCampuses();\n                if (campuses) {\n                    campuses = DataHandlerFactory.objectToArray(campuses);\n                    total = campuses.length;\n                    params.total(total);\n                    params.totalEntries = total;\n                    deferred.resolve(service.formatCampusList(campuses));\n                    service.deferred.getCampusList = null;\n                } else {\n                    service.deferred.getCampusList = null;\n                    deferred.resolve([]);\n                }\n            }\n\n            if (!campuses) {\n                InstitutionsService.getInstitutionData(coreId, true).then(function (data) {\n                    if (data.results && data.results[0] && data.results[0].campus) {\n                        data.results[0].campus = DataHandlerFactory.objectToArray(data.results[0].campus);\n                        total = data.results[0].campus.length;\n                        params.total(total);\n                        params.totalEntries = total;\n                        deferred.resolve(service.formatCampusList(data.results[0].campus));\n                        service.deferred.getCampusList = null;\n                    } else {\n                        service.deferred.getCampusList = null;\n                        deferred.resolve([]);\n                    }\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        service.formatCampusList = function (campusList) {\n            var formatedCampusList = [];\n            angular.forEach(campusList, function(campus) {\n                InstitutionsListService.getCountryNameByCode(campus.country).then(function (countryName) {\n                    campus.countryName = countryName;\n                });\n                campus.addressLine = InstitutionsListService.getCampusAddress(campus);\n                campus.primaryName = InstitutionsListService.getCampusIsPrimary(campus);\n                formatedCampusList.push(campus);\n            });\n\n            return orderBy(formatedCampusList, 'order', false);\n        };\n\n        service.getCreateModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:institutionId/campus');\n        };\n\n        service.create = function (institutionId, campusData) {\n            var CreateModel = service.getCreateModel(),\n                dataToInsert = {\n                    name: null,\n                    addressLine1: null,\n                    addressLine2: null,\n                    addressLine3: null,\n                    postcode: null,\n                    city: null,\n                    state:null,\n                    country: null,\n                    primary: null,\n                    displayInFrontEnd: null,\n                    region: null,\n                    latitude: null,\n                    longitude: null,\n                    autoGenerate: null,\n                };\n            return CreateModel.save(\n                {institutionId: institutionId},\n                service.filterObject(dataToInsert, campusData)\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.deleteCampus = function (institutionId, campusId) {\n            var CampusModel = InstitutionsListService.getCampusModel();\n\n            return CampusModel.delete({\n                    id: institutionId,\n                    campusId: campusId\n                }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n\n        };\n\n        service.deleteCampuses = function (institutionId, campusIds) {\n            var CampusModel = InstitutionsListService.getDeleteCampusesModel();\n\n            return CampusModel.save({\n                    id: institutionId\n                }, campusIds).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n\n        };\n\n        service.update = function (institutionId, campusData) {\n            var CreateModel = InstitutionsListService.getCampusModel(),\n                dataToUpdate = {\n                    name: null,\n                    addressLine1: null,\n                    addressLine2: null,\n                    postcode: null,\n                    city: null,\n                    state:null,\n                    country: null,\n                    primary: null,\n                    displayInFrontEnd: null,\n                    region: null,\n                    latitude: null,\n                    longitude: null,\n                    autoGenerate: null,\n                };\n            return CreateModel.update(\n                {\n                    id: institutionId,\n                    campusId: campusData.id\n                },\n                service.filterObject(dataToUpdate, campusData)\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Fill one object keys with other object values.\n         *\n         * @param {Object} filters\n         * @param {Object} object\n         * @returns {Object}\n         */\n        service.filterObject = function (filters, object) {\n            var filteredObject = angular.copy(filters);\n            angular.forEach(filters, function (value, key) {\n                if (value && typeof value === 'object') {\n                    angular.forEach(value, function (subValue, subKey) {\n                        if (subValue === null && object[key][subKey] !== 'undefined') {\n                            filteredObject[key][subKey] = object[key][subKey];\n                        }\n                    });\n                } else if (value === null && object[key] !== 'undefined') {\n                    filteredObject[key] = object[key];\n                }\n            });\n\n            return filteredObject;\n        };\n\n        service.getCoordinatesModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/get-coordinates/:searchString', {}, {\n                get: {\n                    isArray: true,\n                    cancellable : false\n                }\n            });\n        };\n\n        /**\n         * Combine campus address info to google api search string.\n         *\n         * @param {Array} campus\n         * @returns {string}\n         */\n        service.getSearchString = function (campus) {\n            var searchValues = [],\n                searchFields = ['addressLine1', 'addressLine2', 'city', 'postcode', 'country'];\n            if (campus) {\n                angular.forEach(searchFields, function (value) {\n                    if (campus.hasOwnProperty(value) && campus[value] && campus[value].length > 0) {\n                        searchValues.push(campus[value].trim());\n                    }\n                });\n            }\n\n            return searchValues.join(' ');\n        };\n\n        /**\n         * Get coordinates by campus\n         *\n         * @param {Object} campus\n         * @returns {false|array}\n         */\n        service.getCoordinatesByCampus = function (campus) {\n            var searchFields = service.getSearchString(campus);\n            if (!searchFields.length) {\n                var deferred = $q.defer();\n                deferred.resolve(false);\n                return deferred.promise;\n            }\n            return service.getCoordinatesModel().get({searchString : searchFields}).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('CampusesService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'InstitutionsListService',\n            'InstitutionsService',\n            'InstitutionFactory',\n            'DataHandlerFactory',\n            'orderByFilter',\n            App.services.Campuses\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.tuProfile = function (\n        $scope,\n        $rootScope,\n        $resource,\n        $location,\n        $state,\n        constants,\n        TuProfileService,\n        NotifierFactory,\n        TuProfileFactory,\n        TuProfileHistoryLogFactory,\n        InstitutionFactory,\n        UserFactory,\n        WatchService,\n        TuProfileDepartmentsService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        $scope.upgradeEmailsTo = constants.emails.upgradeTu;\n        controller.subjects = {};\n\n        $scope.institutionDataLoaded = false;\n        $scope.profileDataLoaded = false;\n        $scope.tuProfile = {};\n        $scope.upgradeRequest = {\n            name: UserFactory.getFullName(),\n            email: UserFactory.getUserName()\n        };\n        $scope.tuProfileBeforeChanges = {};\n        $scope.forms = {};\n        $scope.showUpgradeForm = false;\n        $scope.showHistory = false;\n        $scope.tuIsAdvanced = false;\n        $scope.activeTab = TuProfileFactory.getProfileTabs().overview;\n        $scope.upgradeInProgress = false;\n        $scope.historyLog = {\n            log: {},\n            totalReturned: 0,\n            total: 0\n        };\n        $scope.showClientUpgradeForm = false;\n\n        $scope.handleHistoryLogVisibility = function() {\n            return TuProfileHistoryLogFactory.getLogLimit() < $scope.historyLog.total;\n        };\n\n        $scope.handleLoadMoreHistoryLog = function() {\n            TuProfileHistoryLogFactory.setLogLimit(TuProfileHistoryLogFactory.getLogLimit() + 5);\n            //broadcast load more history log event\n            $scope.$broadcast(\n                constants.events.loadMoreHistoryLogs,\n                TuProfileHistoryLogFactory.getProfileType(),\n                InstitutionFactory.isTuAdvanced(),\n                TuProfileHistoryLogFactory.getLogLimit()\n            );\n        };\n        \n        /**\n         * Is all data loaded?\n         *\n         * @returns {boolean}\n         */\n        $scope.loadInProgress = function () {\n            return $scope.institutionDataLoaded && $scope.profileDataLoaded ? false : true;\n        };\n\n        // load TU profile data\n        controller.loadTuProfileData = function (coreId) {\n            TuProfileService.getTuProfileData(coreId).then(function (data) {\n                $scope.profileDataLoaded = true;\n                $scope.tuProfile = data;\n                TuProfileFactory.setData(data);\n                $scope.tuProfileBeforeChanges = angular.copy(data);\n                $scope.ugOrPgDisabled = !(InstitutionFactory.isUgEnabled() && InstitutionFactory.isPgEnabled());\n                $scope.profileDisableName = !InstitutionFactory.isUgEnabled() && !InstitutionFactory.isPgEnabled() ?\n                    'Undergraduate and Postgraduate' : (!InstitutionFactory.isUgEnabled() ? 'Undergraduate' : 'Postgraduate');\n                $scope.$broadcast(constants.events.institutionTuProfileChanges);\n            });\n        };\n\n        /**\n         * Returns whether to disable the profile or not based on type\n         *\n         * @param {string} type\n         * @returns {Boolean}\n         */\n        $scope.isProfileEnabled = function (type) {\n            if (type === constants.profileTypes.ug) {\n                return !InstitutionFactory.isUgEnabled();\n            } else if (type === constants.profileTypes.pg) {\n                return !InstitutionFactory.isPgEnabled();\n            } else if (type === constants.profileTypes.master) {\n                return !InstitutionFactory.isUgEnabled() &&\n                       !InstitutionFactory.isPgEnabled();\n            }\n            return false;\n        };\n\n        /**\n         * Toggle upgrade form.\n         */\n        $scope.toggleUpgradeForm = function () {\n            TuProfileFactory.setUpgradeFormVisibility();\n        };\n\n        $scope.toggleDepartmentEditForm = function () {\n            TuProfileFactory.setDepartmentEditFormVisibility();\n        };\n\n        $scope.toggleDepartmentAddForm = function () {\n            TuProfileFactory.setDepartmentAddFormVisibility();\n        };\n\n        /**\n         * Toggle history details block.\n         */\n        $scope.toggleHistory = function (visibility) {\n            if (!visibility) {\n                TuProfileHistoryLogFactory.setTriggeredBy('');\n                TuProfileHistoryLogFactory.setLogLimit(1);\n            }\n            TuProfileFactory.setHistoryLogVisibility(visibility);\n        };\n\n        /**\n         * Get status of history log.\n         *\n         * @returns {bool}\n         */\n        $scope.fetchingHistoryLog = function () {\n            return TuProfileHistoryLogFactory.isInProgress();\n        };\n\n        /**\n         * Get status of loading more history log .\n         *\n         * @returns {bool}\n         */\n        $scope.fetchingMoreHistoryLog = function () {\n            return TuProfileHistoryLogFactory.isLoadMoreInProgress();\n        };\n\n        /**\n         * Actions to do on upgrade form submit.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleUpgradeClick = function () {\n            if (\n                !$scope.forms.upgradeProfile ||\n                !$scope.forms.upgradeProfile.$valid ||\n                !$scope.tuProfile.id ||\n                !$scope.upgradeRequest\n            ) {\n                return false;\n            }\n            $scope.upgradeInProgress = true;\n            var comments = $scope.upgradeRequest.comments || null;\n\n            TuProfileService.sendUpgradeRequest($scope.tuProfile.id, comments).then(function (success) {\n                $scope.upgradeInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Inquiry sent successfully!' : 'Processing inquiry failed!',\n                    'Upgrade To Advanced'\n                );\n                if (success) {\n                    $scope.upgradeRequest.comments = null;\n                    $scope.toggleUpgradeForm();\n                }\n            });\n        };\n\n\n\n        $scope.showDepartmentsTab =  function () {\n            var showDepartmentsTab = !InstitutionFactory.isClientDepartment() && !InstitutionFactory.hasNoDepartments();\n            if (!showDepartmentsTab && TuProfileFactory.isDepartmentsTabSelected()) {\n                $scope.activeTab = TuProfileFactory.getProfileTabs().overview;\n            }\n            return showDepartmentsTab;\n        };\n\n        $scope.isRightSidePanelActive = function () {\n            // subjects tab is active\n            if (TuProfileFactory.isSubjectsTabSelected()) {\n                return true;\n            }\n            // publish tab is active\n            if (TuProfileFactory.isPublishTabSelected()) {\n                return true;\n            }\n            // upgrade form is visible\n            if (\n                $scope.showUpgradeForm &&\n                (\n                    TuProfileFactory.isOverviewTabSelected() ||\n                    TuProfileFactory.isProgramsTabSelected() ||\n                    TuProfileFactory.isMediaTabSelected() ||\n                    TuProfileFactory.isDepartmentsTabSelected()\n                )\n            ) {\n                return true;\n            }\n            // overview tab and history block is active\n            if (TuProfileFactory.isOverviewTabSelected() && $scope.showHistory) {\n                return true;\n            }\n            // departments tab is active and edit or add form is active\n            if (\n                TuProfileFactory.isDepartmentsTabSelected() &&\n                (\n                    $scope.showDepartmentEditForm ||\n                    $scope.showDepartmentAddForm ||\n                    $scope.showClientUpgradeForm\n                )\n            ) {\n                return true;\n            }\n            // programs tab is active and edit or add form is active\n            if (TuProfileFactory.isProgramsTabSelected() && ($scope.showProgramEditForm || $scope.showProgramAddForm)) {\n                return true;\n            }\n            // media tab is active\n            if (TuProfileFactory.isMediaTabSelected()) {\n                return true;\n            }\n            return false;\n        };\n\n        /**\n         *\n         * @param {Object} log\n         */\n        controller.isRequestInfoTypeUrl = function (log) {\n            var activeOverviewSubTabs = TuProfileFactory.getActiveOverviewSubTabs();\n            var searchField = 'requestInfoTypeMaster';\n            if (activeOverviewSubTabs.ug) {\n                searchField = 'requestInfoTypeUg';\n            } else if (activeOverviewSubTabs.pg) {\n                searchField = 'requestInfoTypePg';\n            }\n\n            return log[searchField] === 'url';\n        };\n\n        $scope.isSubjectsTabActive = function () {\n            return TuProfileFactory.isSubjectsTabSelected();\n        };\n\n        $scope.isMediaTabActive = function () {\n            return TuProfileFactory.isMediaTabSelected();\n        };\n\n        $scope.isPublishTabActive = function () {\n            return TuProfileFactory.isPublishTabSelected();\n        };\n\n        controller.handleSendUpgradeRequestClick = function () {\n            controller.upgradeInProgress = true;\n            TuProfileDepartmentsService.sendUpgradeRequest(\n                $scope.upgradeRequest.department.id,\n                $scope.upgradeRequest.comments\n            ).then(controller.upgradeCallback);\n        };\n\n        controller.upgradeCallback = function (success) {\n            controller.upgradeInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Upgraded Request sent successfully!' : 'Upgrade failed!',\n                'Upgrade to Client'\n            );\n\n            if (success) {\n                // close edit mode\n                TuProfileFactory.setClientDepartmentUpgradeFormVisibility(false);\n                TuProfileFactory.setDepartmentEditFormVisibility(false);\n            }\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, InstitutionFactory.isTuAdvanced, function (newValue) {\n                $scope.tuIsAdvanced = newValue;\n            });\n            // listen to active profile tab changes\n            WatchService.create($scope, 'activeTab', function (newValue) {\n                TuProfileFactory.setSelectedTabId(newValue);\n                TuProfileFactory.closeSidebars();\n                TuProfileHistoryLogFactory.resetTriggeredBy();\n            });\n\n            // watch active institution changes\n            WatchService.create($scope, InstitutionFactory.getData, function (institutionData) {\n                /**\n                 * Fixes QCR-1404 #additionalScenario1\n                 */\n                TuProfileFactory.setHistoryLogVisibility(false);\n                TuProfileHistoryLogFactory.setTriggeredBy('');\n                if (InstitutionFactory.isEmpty()) {\n                    return false;\n                }\n                $scope.institutionDataLoaded = true;\n                $scope.institutionId = InstitutionFactory.getId();\n                $scope.institutionData = institutionData;\n                $scope.tuIsAdvanced = InstitutionFactory.isTuAdvanced();\n                // check if TU is not enabled, redirect user to default client page.\n                if (!InstitutionFactory.isTuSubscribed() && !UserFactory.isClient()) {\n                    $location.path(constants.defaultClientPage);\n\n                    return false;\n                }\n\n                if (angular.isDefined($state) && InstitutionFactory.isTuSubscribed() && !UserFactory.noAccess($state.current.name)) {\n                    controller.loadTuProfileData(InstitutionFactory.getCoreId());\n                } else {\n                    $scope.tuProfile = {};\n                    // if user doesn't have access, empty previously loaded data\n                    $scope.profileDataLoaded = true;\n                    TuProfileFactory.setData(null);\n                    $scope.$broadcast(constants.events.institutionTuProfileChanges);\n                }\n            });\n\n            // watch for upgrade form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isUpgradeFormVisible($scope.activeTab);\n            }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.upgradeRequest.comments = null;\n                    $scope.showUpgradeForm = newValue;\n                }\n            });\n\n            // watch for history log visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isHistoryLogVisible($scope.activeTab);\n            }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.showHistory = newValue;\n                }\n            });\n\n            // watch for program add form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramAddFormVisible($scope.activeTab);\n            }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.showProgramAddForm = newValue;\n                }\n            });\n\n            // watch for program edit form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramEditFormVisible($scope.activeTab);\n            }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.showProgramEditForm = newValue;\n                }\n            });\n\n            // watch for department add form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab);\n            }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.showDepartmentAddForm = newValue;\n                }\n            });\n\n            // watch for department edit form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab);\n            }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.showDepartmentEditForm = newValue;\n                }\n            });\n\n            WatchService.create($scope, TuProfileFactory.getAvailableSubjects, function (newValue, oldValue) {\n                if (newValue !== oldValue || !angular.equals(controller.subjects, newValue)) {\n                    controller.subjects = newValue;\n                }\n            });\n\n            // watch for history log data changes\n            WatchService.create($scope, TuProfileHistoryLogFactory.getData, function (newValue, oldValue) {\n                if (!angular.equals(newValue, oldValue)) {\n                    if (newValue) {\n                        $scope.isAdvanced = TuProfileHistoryLogFactory.isAdvanced();\n                        $scope.historyLog.total = newValue.totalMatching;\n                        $scope.historyLog.totalReturned = newValue.totalFiltered;\n                        $scope.historyLog.log = newValue.results;\n                    }\n                }\n            });\n            // watch for client upgrade form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isClientDepartmentUpgradeFormVisible($scope.activeTab);\n            }, function(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.upgradeRequest = {\n                        department : TuProfileFactory.getDepartment(),\n                        comments: null,\n                        name: UserFactory.getFullName(),\n                        email: UserFactory.getUserName()\n                    };\n                    $scope.showClientUpgradeForm = newValue;\n                }\n            });\n\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        controller.destruct = function () {\n            TuProfileFactory.reset();\n            $scope.showDepartmentEditForm = false;\n            $scope.showDepartmentAddForm = false;\n            $scope.showProgramEditForm = false;\n            $scope.showDProgramAddForm = false;\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileController', [\n            '$scope',\n            '$rootScope',\n            '$resource',\n            '$location',\n            '$state',\n            'constants',\n            'TuProfileService',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'TuProfileHistoryLogFactory',\n            'InstitutionFactory',\n            'UserFactory',\n            'WatchService',\n            'TuProfileDepartmentsService',\n            App.controllers.tuProfile\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TuProfileService = function (\n        $resource,\n        $q,\n        $log,\n        constants\n    ) {\n        var service = {\n            overviewData : [],\n            institutionData: null,\n            tuOverviewHistory : null,\n            deferred : {\n                getOverviewData: null,\n                getInstitutionData: null,\n                getTuOverviewHistory: null\n            },\n            belongsTo: {\n                all : 'all',\n                ug: 'ug',\n                pg: 'pg'\n            },\n        };\n\n        /**\n         * Get institutions list API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getInstitutionListModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/all/:id');\n        };\n\n        /**\n         * Get institution API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getTuProfileModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id', null, {\n                 update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Get institutions  API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getInstitutionModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:id', null, {\n                update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Get tu profile upgrade requests end point.\n         *\n         * @returns {$resource}\n         */\n        service.getUpgradeRequestModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/upgrade-request');\n        };\n\n        /**\n         * Update tuProfile data.\n         *\n         * @param {string} id\n         * @param {Object} data\n         * @returns {Promise}\n         */\n        service.updateTuProfile = function (id, data) {\n            // @todo do validation\n            var TuProfileModel = service.getTuProfileModel();\n            return TuProfileModel.update(\n                {id: id},\n                data\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n\n        /**\n         * Update institution data.\n         *\n         * @param {string} id\n         * @param {Object} data\n         * @returns {Promise}\n         */\n        service.updateInstitution = function (id, data) {\n            // @todo do validation\n            var InstitutionModel = service.getInstitutionModel();\n            return InstitutionModel.update(\n                {id: id},\n                data\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get institution profile API endpoint by Core ID.\n         *\n         * @param {int} coreId\n         * @returns {$resource}\n         */\n        service.getTuByCoreIdModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/core-id/:id', null, {\n                get: {\n                    cancellable: true\n                }\n            });\n        };\n        \n        /**\n         * Get institution TU profile data by Core ID.\n         *\n         * @param {int} coreId\n         * @returns {Promise}\n         */\n        service.getTuProfileData = function (coreId) {\n            if (!coreId) {\n                throw 'Missing Required';\n            }\n\n            var Api = service.getTuByCoreIdModel(coreId);\n            return Api.get({id: coreId}).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return data.toJSON();\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        /**\n         * Send TU profile upgrade request.\n         *\n         * @param {String} tuProfileId\n         * @param {String|null} comments\n         * @returns {Promise}\n         */\n        service.sendUpgradeRequest = function (tuProfileId, comments) {\n            if (!tuProfileId) {\n                throw 'Missing Required';\n            }\n\n            var Api = service.getUpgradeRequestModel();\n            return Api.save({id: tuProfileId}, {\n                comments: comments\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get belongs to list.\n         *\n         * @returns {array}\n         */\n        service.getBelongsToList = function (grid) {\n            grid = grid || false;\n\n            return grid ? [\n                {value: service.belongsTo.all, label: 'All'},\n                {value: service.belongsTo.ug, label: 'Undergraduate'},\n                {value: service.belongsTo.pg, label: 'Postgraduate'}\n            ] : [\n                {id: service.belongsTo.all, title: 'All'},\n                {id: service.belongsTo.ug, title: 'Undergraduate'},\n                {id: service.belongsTo.pg, title: 'Postgraduate'}\n            ];\n        };\n\n        /**\n         * Get belongs to name by ID.\n         *\n         * @param {int} belongsTo\n         * @returns {string}\n         */\n        service.getBelongsToName = function (belongsTo) {\n            switch (belongsTo) {\n                case service.belongsTo.ug:\n                    return 'Undergraduate';\n                case service.belongsTo.pg:\n                    return 'Postgraduate';\n                default:\n                    return 'All';\n            }\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuProfileService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.TuProfileService\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TuProfileOverview = function (\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        TuProfileService,\n        TuProfileOverviewService,\n        UrlService,\n        ObjectService,\n        TextService,\n        NotifierFactory,\n        TuProfileFactory,\n        TuProfileHistoryLogFactory,\n        WatchService,\n        InstitutionFactory\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        controller.devMode = constants.dev;\n        controller.textEditorBasicOptions = {\n            disableDragAndDrop: true,\n            styleWithSpan: false,\n            minHeight: 280,\n            maxHeight: 280,\n            toolbar: [\n                ['alignment', ['ul', 'ol']],\n                ['edit', ['undo', 'redo']],\n                ['view', ['codeview']]\n            ],\n            popover: {\n                link: []\n            }\n        };\n        controller.textEditorAdvancedOptions = {\n            disableDragAndDrop: true,\n            styleWithSpan: false,\n            minHeight: 280,\n            maxHeight: 280,\n            toolbar: [\n                ['style', ['bold', 'italic', 'underline', 'superscript', 'subscript', 'strikethrough']],\n                ['alignment', ['ul', 'ol']],\n                ['insert', ['link', 'unlink']],\n                ['edit', ['undo', 'redo']],\n                ['view', ['codeview']]\n            ],\n            popover: {\n                link: []\n            }\n        };\n        controller.advancedDescriptionWordLimit = 500;\n        controller.validationMessageAdvancedDescriptionWordLimit =\n            'Profile advanced description has exceeded the limit of ' +\n            controller.advancedDescriptionWordLimit +\n            ' words. Please reduce number of words.';\n        controller.advancedMasterOverviewWords = 0;\n        controller.advancedUgOverviewWords = 0;\n        controller.advancedPgOverviewWords = 0;\n        controller.basicDescriptionWordLimit = 200;\n        controller.validationMessageBasicDescriptionWordLimit =\n            'Profile basic description has exceeded the limit of ' +\n            controller.basicDescriptionWordLimit +\n            ' words. Please reduce number of words.';\n        controller.basicMasterOverviewWords = 0;\n        controller.basicUgOverviewWords = 0;\n        controller.basicPgOverviewWords = 0;\n        controller.submitted = {\n            master: false,\n            ug: false,\n            pg: false\n        };\n\n        $scope.forms = {};\n        $scope.overviewBasicMasterFormSubmitInProgress = false;\n        $scope.overviewBasicUgFormSubmitInProgress = false;\n        $scope.overviewBasicPgFormSubmitInProgress = false;\n        $scope.activeOverviewSubTab = TuProfileOverviewService.getActiveTabs().master;\n\n        controller.isInvalidUrl = function (profileType) {\n            if (!controller.submitted[profileType]) {\n                return false;\n            }\n            var url = $scope.tuProfile[profileType + 'WebsiteUrl'];\n            return url && url.length > 1 && url.length < 7;\n        };\n\n        //watch for Overview tab active or not\n        WatchService.create($scope, \"activeOverviewSubTab\", function (newValue, oldValue) {\n            if ((newValue !== oldValue) && (typeof newValue !== 'undefined')) {\n                TuProfileFactory.setActiveOverviewSubTabs(newValue);\n                if ($scope.showHistory && (newValue === TuProfileOverviewService.getActiveTabs().master)) {\n                    TuProfileHistoryLogFactory.setLogLimit(1);\n                    if ($scope.tuIsAdvanced) {\n                        $scope.handleTuOverviewHistoryLogClick(\n                            'master',\n                            true\n                        );\n                    } else {\n                        $scope.handleTuOverviewHistoryLogClick('master');\n                    }\n                } else if ($scope.showHistory && (newValue === TuProfileOverviewService.getActiveTabs().ug)) {\n                    TuProfileHistoryLogFactory.setLogLimit(1);\n                    if ($scope.ugIsAdvanced) {\n                        $scope.handleTuOverviewHistoryLogClick(\n                            'ug',\n                            true\n                        );\n                    }\n                    else if ((!$scope.ugIsAdvanced)) {\n                        $scope.handleTuOverviewHistoryLogClick('ug');\n                    }\n                } else if ($scope.showHistory && (newValue === TuProfileOverviewService.getActiveTabs().pg)) {\n                    TuProfileHistoryLogFactory.setLogLimit(1);\n                    if ($scope.tuIsAdvanced) {\n                        $scope.handleTuOverviewHistoryLogClick(\n                            'pg',\n                            true\n                        );\n                    } else {\n                        $scope.handleTuOverviewHistoryLogClick('pg');\n                    }\n                }\n            }\n        });\n\n        // watch active institution coreId changes\n        $scope.$watch(InstitutionFactory.getCoreId, function (newValue, oldValue) {\n            if (newValue !== oldValue) {\n                controller.resetDescriptionForm();\n            }\n        });\n\n        /**\n         * Count words in the string.\n         *\n         * @param {string} text\n         */\n        $scope.countWords = function (text) {\n            return TextService.countWords(text);\n        };\n\n        /**\n         * Handle basic master profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewBasicMasterDataSubmit = function () {\n            $scope.isBasicOverviewEmpty = false;\n            if (typeof ($scope.tuProfile.basicMasterOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tuProfile.basicMasterOverview).length === 0 ||\n                $scope.tuProfile.basicMasterOverview === \"\"\n            ) {\n                $scope.isBasicOverviewEmpty = true;\n            }\n            /**\n             * Validation 1:\n             * Number of words in Basic Description is exceeding the limit of basicDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tuProfile.basicMasterOverview) > controller.basicDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageBasicDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            if (\n                $scope.overviewBasicMasterFormSubmitInProgress ||\n                !$scope.forms.overviewBasicMasterForm ||\n                !$scope.forms.overviewBasicMasterForm.$valid ||\n                $scope.isBasicOverviewEmpty\n            ) {\n                return false;\n            }\n            $scope.overviewBasicMasterFormSubmitInProgress = true;\n\n            TuProfileOverviewService.saveOverviewData($scope.tuProfile.id, {\n                type: constants.profileTypes.master,\n                basicMasterOverview: $scope.tuProfile.basicMasterOverview\n            }).then(function (success) {\n                $scope.overviewBasicMasterFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsBasicOverviewEmpty = function (value) {\n            $scope.isBasicOverviewEmpty = value;\n        };\n\n        /**\n         * Handle advanced master profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewAdvancedMasterDataSubmit = function () {\n            controller.submitted.master = true;\n            $scope.isAdvancedOverviewEmpty = false;\n            if (typeof ($scope.tuProfile.advancedMasterOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tuProfile.advancedMasterOverview).length === 0 ||\n                $scope.tuProfile.advancedMasterOverview === \"\"\n            ) {\n                $scope.isAdvancedOverviewEmpty = true;\n            }\n            /**\n             * Validation 1:\n             * Number of words in Advanced Description is exceeding the limit of advancedDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tuProfile.advancedMasterOverview) > controller.advancedDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageAdvancedDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            $scope.tuProfile.masterWebsiteUrl = UrlService.prependHttp($scope.tuProfile.masterWebsiteUrl);\n            if (\n                $scope.overviewAdvancedMasterFormSubmitInProgress ||\n                !$scope.forms.overviewAdvancedMasterForm ||\n                !$scope.forms.overviewAdvancedMasterForm.$valid ||\n                $scope.isAdvancedOverviewEmpty ||\n                controller.isInvalidUrl('master')\n            ) {\n                return false;\n            }\n            $scope.overviewAdvancedMasterFormSubmitInProgress = true;\n            TuProfileOverviewService.saveOverviewData($scope.tuProfile.id, {\n                type: constants.profileTypes.master,\n                advanced: true,\n                requestInfoTypeMaster: $scope.tuProfile.requestInfoTypeMaster,\n                advancedMasterOverview: $scope.tuProfile.advancedMasterOverview,\n                masterWebsiteUrl: $scope.tuProfile.masterWebsiteUrl,\n                masterRequestInfoUrl: $scope.tuProfile.masterRequestInfoUrl,\n                masterRequestInfoUrlTitle: $scope.tuProfile.masterRequestInfoUrlTitle,\n                masterRequestInfoEmail: $scope.tuProfile.masterRequestInfoEmail\n            }).then(function (success) {\n                $scope.overviewAdvancedMasterFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsAdvancedOverviewEmpty = function (value) {\n            $scope.isAdvancedOverviewEmpty = value;\n        };\n\n        /**\n         * Handle basic UG profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewBasicUgDataSubmit = function () {\n            $scope.isBasicUgOverviewEmpty = false;\n            if (typeof ($scope.tuProfile.basicUgOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tuProfile.basicUgOverview).length === 0 ||\n                $scope.tuProfile.basicUgOverview === \"\"\n            ) {\n                $scope.isBasicUgOverviewEmpty = true;\n            }\n            /**\n             * Validation 1:\n             * Number of words in Basic Description is exceeding the limit of basicDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tuProfile.basicUgOverview) > controller.basicDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageBasicDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            if (\n                $scope.overviewBasicUgFormSubmitInProgress ||\n                !$scope.forms.overviewBasicUgForm ||\n                !$scope.forms.overviewBasicUgForm.$valid ||\n                $scope.isBasicUgOverviewEmpty\n            ) {\n                return false;\n            }\n            $scope.overviewBasicUgFormSubmitInProgress = true;\n\n            TuProfileOverviewService.saveOverviewData($scope.tuProfile.id, {\n                type: constants.profileTypes.ug,\n                basicUgOverview: $scope.tuProfile.basicUgOverview\n            }).then(function (success) {\n                $scope.overviewBasicUgFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsBasicUgOverviewEmpty = function (value) {\n            $scope.isBasicUgOverviewEmpty = value;\n        };\n\n        /**\n         * Handle advanced UG profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewAdvancedUgDataSubmit = function () {\n            controller.submitted.ug = true;\n            $scope.isAdvancedUgOverviewEmpty = false;\n            if (typeof ($scope.tuProfile.advancedUgOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tuProfile.advancedUgOverview).length === 0 ||\n                $scope.tuProfile.advancedUgOverview === \"\"\n            ) {\n                $scope.isAdvancedUgOverviewEmpty = true;\n            }\n\n            /**\n             * Validation 1:\n             * Number of words in Advanced Description is exceeding the limit of advancedDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tuProfile.advancedUgOverview) > controller.advancedDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageAdvancedDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            $scope.tuProfile.ugWebsiteUrl = UrlService.prependHttp($scope.tuProfile.ugWebsiteUrl);\n            if (\n                $scope.overviewAdvancedUgFormSubmitInProgress ||\n                !$scope.forms.overviewAdvancedUgForm ||\n                !$scope.forms.overviewAdvancedUgForm.$valid ||\n                $scope.isAdvancedUgOverviewEmpty ||\n                controller.isInvalidUrl('ug')\n            ) {\n                return false;\n            }\n            $scope.overviewAdvancedUgFormSubmitInProgress = true;\n\n            TuProfileOverviewService.saveOverviewData($scope.tuProfile.id, {\n                type: constants.profileTypes.ug,\n                advanced: true,\n                requestInfoTypeUg: $scope.tuProfile.requestInfoTypeUg,\n                advancedUgOverview: $scope.tuProfile.advancedUgOverview,\n                ugWebsiteUrl: $scope.tuProfile.ugWebsiteUrl,\n                ugRequestInfoUrlTitle: $scope.tuProfile.ugRequestInfoUrlTitle,\n                ugRequestInfoUrl: $scope.tuProfile.ugRequestInfoUrl,\n                ugRequestInfoEmail: $scope.tuProfile.ugRequestInfoEmail\n            }).then(function (success) {\n                $scope.overviewAdvancedUgFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsAdvancedUgOverviewEmpty = function (value) {\n            $scope.isAdvancedUgOverviewEmpty = value;\n        };\n\n        /**\n         * Handle basic PG profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewBasicPgDataSubmit = function () {\n            $scope.isBasicPgOverviewEmpty = false;\n            if (typeof ($scope.tuProfile.basicPgOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tuProfile.basicPgOverview).length === 0 ||\n                $scope.tuProfile.basicPgOverview === \"\"\n            ) {\n                $scope.isBasicPgOverviewEmpty = true;\n            }\n            /**\n             * Validation 1:\n             * Number of words in Basic Description is exceeding the limit of basicDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tuProfile.basicPgOverview) > controller.basicDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageBasicDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            if (\n                $scope.overviewBasicPgFormSubmitInProgress ||\n                !$scope.forms.overviewBasicPgForm ||\n                !$scope.forms.overviewBasicPgForm.$valid ||\n                $scope.isBasicPgOverviewEmpty\n            ) {\n                return false;\n            }\n            $scope.overviewBasicPgFormSubmitInProgress = true;\n\n            TuProfileOverviewService.saveOverviewData($scope.tuProfile.id, {\n                type: constants.profileTypes.pg,\n                basicPgOverview: $scope.tuProfile.basicPgOverview\n            }).then(function (success) {\n                $scope.overviewBasicPgFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsBasicPgOverviewEmpty = function (value) {\n            $scope.isBasicPgOverviewEmpty = value;\n        };\n\n        controller.setOverviewInvalid = function (type) {\n            switch (type) {\n                case 'advancedOverview':\n                    $scope.setIsAdvancedOverviewEmpty(false);\n                    break;\n                case 'advancedPgOverview':\n                    $scope.setIsAdvancedPgOverviewEmpty(false);\n                    break;\n                case 'advancedUgOverview':\n                    $scope.setIsAdvancedUgOverviewEmpty(false);\n                    break;\n                case 'basicOverview':\n                    $scope.setIsBasicOverviewEmpty(false);\n                    break;\n                case 'basicUgOverview':\n                    $scope.setIsBasicUgOverviewEmpty(false);\n                    break;\n                case 'basicpgOverview':\n                    $scope.setIsBasicPgOverviewEmpty(false);\n                    break;\n            }\n        };\n\n\n        /**\n         * Handle advanced PG profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewAdvancedPgDataSubmit = function () {\n            controller.submitted.pg = true;\n            $scope.isAdvancedPgOverviewEmpty = false;\n            if (typeof ($scope.tuProfile.advancedPgOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tuProfile.advancedPgOverview).length === 0 ||\n                $scope.tuProfile.advancedPgOverview === \"\"\n            ) {\n                $scope.isAdvancedPgOverviewEmpty = true;\n            }\n\n            /**\n             * Validation 1:\n             * Number of words in Advanced Description is exceeding the limit of advancedDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tuProfile.advancedPgOverview) > controller.advancedDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageAdvancedDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            $scope.tuProfile.pgWebsiteUrl = UrlService.prependHttp($scope.tuProfile.pgWebsiteUrl);\n            if (\n                $scope.overviewAdvancedPgFormSubmitInProgress ||\n                !$scope.forms.overviewAdvancedPgForm ||\n                !$scope.forms.overviewAdvancedPgForm.$valid ||\n                $scope.isAdvancedPgOverviewEmpty ||\n                controller.isInvalidUrl('pg')\n            ) {\n                return false;\n            }\n            $scope.overviewAdvancedPgFormSubmitInProgress = true;\n\n\n            TuProfileOverviewService.saveOverviewData($scope.tuProfile.id, {\n                type: constants.profileTypes.pg,\n                advanced: true,\n                requestInfoTypePg: $scope.tuProfile.requestInfoTypePg,\n                advancedPgOverview: $scope.tuProfile.advancedPgOverview,\n                pgWebsiteUrl: $scope.tuProfile.pgWebsiteUrl,\n                pgRequestInfoUrlTitle: $scope.tuProfile.pgRequestInfoUrlTitle,\n                pgRequestInfoUrl: $scope.tuProfile.pgRequestInfoUrl,\n                pgRequestInfoEmail: $scope.tuProfile.pgRequestInfoEmail\n            }).then(function (success) {\n                $scope.overviewAdvancedPgFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsAdvancedPgOverviewEmpty = function (value) {\n            $scope.isAdvancedPgOverviewEmpty = value;\n        };\n\n        /**\n         * Listen the load more history log click event\n         *\n         * @param {event} event\n         * @params {Integer} limit\n         */\n        $scope.$on(constants.events.loadMoreHistoryLogs, function (event, profileType, advanced, limit) {\n            advanced = advanced || false;\n            TuProfileHistoryLogFactory.setLoadMoreInProgress(true);\n            TuProfileFactory.setHistoryLogVisibility(true);\n            TuProfileOverviewService.getHistoryLog(\n                $scope.tuProfile.id, profileType, advanced, limit\n            ).then(function (data) {\n                TuProfileHistoryLogFactory.setData(data);\n                TuProfileHistoryLogFactory.setLoadMoreInProgress(false);\n            });\n        });\n\n        /**\n         * Actions to do when history log button os clicked.\n         *\n         * @param {string} profileType\n         * @param {null|boolean} advanced\n         */\n        $scope.handleTuOverviewHistoryLogClick = function (profileType, advanced) {\n            advanced = advanced || false;\n\n            TuProfileHistoryLogFactory.setAdvanced(advanced);\n            if ($scope.tuProfile.id !== TuProfileOverviewService.getProfileId()) {\n                TuProfileHistoryLogFactory.setLogLimit(1);\n            }\n\n            if (TuProfileHistoryLogFactory.shouldBeVisible($scope.tuProfile.id)) {\n                TuProfileHistoryLogFactory.setInProgress(true);\n                TuProfileFactory.setHistoryLogVisibility(true);\n                TuProfileHistoryLogFactory.setProfileType(profileType);\n\n                TuProfileOverviewService.getHistoryLog(\n                    $scope.tuProfile.id,\n                    profileType,\n                    advanced,\n                    TuProfileHistoryLogFactory.getLogLimit()\n                ).then(function (data) {\n                    TuProfileHistoryLogFactory.setData(data);\n                    TuProfileHistoryLogFactory.setInProgress(false);\n                });\n\n                TuProfileHistoryLogFactory.setTriggeredBy($scope.tuProfile.id);\n            } else {\n                TuProfileHistoryLogFactory.setLogLimit(1);\n                TuProfileHistoryLogFactory.setTriggeredBy('');\n                TuProfileFactory.setHistoryLogVisibility(false);\n            }\n        };\n\n        controller.isAdvancedOverviewInvalid = function (advancedOverviewWords) {\n            return advancedOverviewWords > controller.advancedDescriptionWordLimit;\n        };\n\n        controller.isBasicOverviewInvalid = function (basicOverviewWords) {\n            return basicOverviewWords > controller.basicDescriptionWordLimit;\n        };\n\n        controller.onKeyUp = function ($event) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value,\n                variableName = $event.target.getAttribute('ng-model');\n\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                if (variableName) {\n                    ObjectService.set($scope, variableName, url);\n                }\n            }\n        };\n\n        controller.initWatches = function () {\n            // get tu profile data\n            WatchService.create($scope, TuProfileFactory.getData, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.tuProfile = newValue;\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        /**\n         * reset description form for overview, ug, pg\n         */\n        controller.resetDescriptionForm = function () {\n            $scope.setIsAdvancedOverviewEmpty(false);\n            $scope.setIsAdvancedUgOverviewEmpty(false);\n            $scope.setIsAdvancedPgOverviewEmpty(false);\n            $scope.setIsBasicOverviewEmpty(false);\n            $scope.setIsBasicUgOverviewEmpty(false);\n            $scope.setIsBasicPgOverviewEmpty(false);\n        };\n        // listen to Overview tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isOverviewTabSelected, function (isActive, wasActive) {\n            if (wasActive) {\n                controller.resetDescriptionForm();\n            }\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileOverviewController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'TuProfileService',\n            'TuProfileOverviewService',\n            'UrlService',\n            'ObjectService',\n            'TextService',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'TuProfileHistoryLogFactory',\n            'WatchService',\n            'InstitutionFactory',\n            App.controllers.TuProfileOverview\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TuProfileOverviewService = function ($resource, $q, $log, constants) {\n        var service = {\n            overviewData: null,\n            institutionData: null,\n            historyLog: null,\n            historyLogFieldNames: null,\n            profileId: null,\n            activeTabs: {\n                master: 0,\n                pg: 1,\n                ug: 2\n            },\n            deferred: {\n                getHistoryLog: null\n            }\n        };\n\n        /**\n         * Get institution profile API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getTuModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Save TU profile data.\n         *\n         * @param {string} profileId\n         * @param {Object} overviewData\n         * @returns {Promise}\n         */\n        service.saveOverviewData = function (profileId, overviewData) {\n            var TuModel = service.getTuModel();\n            return TuModel.update(\n                { id: profileId },\n                overviewData\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get institution profile history logs API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getHistoryModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/tu-overview-history?sorting[modifiedAt]=desc&count=10&');\n        };\n\n        service.getActiveTabs = function () {\n            return service.activeTabs;\n        };\n\n        service.getProfileId = function () {\n            return service.profileId;\n        };\n\n         /**\n         * Get TU overview tab history logs.\n         *\n         * @param {string} recordId\n         * @param {string} fieldNames  - fields names to get the history for\n         * @returns {Promise}\n         */\n        service.getHistoryLog = function (recordId, profileType, advanced, limit) {\n            if (!recordId || !profileType || typeof advanced === 'undefined') {\n                return false;\n            }\n\n            var fields;\n\n            switch (profileType) {\n                case 'master':\n                    fields = [\n                        'masterWebsiteUrl',\n                        'masterRequestInfoEmail',\n                        'masterRequestInfoUrlTitle',\n                        'masterRequestInfoUrl',\n                        'masterWebsiteUrl',\n                        'masterRequestInfoEmail',\n                        'masterRequestInfoUrlTitle',\n                        'masterRequestInfoUrl',\n                        'advancedMasterOverview',\n                        'basicMasterOverview'\n                    ];\n                    break;\n                case 'ug':\n                    fields = [\n                        'ugWebsiteUrl',\n                        'ugRequestInfoEmail',\n                        'ugRequestInfoUrlTitle',\n                        'ugRequestInfoUrl',\n                        'basicUgOverview',\n                        'ugWebsiteUrl',\n                        'ugRequestInfoEmail',\n                        'ugRequestInfoUrlTitle',\n                        'ugRequestInfoUrl',\n                        'advancedUgOverview',\n                        'basicUgOverview'\n                    ];\n                    break;\n                case 'pg':\n                    fields = [\n                        'pgWebsiteUrl',\n                        'pgRequestInfoEmail',\n                        'pgRequestInfoUrlTitle',\n                        'pgRequestInfoUrl',\n                        'pgWebsiteUrl',\n                        'pgRequestInfoEmail',\n                        'pgRequestInfoUrlTitle',\n                        'pgRequestInfoUrl',\n                        'advancedPgOverview',\n                        'basicPgOverview'\n                    ];\n                    break;\n            }\n            fields.push('advanced');\n\n            // process already running\n            if (!service.deferred.getHistoryLog) {\n                service.deferred.getHistoryLog = $q.defer();\n            } else {\n                return service.deferred.getHistoryLog.promise;\n            }\n            var deferred = service.deferred.getHistoryLog;\n\n            if (service.historyLog) {\n                deferred.resolve(service.historyLog);\n            } else {\n                var HistoryModel = service.getHistoryModel();\n                HistoryModel.get(\n                    {\n                        'filter[recordId]': recordId,\n                        'field[]': fields,\n                        'filter[type]': profileType,\n                        'limit': limit\n                    },\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n                        service.historyLog = data;\n                        service.profileId = recordId;\n\n                        deferred.resolve(service.historyLog);\n                        deferred = null;\n                        service.deferred.getHistoryLog = null;\n                        service.historyLog = null;\n                    }, function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        service.historyLog = null;\n                        deferred.resolve(service.historyLog);\n                        deferred = null;\n                        service.deferred.getHistoryLog = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuProfileOverviewService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.TuProfileOverviewService\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmProfileOverview = function (\n        $scope,\n        constants,\n        TmProfileOverviewService,\n        UrlService,\n        ObjectService,\n        TextService,\n        NotifierFactory,\n        UserFactory,\n        TmProfileFactory,\n        TmProfileOverviewHistoryLogFactory,\n        TmProfileOverviewFactory,\n        InstitutionFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.fetchingHistoryLogsInProgress = false;\n        controller.textEditorBasicOptions = {\n            disableDragAndDrop: true,\n            styleWithSpan: false,\n            minHeight: 280,\n            maxHeight: 280,\n            toolbar: [\n                ['alignment', ['ul', 'ol']],\n                ['edit', ['undo', 'redo']],\n                ['view', ['codeview']]\n            ],\n            popover: {\n                link: []\n            }\n        };\n        controller.textEditorAdvancedOptions = {\n            disableDragAndDrop: true,\n            styleWithSpan: false,\n            minHeight: 280,\n            maxHeight: 280,\n            toolbar: [\n                ['style', ['bold', 'italic', 'underline', 'superscript', 'subscript', 'strikethrough']],\n                ['alignment', ['ul', 'ol']],\n                ['insert', ['link', 'unlink']],\n                ['edit', ['undo', 'redo']],\n                ['view', ['codeview']]\n            ],\n            popover: {\n                link: []\n            }\n        };\n        controller.advancedDescriptionWordLimit = 500;\n        controller.validationMessageAdvancedDescriptionWordLimit =\n            'Profile advanced description has exceeded the limit of ' +\n            controller.advancedDescriptionWordLimit +\n            ' words. Please reduce number of words.';\n        controller.advancedOverviewWords = 0;\n        controller.basicDescriptionWordLimit = 200;\n        controller.validationMessageBasicDescriptionWordLimit =\n            'Profile basic description has exceeded the limit of ' +\n            controller.basicDescriptionWordLimit +\n            ' words. Please reduce number of words.';\n        controller.basicOverviewWords = 0;\n        controller.submitted = false;\n\n        $scope.overviewBasicFormSubmitInProgress = false;\n        $scope.forms = {};\n        $scope.upgradeRequest = {\n            name: UserFactory.getFullName(),\n            email: UserFactory.getUserName()\n        };\n\n        controller.isInvalidUrl = function () {\n            if (!controller.submitted) {\n                return false;\n            }\n            var url = $scope.tmProfile.websiteUrl;\n            return url && url.length > 1 && url.length < 7;\n        };\n\n        /**\n         * Count words in the string.\n         *\n         * @param {string} text\n         */\n        $scope.countWords = function (text) {\n            return TextService.countWords(text);\n        };\n\n        /**\n         * Handle basic  profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewBasicDataSubmit = function () {\n            $scope.isBasicTmOverviewEmpty = false;\n            if (typeof ($scope.tmProfile.basicOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tmProfile.basicOverview).length === 0 ||\n                $scope.tmProfile.basicOverview === \"\"\n            ) {\n                $scope.isBasicTmOverviewEmpty = true;\n            }\n            /**\n             * Validation 1:\n             * Number of words in Basic Description is exceeding the limit of basicDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tmProfile.basicOverview) > controller.basicDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageBasicDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            if (\n                $scope.overviewBasicFormSubmitInProgress ||\n                !$scope.forms.overviewBasicForm ||\n                !$scope.forms.overviewBasicForm.$valid ||\n                $scope.isBasicTmOverviewEmpty\n            ) {\n                return false;\n            }\n            $scope.overviewBasicFormSubmitInProgress = true;\n\n            TmProfileOverviewService.saveOverviewData($scope.tmProfile.id, {\n                basicOverview: $scope.tmProfile.basicOverview\n            }).then(function (success) {\n                $scope.overviewBasicFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsBasicTmOverviewEmpty = function (value) {\n            $scope.isBasicTmOverviewEmpty = value;\n        };\n\n        /**\n         * Handle advanced profile submission.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleOverviewAdvancedDataSubmit = function () {\n            controller.submitted = true;\n            $scope.isAdvancedTmOverviewEmpty = false;\n            if (typeof ($scope.tmProfile.advancedOverview) !== \"undefined\" &&\n                TextService.cleanHtmlTags($scope.tmProfile.advancedOverview).length === 0 ||\n                $scope.tmProfile.advancedOverview === \"\"\n            ) {\n                $scope.isAdvancedTmOverviewEmpty = true;\n            }\n            /**\n             * Validation 1:\n             * Number of words in Advanced Description is exceeding the limit of advancedDescriptionWordLimit words\n             */\n            if ($scope.countWords($scope.tmProfile.advancedOverview) > controller.advancedDescriptionWordLimit) {\n                NotifierFactory.show(\n                    'error',\n                    controller.validationMessageAdvancedDescriptionWordLimit,\n                    'Saving failed!'\n                );\n\n                return false;\n            }\n            $scope.tmProfile.websiteUrl = UrlService.prependHttp($scope.tmProfile.websiteUrl);\n            if (\n                $scope.overviewAdvancedFormSubmitInProgress ||\n                !$scope.forms.overviewAdvancedForm ||\n                !$scope.forms.overviewAdvancedForm.$valid ||\n                controller.isInvalidUrl() ||\n                $scope.isAdvancedTmOverviewEmpty\n            ) {\n                return false;\n            }\n            $scope.overviewAdvancedFormSubmitInProgress = true;\n            TmProfileOverviewService.saveOverviewData($scope.tmProfile.id, {\n                advanced: true,\n                advancedOverview: $scope.tmProfile.advancedOverview,\n                websiteUrl: $scope.tmProfile.websiteUrl,\n                requestInfoEmail: $scope.tmProfile.requestInfoEmail\n            }).then(function (success) {\n                $scope.overviewAdvancedFormSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Overview Information'\n                );\n            });\n        };\n\n        $scope.setIsAdvancedTmOverviewEmpty = function (value) {\n            $scope.isAdvancedTmOverviewEmpty = value;\n        };\n\n        controller.handleTmOverviewHistoryLogClick = function (advanced) {\n            controller.fetchingHistoryLogsInProgress = true;\n            advanced = advanced || false;\n            var isVisible = !TmProfileOverviewHistoryLogFactory.isOverviewVisible();\n            TmProfileOverviewHistoryLogFactory.setOverviewVisible(isVisible);\n            if (isVisible) {\n                // load logs\n                TmProfileOverviewService.getOverviewHistoryLogs($scope.tmProfile.id, advanced).then(function (data) {\n                    TmProfileOverviewHistoryLogFactory.setLogs(data);\n                    controller.fetchingHistoryLogsInProgress = false;\n                });\n                TmProfileFactory.setUpgradeFormVisibility(false);\n            }\n        };\n\n        controller.handleTmFaqHistoryLogClick = function () {\n            controller.fetchingHistoryLogsInProgress = true;\n            var isVisible = !TmProfileOverviewHistoryLogFactory.isFaqVisible();\n            TmProfileOverviewHistoryLogFactory.setFaqVisible(isVisible);\n            if (isVisible) {\n                // load logs\n                TmProfileOverviewService.getFaqHistoryLogs($scope.tmProfile.id).then(function (data) {\n                    TmProfileOverviewHistoryLogFactory.setLogs(data);\n                    controller.fetchingHistoryLogsInProgress = false;\n                });\n            }\n        };\n\n        controller.isAdvancedOverviewInvalid = function (advancedOverviewWords) {\n            return advancedOverviewWords > controller.advancedDescriptionWordLimit;\n        };\n\n        controller.isBasicOverviewInvalid = function (basicOverviewWords) {\n            return basicOverviewWords > controller.basicDescriptionWordLimit;\n        };\n\n        controller.onKeyUp = function ($event) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value,\n                variableName = $event.target.getAttribute('ng-model');\n\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                if (variableName) {\n                    ObjectService.set($scope, variableName, url);\n                }\n            }\n        };\n\n        $scope.isRightSidePanelActive = function () {\n            // media tab is active\n            if (TmProfileFactory.isOverviewTabSelected && $scope.showUpgradeForm) {\n                return true;\n            }\n            return false;\n        };\n\n        controller.isOverviewInvalid = function () {\n            return controller.submitted && ($scope.isAdvancedTmOverviewEmpty || $scope.isBasicTmOverviewEmpty);\n        };\n\n        controller.setOverviewInvalid = function (type) {\n            if (type === 'advancedTmOverview') {\n                $scope.setIsAdvancedTmOverviewEmpty(false);\n            }\n            else if (type === 'basicTmOverview') {\n                $scope.setIsBasicTmOverviewEmpty(false);\n            }\n        };\n\n        controller.activeOverviewSubTabWatch = function (selectedTabId) {\n            // set selected tab id\n            TmProfileOverviewFactory.setSelectedTabId(selectedTabId);\n            // close right side panels\n            TmProfileFactory.closeRightSidePanels();\n        };\n\n        controller.isLoadMoreRequestWatch = function (loadMore) {\n            if (loadMore) {\n                TmProfileOverviewHistoryLogFactory.loadMore(false);\n\n                TmProfileOverviewHistoryLogFactory.setLoadMoreInProgress(true);\n                var limit = TmProfileOverviewHistoryLogFactory.getLimit() + 5;\n\n                if (TmProfileOverviewHistoryLogFactory.isOverviewVisible()) {\n                    // load logs\n                    TmProfileOverviewService.getOverviewHistoryLogs(\n                        $scope.tmProfile.id,\n                        InstitutionFactory.isTmAdvanced(),\n                        limit\n                    ).then(function (data) {\n                        TmProfileOverviewHistoryLogFactory.setLogs(data);\n                        TmProfileOverviewHistoryLogFactory.setLoadMoreInProgress(false);\n                        TmProfileOverviewHistoryLogFactory.setLimit(limit);\n                    });\n                } else {\n                    TmProfileOverviewService.getFaqHistoryLogs(\n                        $scope.tmProfile.id, limit\n                    ).then(function (data) {\n                        TmProfileOverviewHistoryLogFactory.setLogs(data);\n                        TmProfileOverviewHistoryLogFactory.setLoadMoreInProgress(false);\n                        TmProfileOverviewHistoryLogFactory.setLimit(limit);\n                    });\n                }\n            }\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, 'activeOverviewSubTab', controller.activeOverviewSubTabWatch);\n            WatchService.create($scope, TmProfileOverviewHistoryLogFactory.isLoadMoreRequest, controller.isLoadMoreRequestWatch);\n\n            // get tu profile data\n            WatchService.create($scope, TmProfileFactory.getData, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.tmProfile = newValue;\n                }\n            });\n\n            WatchService.create($scope, TmProfileFactory.isUpgradeFormVisible($scope.activeTab), function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.upgradeRequest.comments = null;\n                    $scope.showUpgradeForm = newValue;\n                }\n            });\n\n            // watch active institution coreId changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    controller.resetDescriptionForm();\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        /**\n         * reset description form for overview.\n         */\n        controller.resetDescriptionForm = function () {\n            $scope.setIsBasicTmOverviewEmpty(false);\n            $scope.setIsAdvancedTmOverviewEmpty(false);\n        };\n\n        // listen to Overview tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isOverviewTabSelected, function (isActive, wasActive) {\n            if (wasActive) {\n                controller.resetDescriptionForm();\n            }\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileOverviewController', [\n            '$scope',\n            'constants',\n            'TmProfileOverviewService',\n            'UrlService',\n            'ObjectService',\n            'TextService',\n            'NotifierFactory',\n            'UserFactory',\n            'TmProfileFactory',\n            'TmProfileOverviewHistoryLogFactory',\n            'TmProfileOverviewFactory',\n            'InstitutionFactory',\n            'WatchService',\n            App.controllers.TmProfileOverview\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmProfileOverviewFaq = function (\n        $scope,\n        constants,\n        TmProfileOverviewService,\n        TextService,\n        NotifierFactory,\n        TmProfileFactory,\n        TmProfileOverviewFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.maxItems = TmProfileOverviewService.maxFaqItems;\n        controller.updateInProgress = false;\n        controller.wordsLimit = 200;\n        controller.defaultItem = {\n            answer: null,\n            question: null\n        };\n        controller.textEditorAdvancedOptions = {\n            disableDragAndDrop: true,\n            styleWithSpan: false,\n            minHeight: 280,\n            maxHeight: 280,\n            toolbar: [\n                ['alignment', ['ul', 'ol']],\n                ['edit', ['undo', 'redo']],\n                ['view', ['codeview']]\n            ],\n            popover: {\n                link: []\n            }\n        };\n        controller.wordsCounters = [];\n        controller.items = new Array(controller.maxItems);\n        controller.tmProfile = null;\n        $scope.faq = [];\n\n        controller.handleTextEditorChanges = function (key, text) {\n            controller.wordsCounters[key] = controller.countWords(text);\n        };\n\n        controller.isInvalidAnswer = function (key) {\n            return controller.wordsCounters[key] > controller.wordsLimit;\n        };\n\n        controller.countWords = function (text) {\n            return TextService.countWords(text);\n        };\n\n        controller.handleAddClick = function () {\n            if ($scope.faq.length < controller.maxItems) {\n                $scope.faq.push(angular.copy(controller.defaultItem));\n            }\n        };\n\n        controller.handleUpdateClick = function () {\n            // check if FAQ answers are valid\n            for (var key in $scope.faq) {\n                if (controller.isInvalidAnswer(key)) {\n                    NotifierFactory.show(\n                        'error',\n                        'FAQ answer has exceeded the limit of ' + controller.wordsLimit +\n                        ' words. Please reduce number of words.',\n                        'Saving failed!'\n                    );\n                    return false;\n                }\n            }\n\n            controller.updateInProgress = true;\n            TmProfileOverviewService.saveOverviewData(controller.tmProfileId, {\n                faq: $scope.faq\n            }).then(function (success) {\n                controller.updateInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Updated successfully!' : 'Update failed!',\n                    'Overview FAQ'\n                );\n                if (success) {\n                    controller.tmProfile.faq = angular.copy($scope.faq);\n                    TmProfileFactory.setData(controller.tmProfile);\n                }\n            });\n\n        };\n\n        controller.handleRemoveClick = function (key) {\n            if (typeof $scope.faq === 'undefined' || !$scope.faq.length) {\n                return false;\n            }\n            key = parseInt(key, 10);\n            if (typeof $scope.faq[key] !== 'undefined') {\n                $scope.faq.splice(key, 1);\n            }\n        };\n\n        controller.isRemoveDisabled = function () {\n            return controller.updateInProgress;\n        };\n\n        controller.isItemVisible = function (key) {\n            if (typeof $scope.faq === 'undefined') {\n                return key === 0 ? true : false;\n            }\n            key = parseInt(key, 10);\n\n            return (typeof $scope.faq !== 'undefined' && $scope.faq !== null &&\n                typeof $scope.faq[key] !== 'undefined') ||  key === 0;\n        };\n\n        controller.showAddFaq = function (itemIndex) {\n            return $scope.faq && $scope.faq.length === itemIndex + 1;\n        };\n\n        controller.resetFaq = function () {\n            if (controller.tmProfile && controller.tmProfile.faq) {\n                $scope.faq = angular.copy(controller.tmProfile.faq);\n            }\n        };\n\n        controller.initWatches = function () {\n            // get tm profile data\n            WatchService.create($scope, TmProfileFactory.getData, function (newValue) {\n                controller.tmProfile = angular.copy(newValue);\n                $scope.faq = newValue && newValue.faq ? newValue.faq : null;\n                controller.tmProfileId = newValue && newValue.id ? newValue.id : null;\n            });\n\n            // listen to over tab changes\n            WatchService.create($scope, TmProfileOverviewFactory.isOverviewTabSelected, function (isActive) {\n                if (!isActive) {\n                    controller.resetFaq();\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n\n        // listen to Overview tab visibility changes\n        WatchService.create($scope, TmProfileOverviewFactory.isFaqSelected, function (isActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive) {\n                controller.init();\n                alreadyInitialised = true;\n            } else if (isActive) {\n                controller.resetFaq();\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileOverviewFaqController', [\n            '$scope',\n            'constants',\n            'TmProfileOverviewService',\n            'TextService',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'TmProfileOverviewFactory',\n            'WatchService',\n            App.controllers.TmProfileOverviewFaq\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TmProfileOverviewService = function ($resource, $q, $log, constants) {\n        var service = {\n            overviewData : null,\n            institutionData: null,\n            historyLog : null,\n            historyLogFieldNames: null,\n            profileId: null,\n            deferred : {\n                getHistoryLog: null\n            },\n            maxFaqItems: 5\n        };\n\n        /**\n         * Get institution profile API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getTmModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id', null, {\n                update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Save TU profile data.\n         *\n         * @param {string} profileId\n         * @param {Object} overviewData\n         * @returns {Promise}\n         */\n        service.saveOverviewData = function(profileId, overviewData) {\n            var TmModel = service.getTmModel();\n            return TmModel.update(\n                {id: profileId},\n                overviewData\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get institution profile history logs API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getHistoryModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/tm-overview-history?sorting[modifiedAt]=desc&count=10&');\n         };\n\n        service.getActiveTabs = function () {\n            return service.activeTabs;\n        };\n\n        service.getProfileId = function () {\n            return service.profileId;\n        };\n\n        service.getLogs = function (profileId, fields, limit) {\n            if (!profileId) {\n                return false;\n            }\n            limit = limit || 1;\n            // process already running\n            if (!service.deferred.getHistoryLog) {\n                service.deferred.getHistoryLog = $q.defer();\n            } else {\n                return service.deferred.getHistoryLog.promise;\n\n            }\n            var deferred = service.deferred.getHistoryLog;\n\n            if (service.historyLog) {\n                deferred.resolve(service.historyLog);\n            } else {\n                var HistoryModel = service.getHistoryModel();\n                HistoryModel.get(\n                    {\n                        'filter[recordId]': profileId,\n                        'field[]': fields,\n                        'limit': limit\n                    },\n                    function (data) {\n                        if (constants.dev) {\n                            $log.log('success, got data: ', data);\n                        }\n                        service.historyLog = data;\n                        service.profileId = profileId;\n\n                        deferred.resolve(service.historyLog);\n                        deferred = null;\n                        service.deferred.getHistoryLog = null;\n                        service.historyLog = null;\n                    }, function (error) {\n                        //@todo log error\n                        if (constants.dev) {\n                            $log.log('request failed' + error);\n                        }\n                        service.historyLog = null;\n                        deferred.resolve(service.historyLog);\n                        deferred = null;\n                        service.deferred.getHistoryLog = null;\n                    }\n                );\n            }\n\n            return deferred.promise;\n        };\n\n        service.getOverviewHistoryLogs = function (profileId, isAdvanced, limit) {\n            if (!profileId || typeof isAdvanced === 'undefined') {\n                return false;\n            }\n            var fields = [\n                'websiteUrl',\n                'requestInfoEmail',\n                'websiteUrl',\n                'advanced'\n            ];\n            if (isAdvanced) {\n                fields.push('advancedOverview');\n            } else {\n                fields.push('basicOverview');\n            }\n\n            return service.getLogs(profileId, fields, limit);\n        };\n\n        service.getFaqHistoryLogs = function (profileId, limit) {\n            if (!profileId) {\n                return false;\n            }\n\n            return service.getLogs(profileId, ['faq'], limit);\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmProfileOverviewService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.TmProfileOverviewService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { factories: {} });\n\n    App.factories.TmProfileOverview = function() {\n        var selectedTabId = 0;\n        return {\n            setSelectedTabId : function (tabId) {\n                selectedTabId = tabId;\n            },\n            isFaqSelected: function () {\n                return selectedTabId === 1;\n            },\n            isOverviewSelected: function () {\n                return selectedTabId === 0;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('TmProfileOverviewFactory', [\n            App.factories.TmProfileOverview\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { factories: {} });\n\n    App.factories.tmProfileOverviewHistoryLog = function() {\n        var faqVisible = false,\n            overviewVisible = false,\n            loadMoreInProgress = false,\n            loadMore = false,\n            logs = [],\n            limit;\n\n        return {\n            isFaqVisible: function () {\n                return faqVisible;\n            },\n            isOverviewVisible: function () {\n                return overviewVisible;\n            },\n            setFaqVisible: function (isVisible) {\n                faqVisible = isVisible;\n                if (faqVisible) {\n                    overviewVisible = false;\n                }\n            },\n            setOverviewVisible: function (isVisible) {\n                overviewVisible = isVisible;\n                if (overviewVisible) {\n                    faqVisible = false;\n                }\n            },\n            closeAll: function () {\n                overviewVisible = false;\n                faqVisible = false;\n            },\n            setLogs: function (data) {\n                logs = data;\n            },\n            getLogs: function () {\n                return logs;\n            },\n            setLimit: function (newLimit) {\n                limit = newLimit;\n            },\n            getLimit: function () {\n                return limit || 1;\n            },\n            isLoadMoreInProgress: function () {\n                return loadMoreInProgress;\n            },\n            setLoadMoreInProgress: function (inProgress) {\n                loadMoreInProgress = inProgress;\n            },\n            loadMore: function (more) {\n                loadMore = typeof more === 'undefined' ? true : more;\n            },\n            isLoadMoreRequest: function () {\n                return loadMore;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('TmProfileOverviewHistoryLogFactory', [\n            App.factories.tmProfileOverviewHistoryLog\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tuProfileDepartments = function (\n        $scope,\n        $rootScope,\n        $resource,\n        $location,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        InstitutionFactory,\n        TuProfileDepartmentsService,\n        TuProfileService,\n        uiGridConstants,\n        UserFactory,\n        WatchService,\n        GridService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.deleteField = 'delete';\n        controller.modifiedAtField = 'modifiedAt';\n\n        $scope.departmentsToDelete = {};\n        $scope.alphabeticalOrderingInProgress = false;\n        $scope.deleteInProgress = false;\n        $scope.isDatagridReloading = false;\n        $scope.isDatagridRendered = false;\n\n        $scope.filters = {\n            createdAt: {\n                startDate: null,\n                endDate: null\n            }\n        };\n\n        controller.gridFilterNameSpace = TuProfileFactory.getIsDepartmentOverview() ?\n            constants.gridNameSpaces.departmentsOvGridFilters :\n            constants.gridNameSpaces.departmentsGridFilters;\n\n        controller.gridVisibilityNameSpace = TuProfileFactory.getIsDepartmentOverview() ?\n            constants.gridNameSpaces.departmentsOvGridVisibility :\n            constants.gridNameSpaces.departmentsGridVisibility;\n\n        controller.lastCreatedAt = null;\n        controller.paginationOptions = GridService.getColumnsFilters(\n            controller.gridFilterNameSpace,\n            []\n        );\n\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            controller.gridVisibilityNameSpace\n        );\n\n        $scope.getTuProfileDepartmentController = function () {\n            return controller;\n        };\n\n        $scope.handleCreatedAtDateRange = function (event) {\n            if (event === null || typeof event === 'undefined') {\n                $scope.gridOptions.columnDefs[5].filters[0].term = null;\n                $scope.gridOptions.columnDefs[5].filters[1].term = null;\n            } else if (event.model.startDate && event.model.endDate) {\n                $scope.gridOptions.columnDefs[5].filters[0].term = event.model.startDate.format('x');\n                $scope.gridOptions.columnDefs[5].filters[1].term = event.model.endDate.format('x');\n            }\n        };\n\n        /**\n         * Actions to do when departments table row is clicked.\n         *\n         * @param {object} department\n         */\n        $scope.handleDatagridRowClick = function (department) {\n            $scope.selectedDepartmentId = ($scope.selectedDepartmentId === department.id) ? null : department.id;\n            // store link to department instance\n            TuProfileFactory.setDepartmentBeforeChanges(department);\n            // create new copy of department for making changes in\n            department = angular.copy(department);\n            TuProfileFactory.setDepartmentEditFormVisibility(\n                $scope.selectedDepartmentId === department.id && department.id !== 'undefined'\n            );\n            TuProfileFactory.setDepartment(department);\n\n            controller.toggleColumns($scope.selectedDepartmentId === department.id && department.id !== 'undefined');\n            TuProfileFactory.setIsDepartmentRowSelected(true);\n        };\n\n        /**\n         * Toggle datagrid columns visibility.\n         *\n         * @param {boolean} hide\n         */\n        controller.toggleColumns = function (hide) {\n            if (!$scope.gridOptions) {\n                return;\n            }\n            if (hide) {\n                // hide delete column\n                angular.forEach($scope.gridOptions.columnDefs, function (column) {\n                    if (column.field !== controller.deleteField) {\n                        column.visible = angular.isDefined(controller.columnsVisibility) ?\n                            controller.columnsVisibility[column.field] : true;\n                    } else {\n                        column.visible = false;\n                    }\n                });\n            } else {\n                // show all columns\n                angular.forEach($scope.gridOptions.columnDefs, function (column) {\n                    if (column.field === controller.deleteField) {\n                        column.visible = true;\n                    } else {\n                        column.visible = angular.isDefined(controller.columnsVisibility) ?\n                            controller.columnsVisibility[column.field] : true;\n                    }\n                });\n            }\n            $scope.gridOptions.enableGridMenu = !hide;\n        };\n\n        /**\n         * Actions to do when alphabetical ordering checked.\n         *\n         * @param {boolean} alphabetical\n         */\n        $scope.handleAlphabeticalOrderClick = function (alphabetical) {\n            // indicate progress\n            $scope.alphabeticalOrderingInProgress = true;\n            // store changes\n            TuProfileService.updateInstitution($scope.institutionId, {\n                departmentsAlphabeticalOrder: alphabetical\n            }).then(function (success) {\n                if (success) {\n                    // reload departments datagrid\n                    controller.reloadDatagrid();\n                }\n                // indicate progress end\n                $scope.alphabeticalOrderingInProgress = false;\n            });\n        };\n        /**\n         * Actions to do when add department button is clicked.\n         */\n        $scope.handleAddDepartmentClick = function () {\n            // toggle add form\n            TuProfileFactory.setDepartmentAddFormVisibility();\n        };\n\n        /**\n         * Populates input text field for date field\n         *\n         * @param {string} filterName\n         * @param {mixed} defaultValue\n         */\n        controller.applyDateFilter = function (filterName, defaultValue) {\n            var filter = GridService.getFilterByField(controller.paginationOptions, filterName, defaultValue);\n            if (angular.isDefined(filter) &&\n                filter !== null\n            ) {\n                if (angular.isDefined(filter.startDate) &&\n                    angular.isDefined(filter.endDate)\n                ) {\n                    if (filter.startDate !== null &&\n                        filter.startDate !== null\n                    ) {\n                        $scope.filters.createdAt = {\n                            startDate: parseInt(filter.startDate, 10),\n                            endDate: parseInt(filter.endDate, 10)\n                        };\n                    } else {\n                        $scope.filters.createdAt = {\n                            startDate: null,\n                            endDate: null\n                        };\n                    }\n                }\n            }\n        };\n\n        controller.getDepartmentsToDelete = function () {\n            var departmentsIds = [];\n            if ($scope.departmentsToDelete) {\n                angular.forEach($scope.departmentsToDelete, function (remove, id) {\n                    if (remove) {\n                        departmentsIds.push(id);\n                    }\n                });\n            }\n\n            return departmentsIds;\n        };\n\n        controller.clearDepartmentsToDelete = function () {\n            $scope.departmentsToDelete = {};\n        };\n\n        controller.hasDepartmentsToDelete = function () {\n            var departmentsIds = controller.getDepartmentsToDelete();\n            return departmentsIds.length !== 0;\n        };\n\n        $scope.isDeleteButtonDisabled = function () {\n\n            return $scope.deleteInProgress ||\n                !$scope.institutionId ||\n                !controller.hasDepartmentsToDelete();\n        };\n\n        /**\n         * Actions to do when department delete button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleDeleteClick = function () {\n            if ($scope.deleteInProgress || !controller.hasDepartmentsToDelete()) {\n                return false;\n            }\n            var departmentsIds = controller.getDepartmentsToDelete();\n            $scope.deleteInProgress = true;\n            TuProfileDepartmentsService.delete(departmentsIds).then(function (success) {\n                $scope.deleteInProgress = false;\n                if (success) {\n                    $scope.departmentsToDelete = {};\n                    // reload departments datagrid\n                    //controller.reloadDatagrid();\n                    var i = 0,\n                        rows = $scope.gridOptions.data,\n                        total = rows.length;\n\n                    for (i; i < total; i++) {\n                        if (rows[i] && rows[i].id && departmentsIds.indexOf(rows[i].id) !== -1) {\n                            delete $scope.gridOptions.data[i];\n                        }\n                    }\n                    TuProfileFactory.setIsDepartmentUpdated(true);\n                }\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Successfully!' : 'Failed!',\n                    'Departments Deleted'\n                );\n            });\n        };\n\n        $scope.handleDatagridFiltersChanges = function (grid) {\n            angular.forEach($scope.gridApi.grid.columns, function (column) {\n                if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                    if (\n                        column.filters[0].type === uiGridConstants.filter.SELECT &&\n                        typeof column.filters[0].term === 'object' &&\n                        column.filters[0].term !== null &&\n                        typeof column.filters[0].term.value !== 'undefined'\n                    ) {\n                        column.filters[0].term = column.filters[0].term.value;\n                    } else if (column.filters[0].term !== null &&\n                        typeof column.filters[0].term !== 'undefined') {\n                        GridService.applyFilters(column);\n                    }\n                }\n\n                var filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                if (column.field === 'modifiedAt') {\n                    if (\n                        typeof column.filters !== 'undefined' &&\n                        typeof column.filters[0].term !== 'undefined' &&\n                        typeof column.filters[1].term !== 'undefined'\n                    ) {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = {\n                            startDate: column.filters[0].term && isNaN(column.filters[0].term) ?\n                                column.filters[0].term.format('x') : column.filters[0].term,\n                            endDate: column.filters[1].term && isNaN(column.filters[1].term) ?\n                                column.filters[1].term.format('x') : column.filters[1].term\n                        };\n                    } else {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = null;\n                    }\n                } else if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                    controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                }\n            });\n\n            GridService.storeColumnsFilters(\n                controller.gridFilterNameSpace,\n                controller.paginationOptions\n            );\n\n            var currentCreatedAt = null;\n            for (var i = 0; i < grid.columns.length; i++) {\n                for (var x = 0; x < grid.columns[i].filters.length; x++) {\n                    // check if has active filters\n                    if (grid.columns[i].filters[x].term !== undefined) {\n                        controller.lastCreatedAt = angular.copy(currentCreatedAt);\n                        return;\n                    }\n                }\n\n                if (grid.columns[i].field === controller.modifiedAtField) {\n                    currentCreatedAt = grid.columns[i].filters[0].term && grid.columns[i].filters[1].term ?\n                        [grid.columns[i].filters[0].term, grid.columns[i].filters[1].term].join('|') : null;\n                }\n            }\n\n            if (!currentCreatedAt && !controller.lastCreatedAt) {\n                return;\n            }\n\n            if (!currentCreatedAt && controller.lastCreatedAt) {\n                $scope.filters.createdAt = {\n                    startDate: null,\n                    endDate: null\n                };\n            }\n            controller.lastCreatedAt = angular.copy(currentCreatedAt);\n        };\n\n        $scope.handleDatagridDragAndDrop = function () {\n            $scope.institutionData.departmentsAlphabeticalOrder = false;\n            var i = 0,\n                rows = $scope.gridApi.core.getVisibleRows(),\n                total = rows.length,\n                orderedIds = [];\n            for (i; i < total; i++) {\n                orderedIds.push(rows[i].entity.coreId);\n            }\n            TuProfileDepartmentsService.updateOrder($scope.institutionId, orderedIds).then(function (success) {\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Successfully updated!' : 'Update failed!',\n                    'Departments Order'\n                );\n            });\n        };\n\n        controller.reloadDatagrid = function () {\n            var coreId = InstitutionFactory.getCoreId();\n            if (!coreId) {\n                return false;\n            }\n            $scope.isDatagridReloading = true;\n            return TuProfileDepartmentsService.getAllDepartmentsByCoreId(coreId).then(function (response) {\n                $scope.isDatagridReloading = false;\n                $scope.gridOptions.data = response;\n\n                return response;\n            });\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(controller.gridVisibilityNameSpace);\n            if (columnsVisibility) {\n                angular.forEach($scope.gridOptions.columnDefs, function (column, key) {\n                    if (column.field !== 'delete' &&\n                        columnsVisibility[column.field] === true &&\n                        column.visible === false\n                    ) {\n                        $scope.gridOptions.columnDefs[key].filter.term = null;\n                        if (column.field === 'modifiedAt') {\n                            delete $scope.gridOptions.columnDefs[key].filters[0].term;\n                            $scope.filters.lastLoginAtRange = {\n                                startDate: null,\n                                endDate: null\n                            };\n                        }\n                    }\n                });\n            }\n            controller.columnsVisibility = GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs);\n            GridService.storeColumnsVisibility(\n                controller.gridVisibilityNameSpace,\n                controller.columnsVisibility\n            );\n        };\n\n        controller.initWatches = function () {\n            // watch for new departments\n            WatchService.create($scope, TuProfileFactory.hasNewDepartment, function (newDepartmentId) {\n                if (newDepartmentId) {\n                    // reload datagrid\n                    //controller.reloadDatagrid(InstitutionFactory.getCoreId());\n\n                    controller.reloadDatagrid(InstitutionFactory.getCoreId()).then(function (departmentsList) {\n                        if (departmentsList) {\n                            var i = 0,\n                                department = null,\n                                total = departmentsList.length;\n                            for (i; i < total; i++) {\n                                department = departmentsList[i];\n                                if (department.id === newDepartmentId) {\n                                    TuProfileFactory.setDepartmentBeforeChanges(department);\n                                    break;\n                                }\n                            }\n                        }\n                        // mark new department as selected in the datagrid\n                        $scope.selectedDepartmentId = newDepartmentId;\n\n                    }).finally(function () {\n                        // open new department in edit mode\n                        TuProfileFactory.setDepartmentEditFormVisibility(true);\n                    });\n                }\n            });\n\n            // watch for department add form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab);\n            }, function (visible) {\n                visible = visible || TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab);\n                controller.toggleColumns(visible);\n            });\n\n            // watch for department edit form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab);\n            }, function (visible) {\n                if (!visible) {\n                    $scope.selectedDepartmentId = null;\n                } else {\n                    $scope.selectedDepartmentId = TuProfileFactory.getDepartmentId();\n                }\n                visible = visible || TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab);\n                controller.toggleColumns(visible);\n            });\n            // watch for client department upgrade form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isClientDepartmentUpgradeFormVisible($scope.activeTab);\n            }, function (visible) {\n                visible = visible || TuProfileFactory.isDepartmentEditFormVisible($scope.activeTab);\n                if (!visible) {\n                    $scope.selectedDepartmentId = null;\n                } else {\n                    $scope.selectedDepartmentId = TuProfileFactory.getDepartmentId();\n                }\n                controller.toggleColumns(visible);\n            });\n\n            // listen to active institution changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, function (coreId) {\n                if (coreId) {\n                    controller.initDataGrid(coreId);\n                }\n            });\n\n            //Reload grid on department update\n            WatchService.create($scope, TuProfileFactory.getUpdateDepartmentsGrid, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    controller.reloadDatagrid();\n                    TuProfileFactory.setUpdateDepartmentsGrid(false);\n                }\n            });\n\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n            selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html';\n        $scope.gridOptions = {\n            enableSorting: false,\n            exporterMenuCsv: false,\n            enableGridMenu: true,\n            showGridFooter: true,\n            selectedItems: $scope.selectedDepartmentId,\n            enableFiltering: true,\n            enableColumnResize: true,\n            enableFullRowSelection: true,\n            enableRowSelection: true,\n            multiSelect: false,\n            enableRowHeaderSelection: false,\n            rowTemplate: '/scripts/components/profiles/tu/departments/datagrid/rowTemplate.html',\n            columnDefs: [\n                {\n                    displayName: 'Delete',\n                    field: controller.deleteField,\n                    enableSorting: false,\n                    enableColumnResizing: false,\n                    headerCellClass: 'text-center v-align',\n                    headerCellTemplate: '/scripts/components/profiles/tu/departments/datagrid/deleteHeaderCellTemplate.html',\n                    cellTemplate: '/scripts/components/profiles/tu/departments/datagrid/deleteCellTemplate.html',\n                    maxWidth: 80\n                },\n                {\n                    displayName: 'Core ID',\n                    field: 'coreId',\n                    maxWidth: 80,\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'coreId', true),\n                    filter: {\n                        term: GridService.getFilterByField(controller.paginationOptions, 'coreId', '')\n                    }\n                },\n                {\n                    displayName: 'Full Name',\n                    field: 'fullname',\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'fullname', true),\n                    filter: {\n                        term: GridService.getFilterByField(controller.paginationOptions, 'fullname', '')\n                    }\n                },\n                {\n                    displayName: 'Department Type',\n                    filter: {\n                        type: uiGridConstants.filter.SELECT,\n                        selectOptions: TuProfileDepartmentsService.getDepartmentTypes(true),\n                        term: GridService.getFilterByField(controller.paginationOptions, 'typeId')\n                    },\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'typeId', true),\n                    field: 'typeId',\n                    maxWidth: 160,\n                    filterHeaderTemplate: selectTemplate,\n                    cellTemplate: selectCellTemplate\n                },\n                {\n                    displayName: 'Belongs To',\n                    filter: {\n                        type: uiGridConstants.filter.SELECT,\n                        selectOptions: TuProfileService.getBelongsToList(true),\n                        term: GridService.getFilterByField(controller.paginationOptions, 'belongsTo')\n                    },\n                    field: 'belongsTo',\n                    maxWidth: 130,\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'belongsTo', true),\n                    filterHeaderTemplate: selectTemplate,\n                    cellTemplate: selectCellTemplate\n                },\n                {\n                    displayName: 'Last update',\n                    type: 'date',\n                    field: controller.modifiedAtField,\n                    cellFilter: 'date:\\'medium\\'',\n                    filterCellFiltered: false,\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'controller.modifiedAtField', true),\n                    filters: [\n                        {\n                            visible: true,\n                            condition: uiGridConstants.filter.GREATER_THAN_OR_EQUAL\n                        },\n                        {\n                            condition: uiGridConstants.filter.LESS_THAN_OR_EQUAL\n                        }\n                    ],\n                    /*filter : {\n                        term: GridService.getFilterByField(controller.paginationOptions, controller.modifiedAtField, ''),\n                        applyTextFilter: controller.applyDateFilter(controller.modifiedAtField, '')\n                    },*/\n                    filterHeaderTemplate: '/scripts/components/profiles/tu/departments/datagrid/createdAtFilterHeaderTemplate.html'\n                }\n            ],\n            onRegisterApi: function (gridApi) {\n                var columnsVisibilityBeforeChanges = angular.copy($scope.gridOptions.columnDefs);\n                $scope.gridApi = gridApi;\n                gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                    $scope.handleDatagridRowClick(row.entity);\n                });\n                gridApi.draggableRows.on.rowDropped($scope, function () {\n                    $scope.handleDatagridDragAndDrop();\n                });\n                gridApi.core.on.rowsRendered($scope, function () {\n                    $scope.isDatagridRendered = true;\n                });\n                gridApi.core.on.filterChanged($scope, function () {\n                    $scope.handleDatagridFiltersChanges(this.grid);\n                });\n                gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n                // reset columns visibility\n                GridService.resetExtend(columnsVisibilityBeforeChanges, $scope.gridOptions.columnDefs, $scope.filters);\n            }\n        };\n\n        controller.initDataGrid = function (coreId) {\n            if (!coreId) {\n                return false;\n            }\n            TuProfileDepartmentsService.getAllDepartmentsByCoreId(coreId).then(function (response) {\n                $scope.isDatagridReloading = false;\n                $scope.gridOptions.data = response;\n                $scope.gridOptions.minRowsToShow = response.length < 50 ? response.length : 50;\n                $scope.departmentsToDelete = {};\n            });\n        };\n\n        $scope.cutomCheckboxMessage = function () {\n            if (UserFactory.isClient()) {\n                return 'Deleting client departments is not permitted. Contact tusupport@qs.com to delete';\n            }\n            return 'To delete client departments go to Institution List backend';\n        };\n\n        controller.destruct = function () {\n            alreadyInitialised = false;\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isDepartmentsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileDepartmentsController', [\n            '$scope',\n            '$rootScope',\n            '$resource',\n            '$location',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'InstitutionFactory',\n            'TuProfileDepartmentsService',\n            'TuProfileService',\n            'uiGridConstants',\n            'UserFactory',\n            'WatchService',\n            'UiGridService',\n            App.controllers.tuProfileDepartments\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tuProfileDepartmentForm = function (\n        $scope,\n        $state,\n        $rootScope,\n        $resource,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        InstitutionFactory,\n        UserFactory,\n        TuProfileDepartmentsService,\n        LoginService,\n        ModalService,\n        WatchService,\n        InstitutionsListService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        $scope.forms = {};\n        $scope.upgradeInProgress = false;\n        $scope.downgradeInProgress = false;\n        $scope.addInProgress = false;\n        $scope.editInProgress = false;\n        $scope.newDepartment = {};\n        $scope.newDepartmentBeforeChanges = {\n            parentCoreId: null\n        };\n        $scope.campusList = [];\n        $scope.department = {};\n        $scope.belongsToList = [];\n        controller.modifiedAtField = 'modifiedAt';\n        controller.tuSupportEmail = constants.support.tu;\n\n        $scope.getTuProfileDepartmentForm = function () {\n            return controller;\n        };\n\n        /**\n         * Is department data fetch in progress?\n         *\n         * @returns {boolean}\n         */\n        $scope.isFetchInProgress = function () {\n            return !$scope.department || !$scope.department.id;\n        };\n\n        /**\n         * Is department upgrade allowed?\n         *\n         * @returns {boolean}\n         */\n        $scope.allowUpgrade = function () {\n            return TuProfileDepartmentsService.allowUpgrade($scope.department);\n        };\n\n        /**\n         * Allowed to login as department?\n         *\n         * @returns {boolean}\n         */\n        $scope.allowLoginAs = function () {\n            return TuProfileDepartmentsService.allowLoginAs($scope.department);\n        };\n\n        $scope.allowEdit = function () {\n            if (!UserFactory.isClient() || !InstitutionsListService.isClientDepartment($scope.department.typeId)) {\n                return true;\n            }\n\n            return UserFactory.isAllowedToLogin($scope.department.coreId);\n        };\n\n        controller.isLoginRestricted = function () {\n            return UserFactory.isClient() && !UserFactory.isAllowedToLogin($scope.department.coreId);\n        };\n\n        /**\n         * Is department downgrade allowed?\n         *\n         * @param {Object} department\n         * @returns {boolean}\n         */\n        $scope.allowDowngrade = function () {\n            return TuProfileDepartmentsService.allowDowngrade($scope.department);\n        };\n\n        /**\n         * Is department downgrade disabled?\n         *\n         * @returns {boolean}\n         */\n        $scope.isDowngradeDisabled = function () {\n            return TuProfileDepartmentsService.hasActiveSubscription($scope.department);\n        };\n\n        /**\n         * Get department core ID.\n         *\n         * @returns {null|int}\n         */\n        controller.getDepartmentCoreId = function () {\n            if (angular.isDefined($scope.department.coreId)) {\n                return $scope.department.coreId;\n            } else {\n                var department = TuProfileFactory.getDepartmentBeforeChanges();\n                return department && department.coreId ? department.coreId : null;\n            }\n        };\n\n        /**\n         * Actions to do when upgrade button clicked.\n         *\n         * @returns {boolean}\n         */\n        controller.handleUpgradeClick = function () {\n            if (UserFactory.isClient()) {\n                TuProfileFactory.setClientDepartmentUpgradeFormVisibility();\n            } else {\n                var modalOptions = {\n                    closeButtonText: 'Cancel',\n                    headerText: 'Upgrade To Client Department',\n                    institutionCoreId: controller.getDepartmentCoreId(),\n                    completeUpgradeClick: function () {\n                        this.close();\n                        if (!$scope.department || !$scope.department.id || $scope.upgradeInProgress) {\n                            return false;\n                        }\n                        $scope.upgradeInProgress = true;\n                        TuProfileDepartmentsService.upgrade($scope.department.id).then(controller.upgradeCallback);\n                    }\n                }, modalDefaults = {\n                    backdrop: true,\n                    keyboard: true,\n                    modalFade: true,\n                    templateUrl: '/scripts/components/profiles/tu/departments/modalUpgradeDepartmentView.html'\n                };\n                ModalService.show(modalDefaults, modalOptions);\n            }\n        };\n\n        /**\n         * Actions to do when upgrade request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.upgradeCallback = function (success) {\n            if (success) {\n                // get department instance before changes\n                var departmentInstance = TuProfileFactory.getDepartmentBeforeChanges();\n                // apply changes to original department\n                departmentInstance.typeId = constants.typeId.clientDepartmentId;\n                TuProfileDepartmentsService.formatList([departmentInstance]);\n                // apply changes to active department\n                $scope.department.typeId = constants.typeId.clientDepartmentId;\n                $scope.department.typeName = TuProfileDepartmentsService.getTypeName(constants.typeId.clientDepartmentId);\n                $scope.department.coreId = departmentInstance.coreId;\n                InstitutionFactory.setActiveTab(true);\n            }\n            $scope.upgradeInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Upgraded successfully!' : 'Upgrade failed!',\n                'Upgrade to Client'\n            );\n        };\n\n        /**\n         * Actions to do when downgrade button clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleDowngradeClick = function () {\n            $scope.downgradeInProgress = true;\n            var modalOptions = {\n                closeButtonText: 'Cancel',\n                headerText: 'Current Subscription(s)',\n                institutionCoreId: controller.getDepartmentCoreId(),\n                department: $scope.department,\n                downgradeAndDelete: $scope.downgradeAndDelete,\n                subscriptions: TuProfileDepartmentsService.hasActiveSubscription($scope.department),\n                completeDowngradeClick: function (downgradeAndDelete) {\n                    this.close();\n                    if (modalOptions.subscriptions && !downgradeAndDelete) {\n                        $state.go('staff.institutions.list', {coreId: modalOptions.institutionCoreId});\n                    } else {\n                        TuProfileDepartmentsService.downgrade($scope.department.id).then(controller.downgradeCallback);\n                    }\n                }\n            }, modalDefaults = {\n                backdrop: true,\n                keyboard: true,\n                modalFade: true,\n                templateUrl: '/scripts/components/profiles/tu/departments/modalDowngradeDepartmentView.html'\n            };\n            ModalService.show(modalDefaults, modalOptions);\n        };\n\n        /**\n         * Actions to do when downgrade request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.downgradeCallback = function (success) {\n            if (success) {\n                // get department instance before changes\n                var departmentInstance = TuProfileFactory.getDepartmentBeforeChanges();\n                // apply changes to original department\n                departmentInstance.typeId = constants.typeId.simpleDepartmentId;\n                TuProfileDepartmentsService.formatList([departmentInstance]);\n                // apply changes to active department\n                $scope.department.typeId = constants.typeId.simpleDepartmentId;\n                $scope.department.typeName = TuProfileDepartmentsService.getTypeName(\n                    constants.typeId.simpleDepartmentId\n                );\n            }\n            $scope.downgradeInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Downgrade successfully!' : 'Downgrade failed!',\n                'Downgrade to Simple'\n            );\n        };\n\n        /**\n         * Actions to do when login as button clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleLoginAsClick = function () {\n            LoginService.getTuProfilesRedirect({ coreId: $scope.department.coreId });\n            TuProfileFactory.setDepartmentEditFormVisibility();\n            TuProfileFactory.setDepartment(null);\n        };\n\n        /**\n         * Actions to do when department update button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleDepartmentUpdateClick = function () {\n            if (!controller.isValid($scope.department)) {\n                return;\n            }\n            $scope.editInProgress = true;\n            TuProfileDepartmentsService.update($scope.department).then(controller.updateCallback);\n        };\n\n        $scope.setIsInvalidDepartmentNameUpdate = function (value) {\n            $scope.isInvalidDepartmentNameUpdate = value;\n        };\n\n        $scope.setIsInvalidBelongsToUpdate = function (value) {\n            $scope.isInvalidBelongsToUpdate = value;\n        };\n\n        /**\n         * Actions to do when update request is finished.\n         *\n         * @param {Object} response\n         */\n        controller.updateCallback = function (response) {\n            var success = false;\n            if (response.hasOwnProperty('modifiedAt')) {\n                success = true;\n            }\n            $scope.editInProgress = false;\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Updated successfully!' : 'Update failed!',\n                'Update Department'\n            );\n            if (success) {\n                // get department instance before changes\n                var departmentInstance = TuProfileFactory.getDepartmentBeforeChanges();\n                // apply changes to department\n                angular.forEach($scope.department, function (value, key) {\n                    departmentInstance[key] = value;\n                    if (key === controller.modifiedAtField) {\n                        departmentInstance[key] = response.modifiedAt;\n                    }\n                });\n                TuProfileDepartmentsService.formatList([departmentInstance]);\n                // Update Programs grid\n                TuProfileFactory.setIsDepartmentUpdated(true);\n                //Update Departments grid\n                if (InstitutionFactory.isDepartmentsAlphabeticalOrder()) {\n                    TuProfileFactory.setUpdateDepartmentsGrid(true);\n                }\n            }\n        };\n\n        controller.isUpgradeDisabled = function () {\n            return !controller.isValid($scope.department, false);\n        };\n\n        controller.isValid = function (item, triggerValidators)\n        {\n            triggerValidators = typeof triggerValidators === 'undefined' ? true : triggerValidators;\n\n            var isEdit = !!item.id;\n            if (triggerValidators) {\n                if (isEdit) {\n                    $scope.isInvalidDepartmentNameUpdate = false;\n                    $scope.isInvalidBelongsToUpdate = false;\n                } else {\n                    $scope.isInvalidNewDepartmentName = false;\n                    $scope.isInvalidNewBelongsTo = false;\n                }\n            }\n\n            if (!item.name || !item.name.length) {\n                if (triggerValidators) {\n                    if (isEdit) {\n                        $scope.isInvalidDepartmentNameUpdate = true;\n                    } else {\n                        $scope.isInvalidNewDepartmentName = true;\n                    }\n                } else {\n                    return false;\n                }\n            }\n            if (!item.belongsTo || !item.belongsTo.length) {\n                if (triggerValidators) {\n                    if (isEdit) {\n                        $scope.isInvalidBelongsToUpdate = true;\n                    } else {\n                        $scope.isInvalidNewBelongsTo = true;\n                    }\n                } else {\n                    return false;\n                }\n            }\n\n            if (triggerValidators) {\n                if (isEdit) {\n                    if (\n                        $scope.editInProgress ||\n                        !$scope.forms.editDepartmentForm ||\n                        !$scope.forms.editDepartmentForm.$valid ||\n                        $scope.isInvalidBelongsToUpdate ||\n                        $scope.isInvalidDepartmentNameUpdate\n                    ) {\n                        TuProfileFactory.setIsDepartmentRowSelected(false);\n                        return false;\n                    }\n                } else {\n                    if (\n                        $scope.addInProgress ||\n                        !$scope.forms.addDepartmentForm ||\n                        !$scope.forms.addDepartmentForm.$valid ||\n                        $scope.isInvalidNewDepartmentName ||\n                        $scope.isInvalidNewBelongsTo\n                    ) {\n                        return false;\n                    }\n                }\n            } else {\n                return isEdit ?\n                    (!$scope.editInProgress || !$scope.forms.editDepartmentForm.$valid) :\n                    (!$scope.addInProgress || !$scope.forms.addDepartmentForm.$valid);\n            }\n\n            return true;\n        };\n\n        /**\n         * Actions to do when new department create button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleDepartmentCreateClick = function () {\n            if (!controller.isValid($scope.newDepartment)) {\n                return;\n            }\n\n            $scope.addInProgress = true;\n            $scope.newDepartment[controller.modifiedAtField] = null;\n            TuProfileDepartmentsService.create($scope.newDepartment).then(controller.createCallback);\n        };\n\n        $scope.setIsInvalidNewDepartmentName = function (value) {\n            $scope.isInvalidNewDepartmentName = value;\n        };\n\n        $scope.setIsInvalidNewBelongsTo = function (value) {\n            $scope.isInvalidNewBelongsTo = value;\n        };\n\n        /**\n         * Actions to do when create request is finished.\n         *\n         * @param {Object} response\n         */\n        controller.createCallback = function (response) {\n            // enable add button\n            $scope.addInProgress = false;\n            // show notification message\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Saved successfully!' : 'Saving failed!',\n                'Department'\n            );\n            if (response) {\n                var department = angular.copy($scope.newDepartment);\n                department.id = response.insertedId;\n                // set department type\n                department.typeName = response.typeName;\n                // set department typeId\n                department.typeId = response.typeId;\n                // set new department as active\n                TuProfileFactory.setDepartment(department);\n                // announce that new department was added\n                TuProfileFactory.announceNewDepartment(department.id);\n            }\n        };\n\n        controller.resetAddForm = function () {\n            if ($scope.newDepartment.name) {\n                $scope.newDepartment.name = null;\n            }\n            if ($scope.newDepartment.belongsTo) {\n                $scope.newDepartment.belongsTo = null;\n            }\n            if ($scope.newDepartment.primaryCampusId) {\n                $scope.newDepartment.primaryCampusId = null;\n            }\n            $scope.isInvalidNewDepartmentName = false;\n            $scope.isInvalidNewBelongsTo = false;\n        };\n\n        /**\n         * Toggle Client Department Upgrade Form\n         */\n        controller.toggleClientUpgradeForm = function () {\n            TuProfileFactory.setDepartmentEditFormVisibility(true);\n        };\n\n        controller.initWatches = function () {\n            // watch for core ID changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, function (parentCoreId) {\n                $scope.newDepartmentBeforeChanges.parentCoreId = parentCoreId;\n                $scope.newDepartment.parentCoreId = parentCoreId;\n            });\n\n            WatchService.create($scope, TuProfileFactory.getDepartment, function (newValue) {\n                $scope.department = newValue;\n                $scope.isInvalidDepartmentNameUpdate = false;\n                $scope.isInvalidBelongsToUpdate = false;\n                $scope.isInvalidNewDepartmentName = false;\n                $scope.isInvalidNewBelongsTo = false;\n            }, true);\n\n            WatchService.create($scope, InstitutionFactory.getCampusData, function (newValue) {\n                if (newValue) {\n                    $scope.campusList = TuProfileDepartmentsService.formatCampusList(newValue);\n                }\n            }, true);\n\n            // if department add form visible hide popovers\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isDepartmentAddFormVisible($scope.activeTab);\n            }, function (visible) {\n                if (visible) {\n                    controller.resetAddForm();\n                }\n            });\n\n            // watch for department row selection changed\n            WatchService.create($scope, function () {\n                return TuProfileFactory.getIsDepartmentRowSelected();\n            }, function (visible) {\n                if (visible) {\n                    $scope.isInvalidDepartmentNameUpdate = false;\n                    $scope.isInvalidBelongsToUpdate = false;\n                    $scope.isInvalidCampusUpdate = false;\n                }\n            });\n        };\n\n        controller.initialiseForm = function () {\n            // get belongs to list\n            $scope.belongsToList = TuProfileDepartmentsService.getBelongsToList();\n            // prepare new department object\n            $scope.newDepartment = angular.copy($scope.newDepartmentBeforeChanges);\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isDepartmentsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n            if (isActive) {\n                controller.initialiseForm();\n                if ($scope.forms && $scope.forms.addDepartmentForm) {\n                    $scope.forms.addDepartmentForm.$setUntouched();\n                }\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileDepartmentForm', [\n            '$scope',\n            '$state',\n            '$rootScope',\n            '$resource',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'InstitutionFactory',\n            'UserFactory',\n            'TuProfileDepartmentsService',\n            'LoginService',\n            'ModalService',\n            'WatchService',\n            'InstitutionsListService',\n            App.controllers.tuProfileDepartmentForm\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TuProfileDepartmentsService = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        TuProfileService,\n        TuProfileFactory\n    ) {\n        var service = {\n            deferred : {}\n        };\n\n        /**\n         * Is department upgrade allowed?\n         *\n         * @param {Object} department\n         * @returns {boolean}\n         */\n        service.allowUpgrade = function (department) {\n            return department && department.typeId === constants.typeId.simpleDepartmentId;\n        };\n\n        /**\n         * Allowed to login as department?\n         *\n         * @param {Object} department\n         * @returns {boolean}\n         */\n        service.allowLoginAs = function (department) {\n            return department && department.typeId === constants.typeId.clientDepartmentId;\n        };\n\n        /**\n         * Is department downgrade allowed?\n         *\n         * @param {Object} department\n         * @returns {boolean}\n         */\n        service.allowDowngrade = function (department) {\n            return department && department.typeId === constants.typeId.clientDepartmentId;\n        };\n\n        /**\n         * Get departments list API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getDepartmentsListModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/departments/core-id/:coreId');\n        };\n\n        /**\n         * Get departments upgarde API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpgradeModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/department/:id/upgrade');\n        };\n\n        /**\n         * Get departments downgrade API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getDowngradeModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/department/:id/downgrade');\n        };\n\n        /**\n         * Get departments update API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpdateModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/department/:id', null, {\n                update: {method:'PATCH'}\n            });\n        };\n\n        /**\n         * Get departments create API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getCreateModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/department');\n        };\n\n        /**\n         * Get departments delete API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getDeleteModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/delete-department', null, {\n                delete: {method:'POST'}\n            });\n        };\n\n        /**\n         * Get departments ordering API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getOrderingModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/institution/:id/departmentsOrder', null, {\n                update: {method:'PATCH'}\n            });\n        };\n\n        /**\n         * Get tu profile department upgrade requests end point.\n         *\n         * @returns {$resource}\n         */\n        service.getUpgradeRequestModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/department/:id/upgrade-request');\n        };\n\n        /**\n         * Send TU profile department upgrade request.\n         *\n         * @param {String} departmentId\n         * @param {String|null} comments\n         * @returns {Promise}\n         */\n        service.sendUpgradeRequest = function (departmentId, comments) {\n            if (!departmentId) {\n                throw 'Missing Required';\n            }\n\n            var Api = service.getUpgradeRequestModel();\n            return Api.save({id: departmentId}, {\n                comments: comments\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n\n        /**\n         * Get belongs to list.\n         *\n         * @returns {array}\n         */\n        service.getBelongsToList = function () {\n            return TuProfileService.getBelongsToList();\n        };\n\n        /**\n         * Format campus list to ID & name pairs.\n         *\n         * @param {array} campuses\n         * @returns {array}\n         */\n        service.formatCampusList = function (campuses) {\n            var campusList = [];\n            angular.forEach(campuses, function (campus) {\n                campusList.push({id: campus.id, title: campus.name});\n            });\n\n            return campusList;\n        };\n\n        /**\n         * Upgrade department.\n         *\n         * @param {string} id\n         * @returns {Promise}\n         */\n        service.upgrade = function (id) {\n            var Api = service.getUpgradeModel();\n            return Api.get({id:id}).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Downgrade department.\n         *\n         * @param {string} id\n         * @returns {Promise}\n         */\n        service.downgrade = function (id) {\n            var Api = service.getDowngradeModel();\n            return Api.get({id:id}).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Update department.\n         *\n         * @param {Object} department\n         * @returns {Promise}\n         */\n        service.update = function(department) {\n            var UpdateModel = service.getUpdateModel(),\n                dataToUpdate = {\n                    name: department.name,\n                    belongsTo: department.belongsTo,\n                    primaryCampusId: department.primaryCampusId\n                };\n            return UpdateModel.update(\n                {id: department.id},\n                dataToUpdate\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Create department.\n         *\n         * @param {Object} department\n         * @returns {Promise}\n         */\n        service.create = function(department) {\n            var CreateModel = service.getCreateModel(),\n                dataToUpdate = {\n                    name: department.name,\n                    belongsTo: department.belongsTo,\n                    primaryCampusId: department.primaryCampusId,\n                    parentCoreId: department.parentCoreId\n                };\n            return CreateModel.save(\n                null,\n                dataToUpdate\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                data.typeName = service.getTypeName(constants.typeId.simpleDepartmentId);\n                data.typeId = constants.typeId.simpleDepartmentId;\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Delete department(s).\n         *\n         * @param {array} ids\n         * @returns {Promise}\n         */\n        service.delete = function(ids) {\n            var TuDepartmentModel = service.getDeleteModel();\n            return TuDepartmentModel.delete(\n                {},\n                ids\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getAllDepartmentsByCoreId = function (coreId) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n            var Api = service.getDepartmentsListModel();\n            return Api.get({\n                coreId: coreId\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n\n                TuProfileFactory.setDepartments(data.results);\n\n                return service.formatList(data.results);\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        /**\n         * Delete department(s).\n         *\n         * @param {array} ids\n         * @returns {Promise}\n         */\n        service.updateOrder = function(institutionId, orderedIds) {\n            var TuDepartmentModel = service.getOrderingModel();\n            return TuDepartmentModel.update(\n                {id: institutionId},\n                orderedIds\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get departments list.\n         *\n         * @param {Object} params\n         * @returns {Promise}\n         */\n        service.getAllDepartments = function (institutionCoreId, queryParams, params) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n            queryParams.coreId = institutionCoreId;\n            var Api = service.getDepartmentsListModel();\n            return Api.get(queryParams).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                if (params) {\n                    params.total(data.totalFiltered);\n                    params.totalEntries = data.totalMatching;\n                }\n\n                TuProfileFactory.setDepartments(data.results);\n\n                return service.formatList(data.results);\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        /**\n         * Get department name by id.\n         *\n         * @param {int} departmentCoreId\n         * @returns {string}\n         */\n        service.getDepartmentNameById = function (departmentCoreId) {\n            var departmentsList = TuProfileFactory.getDepartments(),\n                departmentName = '';\n            angular.forEach(departmentsList, function (department) {\n                if (department.coreId === departmentCoreId) {\n                    departmentName = department.name;\n                }\n            });\n\n            return departmentName;\n        };\n        \n        /**\n         * Format departments list.\n         *\n         * @param {Object} departmentsData\n         * @returns {Object}\n         */\n        service.formatList = function (departmentsData) {\n            if (departmentsData) {\n                angular.forEach(departmentsData, function(departmentObject) {\n                    departmentObject.fullname = departmentObject.parentName + ' > ' + departmentObject.name;\n                     //@todo remove departmentObject.typeName\n                    departmentObject.typeName = service.getTypeName(departmentObject.typeId);\n                    if (departmentObject.typeId === service.simpleDepartmentId) {\n                        departmentObject.clientDepartment = false;\n                    }\n                    else if(departmentObject.typeId === service.clientDepartmentId) {\n                        departmentObject.clientDepartment = true;\n                    }\n                    //@todo remove departmentObject.belongsToName\n                    departmentObject.belongsToName = TuProfileService.getBelongsToName(departmentObject.belongsTo);\n                });\n            }\n\n            return departmentsData;\n        };\n\n        /**\n         * Get Department Types list.\n         *\n         * @returns {array}\n         */\n        service.getDepartmentTypes = function (grid) {\n            grid = grid || false;\n\n            return grid ? [\n                {value: constants.typeId.simpleDepartmentId, label: 'Simple Department'},\n                {value: constants.typeId.clientDepartmentId, label: 'Client Department'}\n            ] : [\n                {id: constants.typeId.simpleDepartmentId, title: 'Simple Department'},\n                {id: constants.typeId.clientDepartmentId, title: 'Client Department'}\n            ];\n        };\n\n        /**\n         * Get department type name by ID.\n         *\n         * @param {int} typeId\n         * @returns {string}\n         */\n        service.getTypeName = function (typeId) {\n            typeId = parseInt(typeId, 10);\n            switch (typeId) {\n                case constants.typeId.clientDepartmentId:\n                    return 'Client Department';\n                case constants.typeId.simpleDepartmentId:\n                    return 'Simple Department';\n                default:\n                    return '';\n            }\n        };\n\n        service.hasActiveSubscription = function (department) {\n            if (department && department.subscriptions && department.subscriptions.hasOwnProperty('tu') &&\n                department.subscriptions.tu.hasOwnProperty('advanced') &&\n                department.subscriptions.tu.advanced &&\n                department.subscriptions.tu.hasOwnProperty('startDate') &&\n                department.subscriptions.tu.hasOwnProperty('endDate') &&\n                department.subscriptions.tu.startDate > 0 &&\n                department.subscriptions.tu.endDate > 0\n            ) {\n                return true;\n            }\n\n            return false;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuProfileDepartmentsService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TuProfileService',\n            'TuProfileFactory',\n            App.services.TuProfileDepartmentsService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.tuProfileSubjects = function (\n        $scope,\n        $rootScope,\n        $state,\n        constants,\n        TuProfileSubjectsService,\n        TuProfileFactory,\n        NotifierFactory,\n        WatchService,\n        InstitutionFactory,\n        UserFactory\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        $scope.forms = {};\n        $scope.subjectsTabSubmitInProgress = false;\n        $scope.isDatagridReloading = true;\n\n        /**\n         * Store profile subjects data.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleSubjectTabSubmit = function () {\n            if (\n                $scope.subjectsTabSubmitInProgress ||\n                !$scope.forms.subjectsForm ||\n                !$scope.forms.subjectsForm.$valid\n            ) {\n                return false;\n            }\n            $scope.subjectsTabSubmitInProgress = true;\n            TuProfileSubjectsService.saveSubjectsTab($scope.tuProfile).then(function (success) {\n                $scope.subjectsTabSubmitInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Selected Subjects'\n                );\n                $scope.tuProfileBeforeChanges = angular.copy(TuProfileFactory.getData());\n            });\n        };\n\n\n        controller.reformatTuProfileSubjects = function () {\n            if (angular.isDefined($state) && InstitutionFactory.isTuSubscribed() && !UserFactory.noAccess($state.current.name)) {\n                $scope.isDatagridReloading = true;\n                var data = TuProfileFactory.getData();\n                if (data.ugSubjects) {\n                    data.ugSubjects = TuProfileSubjectsService.formatSubjects(data.ugSubjects);\n                }\n                if (data.pgSubjects) {\n                    data.pgSubjects = TuProfileSubjectsService.formatSubjects(data.pgSubjects);\n                }\n                $scope.isDatagridReloading = false;\n                controller.resetTuProfileSubjects();\n            } else {\n                // if user doesn't have access, empty previously loaded data\n                $scope.tuProfile = {};\n                controller.subjects = {};\n            }\n        };\n\n        controller.resetTuProfileSubjects = function () {\n            var data = angular.copy($scope.tuProfileBeforeChanges);\n            if (data.hasPhdSubjects) {\n                $scope.tuProfile.hasPhdSubjects = data.hasPhdSubjects;\n            }\n            if (data.ugSubjects) {\n                $scope.tuProfile.ugSubjects = angular.copy(TuProfileSubjectsService.formatSubjects(data.ugSubjects));\n            }\n            if (data.pgSubjects) {\n                $scope.tuProfile.pgSubjects = angular.copy(TuProfileSubjectsService.formatSubjects(data.pgSubjects));\n            }\n        };\n\n        controller.initData = function () {\n            // get subjects list\n            TuProfileSubjectsService.getSubjects().then(function(subjects) {\n                // split subjects into chunks of 3\n                controller.subjects = TuProfileSubjectsService.splitObject(subjects, 1);\n                // share available subjects\n                TuProfileFactory.setAvailableSubjects(subjects);\n                // reformat TU profile subjects\n                controller.reformatTuProfileSubjects();\n            });\n        };\n\n        controller.initEvents = function () {\n            $scope.$on(constants.events.institutionTuProfileChanges, function() {\n                alreadyInitialised = false;\n                if (TuProfileFactory.isSubjectsTabSelected()) {\n                    controller.reformatTuProfileSubjects();\n                    alreadyInitialised = true;\n                }\n            });\n        };\n\n        controller.destruct = function () {\n            alreadyInitialised = false;\n        };\n\n        controller.init = function () {\n            controller.initData();\n            controller.initEvents();\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        // listen to subjects tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isSubjectsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n            if (isActive && alreadyInitialised) {\n                controller.resetTuProfileSubjects();\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileSubjectsController', [\n            '$scope',\n            '$rootScope',\n            '$state',\n            'constants',\n            'TuProfileSubjectsService',\n            'TuProfileFactory',\n            'NotifierFactory',\n            'WatchService',\n            'InstitutionFactory',\n            'UserFactory',\n            App.controllers.tuProfileSubjects\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TuProfileSubjectsService = function ($resource, $q, $log, constants) {\n        var service = {\n            overviewData : null,\n            institutionData: null,\n            subjects : null,\n            deferred : {\n                getOverviewData: null,\n                getInstitutionData: null,\n                getSubjects: null\n            }\n        };\n\n        /**\n         * Get subjects update API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getTuSubjectsModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id', null, {\n                update: { method:'PATCH' }\n            });\n        };\n\n        /**\n         * Call subjects API\n         */\n        service.getSubjectsModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/subjects?sorting[groupName]=asc');\n        };\n\n        /**\n         * Fill one object keys with other object values.\n         *\n         * @param {Object} filters\n         * @param {Object} object\n         * @returns {Object}\n         */\n        service.filterObject = function (filters, object) {\n            var filteredObject = angular.copy(filters);\n            angular.forEach(filters, function (value, key) {\n                if (value && typeof value === 'object') {\n                    angular.forEach(value, function (subValue, subKey) {\n                        if (subValue === null && object[key][subKey]) {\n                            filteredObject[key][subKey] = object[key][subKey];\n                        }\n                    });\n                } else if (value === null && object[key]) {\n                    filteredObject[key] = object[key];\n                }\n            });\n\n            return filteredObject;\n        };\n\n        /**\n         * Get subjects list.\n         *\n         * @returns {Promise}\n         */\n        service.getSubjects = function () {\n            // process already running\n            if (!service.deferred.getSubjects) {\n                service.deferred.getSubjects = $q.defer();\n            } else {\n                return service.deferred.getSubjects.promise;\n            }\n            var deferred = service.deferred.getSubjects;\n\n            // check if data exists in cache\n            if (service.roles) {\n                deferred.resolve(service.roles);\n            } else {\n                var SubjectsModel = service.getSubjectsModel();\n                SubjectsModel.get(function (data) {\n                    var groupedSubjects = {};\n                    if (data && data.results) {\n                        // convert to groups\n                        angular.forEach(data.results, function (subject) {\n                            if (!groupedSubjects[subject.groupName]) {\n                                groupedSubjects[subject.groupName] = [];\n                            }\n                            groupedSubjects[subject.groupName].push(subject);\n                        });\n                    }\n                    service.subjects = groupedSubjects;\n                    deferred.resolve(service.subjects);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.subjects = [];\n                    deferred.resolve(service.subjects);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Format subjects to <handleName>:<bool> key value pairs.\n         *\n         * @param {Object} subjects\n         * @returns {Object}\n         */\n        service.formatSubjects = function (subjects, justHandles) {\n            var formattedSubjects = {};\n            justHandles = justHandles || false;\n\n            if (justHandles) {\n                angular.forEach(subjects, function (assigned, subjectHandle) {\n                    if (assigned) {\n                        formattedSubjects[subjectHandle] = subjectHandle;\n                    }\n                });\n\n            } else {\n                var subjectKey;\n                for (subjectKey in subjects) {\n                    if (isNaN(subjectKey)) {\n                        return subjects;\n                    } else {\n                        formattedSubjects[subjects[subjectKey]] = true;\n                    }\n                }\n            }\n\n            return formattedSubjects;\n        };\n\n        /**\n         * Submit subjects tab data.\n         *\n         * @param {Object} profileData\n         * @returns {Promise}\n         */\n        service.saveSubjectsTab = function (profileData) {\n            var TuSubjectsModel = service.getTuSubjectsModel(),\n                dataToUpdate = {\n                    ugSubjects : profileData.ugSubjects,\n                    pgSubjects : profileData.pgSubjects,\n                    hasPhdSubjects : profileData.hasPhdSubjects\n                };\n\n            if (dataToUpdate.ugSubjects) {\n                dataToUpdate.ugSubjects = service.formatSubjects(dataToUpdate.ugSubjects, true);\n            }\n            if (dataToUpdate.pgSubjects) {\n                dataToUpdate.pgSubjects = service.formatSubjects(dataToUpdate.pgSubjects, true);\n            }\n\n            return TuSubjectsModel.update(\n                {id: profileData.id},\n                dataToUpdate\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.splitObject = function (inputObject, size) {\n            var index = 0,\n                chunks = {},\n                inChunks = [];\n\n            angular.forEach(inputObject, function (value, key) {\n                if (index === size) {\n                    index = 0;\n                    chunks = {};\n                }\n                if (index === size - 1) {\n                    inChunks.push(chunks);\n                }\n                chunks[key] = value;\n                index++;\n            });\n\n            return inChunks;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuProfileSubjectsService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.TuProfileSubjectsService\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tuProfilePrograms = function (\n        $scope,\n        $rootScope,\n        $templateRequest,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        InstitutionFactory,\n        TuProfileProgramsService,\n        TuProfileService,\n        uiGridConstants,\n        WatchService,\n        GridService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.upgradeEmailsTo = constants.emails.upgradeTu;\n        controller.deleteField = 'delete';\n        $scope.institutionId = InstitutionFactory.getId();\n        $scope.tuProfileId = TuProfileFactory.getId();\n        $scope.programsToDelete = {};\n        $scope.alphabeticalOrderingInProgress = false;\n        $scope.deleteInProgress = false;\n        $scope.isDatagridReloading = false;\n        $scope.isDatagridRendered = false;\n\n        controller.gridFilterNameSpace = TuProfileFactory.getIsProgramOverview() ?\n            constants.gridNameSpaces.programsOvGridFilters :\n            constants.gridNameSpaces.programsGridFilters;\n\n        controller.gridVisibilityNameSpace = TuProfileFactory.getIsProgramOverview() ?\n            constants.gridNameSpaces.programsOvGridVisibility :\n            constants.gridNameSpaces.programsGridVisibility;\n\n        controller.paginationOptions = GridService.getColumnsFilters(\n            controller.gridFilterNameSpace,\n            []\n        );\n\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            controller.gridVisibilityNameSpace\n        );\n\n        $scope.getTuProfileProgramsController = function () {\n            return controller;\n        };\n        // watch for institution changes\n        WatchService.create($scope, InstitutionFactory.getId, function (id) {\n            $scope.institutionId = id;\n        });\n\n        // watch for TU profile changes\n        WatchService.create($scope, TuProfileFactory.getId, function (id) {\n            $scope.tuProfileId = id;\n            $scope.tuProfileData = TuProfileFactory.getData();\n        });\n\n        /**\n         * Actions to do when programs table row is clicked.\n         *\n         * @param {object} program\n         */\n        $scope.handleDatagridRowClick = function (program) {\n            TuProfileFactory.resetProgramForm();\n            $scope.selectedProgramId = ($scope.selectedProgramId === program.id) ? null : program.id;\n            // store link to program instance\n            TuProfileFactory.setProgramBeforeChanges(program);\n            // create new copy of program for making changes in\n            program = angular.copy(program);\n            TuProfileFactory.setProgramEditFormVisibility(\n                $scope.selectedProgramId === program.id && program.id !== 'undefined'\n            );\n            TuProfileFactory.setProgram(program);\n        };\n\n        /**\n         * Toggle datagrid columns visibility.\n         *\n         * @param {boolean} hide\n         */\n        controller.toggleColumns = function (hide) {\n            if (!$scope.gridOptions) {\n                return;\n            }\n\n            if (hide) {\n                // hide delete column\n                angular.forEach($scope.gridOptions.columnDefs, function (column) {\n                    if (column.field !== controller.deleteField) {\n                        column.visible = angular.isDefined(controller.columnsVisibility) ?\n                            controller.columnsVisibility[column.field] : true;\n                    } else {\n                        column.visible = false;\n                    }\n                });\n            } else {\n                // show all columns\n                angular.forEach($scope.gridOptions.columnDefs, function (column) {\n                    if (column.field === controller.deleteField) {\n                        column.visible = true;\n                    } else {\n                        column.visible = angular.isDefined(controller.columnsVisibility) ?\n                            controller.columnsVisibility[column.field] : true;\n                    }\n                });\n            }\n            $scope.gridOptions.enableGridMenu = !hide;\n        };\n\n        /**\n         * Actions to do when alphabetical ordering checked.\n         *\n         * @param {boolean} alphabetical\n         */\n        $scope.handleAlphabeticalOrderClick = function (alphabetical) {\n            // indicate progress\n            $scope.alphabeticalOrderingInProgress = true;\n            // store changes\n            TuProfileService.updateTuProfile($scope.tuProfileId, {\n                programsAlphabeticalOrder: alphabetical\n            }).then(function (success) {\n                if (success) {\n                    // reload programs datagrid\n                    controller.reloadDatagrid();\n                }\n                // indicate progress end\n                $scope.alphabeticalOrderingInProgress = false;\n            });\n        };\n\n        /**\n         * Actions to do when add program button is clicked.\n         */\n        $scope.handleAddProgramClick = function () {\n            TuProfileFactory.setProgramAddFormVisibility();\n            TuProfileFactory.setProgram({});\n        };\n\n        controller.getProgramsToDelete = function () {\n            var programsIds = [];\n            if ($scope.programsToDelete) {\n                angular.forEach($scope.programsToDelete, function (remove, id) {\n                    if (remove) {\n                        programsIds.push(id);\n                    }\n                });\n            }\n\n            return programsIds;\n        };\n\n        controller.hasProgramsToDelete = function () {\n            var departmentsIds = controller.getProgramsToDelete();\n            return departmentsIds.length !== 0;\n        };\n\n        $scope.isDeleteButtonDisabled = function () {\n            return $scope.deleteInProgress ||\n                !$scope.institutionId ||\n                !controller.hasProgramsToDelete();\n        };\n\n        controller.clearProgramsToDelete = function () {\n            $scope.programsToDelete = {};\n        };\n\n        /**\n         * Actions to do when program delete button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleDeleteClick = function () {\n            if ($scope.deleteInProgress || !controller.hasProgramsToDelete()) {\n                return false;\n            }\n            var programsIds = controller.getProgramsToDelete();\n            $scope.deleteInProgress = true;\n            TuProfileProgramsService.delete(programsIds).then(function (success) {\n                $scope.deleteInProgress = false;\n                if (success) {\n                    $scope.programsToDelete = {};\n\n                    var i = 0,\n                        rows = $scope.gridOptions.data,\n                        total = rows.length;\n\n                    for (i; i < total; i++) {\n                        if (rows[i] && rows[i].id && programsIds.indexOf(rows[i].id) !== -1) {\n                            delete $scope.gridOptions.data[i];\n                        }\n                    }\n                }\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Deleted successfully!' : 'Deletion failed!',\n                    'Programs Deletion'\n                );\n            });\n        };\n\n        $scope.handleDatagridDragAndDrop = function () {\n            $scope.tuProfileData.programsAlphabeticalOrder = false;\n            var i = 0,\n                rows = $scope.gridApi.core.getVisibleRows(),\n                total = rows.length,\n                orderedIds = [];\n            for (i; i < total; i++) {\n                orderedIds.push(rows[i].entity.coreId);\n            }\n            TuProfileProgramsService.updateOrder($scope.tuProfileId, orderedIds).then(function (success) {\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Successfully updated!' : 'Update failed!',\n                    'Programs Order'\n                );\n            });\n        };\n\n        $scope.handleDatagridFiltersChanges = function (grid) {\n            GridService.resetConditions($scope.gridApi.grid.columns);\n            angular.forEach($scope.gridApi.grid.columns, function (column) {\n                if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                    if (\n                        column.filters[0].type === uiGridConstants.filter.SELECT &&\n                        typeof column.filters[0].term === 'object' &&\n                        column.filters[0].term !== null &&\n                        typeof column.filters[0].term.value !== 'undefined'\n                    ) {\n                        column.filters[0].term = column.filters[0].term.value;\n                    } else if (column.filters[0].term !== null &&\n                        typeof column.filters[0].term !== 'undefined') {\n                        GridService.applyFilters(column);\n                    }\n                }\n\n                var filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                    controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                }\n            });\n\n            GridService.storeColumnsFilters(\n                controller.gridFilterNameSpace,\n                controller.paginationOptions\n            );\n        };\n\n        controller.reloadDatagrid = function (coreId) {\n            if (!coreId) {\n                coreId = InstitutionFactory.getCoreId();\n            }\n            if (!coreId) {\n                return false;\n            }\n            $scope.isDatagridReloading = true;\n            return TuProfileProgramsService.getAllProgramsByCoreId(coreId).then(function (response) {\n                $scope.isDatagridReloading = false;\n\n                $scope.gridOptions.data = response;\n\n                return response;\n            });\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(controller.gridVisibilityNameSpace);\n            if (columnsVisibility) {\n                angular.forEach($scope.gridOptions.columnDefs, function (column, key) {\n                    if (column.field !== 'delete' &&\n                        columnsVisibility[column.field] === true &&\n                        column.visible === false\n                    ) {\n                        $scope.gridOptions.columnDefs[key].filter.term = null;\n                        if (column.field === 'modifiedAt') {\n                            delete $scope.gridOptions.columnDefs[key].filters[0].term;\n                            $scope.filters.lastLoginAtRange = {\n                                startDate: null,\n                                endDate: null\n                            };\n                        }\n                    }\n                });\n            }\n\n            controller.columnsVisibility = GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs);\n            GridService.storeColumnsVisibility(\n                controller.gridVisibilityNameSpace,\n                controller.columnsVisibility\n            );\n        };\n\n        controller.initWatches = function () {\n            // watch for new programs\n            WatchService.create($scope, TuProfileFactory.hasNewProgram, function (newProgramId) {\n                if (newProgramId) {\n                    // reload datagrid\n                    controller.reloadDatagrid().then(function (programsList) {\n                        if (programsList) {\n                            var i = 0,\n                                program = null,\n                                total = programsList.length;\n                            for (i; i < total; i++) {\n                                program = programsList[i];\n                                if (program.id === newProgramId) {\n                                    TuProfileFactory.setProgramBeforeChanges(program);\n                                    break;\n                                }\n                            }\n                        }\n                        // mark new program as selected in the datagrid\n                        $scope.selectedProgramId = newProgramId;\n                        // open new program in edit mode\n                        TuProfileFactory.setProgramEditFormVisibility(true);\n                    });\n                }\n            });\n\n            // watch for program add form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramAddFormVisible($scope.activeTab);\n            }, function (visible) {\n                visible = visible || TuProfileFactory.isProgramEditFormVisible($scope.activeTab);\n                controller.toggleColumns(visible);\n            });\n\n            // watch for department update changes\n            WatchService.create($scope, TuProfileFactory.getIsDepartmentUpdated, function (isUpdated) {\n                if (isUpdated) {\n                    if ($scope.gridOptions.data !== undefined &&\n                        $scope.gridOptions.data.length\n                    ) {\n                        controller.reloadDatagrid();\n                    }\n                    TuProfileFactory.setIsDepartmentUpdated(false);\n                }\n            });\n\n            // watch for program edit form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramEditFormVisible($scope.activeTab);\n            }, function (visible) {\n                if (!visible) {\n                    $scope.selectedProgramId = null;\n                } else {\n                    $scope.selectedProgramId = TuProfileFactory.getProgramId();\n                }\n                visible = visible || TuProfileFactory.isProgramAddFormVisible($scope.activeTab);\n                controller.toggleColumns(visible);\n            });\n\n            // listen to active institution changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, function (coreId) {\n                if (coreId) {\n                    controller.initDataGrid(coreId);\n                }\n            });\n\n            //Reload programme grid on programme update\n            WatchService.create($scope, TuProfileFactory.getUpdateProgramGrid, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    controller.reloadDatagrid();\n                    TuProfileFactory.setUpdateProgramGrid(false);\n                }\n            });\n\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        controller.initEvents = function () {\n            $scope.$on(constants.events.institutionTuProfileChanges, function () {\n                alreadyInitialised = false;\n                if (TuProfileFactory.isProgramsTabSelected()) {\n                    controller.initDataGrid();\n                    alreadyInitialised = true;\n                }\n            });\n        };\n        var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n            selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html';\n        $scope.gridOptions = {\n            enableSorting: false,\n            exporterMenuCsv: false,\n            enableGridMenu: true,\n            showGridFooter: true,\n            selectedItems: $scope.selectedProgramId,\n            enableFiltering: true,\n            enableColumnResize: true,\n            enableFullRowSelection: true,\n            enableRowSelection: true,\n            multiSelect: false,\n            enableRowHeaderSelection: false,\n            rowTemplate: '/scripts/components/profiles/tu/programs/datagrid/rowTemplate.html',\n            columnDefs: [\n                {\n                    displayName: 'Delete',\n                    field: controller.deleteField,\n                    enableSorting: false,\n                    enableColumnResizing: false,\n                    headerCellClass: 'text-center vertical-align-middle',\n                    headerCellTemplate: '/scripts/components/profiles/tu/programs/datagrid/deleteHeaderCellTemplate.html',\n                    cellTemplate: '/scripts/components/profiles/tu/programs/datagrid/deleteCellTemplate.html',\n                    maxWidth: 80\n                },\n                {\n                    displayName: 'Program Name',\n                    field: 'name',\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'name', true),\n                    filter: {\n                        term: GridService.getFilterByField(controller.paginationOptions, 'name', '')\n                    }\n                },\n                {\n                    displayName: 'Belongs To',\n                    filter: {\n                        type: uiGridConstants.filter.SELECT,\n                        selectOptions: TuProfileService.getBelongsToList(true),\n                        term: GridService.getFilterByField(controller.paginationOptions, 'belongsTo')\n                    },\n                    field: 'belongsTo',\n                    maxWidth: 130,\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'belongsTo', true),\n                    filterHeaderTemplate: selectTemplate,\n                    cellTemplate: selectCellTemplate\n                },\n                {\n                    displayName: 'URL Landing Page',\n                    field: 'url',\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'url', true),\n                    filter: {\n                        term: GridService.getFilterByField(controller.paginationOptions, 'url', '')\n                    }\n                },\n                {\n                    displayName: 'Department',\n                    field: 'departmentName',\n                    visible: GridService.getVisibilityByField(controller.columnsVisibility, 'departmentName', true),\n                    filter: {\n                        term: GridService.getFilterByField(controller.paginationOptions, 'departmentName', '')\n                    }\n                }\n            ],\n            onRegisterApi: function (gridApi) {\n                var columnsVisibilityBeforeChanges = angular.copy($scope.gridOptions.columnDefs);\n                $scope.gridApi = gridApi;\n                gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                    $scope.handleDatagridRowClick(row.entity);\n                });\n                gridApi.draggableRows.on.rowDropped($scope, function () {\n                    $scope.handleDatagridDragAndDrop();\n                });\n                gridApi.core.on.rowsRendered($scope, function () {\n                    $scope.isDatagridRendered = true;\n                });\n                gridApi.core.on.filterChanged($scope, function () {\n                    $scope.handleDatagridFiltersChanges(this.grid);\n                });\n                gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n                // reset columns visibility\n                GridService.resetExtend(columnsVisibilityBeforeChanges, $scope.gridOptions.columnDefs);\n            }\n        };\n\n        controller.initDataGrid = function (coreId) {\n            if (!coreId) {\n                coreId = InstitutionFactory.getCoreId();\n            }\n            if (!coreId) {\n                return false;\n            }\n\n            TuProfileProgramsService.getAllProgramsByCoreId(coreId).then(function (response) {\n                $scope.isDatagridReloading = false;\n                $scope.gridOptions.data = response;\n                $scope.gridOptions.minRowsToShow = response.length < 50 ? response.length : 50;\n                $scope.programsToDelete = {};\n            });\n        };\n\n        controller.destruct = function () {\n            alreadyInitialised = false;\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n            controller.initEvents();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isProgramsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileProgramsController', [\n            '$scope',\n            '$rootScope',\n            '$templateRequest',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'InstitutionFactory',\n            'TuProfileProgramsService',\n            'TuProfileService',\n            'uiGridConstants',\n            'WatchService',\n            'UiGridService',\n            App.controllers.tuProfilePrograms\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tuProfileProgramForm = function (\n        $scope,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        InstitutionFactory,\n        TuProfileService,\n        TuProfileProgramsService,\n        TuProfileDepartmentsService,\n        UrlService,\n        ObjectService,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        $scope.getTuProfileProgramFormController = function () {\n            return controller;\n        };\n        $scope.InstitutionNameTuPrograms = null;\n        controller.devMode = constants.dev;\n        controller.upgradeProgramEmailsTo = constants.emails.upgradeTu;\n        $scope.forms = {};\n        $scope.addInProgress = false;\n        $scope.editInProgress = false;\n        $scope.newProgram = {\n            belongsTo: null\n        };\n        $scope.newProgramBeforeChanges = {\n            institutionCoreId: null\n        };\n        $scope.departmentsList = {};\n        $scope.departmentsListArr = [];\n        $scope.isClientDepartment = null;\n\n        $scope.toggleProgramUpgradeForm = function () {\n            TuProfileFactory.setProgramUpgradeFormVisibility();\n        };\n\n        $scope.toggleProgramAddForm = function () {\n            controller.programFormVisibilityWatch();\n            TuProfileFactory.setProgramAddFormVisibility();\n        };\n\n        $scope.toggleProgramEditForm = function () {\n            TuProfileFactory.setProgramEditFormVisibility();\n        };\n\n        /**\n         * Is program data fetch in progress?\n         *\n         * @returns {boolean}\n         */\n        $scope.isFetchInProgress = function () {\n            return !$scope.program || !$scope.program.id;\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        $scope.getHasErrors = function () {\n            return TuProfileProgramsService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function (value) {\n            TuProfileProgramsService.setHasErrors(value);\n        };\n\n        $scope.setIsInvalidName = function (value) {\n            $scope.isInvalidName = value;\n        };\n\n        $scope.setIsInvalidUrl = function (value) {\n            $scope.isInvalidUrl = value;\n        };\n\n        $scope.setIsInvalidDepartment = function (value) {\n            $scope.isInvalidDepartment = value;\n        };\n\n        controller.restrictBelongsToOptions = function (departmentCoreId) {\n            if (!departmentCoreId) {\n                return false;\n            }\n            // reset array keys\n            if (angular.isArray($scope.departmentsList)) {\n                $scope.departmentsList = $scope.departmentsList.filter(function () { return true; });\n            }\n\n            var total = $scope.departmentsList.length,\n                belongsTo,\n                i = 0;\n            for (i; i < total; ++i) {\n                if ($scope.departmentsList[i].coreId === departmentCoreId) {\n                    belongsTo = $scope.departmentsList[i].belongsTo;\n                    break;\n                }\n            }\n            if (!belongsTo) {\n                return false;\n            }\n            $scope.belongsToList = TuProfileService.getBelongsToList();\n            angular.forEach($scope.belongsToList, function (item) {\n                if (belongsTo === 'all') {\n                    item.disabled = false;\n                } else if (belongsTo === 'ug') {\n                    item.disabled = item.id !== 'ug';\n                } else if (belongsTo === 'pg') {\n                    item.disabled = item.id !== 'pg';\n                }\n            });\n            // on edit, when department belongs to changed, the program belongs to should become empty\n            angular.forEach($scope.belongsToList, function (item) {\n                if (item.disabled && $scope.program.belongsTo === item.id) {\n                    delete($scope.program.belongsTo);\n                }\n            });\n        };\n\n        controller.handleDepartmentChanges = function (coreId) {\n            $scope.isInvalidDepartment = false;\n            controller.restrictBelongsToOptions(coreId);\n        };\n\n        $scope.setIsInvalidBelongsTo = function (value) {\n            $scope.isInvalidBelongsTo = value;\n        };\n\n        controller.departmentExists = function (departmentCoreId) {\n            var exists = false;\n            angular.forEach($scope.departmentsList, function (item) {\n                if (item.coreId && item.coreId === departmentCoreId) {\n                    exists = true;\n                }\n            });\n            return exists;\n        };\n\n        controller.validateProgram = function (program) {\n            $scope.isInvalidName = false;\n            $scope.isInvalidUrl = false;\n            $scope.isInvalidDepartment = false;\n            $scope.isInvalidBelongsTo = false;\n\n            if (!angular.isDefined(program.name) || !(angular.isDefined(program.name) && program.name.length > 0)) {\n                $scope.isInvalidName = true;\n            }\n            if (!angular.isDefined(program.url) || program.url.length < 1 || program.url.length > 255) {\n                $scope.isInvalidUrl = true;\n            }\n            if (!angular.isDefined(program.departmentCoreId) || !controller.departmentExists(program.departmentCoreId)) {\n                $scope.isInvalidDepartment = true;\n            }\n            if (!angular.isDefined(program.belongsTo)) {\n                $scope.isInvalidBelongsTo = true;\n            }\n            return $scope.isInvalidName ||\n                $scope.isInvalidUrl ||\n                $scope.isInvalidDepartment ||\n                $scope.isInvalidBelongsTo;\n\n        };\n\n        controller.resetValidation = function () {\n            $scope.isInvalidName = false;\n            $scope.isInvalidUrl = false;\n            $scope.isInvalidDepartment = false;\n            $scope.isInvalidBelongsTo = false;\n        };\n\n        /**\n         * Actions to do when program update button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleProgramUpdateClick = function () {\n            TuProfileProgramsService.setHasErrors(false);\n            var isInvalidProgram = controller.validateProgram($scope.program);\n            if (\n                $scope.editInProgress ||\n                !$scope.forms.editProgramForm ||\n                !$scope.forms.editProgramForm.$valid ||\n                isInvalidProgram\n            ) {\n                $scope.setHasErrors(true);\n                return false;\n            }\n            $scope.editInProgress = true;\n            TuProfileProgramsService.update($scope.program).then(controller.updateCallback);\n        };\n\n        /**\n         * Actions to do when update request is finished.\n         *\n         * @param {boolean} success\n         */\n        controller.updateCallback = function (success) {\n            $scope.editInProgress = false;\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'successfully!' : 'failure!',\n                'Program Updated'\n            );\n            if (success) {\n                // get program instance before changes\n                var programInstance = TuProfileFactory.getProgramBeforeChanges();\n                // apply changes to program\n                angular.forEach($scope.program, function (value, key) {\n                    programInstance[key] = value;\n                });\n                if (!$scope.isClientDepartment) {\n                    programInstance.departmentName = TuProfileDepartmentsService.getDepartmentNameById(\n                        programInstance.departmentCoreId\n                    );\n                }\n                TuProfileProgramsService.formatList([programInstance]);\n                //Update Programs grid\n                if (TuProfileFactory.isProgramsAlphabeticalOrder()) {\n                    TuProfileFactory.setUpdateProgramGrid(true);\n                }\n            }\n        };\n\n        //\n        /**\n         * Actions to do when new program create button is clicked.\n         *\n         * @returns {boolean}\n         */\n        $scope.handleProgramCreateClick = function () {\n            TuProfileProgramsService.setHasErrors(false);\n            var isInvalidProgram = controller.validateProgram($scope.newProgram);\n            if (\n                $scope.addInProgress ||\n                !$scope.forms.addProgramForm ||\n                !$scope.forms.addProgramForm.$valid ||\n                isInvalidProgram\n            ) {\n                $scope.setHasErrors(true);\n                return false;\n            }\n            $scope.addInProgress = true;\n            TuProfileProgramsService.create($scope.newProgram).then(controller.createCallback);\n        };\n\n        controller.onKeyUp = function ($event) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value,\n                variableName = $event.target.getAttribute('ng-model');\n\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                if (variableName) {\n                    ObjectService.set($scope, variableName, url);\n                }\n            }\n        };\n\n        /**\n         * Actions to do when create request is finished.\n         *\n         * @param {Object} response\n         */\n        controller.createCallback = function (response) {\n            // enable add button\n            $scope.addInProgress = false;\n            // show notification message\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'successfully!' : 'failure!',\n                'Program Created'\n            );\n            if (response) {\n                var program = angular.copy($scope.newProgram);\n                program.id = response.insertedId;\n                // set new program as active\n                TuProfileFactory.setProgram(program);\n                // reset add form fields\n                controller.initForm();\n                // announce that new program was added\n                TuProfileFactory.announceNewProgram(program.id);\n            }\n        };\n\n        controller.programFormVisibilityWatch = function () {\n            controller.resetValidation();\n            controller.initForm();\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, InstitutionFactory.getCoreId, function (newCoreId, oldCoreId) {\n                if (newCoreId) {\n                    // check if departments list was not fetched\n                    if (angular.equals($scope.departmentsList, {}) || (oldCoreId && newCoreId !== oldCoreId)) {\n                        // fetch departments and store for later usage\n                        TuProfileDepartmentsService.getAllDepartments(\n                            InstitutionFactory.isClientDepartment() ?\n                            InstitutionFactory.getParentCoreId() :\n                            InstitutionFactory.getCoreId(),\n                            {\n                                page: 1, // show first page\n                                count: 1000, // count per page\n                            }\n                        );\n                    }\n                    $scope.newProgram.institutionCoreId = newCoreId;\n                    $scope.newProgramBeforeChanges.institutionCoreId = newCoreId;\n\n                    // check if institution is client department\n                    $scope.isClientDepartment = InstitutionFactory.isClientDepartment();\n                    if ($scope.isClientDepartment) {\n                        $scope.newProgram.departmentCoreId = newCoreId;\n                        $scope.departmentsList = [{\n                            coreId: newCoreId,\n                            name: InstitutionFactory.getDisplayName()\n                        }];\n                        $scope.newProgramBeforeChanges = {\n                            institutionCoreId: newCoreId,\n                            departmentCoreId: newCoreId\n                        };\n                    }\n                }\n            });\n\n            WatchService.create($scope, TuProfileFactory.getProgram, function (newValue, oldValue) {\n                controller.resetValidation();\n                if (newValue !== oldValue) {\n                    $scope.program = newValue;\n                    controller.restrictBelongsToOptions($scope.program.departmentCoreId);\n                }\n            }, true);\n\n            WatchService.create($scope, TuProfileFactory.getDepartments, function (departmentsList) {\n                if (!InstitutionFactory.isClientDepartment()) {\n                    if (Object.prototype.toString.call(departmentsList) === '[object Array]') {\n                        $scope.departmentsListArr = TuProfileFactory.getDepartments();\n                        // fixes scenario when switched to parent and clicked edit program, belongs to becomes empty\n                        controller.handleDepartmentChanges(InstitutionFactory.getCoreId());\n                    }\n                    else{\n                        $scope.departmentsList = TuProfileFactory.getDepartments();\n                    }\n                    $scope.departmentsList = departmentsList;\n                } else {\n                    // client department fix\n                    if (Object.prototype.toString.call(departmentsList) === '[object Array]') {\n                        $scope.departmentsListArr = TuProfileFactory.getDepartments();\n                        $scope.departmentsList = angular.copy($scope.departmentsListArr);\n                        controller.handleDepartmentChanges(InstitutionFactory.getCoreId());\n                    }\n                }\n            }, true);\n\n            // watch for program edit form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramEditFormVisible($scope.activeTab);\n            }, controller.programFormVisibilityWatch);\n\n            // watch for program add form visibility changes\n            WatchService.create($scope, function () {\n                return TuProfileFactory.isProgramAddFormVisible($scope.activeTab);\n            }, controller.programFormVisibilityWatch);\n\n            // watch for dpeartment update changes on edit program form\n            WatchService.create($scope, TuProfileFactory.getIsDepartmentUpdated, function (isUpdated) {\n                if (!InstitutionFactory.isClientDepartment()) {\n                    $scope.departmentsList = TuProfileFactory.getDepartments();\n                    $scope.belongsToList = [{}];\n                }\n            });\n        };\n\n        controller.initForm = function () {\n            $scope.newProgram = angular.copy($scope.newProgramBeforeChanges);\n            // watch for program changes\n            $scope.program = TuProfileFactory.getProgram();\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isProgramsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n            if (isActive) {\n                controller.initForm();\n                if ($scope.forms && $scope.forms.addProgramForm) {\n                    $scope.forms.addProgramForm.$setUntouched();\n                }\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileProgramForm', [\n            '$scope',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'InstitutionFactory',\n            'TuProfileService',\n            'TuProfileProgramsService',\n            'TuProfileDepartmentsService',\n            'UrlService',\n            'ObjectService',\n            'WatchService',\n            App.controllers.tuProfileProgramForm\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TuProfileProgramsService = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        RequestsQueueService,\n        TuProfileService\n    ) {\n        var service = {\n            deferred : {},\n            departmentsList: {},\n            belongsTo: {\n                all : 'all',\n                ug: 'ug',\n                pg: 'pg'\n            },\n            hasErrors: false\n        };\n\n        /**\n         * Get programs list API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getProgramsListModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/tu-programs/core-id/:coreId', {}, {\n                get: {\n                    cancellable : true\n                }\n            });\n        };\n\n        /**\n         * Get programs update API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpdateModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-program/:id', null, {\n                update: {method:'PATCH'}\n            });\n        };\n\n        /**\n         * Get programs create API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getCreateModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-program');\n        };\n\n        /**\n         * Get programs delete API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getDeleteModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/delete-tu-programs', null, {\n                delete: {method:'POST'}\n            });\n        };\n\n        /**\n         * Get belongs to list.\n         *\n         * @returns {array}\n         */\n        service.getBelongsToList = function () {\n            return TuProfileService.getBelongsToList();\n        };\n\n        /**\n         * Get programs ordering API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getOrderingModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/programsOrder', null, {\n                update: {method:'PATCH'}\n            });\n        };\n        \n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        /**\n         * Update program.\n         *\n         * @param {Object} program\n         * @returns {Promise}\n         */\n        service.update = function(program) {\n            var UpdateModel = service.getUpdateModel(),\n                dataToUpdate = {\n                    departmentCoreId: program.departmentCoreId,\n                    belongsTo: program.belongsTo,\n                    name: program.name,\n                    url: program.url\n                };\n            return UpdateModel.update(\n                {id: program.id},\n                dataToUpdate\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Create program.\n         *\n         * @param {Object} program\n         * @returns {Promise}\n         */\n        service.create = function(program) {\n            if (!program || !program.institutionCoreId) {\n                throw 'Missing Required';\n            }\n            var UpdateModel = service.getCreateModel(),\n                dataToUpdate = {\n                    institutionCoreId: program.institutionCoreId,\n                    institutionCoreIdAsString: program.institutionCoreId.toString(),\n                    departmentCoreId: program.departmentCoreId,\n                    belongsTo: program.belongsTo,\n                    name: program.name,\n                    url: program.url\n                };\n            return UpdateModel.save(\n                null,\n                dataToUpdate\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Delete program(s).\n         *\n         * @param {array} ids\n         * @returns {Promise}\n         */\n        service.delete = function(ids) {\n            var TuProgramModel = service.getDeleteModel();\n            return TuProgramModel.delete(\n                {},\n                ids\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Update programs order.\n         *\n         * @param {String} tuProfileId\n         * @param {Array} orderedIds\n         * @returns {Promise.<TResult>}\n         */\n        service.updateOrder = function(tuProfileId, orderedIds) {\n            var TuProgramsModel = service.getOrderingModel();\n            return TuProgramsModel.update(\n                {id: tuProfileId},\n                orderedIds\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getAllProgramsByCoreId = function (coreId) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n            var Api = service.getProgramsListModel();\n            return Api.get({\n                coreId: coreId\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                return service.formatList(data.results);\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        /**\n         * Get programs list.\n         *\n         * @param {Object} params\n         * @returns {Promise}\n         */\n        service.getAllPrograms = function (params) {  \n            var coreId = params.parameters().coreId;\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n\n            // cancel currently running requests\n            RequestsQueueService.cancelAll('getAllPrograms');\n\n            var Api = service.getProgramsListModel().get(params.url(), { coreId: coreId });\n\n            // add new request to the queue\n            RequestsQueueService.add(Api, 'getAllPrograms');\n\n            return Api.$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('getAllPrograms');\n\n                params.total(data.totalFiltered);\n                params.totalEntries = data.totalMatching;\n\n               return service.formatList(data.results);\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n        \n        /**\n         * Format programs list.\n         *\n         * @param {Object} programsData\n         * @returns {Object}\n         */\n        service.formatList = function (programsData) {\n            if (programsData) {\n                angular.forEach(programsData, function(programObject) {\n                    programObject.belongsToName = service.getBelongsToName(programObject.belongsTo);\n                });\n            }\n\n            return programsData;\n        };\n\n        /**\n         * Get belongs to name by ID.\n         *\n         * @param {int} belongsTo\n         * @returns {string}\n         */\n        service.getBelongsToName = function (belongsTo) {\n            return TuProfileService.getBelongsToName(belongsTo);\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuProfileProgramsService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'RequestsQueueService',\n            'TuProfileService',\n            App.services.TuProfileProgramsService\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services: {}});\n\n    App.services.TuProfileMediaService = function () {\n        var service = {\n            types: {\n                master : 'master',\n                ug : 'ug',\n                pg : 'pg'\n            }\n        };\n\n        service.typeOverview = function () {\n            return service.types.master;\n        };\n\n        service.typeUndergraduate = function () {\n            return service.types.ug;\n        };\n\n        service.typePostgraduate = function () {\n            return service.types.pg;\n        };\n\n        /**\n         * Get TU profile subtypes.\n         *\n         * @returns {array}\n         */\n        service.getTypes = function () {\n            return [\n                service.typeOverview(),\n                service.typeUndergraduate(),\n                service.typePostgraduate()\n            ];\n        };\n\n        service.isValidType = function (item) {\n            var scopeTypes = service.getTypes(),\n                valid = false;\n            for (var typesIndex = 0; typesIndex < scopeTypes.length; typesIndex++) {\n                if (item[scopeTypes[typesIndex]]) {\n                    valid = true;\n                }\n            }\n\n            return valid;\n        };\n\n        /**\n         * Validate profile subtype.\n         *\n         * @param {Object} list\n         * @returns {true|Object}\n         */\n        service.validateTypes = function (list) {\n            for (var i = 0; i < list.length; i++) {\n                // if invalid type\n                if (!service.isValidType(list[i])) {\n                    // return invalid item\n                    return list[i];\n                }\n            }\n\n            return true;\n        };\n\n        /**\n         * Searches the object for a given value and returns the first corresponding key if successful.\n         *\n         * @param {Object} haystack\n         * @param {String} needle\n         * @param {null|String}column\n         * @returns {boolean|int} - returns the key for needle if it is found in the array, FALSE otherwise.\n         */\n        service.objectSearch = function (haystack , needle, column) {\n            column = column || 'id';\n            for (var i = 0; i < haystack .length; i++) {\n                if (haystack[i] && haystack[i][column] && haystack[i][column] === needle) {\n                    return i;\n                }\n            }\n            return false;\n        };\n\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuMediaService', [\n            App.services.TuProfileMediaService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.TuProfileMedia = function (\n        $scope,\n        constants,\n        InstitutionFactory,\n        TuProfileFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        controller.devMode = constants.dev;\n        controller.upgradeEmailsTo = constants.emails.upgradeTu;\n        $scope.isMediaReloading = true;\n\n        controller.isImagesTabActive = function () {\n            var selectedMediaTabId = TuProfileFactory.getSelectedMediaTabId();\n            return selectedMediaTabId === 1 || selectedMediaTabId === null;\n        };\n\n        controller.isVideosTabActive = function () {\n            return TuProfileFactory.getSelectedMediaTabId() === 2;\n        };\n\n        controller.isBrochuresTabActive = function () {\n            return TuProfileFactory.getSelectedMediaTabId() === 4;\n        };\n\n        controller.isSocialMediaTabActive = function () {\n            return TuProfileFactory.getSelectedMediaTabId() === 3;\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, InstitutionFactory.isAdvanced, function (newValue, oldValue) {\n                if (oldValue !== newValue) {\n                    $scope.isAdvanced = newValue;\n                }\n            });\n            // watch for active institution changes changes\n            WatchService.create($scope, InstitutionFactory.getId, function (visible) {\n                $scope.isMediaReloading = !visible;\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isMediaTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileMediaController', [\n            '$scope',\n            'constants',\n            'InstitutionFactory',\n            'TuProfileFactory',\n            'WatchService',\n            App.controllers.TuProfileMedia\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.TuMediaCommonSidebar = function (\n        $scope,\n        $resource,\n        $location,\n        constants,\n        TuProfileFactory,\n        InstitutionFactory,\n        TuMediaService,\n        TuMediaVideosService,\n        TuMediaBrochuresService,\n        TuMediaSocialMediasService,\n        TuMediaImagesService\n    ) {\n        if(angular.isUndefined($scope.tabId)) {\n            TuProfileFactory.setSelectedMediaTabId(1);\n        }\n\n        $scope.setSelected = function (tabId) {\n            if ($scope.tabId !== tabId) {\n                $scope.tabId = tabId;\n                TuProfileFactory.setSelectedMediaTabId(tabId);\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        $scope.getSelected = function () {\n            return TuProfileFactory.getSelectedMediaTabId();\n        };\n\n        $scope.getGeneralCounter = function ()\n        {\n            var totalCount = 0;\n            var videoItems = TuMediaVideosService.getVideoItems();\n            if (angular.isArray(videoItems)) {\n                totalCount += videoItems.length;\n            }\n            var brochureItems = TuMediaBrochuresService.getBrochureItems();\n            if (angular.isArray(brochureItems)) {\n                totalCount += brochureItems.length;\n            }\n            var socialMediaItems = TuMediaSocialMediasService.getSocialMediaItems();\n            if (angular.isArray(socialMediaItems)) {\n                totalCount += socialMediaItems.length;\n            }\n\n            var imageItems = TuMediaImagesService.getImageItems();\n            if (angular.isArray(imageItems)) {\n                totalCount += imageItems.length;\n            }\n\n            return totalCount;\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaCommonSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            'constants',\n            'TuProfileFactory',\n            'InstitutionFactory',\n            'TuMediaService',\n            'TuMediaVideosService',\n            'TuMediaBrochuresService',\n            'TuMediaSocialMediasService',\n            'TuMediaImagesService',\n            App.controllers.TuMediaCommonSidebar\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, { directives: {} });\n\n    App.directives.useTuSubtypes = function(constants, ngIfDirective) {\n        var ngIf = ngIfDirective[0];\n        return {\n            restrict: 'A',\n            transclude: ngIf.transclude,\n            priority: ngIf.priority - 1,\n            terminal: ngIf.terminal,\n            link: function($scope, $element, $attr) {\n                $attr.ngIf = function() {\n                    return !constants.noTuSubtypes;\n                };\n                ngIf.link.apply(ngIf, arguments);\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .directive('useTuSubtypes', ['constants', 'ngIfDirective', App.directives.useTuSubtypes]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers: {}});\n\n    App.controllers.TuMediaVideos = function (\n        $scope,\n        constants,\n        TuProfileFactory,\n        NotifierFactory,\n        TuMediaVideosService,\n        TuMediaService,\n        ModalService,\n        $filter,\n        orderBy,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TuMediaVideosService.coreId = 0;\n        $scope.videoItems = [];\n        $scope.itemVideo = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = TuMediaService.typeOverview();\n\n        TuMediaVideosService.setType(TuMediaService.typeOverview());\n        TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo());\n        WatchService.create($scope, function () {\n            return TuProfileFactory.getData();\n        }, function (newValue) {\n            if (newValue !== null) {\n                angular.copy(newValue.videos, $scope.videoItems);\n                TuMediaVideosService.coreId = newValue.id;\n                TuMediaVideosService.setVideoItems($scope.videoItems);\n                $scope.filteredVideoItems = $filter('filter')($scope.videoItems, {master: true});\n                $scope.filteredVideoItems = orderBy($scope.filteredVideoItems, 'orderType.' + $scope.type, false);\n                TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo());\n            }\n        });\n\n        WatchService.create($scope, TuMediaVideosService.getVideoItems, function (newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.videoItems = newValue;\n            }\n        });\n\n        WatchService.create($scope, TuMediaVideosService.getTriggerChange, function () {\n            var selectedVideo = TuMediaVideosService.getSelectedVideo();\n            if (\n                ($scope.type === 'ug' && selectedVideo.ug) || \n                (!selectedVideo.master && selectedVideo.ug && !selectedVideo.pg) || \n                (!selectedVideo.master && selectedVideo.ug && selectedVideo.pg && ($scope.type === 'ug' || $scope.type === 'master'))\n            ) {\n                $scope.filter('ug');\n            } else if (($scope.type === 'pg' && selectedVideo.pg) || (!selectedVideo.master && !selectedVideo.ug && selectedVideo.pg)) {\n                $scope.filter('pg');\n            } else {\n                $scope.filter('master');\n            }\n            angular.forEach($scope.videoItems, function (value, key) {                \n                if (selectedVideo.id === value.id) {\n                    $scope.videoItems[key] = selectedVideo;\n                }\n            });\n            $scope.filter($scope.type, true);\n        });\n\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            start: function () {\n                controller.initialList = [];\n                angular.copy($scope.filteredVideoItems, controller.initialList);\n            },\n            update: function (e, ui) {\n                var validateItems = TuMediaService.validateTypes($scope.videoItems);\n                if (true !== validateItems) {\n                    ui.item.sortable.cancel();\n                }\n            },\n            stop: function () {\n                var validateItems = TuMediaService.validateTypes($scope.videoItems);\n                if (true === validateItems) {\n                    var assignedOrder = 1;\n                    // change videos order\n                    for (var index = 0; index < $scope.filteredVideoItems.length; index++) {\n                        if ($scope.filteredVideoItems[index][$scope.type]) {\n                            $scope.filteredVideoItems[index].orderType[$scope.type] = assignedOrder;\n                            assignedOrder++;\n                        }\n                    }\n\n                    $scope.sortableOptions.disabled = false;\n                    TuMediaVideosService.saveOrder(TuMediaVideosService.coreId, $scope.videoItems)\n                        .then(function (success) {\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Success!' : 'Failure!',\n                                'Video Order Save'\n                            );\n                            TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo());\n                        })\n                        .finally(function () {\n                            $scope.sortableOptions.disabled = false;\n                        });\n                } else {\n                    NotifierFactory.show(\n                        'error',\n                        'Failure!',\n                        'Invalid items in video list'\n                    );\n                    TuMediaVideosService.setSelectedVideo(validateItems);\n                    TuMediaVideosService.displayTypesValid = true;\n\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Filter change.\n         *\n         * @param type\n         */\n        $scope.filter = function (type) {\n            var validateItems = TuMediaService.validateTypes($scope.videoItems);\n            if (true === validateItems) {\n                $scope.type = type;\n                var params = {};\n                params[type] = true;\n                $scope.filteredVideoItems = $filter('filter')($scope.videoItems, params);\n                $scope.filteredVideoItems = orderBy($scope.filteredVideoItems, 'orderType.' + type, false);\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in video list'\n                );\n                TuMediaVideosService.setSelectedVideo(validateItems);\n                TuMediaVideosService.displayTypesValid = true;\n\n                return false;\n            }\n        };\n\n        /**\n         * Select video.\n         *\n         * @param {Object} item\n         */\n        $scope.selectVideo = function (item) {\n            item = angular.copy(item);\n            var validateItems = TuMediaService.validateTypes($scope.videoItems);\n            if (true === validateItems) {\n                TuMediaVideosService.setHasErrors(false);\n                TuMediaVideosService.displayTypesValid = false;\n                $scope.itemVideo = TuMediaVideosService.getItemVideo();\n                if (angular.isDefined(item)) {\n                    TuMediaVideosService.setSelectedVideo(item);\n                } else {\n                    TuMediaVideosService.setHasErrors(false);\n                    TuMediaVideosService.setHighlighted(true);\n                    TuMediaVideosService.setSelectedVideo($scope.itemVideo);\n                }\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in video list'\n                );\n                TuMediaVideosService.setSelectedVideo(validateItems);\n                TuMediaVideosService.displayTypesValid = true;\n\n                return false;\n            }\n        };\n\n        $scope.selectedItem = function () {\n            return TuMediaVideosService.getSelectedVideo();\n        };\n\n        /**\n         * Delete video.\n         *\n         * @param item\n         */\n        $scope.deleteVideo = function (item) {\n            var itemName = angular.isDefined(item.name) && item.name !== null ? ': ' + item.name : '';\n            var modalOptions = {\n                closeButtonText: 'No',\n                actionButtonText: 'Yes',\n                headerText: 'Delete Video' + itemName + ' ?',\n                bodyText: 'Are you sure you wish to delete this video?',\n            };\n            ModalService.show({}, modalOptions).then(function (result) {\n                TuMediaVideosService.deleteVideo(TuMediaVideosService.coreId, item)\n                    .then(function (success) {\n                        $scope.submitInProgress = false;\n                        NotifierFactory.show(\n                            success ? 'success' : 'error',\n                            success ? 'Success!' : 'Failure!',\n                            'Delete Video'\n                        );\n                        if (success) {\n                            TuMediaVideosService.setSelectedVideo(TuMediaVideosService.getItemVideo());\n                            $scope.videoItems.splice(TuMediaService.objectSearch($scope.videoItems, item.id), 1);\n                            $scope.filteredVideoItems.splice(TuMediaService.objectSearch($scope.filteredVideoItems, item.id), 1);\n\n\n                            var assignedOrder = 1;\n                            for (var index = 0; index < $scope.filteredVideoItems.length; index++) {\n                                if ($scope.filteredVideoItems[index][$scope.type]) {\n                                    $scope.filteredVideoItems[index].orderType[$scope.type] = assignedOrder;\n                                    assignedOrder++;\n                                }\n                            }\n                            $scope.filteredVideoItems = orderBy($scope.filteredVideoItems, 'orderType.' + $scope.type, false);\n                        }\n                    });\n            });\n        };\n\n        $scope.typeOverview = function () {\n            return TuMediaService.typeOverview();\n        };\n\n        $scope.typeUndergraduate = function () {\n            return TuMediaService.typeUndergraduate();\n        };\n\n        $scope.typePostgraduate = function () {\n            return TuMediaService.typePostgraduate();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaVideosController', [\n            '$scope',\n            'constants',\n            'TuProfileFactory',\n            'NotifierFactory',\n            'TuMediaVideosService',\n            'TuMediaService',\n            'ModalService',\n            '$filter',\n            'orderByFilter',\n            'WatchService',\n            App.controllers.TuMediaVideos\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TuMediaVideosSidebar = function (\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        TuMediaVideosService,\n        TuMediaService,\n        WebSocketsService,\n        UrlService,\n        WatchService,\n        ObjectService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        $scope.hasErrors = true;\n        TuMediaVideosService.displayTypesValid = false;\n        TuMediaVideosService.setHasErrors(false);\n        $scope.youtubeUrlPattern = UrlService.getYoutubePattern();\n\n        controller.onKeyUp = function ($event) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value,\n                variableName = $event.target.getAttribute('ng-model');\n\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                if (variableName) {\n                    ObjectService.set($scope, variableName, url);\n                }\n            }\n        };\n\n        /**\n         * Save form.\n         *\n         * @param item\n         * @returns {boolean}\n         */\n        $scope.saveVideoForm = function (item) {\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                $scope.setHasErrors(true);\n            }\n            if (!TuMediaService.isValidType(item)) {\n                TuMediaVideosService.displayTypesValid = true;\n            }\n            if (TuMediaVideosService.displayTypesValid || $scope.getHasErrors()) {\n                return false;\n            }\n            if (\n                !$scope.forms.formVideo ||\n                !$scope.forms.formVideo.$valid\n            ) {\n                TuMediaVideosService.setHasErrors(true);\n                return false;\n            }\n            var videoItem = angular.copy(item);\n            TuMediaVideosService.displayTypesValid = false;\n            TuMediaVideosService.setHasErrors(false);\n            var actionName = 'Added';\n            if (videoItem.id.length > 0) {\n                actionName = 'Updated';\n            }\n            if ($scope.submitInProgress || !$scope.forms.formVideo || !$scope.forms.formVideo.$valid\n            ) {\n                NotifierFactory.show(\n                    'error',\n                    'Error: Please fill in all required fields',\n                    actionName + ' Video'\n                );\n\n                return false;\n            }\n            $scope.submitInProgress = true;\n\n            // Update video and title to default while retrieving data from youtube\n            var currentVideos = TuProfileFactory.getMediaVideos();\n            for (var i = 0; i < currentVideos.length; i++) {\n                if (item.id === currentVideos[i].id) {\n                    currentVideos[i].name = null;\n                    currentVideos[i].imageUrl = null;\n                }\n            }\n\n            // start listening (open a room) to youtube video details changes\n            var youtubeId = UrlService.extractYoutubeIdFromUrl(item.url);\n            WebSocketsService.subscribe(youtubeId, 'VideoDetails' + youtubeId, function (response) {\n                item.name = response && response.name || null;\n                item.imageUrl = response && response.imageUrl || null;\n                // mark as selected on the left side\n                $scope.selectedVideo = angular.copy(TuMediaVideosService.getSelectedVideo());\n            });\n            TuMediaVideosService.saveVideo(TuMediaVideosService.coreId, videoItem)\n                .then(function (success) {\n                    $scope.submitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        'Video ' + actionName\n                    );\n                    if (success) {\n                        if (videoItem.id.length === 0) {\n                            item.id = success;\n                            // add to the list\n                            TuMediaVideosService.getVideoItems().unshift(item);\n                            // mark as selected list\n                            TuMediaVideosService.setSelectedVideo(item);\n                            // mark as selected on the left side\n                            $scope.selectedVideo = angular.copy(TuMediaVideosService.getSelectedVideo());\n                        }\n                        // mark as selected list\n                        TuMediaVideosService.setSelectedVideo(item);\n                        TuMediaVideosService.setHasErrors(false);\n                    }\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TuMediaVideosService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * Clear item.\n         *\n         * @param item\n         */\n        $scope.clearVideoForm = function (item) {\n            if (angular.isDefined(item)) {\n                $scope.itemVideo = item;\n            } else {\n                $scope.itemVideo = TuMediaVideosService.getItemVideo();\n            }\n\n            $scope.itemVideo = TuMediaVideosService.resetItem($scope.itemVideo);\n            TuMediaVideosService.setSelectedVideo($scope.itemVideo);\n            $scope.setDisplayTypesValidation(false);\n            $scope.setHasErrors(false);\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedVideo = function () {\n            return TuMediaVideosService.getSelectedVideo();\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function () {\n            return $scope.selectedVideo && $scope.selectedVideo.id ? true : false;\n        };\n\n        /**\n         * Get video items.\n         *\n         * @returns {*}\n         */\n        $scope.getVideoItems = function () {\n            return TuMediaVideosService.getVideoItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        $scope.getHasErrors = function () {\n            return TuMediaVideosService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function (value) {\n            TuMediaVideosService.setHasErrors(value);\n        };\n\n        $scope.type = function () {\n            return TuMediaVideosService.getType();\n        };\n\n        $scope.setDisplayTypesValidation = function (value) {\n            TuMediaVideosService.displayTypesValid = value;\n        };\n\n        $scope.getDisplayTypesValidation = function () {\n            return TuMediaVideosService.displayTypesValid;\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, TuMediaVideosService.getSelectedVideo, function (selectedVideo) {\n                $scope.selectedVideo = selectedVideo;\n                $scope.selectedVideoBeforeChanges = angular.copy($scope.selectedVideo);\n            });\n            WatchService.create($scope, TuMediaVideosService.getHasErrors, function (newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.hasErrors = newValue;\n                }\n            });\n\n            WatchService.create($scope, TuMediaVideosService.getHighlighted, function (newValue) {\n                if (newValue) {\n                    $scope.isHighlighted = newValue;\n                    $timeout(function () {\n                        TuMediaVideosService.setHighlighted(false);\n                        $scope.isHighlighted = false;\n                    }, 200);\n                }\n            });\n\n            WatchService.create($scope, TuProfileFactory.getSelectedMediaTabId, function (tabId) {\n                if (tabId === 2) {\n                    // restore data on tab type switch\n                    if (typeof $scope.selectedVideoBeforeChanges !== 'undefined') {\n                        $scope.selectedVideo = angular.copy($scope.selectedVideoBeforeChanges);\n                    }\n                    $timeout(function () {\n                        TuMediaVideosService.setHighlighted(true);\n                    }, 200);\n                } else {\n                    delete TuMediaVideosService.displayTypesValid;\n                    $scope.setHasErrors(false);\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isMediaTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaVideosSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'TuMediaVideosService',\n            'TuMediaService',\n            'WebSocketsService',\n            'UrlService',\n            'WatchService',\n            'ObjectService',\n            App.controllers.TuMediaVideosSidebar\n        ]);\n\n} (window.angular));\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services: {}});\n\n    App.services.TuMediaVideosService = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        TuMediaService,\n        TuProfileFactory\n    ) {\n        var service = {\n            triggerChange: null,\n            selectedVideo: null\n        };\n\n        service.getVideoModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/video/:videoId', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        service.getVideosOrderingModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/videosOrder', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        /**\n         * Save Video\n         *\n         * @param institutionId\n         * @param video\n         * @returns {*}\n         */\n        service.saveVideo = function (institutionId, video) {\n            var videoModel = service.getVideoModel(),\n                videoSubmit = service.formatVideo(video);\n            if (angular.isDefined(videoSubmit.id) && videoSubmit.id.length > 0) {\n                // update video\n                return videoModel.update(\n                    {id: institutionId, videoId: video.id},\n                    {\n                        url: videoSubmit.url,\n                        orderType: videoSubmit.orderType,\n                        assignedTo: videoSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return true;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else {\n                // create new video\n                return videoModel.save(\n                    {id: institutionId, videoId: videoSubmit.id},\n                    {\n                        url: videoSubmit.url,\n                        orderType: videoSubmit.orderType,\n                        assignedTo: videoSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.insertedId;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        /**\n         * Save video order.\n         *\n         * @param {string} id - Institution TU profile mongo ID\n         * @param {Object} videos\n         * @returns {Promise}\n         */\n        service.saveOrder = function (id, videos) {\n            var institutionModel = service.getVideosOrderingModel();\n            return institutionModel.update(\n                {id: id},\n                {\n                    'videos': service.formatForOrdering(videos)\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.formatForOrdering = function (items) {\n            var formattedItems = [];\n            angular.forEach(items, function (item) {\n                formattedItems.push({\n                    'id': item.id,\n                    'orderType': item.orderType\n                });\n            });\n\n            return formattedItems;\n        };\n\n        /**\n         * Delete video.\n         *\n         * @param institutionId\n         * @param video\n         * @returns {*}\n         */\n        service.deleteVideo = function (institutionId, video) {\n            service.setHasErrors(false);\n            var videoModel = service.getVideoModel();\n            return videoModel.delete(\n                {id: institutionId, videoId: video.id}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set selected video.\n         *\n         * @param {Object} item\n         */\n        service.setSelectedVideo = function (item) {\n            service.selectedVideo = item;\n\n        };\n\n        /**\n         * Get selected video\n         *\n         * @returns {Obejct|null}\n         */\n        service.getSelectedVideo = function () {\n            return service.selectedVideo;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param {float} triggerChange\n         */\n        service.setTriggerChange = function (triggerChange) {\n            service.triggerChange = parseFloat(triggerChange);\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerChange = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Set video items.\n         *\n         * @param items\n         * @param transform\n         */\n        service.setVideoItems = function (items, transform) {\n            if (!angular.isDefined(transform)) {\n                transform = true;\n            }\n            var typeUg = TuMediaService.typeUndergraduate(),\n                typePg = TuMediaService.typePostgraduate(),\n                typeMaster = TuMediaService.typeOverview();\n            if (transform) {\n                angular.forEach(items, function (value, key) {\n                    items[key][typeMaster] = false;\n                    items[key][typeUg] = false;\n                    items[key][typePg] = false;\n                    angular.forEach(items[key].assignedTo, function (aValue) {\n                        if (aValue === typeMaster) {\n                            items[key][typeMaster] = true;\n                        } else if (aValue === typeUg) {\n                            items[key][typeUg] = true;\n                        } else if (aValue === typePg) {\n                            items[key][typePg] = true;\n                        }\n                    });\n                    /**\n                     * Set initial order\n                     * @type {{master: number, ug: number, pg: number}}\n                     */\n                    if (items[key].orderType === null) {\n                        items[key].orderType = {\n                            'master': 0,\n                            'ug': 0,\n                            'pg': 0\n                        };\n                    }\n                    var orderOverview = 0;\n                    var orderUndergraduate = 0;\n                    var orderPostgraduate = 0;\n                    if (angular.isDefined(items[key].orderType)) {\n                        if (angular.isDefined(items[key].orderType[typeMaster])) {\n                            orderOverview = items[key].orderType[typeMaster];\n                        }\n                        if (angular.isDefined(items[key].orderType[typeUg])) {\n                            orderUndergraduate = items[key].orderType[typeUg];\n                        }\n                        if (angular.isDefined(items[key].orderType[typePg])) {\n                            orderPostgraduate = items[key].orderType[typePg];\n                        }\n                    }\n                    items[key].orderType = {\n                        'master': orderOverview,\n                        'ug': orderUndergraduate,\n                        'pg': orderPostgraduate\n                    };\n                    if (angular.isDefined(items[key]._id)) {\n                        items[key].id = items[key]._id;\n                    }\n                    delete items[key].assignedTo;\n                    delete items[key]._id;\n                });\n            }\n\n            TuProfileFactory.setMediaVideos(items);\n            service.videoItems = items;\n        };\n\n        /**\n         * Get video items.\n         *\n         * @returns {*}\n         */\n        service.getVideoItems = function () {\n            return service.videoItems;\n        };\n\n        /**\n         * Get video item.\n         */\n        service.getItemVideo = function () {\n            var orderTypes = {};\n            orderTypes[TuMediaService.typeOverview()] = 0;\n            orderTypes[TuMediaService.typeUndergraduate()] = 0;\n            orderTypes[TuMediaService.typePostgraduate()] = 0;\n            return {\n                'id': '',\n                'name': '',\n                'description': '',\n                'master': true,\n                'ug': true,\n                'pg': true,\n                'orderType': orderTypes,\n                'url': '',\n                'imageUrl': null\n            };\n        };\n\n        /**\n         * Reset video item.\n         *\n         * @param item\n         * @returns {*}\n         */\n        service.resetItem = function (item) {\n            item.master = true;\n            item.ug = true;\n            item.pg = true;\n            item.url = '';\n            item.name = '';\n            item.imageUrl = null;\n\n            return item;\n        };\n\n        /**\n         * Format videos.\n         *\n         * @param videos\n         * @returns {*}\n         */\n        service.formatVideos = function (videos) {\n            angular.forEach(videos, function (value, key) {\n                videos[key] = service.formatVideo(value);\n            });\n\n            return videos;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} video\n         * @returns {Object}\n         */\n        service.formatVideo = function (video) {\n            video.assignedTo = [];\n            if (video.master) {\n                video.assignedTo.push('master');\n            }\n            if (video.ug) {\n                video.assignedTo.push('ug');\n            }\n            if (video.pg) {\n                video.assignedTo.push('pg');\n            }\n            // remove data we don't want to send.\n            if (angular.isDefined(video.id) && parseInt(video.id, 10) === 0) {\n                delete video.id;\n            }\n            delete video.master;\n            delete video.ug;\n            delete video.pg;\n            delete video.order;\n\n            return video;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function (isHighlighted) {\n            service.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function () {\n            return service.isHighlighted;\n        };\n\n        service.coreId = function (coreId) {\n            service.coreId = coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function (type) {\n            service.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function () {\n            return service.type;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuMediaVideosService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TuMediaService',\n            'TuProfileFactory',\n            App.services.TuMediaVideosService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmMediaVideosService = function($resource, $q, $log, constants, TuMediaService) {\n        var service = {\n            triggerChange: null,\n            selectedVideo: null\n        };\n\n        service.getVideoModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/video/:videoId', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getVideosOrderingModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/videosOrder', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Save Video\n         *\n         * @param institutionId\n         * @param video\n         * @returns {*}\n         */\n        service.saveVideo = function(institutionId, video) {\n            var videoModel = service.getVideoModel(),\n                videoSubmit = service.formatVideo(video);\n            if (angular.isDefined(videoSubmit.id) && videoSubmit.id.length > 0) {\n                // update video\n                return videoModel.update({ id: institutionId, videoId: video.id }, {\n                    url: videoSubmit.url,\n                    orderType: videoSubmit.orderType,\n                    assignedTo: videoSubmit.assignedTo\n                }).$promise.then(function(data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return true;\n                }, function(error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else {\n                // create new video\n                return videoModel.save({ id: institutionId, videoId: videoSubmit.id }, {\n                    url: videoSubmit.url,\n                    orderType: videoSubmit.orderType,\n                    assignedTo: videoSubmit.assignedTo\n                }).$promise.then(function(data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.insertedId;\n                }, function(error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        /**\n         * Save video order.\n         *\n         * @param {string} id - Institution TU profile mongo ID\n         * @param {Object} videos\n         * @returns {Promise}\n         */\n        service.saveOrder = function(id, videos) {\n            var institutionModel = service.getVideosOrderingModel();\n            return institutionModel.update({ id: id }, {\n                'videos': service.formatForOrdering(videos)\n            }).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.formatForOrdering = function(items) {\n            var formattedItems = [];\n            angular.forEach(items, function(item) {\n                formattedItems.push({\n                    'id': item.id,\n                    'orderType': item.orderType\n                });\n            });\n\n            return formattedItems;\n        };\n\n        /**\n         * Delete video.\n         *\n         * @param institutionId\n         * @param video\n         * @returns {*}\n         */\n        service.deleteVideo = function(institutionId, video) {\n            service.setHasErrors(false);\n            var videoModel = service.getVideoModel();\n            return videoModel.delete({ id: institutionId, videoId: video.id }).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set selected video.\n         *\n         * @param {Object} item\n         */\n        service.setSelectedVideo = function(item) {\n            service.selectedVideo = item;\n        };\n\n        /**\n         * Get selected video\n         *\n         * @returns {Obejct|null}\n         */\n        service.getSelectedVideo = function() {\n            return service.selectedVideo;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param {float} triggerChange\n         */\n        service.setTriggerChange = function(triggerChange) {\n            service.triggerChange = parseFloat(triggerChange);\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerChange = function() {\n            return service.triggerChange;\n        };\n\n        /**\n         * Set video items.\n         *\n         * @param items\n         * @param transform\n         */\n        service.setVideoItems = function(items, transform) {\n            if (!angular.isDefined(transform)) {\n                transform = true;\n            }\n            var typeUg = TuMediaService.typeUndergraduate(),\n                typePg = TuMediaService.typePostgraduate(),\n                typeMaster = TuMediaService.typeOverview();\n            if (transform) {\n                angular.forEach(items, function(value, key) {\n                    items[key][typeMaster] = true;\n                    // items[key][typeUg] = false;\n                    // items[key][typePg] = false;\n                    angular.forEach(items[key].assignedTo, function(aValue) {\n                        if (aValue === typeMaster) {\n                            items[key][typeMaster] = true;\n                        }\n                    });\n                    /**\n                     * Set initial order\n                     * @type {{master: number, ug: number, pg: number}}\n                     */\n                    if (items[key].orderType === null) {\n                        items[key].orderType = {\n                            'master': 0,\n                            'ug': 0,\n                            'pg': 0\n                        };\n                    }\n                    var orderOverview = 0;\n                    var orderUndergraduate = 0;\n                    var orderPostgraduate = 0;\n                    if (angular.isDefined(items[key].orderType)) {\n                        if (angular.isDefined(items[key].orderType[typeMaster])) {\n                            orderOverview = items[key].orderType[typeMaster];\n                        }\n                        if (angular.isDefined(items[key].orderType[typeUg])) {\n                            orderUndergraduate = items[key].orderType[typeUg];\n                        }\n                        if (angular.isDefined(items[key].orderType[typePg])) {\n                            orderPostgraduate = items[key].orderType[typePg];\n                        }\n                    }\n                    items[key].orderType = {\n                        'master': orderOverview,\n                        'ug': orderUndergraduate,\n                        'pg': orderPostgraduate\n                    };\n                    if (angular.isDefined(items[key]._id)) {\n                        items[key].id = items[key]._id;\n                    }\n                    delete items[key].assignedTo;\n                    delete items[key]._id;\n                });\n            }\n\n            service.videoItems = items;\n        };\n\n        /**\n         * Get video items.\n         *\n         * @returns {*}\n         */\n\n        service.getVideoItems = function() {\n            return service.videoItems;\n        };\n\n        /**\n         * Get video item.\n         */\n        service.getItemVideo = function() {\n            var orderTypes = {};\n            orderTypes[TuMediaService.typeOverview()] = 0;\n            orderTypes[TuMediaService.typeUndergraduate()] = 0;\n            orderTypes[TuMediaService.typePostgraduate()] = 0;\n            return {\n                'id': '',\n                'name': '',\n                'description': '',\n                'master': true,\n                'ug': true,\n                'pg': true,\n                'orderType': orderTypes,\n                'url': '',\n                'imageUrl': null\n            };\n        };\n\n        /**\n         * Reset video item.\n         *\n         * @param item\n         * @returns {*}\n         */\n        service.resetItem = function(item) {\n            item.master = true;\n            item.ug = true;\n            item.pg = true;\n            item.url = '';\n            item.name = '';\n            item.imageUrl = null;\n\n            return item;\n        };\n\n        /**\n         * Format videos.\n         *\n         * @param videos\n         * @returns {*}\n         */\n        service.formatVideos = function(videos) {\n            angular.forEach(videos, function(value, key) {\n                videos[key] = service.formatVideo(value);\n            });\n\n            return videos;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} video\n         * @returns {Object}\n         */\n        service.formatVideo = function(video) {\n            video.assignedTo = [];\n            if (video.master) {\n                video.assignedTo.push('master');\n            }\n            if (video.ug) {\n                video.assignedTo.push('ug');\n            }\n            if (video.pg) {\n                video.assignedTo.push('pg');\n            }\n            // remove data we don't want to send.\n            if (angular.isDefined(video.id) && parseInt(video.id, 10) === 0) {\n                delete video.id;\n            }\n            delete video.master;\n            delete video.ug;\n            delete video.pg;\n            delete video.order;\n\n            return video;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function(hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function() {\n            return service.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function(isHighlighted) {\n            service.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function() {\n            return service.isHighlighted;\n        };\n\n        service.setCoreId = function(coreId) {\n            service.coreId = coreId;\n        };\n\n        service.getCoreId = function() {\n            return service.coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function(type) {\n            service.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function() {\n            return service.type;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmMediaVideosService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TuMediaService',\n            App.services.TmMediaVideosService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaVideos = function(\n        $scope,\n        constants,\n        TmProfileFactory,\n        NotifierFactory,\n        TmMediaVideosService,\n        TmMediaService,\n        ModalService,\n        $filter,\n        orderBy,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TmMediaVideosService.coreId = 0;\n        $scope.videoItems = [];\n        $scope.itemVideo = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = TmMediaService.typeOverview();\n\n        TmMediaVideosService.setType(TmMediaService.typeOverview());\n        TmMediaVideosService.setSelectedVideo(TmMediaVideosService.getItemVideo());\n        WatchService.create($scope, TmProfileFactory.getData, function(newValue) {\n            if (newValue !== null) {\n                angular.copy(newValue.videos, $scope.videoItems);\n                TmMediaVideosService.coreId = newValue.id;\n                TmMediaVideosService.setVideoItems($scope.videoItems);\n                $scope.filteredVideoItems = $filter('filter')($scope.videoItems, { master: true });\n                $scope.filteredVideoItems = orderBy($scope.filteredVideoItems, 'orderType.' + $scope.type, false);\n            }\n        });\n\n\n        WatchService.create($scope, TmMediaVideosService.getVideoItems, function(newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.videoItems = newValue;\n            }\n        });\n\n        WatchService.create($scope, TmMediaVideosService.getTriggerChange, function() {\n            var selectedVideo = TmMediaVideosService.getSelectedVideo();\n            if (\n                ($scope.type === 'ug' && selectedVideo.ug) ||\n                (!selectedVideo.master && selectedVideo.ug && !selectedVideo.pg) ||\n                (!selectedVideo.master && selectedVideo.ug && selectedVideo.pg && ($scope.type === 'ug' || $scope.type === 'master'))\n            ) {\n                $scope.filter('ug');\n            } else if (($scope.type === 'pg' && selectedVideo.pg) || (!selectedVideo.master && !selectedVideo.ug && selectedVideo.pg)) {\n                $scope.filter('pg');\n            } else {\n                $scope.filter('master');\n            }\n            angular.forEach($scope.videoItems, function(value, key) {\n                if (selectedVideo.id === value.id) {\n                    $scope.videoItems[key] = selectedVideo;\n                }\n            });\n            $scope.filter($scope.type, true);\n        });\n\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            start: function() {\n                controller.initialList = [];\n                angular.copy($scope.filteredVideoItems, controller.initialList);\n            },\n            update: function(e, ui) {\n                var validateItems = TmMediaService.validateTypes($scope.videoItems);\n                if (true !== validateItems) {\n                    ui.item.sortable.cancel();\n                }\n            },\n            stop: function() {\n                var validateItems = TmMediaService.validateTypes($scope.videoItems);\n                if (true === validateItems) {\n                    var assignedOrder = 1;\n                    // change videos order\n                    for (var index = 0; index < $scope.filteredVideoItems.length; index++) {\n                        if ($scope.filteredVideoItems[index][$scope.type]) {\n                            $scope.filteredVideoItems[index].orderType[$scope.type] = assignedOrder;\n                            assignedOrder++;\n                        }\n                    }\n\n                    $scope.sortableOptions.disabled = false;\n                    TmMediaVideosService.saveOrder(TmMediaVideosService.coreId, $scope.videoItems)\n                        .then(function(success) {\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Success!' : 'Failure!',\n                                'Video Order Save'\n                            );\n                            TmMediaVideosService.setSelectedVideo(TmMediaVideosService.getItemVideo());\n                        })\n                        .finally(function() {\n                            $scope.sortableOptions.disabled = false;\n                        });\n                } else {\n                    NotifierFactory.show(\n                        'error',\n                        'Failure!',\n                        'Invalid items in video list'\n                    );\n                    TmMediaVideosService.setSelectedVideo(validateItems);\n                    TmMediaVideosService.displayTypesValid = true;\n\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Filter change.\n         *\n         * @param type\n         */\n        $scope.filter = function(type) {\n            var validateItems = TmMediaService.validateTypes($scope.videoItems);\n            if (true === validateItems) {\n                $scope.type = type;\n                var params = {};\n                params[type] = true;\n                $scope.filteredVideoItems = $filter('filter')($scope.videoItems, params);\n                $scope.filteredVideoItems = orderBy($scope.filteredVideoItems, 'orderType.' + type, false);\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in video list'\n                );\n                TmMediaVideosService.setSelectedVideo(validateItems);\n                TmMediaVideosService.displayTypesValid = true;\n\n                return false;\n            }\n        };\n\n        /**\n         * Select video.\n         *\n         * @param {Object} item\n         */\n        $scope.selectVideo = function(item) {\n            item = angular.copy(item);\n            // var validateItems = TmMediaService.validateTypes($scope.videoItems);\n            TmMediaVideosService.setHasErrors(false);\n            $scope.itemVideo = TmMediaVideosService.getItemVideo();\n            if (angular.isDefined(item)) {\n                TmMediaVideosService.setSelectedVideo(item);\n            } else {\n                TmMediaVideosService.setHasErrors(false);\n                TmMediaVideosService.setHighlighted(true);\n                TmMediaVideosService.setSelectedVideo($scope.itemVideo);\n            }\n            // if (true === validateItems) {\n            //     TmMediaVideosService.setHasErrors(false);\n            //     TmMediaVideosService.displayTypesValid = false;\n            //     $scope.itemVideo = TmMediaVideosService.getItemVideo();\n            //     if (angular.isDefined(item)) {\n            //         TmMediaVideosService.setSelectedVideo(item);\n            //     } else {\n            //         TmMediaVideosService.setHasErrors(false);\n            //         TmMediaVideosService.setHighlighted(true);\n            //         TmMediaVideosService.setSelectedVideo($scope.itemVideo);\n            //     }\n            // } else {\n            //     NotifierFactory.show(\n            //         'error',\n            //         'Failure!',\n            //         'Invalid items in video list'\n            //     );\n            //     TmMediaVideosService.setSelectedVideo(validateItems);\n            //     TmMediaVideosService.displayTypesValid = true;\n\n            //     return false;\n            // }\n        };\n\n        $scope.selectedItem = function() {\n            return TmMediaVideosService.getSelectedVideo();\n        };\n\n        /**\n         * Delete video.\n         *\n         * @param item\n         */\n        $scope.deleteVideo = function(item) {\n            var itemName = angular.isDefined(item.name) && item.name !== null ? ': ' + item.name : '';\n            var modalOptions = {\n                closeButtonText: 'No',\n                actionButtonText: 'Yes',\n                headerText: 'Delete Video' + itemName + ' ?',\n                bodyText: 'Are you sure you wish to delete this video?',\n            };\n            ModalService.show({}, modalOptions).then(function(result) {\n                TmMediaVideosService.deleteVideo(TmMediaVideosService.coreId, item)\n                    .then(function(success) {\n                        $scope.submitInProgress = false;\n                        NotifierFactory.show(\n                            success ? 'success' : 'error',\n                            success ? 'Success!' : 'Failure!',\n                            'Delete Video'\n                        );\n                        if (success) {\n                            TmMediaVideosService.setSelectedVideo(TmMediaVideosService.getItemVideo());\n                            $scope.videoItems.splice(TmMediaService.objectSearch($scope.videoItems, item.id), 1);\n                            $scope.filteredVideoItems.splice(TmMediaService.objectSearch($scope.filteredVideoItems, item.id), 1);\n\n\n                            var assignedOrder = 1;\n                            for (var index = 0; index < $scope.filteredVideoItems.length; index++) {\n                                if ($scope.filteredVideoItems[index][$scope.type]) {\n                                    $scope.filteredVideoItems[index].orderType[$scope.type] = assignedOrder;\n                                    assignedOrder++;\n                                }\n                            }\n                            $scope.filteredVideoItems = orderBy($scope.filteredVideoItems, 'orderType.' + $scope.type, false);\n                        }\n                    });\n            });\n        };\n\n        $scope.typeOverview = function() {\n            return TmMediaService.typeOverview();\n        };\n\n        $scope.typeUndergraduate = function() {\n            return TmMediaService.typeUndergraduate();\n        };\n\n        $scope.typePostgraduate = function() {\n            return TmMediaService.typePostgraduate();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaVideosController', [\n            '$scope',\n            'constants',\n            'TmProfileFactory',\n            'NotifierFactory',\n            'TmMediaVideosService',\n            'TmMediaService',\n            'ModalService',\n            '$filter',\n            'orderByFilter',\n            'WatchService',\n            App.controllers.TmMediaVideos\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaVideosSidebar = function(\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TmProfileFactory,\n        TmMediaVideosService,\n        TmMediaService,\n        WebSocketsService,\n        UrlService,\n        WatchService,\n        ObjectService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        $scope.hasErrors = true;\n        TmMediaVideosService.displayTypesValid = false;\n        TmMediaVideosService.setHasErrors(false);\n        $scope.youtubeUrlPattern = UrlService.getYoutubePattern();\n\n        controller.onKeyUp = function ($event) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value,\n                variableName = $event.target.getAttribute('ng-model');\n\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                if (variableName) {\n                    ObjectService.set($scope, variableName, url);\n                }\n            }\n        };\n\n        /**\n         * Save form.\n         *\n         * @param item\n         * @returns {boolean}\n         */\n        $scope.saveVideoForm = function(item) {\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                $scope.setHasErrors(true);\n            }\n            if (!TmMediaService.isValidType(item)) {\n                TmMediaVideosService.displayTypesValid = true;\n            }\n            if (TmMediaVideosService.displayTypesValid || $scope.getHasErrors()) {\n                return false;\n            }\n\n            if (!$scope.forms.formVideo ||\n                !$scope.forms.formVideo.$valid\n            ) {\n                TmMediaVideosService.setHasErrors(true);\n                return false;\n            }\n            var videoItem = angular.copy(item);\n            TmMediaVideosService.displayTypesValid = false;\n            TmMediaVideosService.setHasErrors(false);\n            var actionName = 'Added';\n            if (videoItem.id.length > 0) {\n                actionName = 'Updated';\n            }\n            if ($scope.submitInProgress || !$scope.forms.formVideo || !$scope.forms.formVideo.$valid) {\n                NotifierFactory.show(\n                    'error',\n                    'Error: Please fill in all required fields',\n                    actionName + ' Video'\n                );\n\n                return false;\n            }\n            $scope.submitInProgress = true;\n\n            // start listening (open a room) to youtube video details changes\n            var youtubeId = UrlService.extractYoutubeIdFromUrl(item.url);\n            WebSocketsService.subscribe(youtubeId, 'VideoDetails' + youtubeId, function (response) {\n                item.name = response && response.name || null;\n                item.imageUrl = response && response.imageUrl || null;\n                // mark as selected on the left side\n                $scope.selectedVideo = angular.copy(TmMediaVideosService.getSelectedVideo());\n            });\n\n            TmMediaVideosService.saveVideo(TmMediaVideosService.getCoreId(), videoItem)\n                .then(function(success) {\n                    $scope.submitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        'Video ' + actionName\n                    );\n                    if (success) {\n                        if (videoItem.id.length === 0) {\n                            item.id = success;\n                            // add to the list\n                            TmMediaVideosService.getVideoItems().unshift(item);\n                            // mark as selected list\n                            TmMediaVideosService.setSelectedVideo(item);\n                            // mark as selected on the left side\n                            $scope.selectedVideo = angular.copy(TmMediaVideosService.getSelectedVideo());\n                        }\n                        // mark as selected list\n                        TmMediaVideosService.setSelectedVideo(item);\n                        TmMediaVideosService.setHasErrors(false);\n                    }\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TmMediaVideosService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * Clear item.\n         *\n         * @param item\n         */\n        $scope.clearVideoForm = function(item) {\n            if (angular.isDefined(item)) {\n                $scope.itemVideo = item;\n            } else {\n                $scope.itemVideo = TmMediaVideosService.getItemVideo();\n            }\n\n            $scope.itemVideo = TmMediaVideosService.resetItem($scope.itemVideo);\n            TmMediaVideosService.setSelectedVideo($scope.itemVideo);\n            $scope.setDisplayTypesValidation(false);\n            $scope.setHasErrors(false);\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedVideo = function() {\n            return TmMediaVideosService.getSelectedVideo();\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function() {\n            return $scope.selectedVideo && $scope.selectedVideo.id ? true : false;\n        };\n\n        /**\n         * Get video items.\n         *\n         * @returns {*}\n         */\n        $scope.getVideoItems = function() {\n            return TmMediaVideosService.getVideoItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        $scope.getHasErrors = function() {\n            return TmMediaVideosService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function(value) {\n            TmMediaVideosService.setHasErrors(value);\n        };\n\n        $scope.type = function() {\n            return TmMediaVideosService.getType();\n        };\n\n        $scope.setDisplayTypesValidation = function(value) {\n            TmMediaVideosService.displayTypesValid = value;\n        };\n\n        $scope.getDisplayTypesValidation = function() {\n            return TmMediaVideosService.displayTypesValid;\n        };\n\n        controller.initWatches = function() {\n            WatchService.create($scope, TmMediaVideosService.getSelectedVideo, function(selectedVideo) {\n                $scope.selectedVideo = selectedVideo;\n            });\n\n            WatchService.create($scope, TmMediaVideosService.getHasErrors, function(newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.hasErrors = newValue;\n                }\n            });\n\n            WatchService.create($scope, TmMediaVideosService.getHighlighted, function(newValue) {\n                if (newValue) {\n                    $scope.isHighlighted = newValue;\n                    $timeout(function() {\n                        TmMediaVideosService.setHighlighted(false);\n                        $scope.isHighlighted = false;\n                    }, 200);\n                }\n            });\n\n            WatchService.create($scope, TmProfileFactory.getSelectedMediaSubTabId, function(tabId) {\n                if (tabId === 2) {\n                    $timeout(function() {\n                        TmMediaVideosService.setHighlighted(true);\n                    }, 200);\n                } else {\n                    delete TmMediaVideosService.displayTypesValid;\n                    $scope.setHasErrors(false);\n                }\n            });\n        };\n\n        controller.init = function() {\n            controller.initWatches();\n        };\n\n        // listen to videos tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isMediaTabSelected,function(isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaVideosSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'TmMediaVideosService',\n            'TmMediaService',\n            'WebSocketsService',\n            'UrlService',\n            'WatchService',\n            'ObjectService',\n            App.controllers.TmMediaVideosSidebar\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers: {}});\n\n    App.controllers.TuMediaBrochures = function (\n        $scope,\n        constants,\n        TuProfileFactory,\n        NotifierFactory,\n        TuMediaBrochuresService,\n        TuMediaService,\n        ModalService,\n        $filter,\n        orderBy,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TuMediaBrochuresService.coreId = 0;\n        $scope.brochureItems = [];\n        $scope.itemBrochure = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = TuMediaService.typeOverview();\n\n        TuMediaBrochuresService.setType(TuMediaService.typeOverview());\n\n        WatchService.create($scope, function () {\n            return TuProfileFactory.getData();\n        }, function (newValue) {\n            TuMediaBrochuresService.setSelectedBrochure(TuMediaBrochuresService.getItemBrochure());\n\n            if (newValue && typeof newValue.brochures !== 'undefined') {\n                angular.copy(newValue.brochures, $scope.brochureItems);\n            } else {\n                $scope.brochureItems = [];\n            }\n            if (newValue !== null) {\n                TuMediaBrochuresService.coreId = newValue.id;\n                TuMediaBrochuresService.setBrochureItems($scope.brochureItems);\n                $scope.filteredBrochureItems = $filter('filter')($scope.brochureItems, {master: true});\n                $scope.filteredBrochureItems = orderBy($scope.filteredBrochureItems, 'orderType.' + $scope.type, false);}\n            }\n        );\n\n        WatchService.create($scope, TuMediaBrochuresService.getBrochureItems(), function (newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.brochureItems = newValue;\n\n            }\n        });\n\n        WatchService.create($scope, TuMediaBrochuresService.getTriggerChange, function () {\n            if (angular.isDefined($scope.selectedItemId()) && $scope.selectedItemId().length > 0) {\n                TuMediaBrochuresService.replaceByKey($scope.selectedItemId());\n            }\n            var selectedBrochure = TuMediaBrochuresService.getSelectedBrochure();\n            if (\n                ($scope.type === 'ug' && selectedBrochure.ug) || \n                (!selectedBrochure.master && selectedBrochure.ug && !selectedBrochure.pg) || \n                (!selectedBrochure.master && selectedBrochure.ug && selectedBrochure.pg && ($scope.type === 'ug' || $scope.type === 'master'))\n            ) {\n                $scope.filter('ug');\n            } else if (($scope.type === 'pg' && selectedBrochure.pg) || (!selectedBrochure.master && !selectedBrochure.ug && selectedBrochure.pg)) {\n                $scope.filter('pg');\n            } else {\n                $scope.filter('master');\n            }\n        });\n\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            start: function () {\n                controller.initialList = [];\n                angular.copy($scope.filteredBrochureItems, controller.initialList);\n            },\n            update: function (e, ui) {\n                var validateItems = TuMediaService.validateTypes($scope.brochureItems);\n                if (true !== validateItems) {\n                    ui.item.sortable.cancel();\n                }\n            },\n            stop: function () {\n                var validateItems = TuMediaService.validateTypes($scope.brochureItems);\n                if (true === validateItems) {\n                    var assignedOrder = 1;\n                    // change brochures order\n                    for (var index = 0; index < $scope.filteredBrochureItems.length; index++) {\n                        if ($scope.filteredBrochureItems[index][$scope.type]) {\n                            $scope.filteredBrochureItems[index].orderType[$scope.type] = assignedOrder;\n                            assignedOrder++;\n                        }\n                    }\n\n                    $scope.sortableOptions.disabled = false;\n                    TuMediaBrochuresService.saveOrder(TuMediaBrochuresService.coreId, $scope.brochureItems)\n                        .then(function (success) {\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Success!' : 'Failure!',\n                                'Brochure Order Save'\n                            );\n                            TuMediaBrochuresService.setSelectedBrochure(TuMediaBrochuresService.getItemBrochure());\n                        })\n                        .finally(function () {\n                            $scope.sortableOptions.disabled = false;\n                        });\n                } else {\n                    NotifierFactory.show(\n                        'error',\n                        'Failure!',\n                        'Invalid items in brochure list'\n                    );\n                    TuMediaBrochuresService.setSelectedBrochure(validateItems);\n                    TuMediaBrochuresService.displayTypesValid = true;\n\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Filter change.\n         *\n         * @param type\n         */\n        $scope.filter = function (type) {\n            var validateItems = TuMediaService.validateTypes($scope.brochureItems);\n            if (true === validateItems) {\n                $scope.type = type;\n                var params = {};\n                params[type] = true;\n                $scope.filteredBrochureItems = $filter('filter')($scope.brochureItems, params);\n                $scope.filteredBrochureItems = orderBy($scope.filteredBrochureItems, 'orderType.' + type, false);\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in brochure list'\n                );\n                TuMediaBrochuresService.setSelectedBrochure(validateItems);\n                TuMediaBrochuresService.displayTypesValid = true;\n\n                return false;\n            }\n        };\n\n        /**\n         * Select brochure.\n         *\n         * @param {Object} item\n         */\n        $scope.selectBrochure = function (item) {\n            item = angular.copy(item);\n            var validateItems = TuMediaService.validateTypes($scope.brochureItems);\n            if (true === validateItems) {\n                TuMediaBrochuresService.setHasErrors(false);\n                TuMediaBrochuresService.displayTypesValid = false;\n                $scope.itemBrochure = TuMediaBrochuresService.getItemBrochure();\n                if (angular.isDefined(item)) {\n                    TuMediaBrochuresService.setSelectedBrochure(item);\n                } else {\n                    TuMediaBrochuresService.setHasErrors(false);\n                    TuMediaBrochuresService.setHighlighted(true);\n                    TuMediaBrochuresService.setSelectedBrochure($scope.itemBrochure);\n                }\n                TuMediaBrochuresService.setTriggerReset(Math.random());\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in brochure list'\n                );\n                TuMediaBrochuresService.setSelectedBrochure(validateItems);\n                TuMediaBrochuresService.displayTypesValid = true;\n\n                return false;\n            }\n        };\n\n        $scope.selectedItem = function () {\n            return TuMediaBrochuresService.getSelectedBrochure();\n        };\n\n        $scope.selectedItemId = function () {\n            return TuMediaBrochuresService.getSelectedBrochure().id;\n        };\n\n        /**\n         * Delete brochure.\n         *\n         * @param item\n         */\n        $scope.deleteBrochure = function (item) {\n            var itemName = angular.isDefined(item.name) && item.name !== null ? ': ' + item.name : '';\n            var modalOptions = {\n                closeButtonText: 'No',\n                actionButtonText: 'Yes',\n                headerText: 'Delete Brochure' + itemName + ' ?',\n                bodyText: 'Are you sure you wish to delete this brochure?',\n            };\n            ModalService.show({}, modalOptions).then(function (result) {\n                TuMediaBrochuresService.deleteBrochure(TuMediaBrochuresService.coreId, item)\n                    .then(function (success) {\n                        $scope.submitInProgress = false;\n                        NotifierFactory.show(\n                            success ? 'success' : 'error',\n                            success ? 'Success!' : 'Failure!',\n                            'Delete Brochure'\n                        );\n                        if (success) {\n                            TuMediaBrochuresService.setSelectedBrochure(TuMediaBrochuresService.getItemBrochure());\n                            $scope.brochureItems.splice(TuMediaService.objectSearch($scope.brochureItems, item.id), 1);\n                            $scope.filteredBrochureItems.splice(TuMediaService.objectSearch($scope.filteredBrochureItems, item.id), 1);\n\n\n                            var assignedOrder = 1;\n                            for (var index = 0; index < $scope.filteredBrochureItems.length; index++) {\n                                if ($scope.filteredBrochureItems[index][$scope.type]) {\n                                    $scope.filteredBrochureItems[index].orderType[$scope.type] = assignedOrder;\n                                    assignedOrder++;\n                                }\n                            }\n                            $scope.filteredBrochureItems = orderBy($scope.filteredBrochureItems, 'orderType.' + $scope.type, false);\n                        }\n                    });\n            });\n        };\n\n        $scope.typeOverview = function () {\n            return TuMediaService.typeOverview();\n        };\n\n        $scope.typeUndergraduate = function () {\n            return TuMediaService.typeUndergraduate();\n        };\n\n        $scope.typePostgraduate = function () {\n            return TuMediaService.typePostgraduate();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaBrochuresController', [\n            '$scope',\n            'constants',\n            'TuProfileFactory',\n            'NotifierFactory',\n            'TuMediaBrochuresService',\n            'TuMediaService',\n            'ModalService',\n            '$filter',\n            'orderByFilter',\n            'WatchService',\n            App.controllers.TuMediaBrochures\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TuMediaBrochuresSidebar = function (\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        TuMediaBrochuresService,\n        TuMediaService,\n        WatchService,\n        UrlService,\n        ObjectService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        $scope.hasErrors = true;\n        TuMediaBrochuresService.displayTypesValid = false;\n        TuMediaBrochuresService.setHasErrors(false);\n\n        controller.onKeyUp = function ($event) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value,\n                variableName = $event.target.getAttribute('ng-model');\n\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                if (variableName) {\n                    ObjectService.set($scope, variableName, url);\n                }\n            }\n        };\n\n        controller.urlPattern = UrlService.getPattern();\n\n        /**\n         * Save form.\n         *\n         * @param item\n         * @returns {boolean}\n         */\n        $scope.saveBrochureForm = function (item) {\n            var brochureItem = angular.copy(item);\n            TuMediaBrochuresService.displayTypesValid = false;\n            TuMediaBrochuresService.setHasErrors(false);\n            $scope.isInvalidTitle = false;\n            $scope.isInvalidUrl = false;\n            var actionName = 'Added';\n            if (brochureItem.id.length > 0) {\n                actionName = 'Updated';\n            }\n            if (!TuMediaService.isValidType(item)) {\n                TuMediaBrochuresService.displayTypesValid = true;\n            }\n            if (!angular.isDefined(item.name) || !(angular.isDefined(item.name) && item.name.length > 0)) {\n                $scope.isInvalidTitle = true;\n            }\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                $scope.isInvalidUrl = true;\n            }\n            if ($scope.isInvalidTitle || $scope.isInvalidUrl || TuMediaBrochuresService.displayTypesValid) {\n                $scope.setHasErrors(true);\n                return false;\n            }\n            if (!(item.url.match(controller.urlPattern))) {\n                $scope.isInvalidUrl = true;\n                $scope.setHasErrors(true);\n                return false;\n            }\n            if ($scope.submitInProgress || !$scope.forms.formBrochure || !$scope.forms.formBrochure.$valid\n            ) {\n                NotifierFactory.show(\n                    'error',\n                    'Error: Please fill in all required fields',\n                    actionName + ' Brochure'\n                );\n\n                return false;\n            }\n            $scope.submitInProgress = true;\n            TuMediaBrochuresService.saveBrochure(TuMediaBrochuresService.coreId, brochureItem)\n                .then(function (success) {\n                    $scope.submitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        'Brochure ' + actionName\n                    );\n                    if (success) {\n                        if (brochureItem.id.length === 0) {\n                            item.id = success;\n                            TuMediaBrochuresService.getBrochureItems().unshift(item);\n                            TuMediaBrochuresService.setSelectedBrochure(item);\n                            $scope.selectedBrochure = angular.copy(TuMediaBrochuresService.getSelectedBrochure());\n                        }\n\n                        TuMediaBrochuresService.setSelectedBrochure(item);\n                        TuMediaBrochuresService.setHasErrors(false);\n                        $scope.selectedBrochureBeforeChanges = item;\n                    }\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TuMediaBrochuresService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * Clear item.\n         *\n         * @param item\n         */\n        $scope.clearBrochureForm = function (item) {\n            if (angular.isDefined(item)) {\n                $scope.itemBrochure = item;\n            } else {\n                $scope.itemBrochure = TuMediaBrochuresService.getItemBrochure();\n            }\n\n            $scope.itemBrochure = TuMediaBrochuresService.resetItem($scope.itemBrochure);\n            $scope.setDisplayTypesValidation(false);\n            delete $scope.isInvalidTitle;\n            delete $scope.isInvalidUrl;\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedBrochure = function () {\n            return TuMediaBrochuresService.getSelectedBrochure();\n        };\n\n        /**\n         * Get brochure items.\n         *\n         * @returns {*}\n         */\n        $scope.getBrochureItems = function () {\n            return TuMediaBrochuresService.getBrochureItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        $scope.getHasErrors = function () {\n            return TuMediaBrochuresService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function (value) {\n            TuMediaBrochuresService.setHasErrors(value);\n        };\n\n        $scope.setIsInvalidTitle = function (value) {\n            $scope.isInvalidTitle = value;\n        };\n\n        $scope.setIsInvalidUrl = function (value) {\n            $scope.isInvalidUrl = value;\n        };\n\n        $scope.type = function () {\n            return TuMediaBrochuresService.getType();\n        };\n\n        $scope.setDisplayTypesValidation = function (value) {\n            TuMediaBrochuresService.displayTypesValid = value;\n        };\n\n        $scope.getDisplayTypesValidation = function () {\n            return TuMediaBrochuresService.displayTypesValid;\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function () {\n            return $scope.selectedBrochure && $scope.selectedBrochure.id ? true : false;\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, TuMediaBrochuresService.getSelectedBrochure, function (selectedBrochure) {\n                $scope.isInvalidUrl = false;\n                $scope.isInvalidTitle = false;\n                $scope.selectedBrochureBeforeChanges = angular.copy(selectedBrochure);\n                $scope.selectedBrochure = selectedBrochure;\n            });\n\n            WatchService.create($scope, TuMediaBrochuresService.getHasErrors, function (newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.hasErrors = newValue;\n                }\n            });\n\n            WatchService.create($scope, TuMediaBrochuresService.getTriggerReset, function (newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.selectedBrochure = angular.copy($scope.selectedBrochureBeforeChanges);\n                }\n            });\n\n            WatchService.create($scope, TuMediaBrochuresService.getHighlighted, function (newValue) {\n                if (newValue) {\n                    $scope.isHighlighted = newValue;\n                    $timeout(function () {\n                        TuMediaBrochuresService.setHighlighted(false);\n                        $scope.isHighlighted = false;\n                    }, 200);\n                }\n            });\n\n            WatchService.create($scope, TuProfileFactory.getSelectedMediaTabId, function (tabId) {\n                if (tabId === 4) {\n                    // restore data on tab type switch\n                    if (typeof $scope.selectedBrochureBeforeChanges !== 'undefined') {\n                        $scope.selectedBrochure = angular.copy($scope.selectedBrochureBeforeChanges);\n                    }\n                    $timeout(function () {\n                        TuMediaBrochuresService.setHighlighted(true);\n                    }, 200);\n                } else {\n                    delete $scope.isInvalidTitle;\n                    delete $scope.isInvalidUrl;\n                    delete TuMediaBrochuresService.displayTypesValid;\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isMediaTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaBrochuresSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'TuMediaBrochuresService',\n            'TuMediaService',\n            'WatchService',\n            'UrlService',\n            'ObjectService',\n            App.controllers.TuMediaBrochuresSidebar\n        ]);\n\n} (window.angular));\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services: {}});\n\n    App.services.TuMediaBrochuresService = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        TuMediaService,\n        TuMediaVideosService\n    ) {\n        var service = {\n            triggerChange: 0\n        };\n\n        service.getBrochureModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/brochure/:brochureId', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        service.getBrochuresOrderingModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/brochuresOrder', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        /**\n         * Save Brochure\n         *\n         * @param institutionId\n         * @param brochure\n         * @returns {*}\n         */\n        service.saveBrochure = function (institutionId, brochure) {\n            var brochureModel = service.getBrochureModel(),\n                brochureSubmit = service.formatBrochure(brochure);\n            if (angular.isDefined(brochureSubmit.id) && brochureSubmit.id.length > 0) {\n                // update brochure\n                return brochureModel.update(\n                    {id: institutionId, brochureId: brochure.id},\n                    {\n                        name: brochureSubmit.name,\n                        url: brochureSubmit.url,\n                        orderType: brochureSubmit.orderType,\n                        assignedTo: brochureSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return true;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else {\n                // create new brochure\n                return brochureModel.save(\n                    {id: institutionId, brochureId: brochureSubmit.id},\n                    {\n                        name: brochureSubmit.name,\n                        url: brochureSubmit.url,\n                        orderType: brochureSubmit.orderType,\n                        assignedTo: brochureSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.insertedId;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        /**\n         * Save brochure order.\n         *\n         * @param {string} id - Institution TU profile mongo ID\n         * @param {Object} brochures\n         * @returns {Promise}\n         */\n        service.saveOrder = function (id, brochures) {\n            var institutionModel = service.getBrochuresOrderingModel();\n\n            return institutionModel.update(\n                {id: id},\n                {'brochures': TuMediaVideosService.formatForOrdering(brochures)}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Delete brochure.\n         *\n         * @param institutionId\n         * @param brochure\n         * @returns {*}\n         */\n        service.deleteBrochure = function (institutionId, brochure) {\n            service.setHasErrors(false);\n            var brochureModel = service.getBrochureModel();\n            return brochureModel.delete(\n                {id: institutionId, brochureId: brochure.id}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set selected brochure.\n         *\n         * @param item\n         */\n        service.setSelectedBrochure = function (item) {\n            service.selectedBrochure = item;\n        };\n\n        service.replaceByKey = function (key) {\n            angular.forEach(service.getBrochureItems(), function(itemValue, itemKey) {\n                if(itemValue.id === key) {\n                    service.getBrochureItems()[itemKey] = service.getSelectedBrochure();\n                }\n            });\n        };\n\n        /**\n         * Get selected brochure\n         *\n         * @returns {*}\n         */\n        service.getSelectedBrochure = function () {\n            return service.selectedBrochure;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerChange = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerChange = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerReset = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerReset = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Set brochure items.\n         *\n         * @param items\n         * @param transform\n         */\n        service.setBrochureItems = function (items, transform) {\n            if (!angular.isDefined(transform)) {\n                transform = true;\n            }\n            if (transform) {\n                var typeMaster = TuMediaService.typeOverview(),\n                    typeUg = TuMediaService.typeUndergraduate(),\n                    typePg = TuMediaService.typePostgraduate();\n\n                angular.forEach(items, function (value, key) {\n                    items[key][typeMaster] = false;\n                    items[key][typeUg] = false;\n                    items[key][typePg] = false;\n                    angular.forEach(items[key].assignedTo, function (aValue) {\n                        if (aValue === typeMaster) {\n                            items[key][typeMaster] = true;\n                        } else if (aValue === typeUg) {\n                            items[key][typeUg] = true;\n                        } else if (aValue === typePg) {\n                            items[key][typePg] = true;\n                        }\n                    });\n                    /**\n                     * Set initial order\n                     * @type {{master: number, ug: number, pg: number}}\n                     */\n                    if (items[key].orderType === null) {\n                        items[key].orderType = {\n                            'master': 0,\n                            'ug': 0,\n                            'pg': 0\n                        };\n                    }\n                    var orderOverview = 0;\n                    var orderUndergraduate = 0;\n                    var orderPostgraduate = 0;\n                    if (angular.isDefined(items[key].orderType)) {\n                        if (angular.isDefined(items[key].orderType[typeMaster])) {\n                            orderOverview = items[key].orderType[typeMaster];\n                        }\n                        if (angular.isDefined(items[key].orderType[typeUg])) {\n                            orderUndergraduate = items[key].orderType[typeUg];\n                        }\n                        if (angular.isDefined(items[key].orderType[typePg])) {\n                            orderPostgraduate = items[key].orderType[typePg];\n                        }\n                    }\n                    items[key].orderType = {\n                        'master': orderOverview,\n                        'ug': orderUndergraduate,\n                        'pg': orderPostgraduate\n                    };\n                    if (angular.isDefined(items[key]._id)) {\n                        items[key].id = items[key]._id;\n                    }\n                    delete items[key].assignedTo;\n                    delete items[key]._id;\n                });\n            }\n\n            service.brochureItems = items;\n        };\n\n        /**\n         * Get brochure items.\n         *\n         * @returns {*}\n         */\n        service.getBrochureItems = function () {\n            return service.brochureItems;\n        };\n\n        /**\n         * Get brochure item.\n         */\n        service.getItemBrochure = function () {\n            var orderTypes = {};\n            orderTypes[TuMediaService.typeOverview()] = 0;\n            orderTypes[TuMediaService.typeUndergraduate()] = 0;\n            orderTypes[TuMediaService.typePostgraduate()] = 0;\n            return {\n                'id': '',\n                'name': '',\n                'description': '',\n                'master': true,\n                'ug': true,\n                'pg': true,\n                'orderType': orderTypes,\n                'url': '',\n                'imageUrl': null\n            };\n        };\n\n        /**\n         * Reset brochure item.\n         *\n         * @param item\n         * @returns {*}\n         */\n        service.resetItem = function (item) {\n            item.master = true;\n            item.ug = true;\n            item.pg = true;\n            item.url = '';\n            item.name = '';\n            item.imageUrl = null;\n\n            return item;\n        };\n\n        /**\n         * Format brochures.\n         *\n         * @param brochures\n         * @returns {*}\n         */\n        service.formatBrochures = function (brochures) {\n            angular.forEach(brochures, function (value, key) {\n                brochures[key] = service.formatBrochure(value);\n            });\n\n            return brochures;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} brochure\n         * @returns {Object}\n         */\n        service.formatBrochure = function (brochure) {\n            brochure.assignedTo = [];\n            if (brochure.master) {\n                brochure.assignedTo.push('master');\n            }\n            if (brochure.ug) {\n                brochure.assignedTo.push('ug');\n            }\n            if (brochure.pg) {\n                brochure.assignedTo.push('pg');\n            }\n            /**\n             * Remove data we don't want to send.\n             */\n            if (angular.isDefined(brochure.id) && parseInt(brochure.id, 10) === 0) {\n                delete brochure.id;\n            }\n            delete brochure.master;\n            delete brochure.ug;\n            delete brochure.pg;\n            delete brochure.order;\n\n            return brochure;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function (isHighlighted) {\n            service.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function () {\n            return service.isHighlighted;\n        };\n\n        service.coreId = function (coreId) {\n            service.coreId = coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function (type) {\n            service.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function () {\n            return service.type;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuMediaBrochuresService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TuMediaService',\n            'TuMediaVideosService',\n            App.services.TuMediaBrochuresService\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers: {}});\n\n    App.controllers.TuMediaSocialMedias = function (\n        $scope,\n        constants,\n        TuProfileFactory,\n        NotifierFactory,\n        TuMediaSocialMediasService,\n        TuMediaService,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TuMediaSocialMediasService.coreId = 0;\n        $scope.socialMediaItems = TuMediaSocialMediasService.socialMediaItems();\n        $scope.itemSocialMedia = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = $scope.socialMediaItems[0];\n\n        TuMediaSocialMediasService.setType($scope.type);\n        WatchService.create($scope, function () {\n            return TuProfileFactory.getData();\n        }, function (newValue) {\n            if (newValue !== null) {\n                TuMediaSocialMediasService.coreId = newValue.id;\n                $scope.socialMediaItems = TuMediaSocialMediasService.processInput(newValue.socialMedia);\n                TuMediaSocialMediasService.setSelectedSocialMedia(TuMediaSocialMediasService.flattenArray(newValue.socialMedia));\n            }\n        });\n\n        WatchService.create($scope, TuMediaSocialMediasService.getSocialMediaItems, function (newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.socialMediaItems = newValue;\n            }\n        });\n\n        WatchService.create($scope, TuMediaSocialMediasService.getChanges, function (newValue) {\n            if (angular.isDefined(newValue)) {\n                $scope.socialMediaItems[$scope.type] = TuMediaSocialMediasService.flattenArray(newValue, true);\n            }\n        });\n\n        /**\n         * Filter change.\n         *\n         * @param type\n         */\n        $scope.filter = function (type) {\n            return type;\n        };\n\n        /**\n         * Select social media.\n         *\n         * @param {string} type\n         */\n        $scope.selectSocialMedia = function (type) {\n            $scope.type = type;\n            TuMediaSocialMediasService.setType(type);\n            TuMediaSocialMediasService.setTriggerChange(Math.random()); // reset right column changes\n            if (!($scope.socialMediaItems[$scope.type].master || $scope.socialMediaItems[$scope.type].ug || $scope.socialMediaItems[$scope.type].pg)) {\n                TuMediaSocialMediasService.setHighlighted(true);\n            }\n        };\n\n        $scope.selectedItem = function () {\n            return TuMediaSocialMediasService.getSelectedSocialMedia();\n        };\n\n        $scope.typeOverview = function () {\n            return TuMediaService.typeOverview();\n        };\n\n        $scope.typeUndergraduate = function () {\n            return TuMediaService.typeUndergraduate();\n        };\n\n        $scope.typePostgraduate = function () {\n            return TuMediaService.typePostgraduate();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaSocialMediasController', [\n            '$scope',\n            'constants',\n            'TuProfileFactory',\n            'NotifierFactory',\n            'TuMediaSocialMediasService',\n            'TuMediaService',\n            'WatchService',\n            App.controllers.TuMediaSocialMedias\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TuMediaSocialMediasSidebar = function (\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        TuMediaSocialMediasService,\n        WatchService,\n        UrlService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        $scope.hasErrors = false;\n        $scope.invalidCheckboxes = [];\n        $scope.invalidFields = [];\n        TuMediaSocialMediasService.displayTypesValid = false;\n\n        controller.onKeyUp = function ($event, type, index) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n\n            var url = $event.target.value;\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                $scope.selectedSocialMedia[type][index].url = url;\n            }\n        };\n\n        /**\n         * Reset Invalid Url\n         *\n         * @params {Integer} index\n         */\n        $scope.resetInvalidField = function (index) {\n            $scope.invalidFields[index] = false;\n        };\n\n        /**\n         * Reset Invalid Checkboxes\n         *\n         * @params {Integer} index\n         */\n        $scope.resetInvalidCheckbox = function (index) {\n            if ($scope.invalidCheckboxes[index]) {\n                $scope.invalidCheckboxes[index] = false;\n            }\n            // reset all URL fields validations\n            $scope.invalidFields = [];\n        };\n\n        /**\n         * Resets the\n         */\n        controller.resetIfEmpty = function () {\n            if ($scope.selectedSocialMedia[$scope.type()][0].display &&\n                !$scope.selectedSocialMedia[$scope.type()][0].master &&\n                !$scope.selectedSocialMedia[$scope.type()][0].ug &&\n                !$scope.selectedSocialMedia[$scope.type()][0].pg &&\n                $scope.selectedSocialMedia[$scope.type()][1].display &&\n                !$scope.selectedSocialMedia[$scope.type()][1].master &&\n                !$scope.selectedSocialMedia[$scope.type()][1].ug &&\n                !$scope.selectedSocialMedia[$scope.type()][1].pg &&\n                $scope.selectedSocialMedia[$scope.type()][2].display &&\n                !$scope.selectedSocialMedia[$scope.type()][2].master &&\n                !$scope.selectedSocialMedia[$scope.type()][2].ug &&\n                !$scope.selectedSocialMedia[$scope.type()][2].pg) {\n                $scope.clearSocialMediaForm();\n            }\n        };\n\n\n        controller.urlPattern = UrlService.getPattern();\n        /**\n         * Save form.\n         *\n         * @returns {boolean}\n         */\n        $scope.saveSocialMediaForm = function () {\n            $scope.invalidFields = [];\n            var invalidItems = TuMediaSocialMediasService.socialMediaValidation(angular.copy($scope.selectedSocialMedia[$scope.type()]));\n            if (typeof invalidItems === 'undefined') {\n                invalidItems = TuMediaSocialMediasService.socialMediaFormValidation($scope.forms.formSocialMedia);\n            }\n            TuMediaSocialMediasService.displayTypesValid = false;\n            TuMediaSocialMediasService.setHasErrors(false);\n            if ($scope.submitInProgress || !$scope.forms.formSocialMedia || (invalidItems && invalidItems.length > 0)\n            ) {\n                $scope.invalidCheckboxes = [];\n                $scope.hasErrors = true;\n                angular.forEach(invalidItems, function (item) {\n                    if (item.invalid) {\n                        $scope.invalidCheckboxes[item.index] = item.invalid || false;\n                    } else if (item.invalidUrl) {\n                        $scope.invalidFields[item.index] = item.invalidUrl || false;\n                    }\n                });\n                return false;\n            }\n            var socialMediaItem = TuMediaSocialMediasService.formatSocialMedia(\n                angular.copy($scope.selectedSocialMedia[$scope.type()])\n            );\n            $scope.hasErrors = false;\n            $scope.invalidFields = [];\n            $scope.invalidCheckboxes = [];\n            $scope.submitInProgress = true;\n            var actionName = $scope.isEditMode($scope.type()) ? 'Updated' : 'Added';\n            TuMediaSocialMediasService.saveSocialMedia(TuMediaSocialMediasService.coreId, socialMediaItem)\n                .then(function (success) {\n                    $scope.submitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        'Social Media ' + actionName + ' (' + $scope.type() + ')'\n                    );\n                    if (success) {\n                        controller.resetIfEmpty();\n                        $scope.selectedSocialMediaBeforeChanges = angular.copy($scope.selectedSocialMedia);\n                        TuMediaSocialMediasService.setChanges(socialMediaItem);\n                    }\n                });\n        };\n\n        /**\n         * Clear social media item.\n         */\n        $scope.clearSocialMediaForm = function () {\n            var setValue = false;\n            var setUrl = '';\n            angular.forEach($scope.selectedSocialMedia[$scope.type()], function (value, key) {\n                setValue = key === 0;\n                $scope.selectedSocialMedia[$scope.type()][key].master = setValue;\n                $scope.selectedSocialMedia[$scope.type()][key].ug = setValue;\n                $scope.selectedSocialMedia[$scope.type()][key].pg = setValue;\n                $scope.selectedSocialMedia[$scope.type()][key].url = setUrl;\n            });\n            $scope.invalidCheckboxes = [];\n            $scope.invalidFields = [];\n            $scope.checkCheckboxes();\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedSocialMedia = function () {\n            return TuMediaSocialMediasService.getSelectedSocialMedia();\n        };\n\n        /**\n         * Get socialMedia items.\n         *\n         * @returns {*}\n         */\n        $scope.getSocialMediaItems = function () {\n            return TuMediaSocialMediasService.getSocialMediaItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean}\n         */\n        $scope.getHasErrors = function () {\n            return TuMediaSocialMediasService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function (value) {\n            TuMediaSocialMediasService.setHasErrors(value);\n        };\n\n        $scope.type = function () {\n            return TuMediaSocialMediasService.getType();\n        };\n\n        $scope.setDisplayTypesValidation = function (value) {\n            TuMediaSocialMediasService.displayTypesValid = value;\n        };\n\n        $scope.getDisplayTypesValidation = function () {\n            return TuMediaSocialMediasService.displayTypesValid;\n        };\n\n        /**\n         * Check which items to hide\n         */\n        $scope.checkCheckboxes = function () {\n            var checked = 0;\n            var displayValue = true;\n            var valueChanged = false;\n            var prevValueChanged = false;\n            angular.forEach($scope.selectedSocialMedia[$scope.type()], function (item, key) {\n                if (item.master) {\n                    checked++;\n                    valueChanged = true;\n                }\n                if (item.ug) {\n                    checked++;\n                    valueChanged = true;\n                }\n                if (item.pg) {\n                    checked++;\n                    valueChanged = true;\n                }\n                if ((!valueChanged && !prevValueChanged && checked > 1) || (checked === 3 && !valueChanged)) {\n                    displayValue = false;\n                }\n                $scope.selectedSocialMedia[$scope.type()][key].display = displayValue;\n                if (!displayValue) {\n                    delete $scope.invalidCheckboxes[key];\n                    delete $scope.invalidFields[key];\n                }\n                prevValueChanged = valueChanged;\n                valueChanged = false;\n            });\n        };\n\n        $scope.checkboxChanged = function (selectedSocialMedia, index, itemChanged) {\n            var checkedOnChanged = 0;\n            if ($scope.selectedSocialMedia[$scope.type()][index].master === true) {\n                checkedOnChanged++;\n            }\n            if ($scope.selectedSocialMedia[$scope.type()][index].ug === true) {\n                checkedOnChanged++;\n            }\n            if ($scope.selectedSocialMedia[$scope.type()][index].pg === true) {\n                checkedOnChanged++;\n            }\n            // if same URL assigned to all subtypes\n            if (checkedOnChanged === 3) {\n                // reset other URLs\n                angular.forEach($scope.selectedSocialMedia[$scope.type()], function (value, key) {\n                    if (key !== index) {\n                        value.url = null;\n                    }\n                });\n            }\n\n            var uniqueItems = [];\n            angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                if ($scope.selectedSocialMedia[$scope.type()][totalKey].master && uniqueItems.indexOf('master') === -1) {\n                    uniqueItems.push('master');\n                }\n                if ($scope.selectedSocialMedia[$scope.type()][totalKey].ug && uniqueItems.indexOf('ug') === -1) {\n                    uniqueItems.push('ug');\n                }\n                if ($scope.selectedSocialMedia[$scope.type()][totalKey].pg && uniqueItems.indexOf('pg') === -1) {\n                    uniqueItems.push('pg');\n                }\n            });\n            var totalChecked = uniqueItems.length;\n\n            var visibleCount = 0;\n            angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                if ($scope.selectedSocialMedia[$scope.type()][totalKey].display) {\n                    visibleCount++;\n                }\n            });\n\n            angular.forEach($scope.selectedSocialMedia[$scope.type()], function (items, key) {\n                if (key !== index) {\n                    if ($scope.selectedSocialMedia[$scope.type()][index][itemChanged] && $scope.selectedSocialMedia[$scope.type()][key][itemChanged]) {\n                        if (!($scope.selectedSocialMedia[$scope.type()][key].master ||\n                            $scope.selectedSocialMedia[$scope.type()][key].ug ||\n                            $scope.selectedSocialMedia[$scope.type()][key].pg\n                        )\n                        ) {\n                            $scope.selectedSocialMedia[$scope.type()][key].display = true;\n                        }\n                    }\n                    if ($scope.selectedSocialMedia[$scope.type()][index][itemChanged]) { // checked\n                        if ($scope.selectedSocialMedia[$scope.type()][key][itemChanged]) { // if there's another key with itemChanged changed, set it to false\n                            $scope.selectedSocialMedia[$scope.type()][key][itemChanged] = !$scope.selectedSocialMedia[$scope.type()][index][itemChanged];\n                            if (visibleCount === 3 && ((totalChecked < 2) || totalChecked === visibleCount)) {\n                                $scope.selectedSocialMedia[$scope.type()][key].display = false;\n                                delete $scope.invalidCheckboxes[key];\n                                delete $scope.invalidFields[key];\n                            }\n                        } else { // hide the ones based on number of checked items\n                            if (checkedOnChanged === totalChecked) { // all checked items are on current record\n                                if (checkedOnChanged > 1 && checkedOnChanged < visibleCount) {\n                                    $scope.selectedSocialMedia[$scope.type()][key].display = false;\n                                    delete $scope.invalidCheckboxes[key];\n                                    delete $scope.invalidFields[key];\n                                    visibleCount--;\n                                } else if (checkedOnChanged === 1) {\n                                    angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                                        $scope.selectedSocialMedia[$scope.type()][totalKey].display = true;\n                                    });\n                                }\n                            } else { // some are not on current.\n                                angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                                    if (totalKey !== index) {\n                                        if ((totalChecked === visibleCount || totalChecked < visibleCount) || totalChecked === 3) {\n                                            if (!($scope.selectedSocialMedia[$scope.type()][totalKey].master ||\n                                                $scope.selectedSocialMedia[$scope.type()][totalKey].ug ||\n                                                $scope.selectedSocialMedia[$scope.type()][totalKey].pg\n                                            )\n                                            ) {\n                                                $scope.selectedSocialMedia[$scope.type()][totalKey].display = false;\n                                                delete $scope.invalidCheckboxes[key];\n                                                delete $scope.invalidFields[key];\n                                                visibleCount--;\n                                            }\n                                            if (totalChecked === 2 && checkedOnChanged !== totalChecked) {\n                                                $scope.selectedSocialMedia[$scope.type()][totalKey].display = true;\n                                            }\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                        if (checkedOnChanged === 3) {\n                            $scope.selectedSocialMedia[$scope.type()][key].display = false;\n                            delete $scope.invalidCheckboxes[key];\n                            delete $scope.invalidFields[key];\n                        }\n                    } else { // unchecked\n                        if (totalChecked === 0) {\n                            angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                                $scope.selectedSocialMedia[$scope.type()][totalKey].display = true;\n                            });\n                        }\n                        if (totalChecked === 1) {\n                            angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                                $scope.selectedSocialMedia[$scope.type()][totalKey].display = true;\n                            });\n                        }\n                        if (totalChecked === 2) {\n                            if (checkedOnChanged === totalChecked && checkedOnChanged > visibleCount) {\n                                angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                                    if (totalKey !== index && checkedOnChanged > visibleCount) {\n                                        $scope.selectedSocialMedia[$scope.type()][totalKey].display = true;\n                                        visibleCount++;\n                                    }\n                                });\n                            } else {\n                                if (checkedOnChanged !== totalChecked && totalChecked === 2 && visibleCount < 3 && checkedOnChanged > 0) {\n                                    angular.forEach($scope.selectedSocialMedia[$scope.type()], function (totalItems, totalKey) {\n                                        $scope.selectedSocialMedia[$scope.type()][totalKey].display = true;\n                                        visibleCount++;\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function (type) {\n            return $scope.selectedSocialMedia && $scope.selectedSocialMedia[type] ? true : false;\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, TuMediaSocialMediasService.getSelectedSocialMedia, function (selectedSocialMedia) {\n                if (selectedSocialMedia) {\n                    $scope.selectedSocialMediaBeforeChanges = selectedSocialMedia;\n                    $scope.selectedSocialMedia = angular.copy(selectedSocialMedia);\n                    $scope.checkCheckboxes();\n                }\n            });\n\n            WatchService.create($scope, TuMediaSocialMediasService.getTriggerChange, function () {\n                if (angular.isDefined($scope.selectedSocialMediaBeforeChanges)) {\n                    $scope.selectedSocialMedia = angular.copy($scope.selectedSocialMediaBeforeChanges);\n                    $scope.checkCheckboxes();\n                }\n                $scope.invalidFields = [];\n                $scope.invalidCheckboxes = [];\n            });\n\n            //watch for social media type changes\n            WatchService.create($scope, TuMediaSocialMediasService.getType, function (socialMediaType) {\n                if (socialMediaType) {\n                    controller.selectedSocialMediaUrl = TuMediaSocialMediasService.getSelectedSocialMediaUrl(socialMediaType);\n                }\n            });\n\n            WatchService.create($scope, TuMediaSocialMediasService.getHighlighted, function (newValue) {\n                if (newValue) {\n                    $scope.isHighlighted = newValue;\n                    $timeout(function () {\n                        TuMediaSocialMediasService.setHighlighted(false);\n                        $scope.isHighlighted = false;\n                    }, 200);\n                }\n            });\n\n            WatchService.create($scope, TuProfileFactory.getSelectedMediaTabId, function (tabId) {\n                if (tabId === 3) {\n                    // restore data on tab type switch\n                    if (typeof $scope.selectedSocialMediaBeforeChanges !== 'undefined') {\n                        $scope.selectedSocialMedia = angular.copy($scope.selectedSocialMediaBeforeChanges);\n                    }\n                    $timeout(function () {\n                        TuMediaSocialMediasService.setHighlighted(true);\n                    }, 200);\n                } else {\n                    $scope.invalidFields = [];\n                    $scope.invalidCheckboxes = [];\n                }\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isMediaTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaSocialMediasSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'TuMediaSocialMediasService',\n            'WatchService',\n            'UrlService',\n            App.controllers.TuMediaSocialMediasSidebar\n        ]);\n\n} (window.angular));\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TuMediaSocialMediasService = function ($resource, $q, $log, constants, TuMediaService, UrlService) {\n        var service = {};\n        var imageUrl = '/images/media/media-social-media.png';\n        var defaultName = '';\n        var socialMediaItems = [\n            'facebook',\n            'youtube',\n            'linkedin',\n            'twitter',\n            'other'\n        ];\n\n        service.getSocialMediaModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/social-media/:socialMediaId', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getInstitutionModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Save SocialMedia\n         *\n         * @param institutionId\n         * @param socialMedia\n         * @returns {*}\n         */\n        service.saveSocialMedia = function (institutionId, socialMedia) {\n            var socialMediaModel = service.getSocialMediaModel();\n\n            return socialMediaModel.update(\n                { id: institutionId, socialMediaId: service.getType() },\n                socialMedia\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set selected socialMedia.\n         *\n         * @param {Object} item\n         */\n        service.setSelectedSocialMedia = function (item) {\n            service.selectedSocialMedia = item;\n        };\n\n        /**\n         * Get selected socialMedia\n         *\n         * @returns {Object}\n         */\n        service.getSelectedSocialMedia = function () {\n            return service.selectedSocialMedia;\n        };\n\n        /**\n         * Trigger change.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerChange = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger change value\n         *\n         * @returns {boolean}\n         */\n        service.getTriggerChange = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Get socialMedia items.\n         *\n         * @returns {Object}\n         */\n        service.getSocialMediaItems = function () {\n            return service.socialMediaItems;\n        };\n\n        service.setSocialMediaItems = function (items) {\n            service.socialMediaItems = items;\n        };\n\n        /**\n         * Get socialMedia item.\n         */\n        service.getItemSocialMedia = function () {\n            var orderTypes = {};\n            orderTypes[TuMediaService.typeOverview()] = 0;\n            orderTypes[TuMediaService.typeUndergraduate()] = 0;\n            orderTypes[TuMediaService.typePostgraduate()] = 0;\n            return {\n                'id': '',\n                'name': defaultName,\n                'description': '',\n                'master': true,\n                'ug': true,\n                'pg': true,\n                'orderType': orderTypes,\n                'url': '',\n                'imageUrl': imageUrl\n            };\n        };\n\n        /**\n         * get selected social media url.\n         *\n         * @param {String} type\n         * @returns {String}\n         */\n        service.getSelectedSocialMediaUrl = function (type) {\n            switch (type) {\n                case 'facebook':\n                    return 'https://www.facebook.com/universityrankings';\n                case 'youtube':\n                    return 'https://www.youtube.com/topuniversities';\n                case 'linkedin':\n                    return 'https://www.linkedin.com/company/qs';\n                case 'twitter':\n                    return 'https://twitter.com/worlduniranking';\n                default:\n                    return 'http://www.yourwebsite.com';\n            }\n        };\n\n        /**\n         * Reset socialMedia item.\n         *\n         * @returns {Object}\n         * @param item\n         */\n        service.resetItem = function (item) {\n            item.master = true;\n            item.ug = true;\n            item.pg = true;\n            item.url = '';\n            item.name = defaultName;\n            item.imageUrl = imageUrl;\n\n            return item;\n        };\n\n        /**\n         * Format socialMedias.\n         *\n         * @param socialMedias\n         * @returns {Object}\n         */\n        service.formatSocialMedias = function (socialMedias) {\n            angular.forEach(socialMedias, function (value, key) {\n                socialMedias[key] = service.formatSocialMedia(value);\n            });\n\n            return socialMedias;\n        };\n\n        /**\n         * Validate Social Media data\n         *\n         * @param {Object} socialMediaItem\n         * @returns {Object}\n         */\n        service.socialMediaValidation = function (socialMediaItem) {\n            var invalidItems = [];\n            // check if items reset\n            if (socialMediaItem &&\n                socialMediaItem.length === 3 &&\n                socialMediaItem[0].display === true &&\n                socialMediaItem[0].master === true &&\n                socialMediaItem[0].ug === true &&\n                socialMediaItem[0].pg === true &&\n                !socialMediaItem[0].url.length\n            ) {\n                return invalidItems;\n            }\n\n            var checkboxesChecked = 0;\n            angular.forEach(socialMediaItem, function (item) {\n                if (item.master) {\n                    checkboxesChecked++;\n                }\n                if (item.ug) {\n                    checkboxesChecked++;\n                }\n                if (item.pg) {\n                    checkboxesChecked++;\n                }\n            });\n            angular.forEach(socialMediaItem, function (item, key) {\n                if ((item.url !== \"\") && !(item.master || item.pg || item.ug) && (checkboxesChecked === 3)) {\n                    socialMediaItem[key].url = \"\";\n                } else if ((item.url !== \"\") && !(item.master || item.pg || item.ug) && (checkboxesChecked !== 3)) {\n                    invalidItems.push({\n                        invalid: true,\n                        index: key\n                    });\n                } else if (((item.url === \"\") || (item.url === undefined)) && (item.master || item.pg || item.ug)) {\n                    invalidItems.push({\n                        invalidUrl: true,\n                        index: key\n                    });\n                }\n                else if (!(item.url.match(UrlService.getPattern())) && (item.master || item.pg || item.ug)){\n                    invalidItems.push({\n                        invalidUrl: true,\n                        index: key\n                    });\n                }\n            });\n            if (invalidItems.length > 0) {\n                return invalidItems;\n            }\n        };\n\n        service.socialMediaFormValidation = function (socialMediaItem) {\n            var invalidItems = [];\n            if (angular.isDefined(socialMediaItem)) {\n                angular.forEach(socialMediaItem.$error.url, function (error) {\n                    var key = error.$name.charAt(error.$name.length - 1);\n                    invalidItems.push({\n                        invalidUrl: true,\n                        index: key\n                    });\n                });\n            }\n            return invalidItems;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} socialMediaItem\n         * @returns {Object}\n         */\n        service.formatSocialMedia = function (socialMediaItem) {\n            var output = [];\n\n            angular.forEach(socialMediaItem, function (item, key) {\n                if ((item.master || item.pg || item.ug) && item.url !== \"\") { // item is set to profile, we'll save it\n                    var tmpOutput = {};\n                    tmpOutput.url = item.url;\n                    tmpOutput.assignedTo = [];\n                    if (item.master) {\n                        tmpOutput.assignedTo.push('master');\n                    }\n                    if (item.ug) {\n                        tmpOutput.assignedTo.push('ug');\n                    }\n                    if (item.pg) {\n                        tmpOutput.assignedTo.push('pg');\n                    }\n                    output.push(tmpOutput);\n                }\n            });\n            return output;\n        };\n\n        service.setChanges = function (changes) {\n            service.changes = changes;\n        };\n\n        service.getChanges = function () {\n            return service.changes;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function (isHighlighted) {\n            service.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function () {\n            return service.isHighlighted;\n        };\n\n        service.coreId = function (coreId) {\n            service.coreId = coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function (type) {\n            service.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function () {\n            return service.type;\n        };\n\n        service.socialMediaItems = function () {\n            return socialMediaItems;\n        };\n\n        service.getSocialMediaObject = function () {\n            var socialMedia = {};\n            angular.forEach(socialMediaItems, function (mediaType) {\n                socialMedia[mediaType] = {};\n                angular.forEach(TuMediaService.getTypes(), function (profileType) {\n                    socialMedia[mediaType][profileType] = false;\n                });\n            });\n\n            return socialMedia;\n        };\n\n        service.assignData = function (inputData, socialMedia) {\n            angular.forEach(inputData, function (mediaType, mediaTypeValue) {\n                angular.forEach(mediaType, function (objectData) {\n                    if (angular.isDefined(objectData.assignedTo)) {\n                        angular.forEach(objectData.assignedTo, function (assignedType) {\n                            socialMedia[mediaTypeValue][assignedType] = true;\n                        });\n                    }\n                });\n            });\n\n            return socialMedia;\n        };\n\n        service.processInput = function (inputData) {\n            var socialMedia = service.getSocialMediaObject();\n            socialMedia = service.assignData(inputData, socialMedia);\n\n            return socialMedia;\n        };\n\n        /**\n         * Flattens inputData for left column\n         *\n         * @param {Object} inputData\n         * @param {boolean} forType\n         * @returns {*}\n         */\n        service.flattenArray = function (inputData, forType) {\n            if (angular.isUndefined(forType)) {\n                forType = false;\n            }\n            var typeUg = TuMediaService.typeUndergraduate(),\n                typePg = TuMediaService.typePostgraduate(),\n                typeMaster = TuMediaService.typeOverview();\n\n            if (forType) {\n                var outputData = {};\n                outputData[typeUg] = false;\n                outputData[typePg] = false;\n                outputData[typeMaster] = false;\n\n                angular.forEach(inputData, function (inputDataValue, inputDataKey) {\n                    if (angular.isDefined(inputDataValue.assignedTo)) {\n                        angular.forEach(inputData[inputDataKey].assignedTo, function (assignedType) {\n                            if (assignedType === typeMaster) {\n                                outputData[typeMaster] = true;\n                            } else if (assignedType === typeUg) {\n                                outputData[typeUg] = true;\n                            } else if (assignedType === typePg) {\n                                outputData[typePg] = true;\n                            }\n                        });\n                    }\n                });\n\n                inputData = outputData;\n            } else {\n                angular.forEach(socialMediaItems, function (mediaType) {\n                    if (angular.isDefined(inputData) && angular.isDefined(inputData[mediaType])) {\n                        angular.forEach(inputData[mediaType], function (objectData, dataKey) {\n                            inputData[mediaType][dataKey][typeMaster] = false;\n                            inputData[mediaType][dataKey][typeUg] = false;\n                            inputData[mediaType][dataKey][typePg] = false;\n                            inputData[mediaType][dataKey].display = true;\n                            if (angular.isDefined(inputData[mediaType][dataKey].assignedTo)) {\n                                angular.forEach(inputData[mediaType][dataKey].assignedTo, function (assignedType) {\n                                    if (assignedType === typeMaster) {\n                                        inputData[mediaType][dataKey][typeMaster] = true;\n                                    } else if (assignedType === typeUg) {\n                                        inputData[mediaType][dataKey][typeUg] = true;\n                                    } else if (assignedType === typePg) {\n                                        inputData[mediaType][dataKey][typePg] = true;\n                                    }\n                                });\n                                delete (inputData[mediaType][dataKey].assignedTo);\n                            }\n                        });\n                        if (inputData[mediaType].length === 0) {\n                            inputData[mediaType][0] = service.getEmpty(true, true);\n                            inputData[mediaType][1] = service.getEmpty(false, false);\n                            inputData[mediaType][2] = service.getEmpty(false, false);\n                        }\n                        if (inputData[mediaType].length === 1) {\n                            inputData[mediaType][1] = service.getEmpty(false, true);\n                            inputData[mediaType][2] = service.getEmpty(false, false);\n                        }\n                        if (inputData[mediaType].length === 2) {\n                            inputData[mediaType][2] = service.getEmpty(false, true);\n                        }\n                    } else {\n                        if (angular.isUndefined(inputData) || angular.isArray(inputData)) {\n                            inputData = {};\n                        }\n                        inputData[mediaType] = [];\n                        inputData[mediaType].push(service.getEmpty(true, true));\n                        inputData[mediaType].push(service.getEmpty(false, false));\n                        inputData[mediaType].push(service.getEmpty(false, false));\n                    }\n                });\n            }\n\n            return inputData;\n        };\n\n        /**\n         *\n         * @param {boolean} initialValue\n         * @param {boolean} displayValue\n         * @returns {{url: string, display: boolean, master: boolean, ug: boolean, pg: boolean}}\n         */\n        service.getEmpty = function (initialValue, displayValue) {\n            return {\n                'url': '',\n                'display': displayValue,\n                'master': initialValue,\n                'ug': initialValue,\n                'pg': initialValue\n            };\n        };\n\n        service.resetDataForType = function (data, type) {\n            angular.forEach(data, function (dataValue, dataKey) {\n                if (dataKey === type) {\n                    angular.forEach(data[dataKey], function (dataSubValue, dataSubKey) {\n                        data[dataKey][dataSubKey].master = false;\n                        data[dataKey][dataSubKey].ug = false;\n                        data[dataKey][dataSubKey].pg = false;\n                        data[dataKey][dataSubKey].url = '';\n                    });\n                }\n            });\n\n            return data;\n        };\n\n        service.assignNewData = function (values, type, currentlySelected) {\n            var outputValues = angular.copy(values);\n            angular.forEach(values, function (objectData, valueKey) {\n                if (angular.isDefined(objectData.assignedTo)) {\n                    outputValues[valueKey][TuMediaService.typeOverview()] = false;\n                    outputValues[valueKey][TuMediaService.typeUndergraduate()] = false;\n                    outputValues[valueKey][TuMediaService.typePostgraduate()] = false;\n                    angular.forEach(objectData.assignedTo, function (assignedType) {\n                        outputValues[valueKey][assignedType] = true;\n                    });\n                    delete (outputValues[valueKey].assignedTo);\n                }\n            });\n            if (outputValues.length === 1) {\n                outputValues[1] = service.getEmpty(false, true);\n                outputValues[2] = service.getEmpty(false, false);\n            }\n            if (outputValues.length === 2) {\n                outputValues[2] = service.getEmpty(false, true);\n            }\n            var copySelected = angular.copy(currentlySelected);\n            angular.forEach(copySelected, function (mediaType, mediaTypeKey) {\n                if (mediaTypeKey === type) {\n                    copySelected[mediaTypeKey] = outputValues;\n                }\n            });\n\n            return copySelected;\n        };\n\n        service.applyUpdate = function (type, values) {\n            var currentlySelected = service.getSelectedSocialMedia();\n            var assignedData = service.assignNewData(values, type, currentlySelected);\n\n            return assignedData;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuMediaSocialMediasService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TuMediaService',\n            'UrlService',\n            App.services.TuMediaSocialMediasService\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers: {}});\n\n    App.controllers.TuMediaImages = function (\n        $scope,\n        constants,\n        Lightbox,\n        TuProfileFactory,\n        NotifierFactory,\n        TuMediaImagesService,\n        TuMediaService,\n        ModalService,\n        $filter,\n        orderBy,\n        AuthenticationService,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TuMediaImagesService.coreId = 0;\n        $scope.imageItems = [];\n        $scope.itemImage = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = TuMediaService.typeOverview();\n        // assign defaults for uploadedImagesCount per type\n        $scope.uploadedImagesCount = {};\n        $scope.uploadedImagesCount[TuMediaService.typeOverview()] = 0;\n        $scope.uploadedImagesCount[TuMediaService.typeUndergraduate()] = 0;\n        $scope.uploadedImagesCount[TuMediaService.typePostgraduate()] = 0;\n        // maximum images allowed per type, displayed in view\n        controller.maxImages = TuMediaImagesService.getMaxImages();\n        controller.dropZoneImageInstance = null;\n        TuMediaImagesService.setType(TuMediaService.typeOverview());\n\n        /**\n         * Assign profile data\n         */\n        WatchService.create($scope, function () {\n            return TuProfileFactory.getData();\n        }, function (newValue) {\n            if (newValue !== null) {\n                angular.copy(newValue.images, $scope.imageItems);\n                TuMediaImagesService.coreId = newValue.id;\n                TuMediaImagesService.setImageItems($scope.imageItems);\n                controller.recalculateImages();\n                $scope.filteredImageItems = $filter('filter')($scope.imageItems, {master: true});\n                $scope.filteredImageItems = orderBy($scope.filteredImageItems, 'orderType.' + $scope.type, false);\n                // set default\n                $scope.filter($scope.type, true);\n            }\n        });\n\n        /**\n         * Assign image items on change\n         */\n        WatchService.create($scope, TuMediaImagesService.getImageItems, function (newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.imageItems = newValue;\n                controller.recalculateImages();\n            }\n        });\n\n        /**\n         * Re-filter array on trigger call.\n         */\n        WatchService.create($scope, TuMediaImagesService.getTriggerChange, function () {\n            if (angular.isDefined($scope.selectedItemId()) && $scope.selectedItemId().length > 0) {\n                TuMediaImagesService.replaceByKey($scope.selectedItemId());\n            }\n            var selectedImage = TuMediaImagesService.getSelectedImage();\n            if (\n                ($scope.type === 'ug' && selectedImage.ug) || \n                (!selectedImage.master && selectedImage.ug && !selectedImage.pg) || \n                (!selectedImage.master && selectedImage.ug && selectedImage.pg && ($scope.type === 'ug' || $scope.type === 'master'))\n            ) {\n                $scope.filter('ug');\n            } else if (($scope.type === 'pg' && selectedImage.pg) || (!selectedImage.master && !selectedImage.ug && selectedImage.pg)) {\n                $scope.filter('pg');\n            } else {\n                $scope.filter('master');\n            }\n            var assignedOrder = 1;\n            // change images order\n            for (var index = 0; index < $scope.filteredImageItems.length; index++) {\n                if ($scope.filteredImageItems[index][$scope.type]) {\n                    $scope.filteredImageItems[index].orderType[$scope.type] = assignedOrder;\n                    assignedOrder++;\n                }\n            }\n            $scope.item = TuMediaImagesService.getItemImage(0);\n        });\n\n        /**\n         * Sortable options.\n         */\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            start: function () {\n                controller.initialList = [];\n                angular.copy($scope.filteredImageItems, controller.initialList);\n            },\n            update: function (e, ui) {\n                var validateItems = TuMediaService.validateTypes($scope.imageItems);\n                if (true !== validateItems) {\n                    ui.item.sortable.cancel();\n                }\n            },\n            stop: function () {\n                var validateItems = TuMediaService.validateTypes($scope.imageItems);\n                if (true === validateItems) {\n                    var assignedOrder = 1;\n                    // change images order\n                    for (var index = 0; index < $scope.filteredImageItems.length; index++) {\n                        if ($scope.filteredImageItems[index][$scope.type]) {\n                            $scope.filteredImageItems[index].orderType[$scope.type] = assignedOrder;\n                            assignedOrder++;\n                        }\n                    }\n\n                    $scope.sortableOptions.disabled = false;\n                    TuMediaImagesService.saveOrder(TuMediaImagesService.coreId, $scope.imageItems)\n                        .then(function (success) {\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Success!' : 'Failure!',\n                                'Image Order Save'\n                            );\n                            TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage());\n                        })\n                        .finally(function () {\n                            $scope.sortableOptions.disabled = false;\n                        });\n                } else {\n                    NotifierFactory.show(\n                        'error',\n                        'Failure!',\n                        'Invalid items in image list'\n                    );\n                    TuMediaImagesService.setSelectedImage(validateItems);\n                    TuMediaImagesService.displayIsValidType = false;\n\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Filter change.\n         *\n         * @param {string} type\n         * @param {boolean} setDefault\n         */\n        $scope.filter = function (type, setDefault) {\n            if (angular.isUndefined(setDefault)) {\n                setDefault = false;\n            }\n            var validateItems = TuMediaService.validateTypes($scope.imageItems);\n            if (true === validateItems) {\n                $scope.type = type;\n                var params = {};\n                params[type] = true;\n                controller.recalculateImages();\n                $scope.filteredImageItems = $filter('filter')($scope.imageItems, params);\n                $scope.filteredImageItems = orderBy($scope.filteredImageItems, 'orderType.' + type, false);\n                if (setDefault) {\n                    var selectedImage = TuMediaImagesService.getItemImage();\n                    if ($scope.uploadedImagesCount[$scope.type] > 0) {\n                        selectedImage = $scope.filteredImageItems[0];\n                    }\n                    TuMediaImagesService.setSelectedImage(selectedImage);\n                }\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in image list'\n                );\n                TuMediaImagesService.setSelectedImage(validateItems);\n                TuMediaImagesService.displayIsValidType = false;\n                controller.recalculateImages();\n\n                return false;\n            }\n        };\n\n        /**\n         * Assigns selected image.\n         *\n         * @param {Object} item\n         */\n        $scope.selectImage = function (item) {\n            if (angular.isDefined(item) && item.id !== 'temporary') {\n                var validateItems = TuMediaService.validateTypes($scope.imageItems);\n                if (true === validateItems) {\n                    TuMediaImagesService.setHasErrors(false);\n                    TuMediaImagesService.displayIsValidType = false;\n                    $scope.itemImage = TuMediaImagesService.getItemImage();\n                    if (angular.isDefined(item)) {\n                        TuMediaImagesService.setSelectedImage(item);\n                    } else {\n                        TuMediaImagesService.setHasErrors(true);\n                        TuMediaImagesService.setSelectedImage($scope.itemImage);\n                    }\n                    TuMediaImagesService.setTriggerReset(Math.random());\n                } else {\n                    NotifierFactory.show(\n                        'error',\n                        'Failure!',\n                        'Invalid items in image list'\n                    );\n                    TuMediaImagesService.setSelectedImage(validateItems);\n                    TuMediaImagesService.displayIsValidType = false;\n\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Returns selected image.\n         *\n         * @returns {Object}\n         */\n        $scope.selectedItem = function () {\n            return TuMediaImagesService.getSelectedImage();\n        };\n\n        /**\n         * Delete image action handler.\n         *\n         * @param item\n         */\n        $scope.deleteImage = function (item) {\n            if (angular.isDefined($scope.item)) {\n                $scope.item.thumbnailUrl = null;\n            }\n            if (angular.isDefined(item) && item.id !== 'temporary') {\n                var itemName = angular.isDefined(item.name) && item.name !== null ? ': ' + item.name : '';\n                var modalOptions = {\n                    closeButtonText: 'No',\n                    actionButtonText: 'Yes',\n                    headerText: 'Delete Image' + itemName,\n                    bodyText: 'Are you sure you wish to delete this image?',\n                };\n                ModalService.show({}, modalOptions).then(function (result) {\n                    TuMediaImagesService.deleteImage(TuMediaImagesService.coreId, item)\n                        .then(function (success) {\n                            $scope.submitInProgress = false;\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Successfully!' : 'Failure!',\n                                'Image Deleted'\n                            );\n                            if (success) {\n                                TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage());\n                                $scope.imageItems.splice(TuMediaService.objectSearch($scope.imageItems, item.id), 1);\n                                $scope.filteredImageItems.splice(TuMediaService.objectSearch($scope.filteredImageItems, item.id), 1);\n                                var assignedOrder = 1;\n                                for (var index = 0; index < $scope.filteredImageItems.length; index++) {\n                                    if ($scope.filteredImageItems[index][$scope.type]) {\n                                        $scope.filteredImageItems[index].orderType[$scope.type] = assignedOrder;\n                                        assignedOrder++;\n                                    }\n                                }\n                                $scope.filteredImageItems = orderBy($scope.filteredImageItems, 'orderType.' + $scope.type, false);\n                                controller.recalculateImages();\n                            }\n                        });\n                });\n            } else {\n                TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage(0));\n            }\n        };\n\n        /**\n         * Returns overview type system name.\n         *\n         * @returns {string}\n         */\n        $scope.typeOverview = function () {\n            return TuMediaService.typeOverview();\n        };\n\n        /**\n         * Returns undergraduate type system name.\n         *\n         * @returns {string}\n         */\n        $scope.typeUndergraduate = function () {\n            return TuMediaService.typeUndergraduate();\n        };\n\n        /**\n         * Returns postgraduate type system name.\n         *\n         * @returns {string}\n         */\n        $scope.typePostgraduate = function () {\n            return TuMediaService.typePostgraduate();\n        };\n\n        /**\n         * Returns selected image id.\n         *\n         * @returns {string}\n         */\n        $scope.selectedItemId = function () {\n            return TuMediaImagesService.getSelectedImage().id;\n        };\n\n        /**\n         * Recalculates number of images for each type.\n         */\n        controller.recalculateImages = function () {\n            $scope.uploadedImagesCount.master = 0;\n            $scope.uploadedImagesCount.ug = 0;\n            $scope.uploadedImagesCount.pg = 0;\n            angular.forEach(TuMediaImagesService.getImageItems(), function (value) {\n                if (value.master) {\n                    $scope.uploadedImagesCount.master++;\n                }\n                if (value.ug) {\n                    $scope.uploadedImagesCount.ug++;\n                }\n                if (value.pg) {\n                    $scope.uploadedImagesCount.pg++;\n                }\n            });\n            TuMediaImagesService.uploadedImagesCount = $scope.uploadedImagesCount;\n            controller.setOptionsMaxFiles();\n        };\n\n        /**\n         * DropZone init function.\n         */\n        controller.dropZoneImageInit = function () {\n            controller.dropZoneImageInstance = this;\n            controller.setOptionsMaxFiles();\n        };\n\n        /**\n         * DropZone options url function.\n         *\n         * @returns {string}\n         */\n        controller.getUploadUrl = function () {\n            controller.setOptionsMaxFiles();\n            return constants.api.institutions.url + '/v1/tu-profile/' + TuProfileFactory.getId() + '/images';\n        };\n\n        controller.setOptionsMaxFiles = function () {\n            if (controller.dropZoneImageInstance !== null) {\n                controller.dropZoneImageInstance.options.maxFiles = TuMediaImagesService.getMaxImages() - $scope.uploadedImagesCount[$scope.type];\n            }\n        };\n\n        /**\n         * Uploading Image\n         *\n         * @params {Object} item\n         */\n        controller.uploadImage = function (item) {\n            var imageItem = angular.copy(item);\n            TuMediaImagesService.displayIsValidType = false;\n            TuMediaImagesService.setHasErrors(false);\n            var actionName = 'Added';\n            if (imageItem.id !== 'temporary') {\n                actionName = 'Updated';\n            }\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                TuMediaImagesService.setHasErrors(true);\n\n                return false;\n            }\n            // upload is slow so we will display a notification, can be removed if we implement rabbitmq\n            if (imageItem.id === 'temporary') {\n                NotifierFactory.show(\n                    'success',\n                    'Image upload is processing, please wait...',\n                    ''\n                );\n            }\n            TuMediaImagesService.setImageUploadingInProgress(true);\n            TuMediaImagesService.saveImage(TuMediaImagesService.coreId, imageItem)\n                .then(function (success) {\n                    TuMediaImagesService.setImageUploadingInProgress(false);\n                    if (success) {\n                        if (imageItem.id === 'temporary') {\n                            item.id = success;\n                            TuMediaImagesService.getImageItems().unshift(item);\n                        }\n                        TuMediaImagesService.setSelectedImage(item);\n                        TuMediaImagesService.setHasErrors(false);\n                        $scope.selectedImageBeforeChanges = item;\n                        TuMediaImagesService.setHighlighted(true);\n                        TuMediaImagesService.displayIsValidType = false;\n                    }\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Add a title, description and click Update' : 'Failure!',\n                        success ? ' Image '+ actionName + ' Successfully!' : ' Image '+ actionName + 'Failure!'\n                    );\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TuMediaImagesService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * DropZone success handler.\n         *\n         * @param file\n         * @param response\n         */\n        controller.handleImageSuccess = function (file, response) {\n            // remove previously uploaded image from dropzone instance\n            controller.dropZoneImageInstance.removeAllFiles();\n            var item = TuMediaImagesService.getItemImage(0);\n            if (angular.isDefined(response.status) && response.status &&\n                angular.isDefined(response.path) && response.path\n            ) {\n                TuMediaImagesService.setSelectedImage(item);\n                if ($scope.uploadedImagesCount.master >= controller.maxImages) {\n                    delete item.master;\n                }\n                if ($scope.uploadedImagesCount.ug >= controller.maxImages) {\n                    delete item.ug;\n                }\n                if ($scope.uploadedImagesCount.pg >= controller.maxImages) {\n                    delete item.pg;\n                }\n                if (item.master || item.ug || item.pg) {\n                    item.id = 'temporary';\n                    item.thumbnailUrl = response.path;\n                    item.url = response.path;\n                    $scope.item = item;\n                    controller.setOptionsMaxFiles();\n                    controller.uploadImage(item);\n                }\n                item.id = 'temporary';\n                item.thumbnailUrl = response.path;\n                item.url = response.path;\n                $scope.item = item;\n                controller.setOptionsMaxFiles();\n            } else {\n                var message = 'Bad response, please try again later';\n                if (response !== null && response.hasOwnProperty('code')) {\n                    message = response.message;\n                }\n                NotifierFactory.show(\n                    'error',\n                    message,\n                    'Error!'\n                );\n            }\n            $scope.$apply();\n        };\n\n        /**\n         * DropZone error handler.\n         *\n         * @param file\n         * @param response\n         */\n        controller.handleImageError = function (file, response) {\n            // remove previously uploaded image from dropzone instance\n            controller.dropZoneImageInstance.removeAllFiles();\n            var message = response;\n            if (file.accepted && file.status === 'error') {\n                message = 'Upload error, please try again later';\n            }\n            if (response.status === 'error') {\n                message = response.message;\n            }\n            controller.setOptionsMaxFiles();\n            if (file.size > $scope.imageConfig.dropzone.maxFilesize * 1000 * 1000) {\n                message = $scope.imageConfig.dropzone.dictFileTooBig;\n            }\n            NotifierFactory.show(\n                'error',\n                message\n            );\n            $scope.$apply();\n        };\n\n        /**\n         * DropZone configuration.\n         */\n        $scope.imageConfig = {\n            // http://www.dropzonejs.com/#configuration-options\n            dropzone: {\n                url: controller.getUploadUrl(),\n                maxFilesize: 0.4,\n                parallelUploads: 1,\n                autoProcessQueue: true,\n                addRemoveLinks: false,\n                previewsContainer: null,\n                clickable: '.upload-image',\n                init : controller.dropZoneImageInit,\n                acceptedFiles: 'image/jpeg,image/pjpeg,image/jpeg,image/pjpeg',\n                dictFileTooBig: \"Uploaded Image is greater than the limit. Please upload less than 400KB.\",\n                dictMaxFilesExceeded: \"Profiles have reached the limit. Please delete an image and try again\",\n                dictInvalidFileType: \"Uploaded image has incorrect format. Please upload images in jpg, jpeg format.\",\n                headers: AuthenticationService.getAuthorizationHeader()\n            },\n            // http://www.dropzonejs.com/#event-list\n            eventHandlers: {\n                success : controller.handleImageSuccess,\n                error : controller.handleImageError\n            }\n        };\n\n        $scope.isSelected = function () {\n            return $scope.selectedItem() && $scope.selectedItem().id === '' ||\n                $scope.isTemporary();\n        };\n\n        $scope.isTemporary = function () {\n            return $scope.selectedItem() && $scope.selectedItem().id === 'temporary';\n        };\n\n        /**\n         * get image uploading in progress\n         *\n         * @returns {boolean}\n         */\n        $scope.getImageUploadingInProgress = function () {\n            return TuMediaImagesService.getImageUploadingInProgress();\n        };\n\n        $scope.openLightboxModal = function (index) {\n            Lightbox.openModal($scope.filteredImageItems, index);\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaImagesController', [\n            '$scope',\n            'constants',\n            'Lightbox',\n            'TuProfileFactory',\n            'NotifierFactory',\n            'TuMediaImagesService',\n            'TuMediaService',\n            'ModalService',\n            '$filter',\n            'orderByFilter',\n            'AuthenticationService',\n            'WatchService',\n            App.controllers.TuMediaImages\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers: {}});\n\n    App.controllers.TuMediaImagesSidebar = function (\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TuProfileFactory,\n        TuMediaImagesService,\n        TuMediaService,\n        WatchService\n    ) {\n        var controller = this,\n        alreadyInitialised = false;\n        controller.uploadedImagesCount = {};\n        $scope.hasErrors = true;\n        TuMediaImagesService.displayIsValidType = false;\n        TuMediaImagesService.setHasErrors(false);\n\n        /**\n         * Save form.\n         *\n         * @param item\n         * @returns {boolean}\n         */\n        $scope.saveImageForm = function (item) {\n            if (\n                !$scope.forms.formImage ||\n                !$scope.forms.formImage.$valid ||\n                $scope.submitInProgress\n            ) {\n                return false;\n            }\n            var imageItem = angular.copy(item);\n            TuMediaImagesService.displayIsValidType = false;\n            TuMediaImagesService.setHasErrors(false);\n            var actionName = 'Added';\n            if (imageItem.id !== 'temporary') {\n                actionName = 'Updated';\n            }\n            if (!TuMediaService.isValidType(item)) {\n                TuMediaImagesService.displayIsValidType = true;\n\n                return false;\n            }\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                $scope.setHasErrors(true);\n\n                return false;\n            }\n            if (!$scope.forms.formImage || !$scope.forms.formImage.$valid\n            ) {\n                NotifierFactory.show(\n                    'error',\n                    'Error: Please fill in all required fields',\n                    actionName + ' Image'\n                );\n\n                return false;\n            }\n            // upload is slow so we will display a notification, can be removed if we implement rabbitmq\n            if (imageItem.id === 'temporary') {\n                NotifierFactory.show(\n                    'success',\n                    'Image upload is processing, please wait...',\n                    ''\n                );\n            }\n\n            // Check if newly assigned checkboxes doesn't hit the limits\n            var checkAssigned = controller.checkAssigned(imageItem, item);\n            // To make sure everything goes smooth, re-assign the values from the function output\n            imageItem = checkAssigned.imageItem;\n            item = checkAssigned.item;\n            if (!checkAssigned.actionAllowed) {\n                return false;\n            }\n            $scope.submitInProgress = true;\n            TuMediaImagesService.saveImage(TuMediaImagesService.coreId, imageItem)\n                .then(function (success) {\n                    $scope.submitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        ' Image '+ actionName\n                    );\n                    if (success) {\n                        if (imageItem.id === 'temporary') {\n                            item.id = success;\n                            TuMediaImagesService.getImageItems().unshift(item);\n                        }\n                        TuMediaImagesService.setSelectedImage(item);\n                        TuMediaImagesService.setHasErrors(false);\n                        $scope.selectedImageBeforeChanges = item;\n                    }\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TuMediaImagesService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * Check if newly assigned tick boxes are not hitting the limits.\n         *\n         * @param {Object} imageItem\n         * @param {Object} item\n         * @returns {Object}\n         */\n        controller.checkAssigned = function (imageItem, item) {\n            // is action allowed\n            var actionAllowed = true;\n            // Emulate result\n            var result = null;\n            if (imageItem.id === 'temporary') {\n                result = angular.copy(TuMediaImagesService.getImageItems());\n                result.unshift(item);\n            } else {\n                result = angular.copy(TuMediaImagesService.getImageItems());\n                angular.forEach(result, function(itemValue, itemKey) {\n                    if(itemValue.id === item.id) {\n                        result[itemKey] = item;\n                    }\n                });\n            }\n            // Recalculate new usages\n            controller.uploadedImagesCount.master = 0;\n            controller.uploadedImagesCount.ug = 0;\n            controller.uploadedImagesCount.pg = 0;\n            angular.forEach(result, function (value) {\n                if (value.master) {\n                    controller.uploadedImagesCount.master++;\n                }\n                if (value.ug) {\n                    controller.uploadedImagesCount.ug++;\n                }\n                if (value.pg) {\n                    controller.uploadedImagesCount.pg++;\n                }\n            });\n            // Check if new usages are allowed value\n            if (item.master && controller.uploadedImagesCount.master > TuMediaImagesService.getMaxImages()) {\n                item.master = false;\n                imageItem.master = false;\n                controller.assignError('overview');\n            }\n            if (item.ug && controller.uploadedImagesCount.ug > TuMediaImagesService.getMaxImages()) {\n                item.ug = false;\n                imageItem.ug = false;\n                controller.assignError('undergraduate');\n            }\n            if (item.pg && controller.uploadedImagesCount.pg > TuMediaImagesService.getMaxImages()) {\n                item.pg = false;\n                imageItem.pg = false;\n                controller.assignError('postgraduate');\n            }\n            if (!item.master && !item.ug && !item.pg) {\n                actionAllowed = false;\n            }\n\n            return {actionAllowed: actionAllowed, imageItem: imageItem, item: item};\n        };\n\n        controller.assignError = function (type) {\n            NotifierFactory.show(\n                'error',\n                'Please delete an image and try again',\n                type + ' profile has reached the limit '\n            );\n        };\n\n        /**\n         * Clear item.\n         *\n         * @param item\n         */\n        $scope.clearImageForm = function (item) {\n            if (angular.isDefined(item)) {\n                $scope.itemImage = item;\n            } else {\n                $scope.itemImage = TuMediaImagesService.getItemImage();\n            }\n\n            if ($scope.itemImage.id === 'temporary') {\n                TuMediaImagesService.setSelectedImage(TuMediaImagesService.getItemImage(0));\n            } else {\n                $scope.itemImage = TuMediaImagesService.resetItem($scope.itemImage);\n            }\n            $scope.setDisplayIsValidType(false);\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedImage = function () {\n            return TuMediaImagesService.getSelectedImage();\n        };\n\n        /**\n         * Get image items.\n         *\n         * @returns {*}\n         */\n        $scope.getImageItems = function () {\n            return TuMediaImagesService.getImageItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        $scope.getHasErrors = function () {\n            return TuMediaImagesService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function (value) {\n            TuMediaImagesService.setHasErrors(value);\n        };\n\n        $scope.type = function () {\n            return TuMediaImagesService.getType();\n        };\n\n        $scope.setDisplayIsValidType = function (value) {\n            TuMediaImagesService.displayIsValidType = value;\n        };\n\n        $scope.getDisplayIsValidType = function () {\n            return TuMediaImagesService.displayIsValidType;\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function () {\n            return $scope.selectedImage && $scope.selectedImage.id !== 'temporary' ? true : false;\n        };\n        \n        /**\n         * get image uploading in progress\n         *\n         * @returns {boolean}\n         */\n        $scope.getImageUploadingInProgress = function () {\n            return TuMediaImagesService.getImageUploadingInProgress();\n        };\n\n        controller.getSelectedImageWatch = function (selectedImage) {\n            $scope.selectedImageBeforeChanges = angular.copy(selectedImage);\n            $scope.selectedImage = angular.copy(selectedImage);\n        };\n\n        controller.getHasErrorsWatch = function (newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.hasErrors = newValue;\n            }\n        };\n\n        controller.getTriggerResetWatch = function (newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.selectedImage = angular.copy($scope.selectedImageBeforeChanges);\n            }\n        };\n\n        controller.getHighlightedWatch = function (newValue) {\n            if (newValue) {\n                $scope.isHighlighted = newValue;\n                $timeout(function () {\n                    TuMediaImagesService.setHighlighted(false);\n                    $scope.isHighlighted = false;\n                },200);\n            }\n        };\n\n        controller.getSelectedMediaTabIdWatch = function (tabId) {\n            if (tabId === 1) {\n                if (typeof $scope.selectedImageBeforeChanges !== 'undefined') {\n                    $scope.selectedImage = angular.copy($scope.selectedImageBeforeChanges);\n                }\n                $timeout(function () {\n                    TuMediaImagesService.setHighlighted(true);\n                },200);\n            }\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, TuMediaImagesService.getSelectedImage, controller.getSelectedImageWatch, true);\n            WatchService.create($scope, TuMediaImagesService.getHasErrors, controller.getHasErrorsWatch);\n            WatchService.create($scope, TuMediaImagesService.getTriggerReset, controller.getTriggerResetWatch);\n            WatchService.create($scope, TuMediaImagesService.getHighlighted, controller.getHighlightedWatch);\n            WatchService.create($scope, TuProfileFactory.getSelectedMediaTabId, controller.getSelectedMediaTabIdWatch);\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isMediaTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuMediaImagesSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TuProfileFactory',\n            'TuMediaImagesService',\n            'TuMediaService',\n            'WatchService',\n            App.controllers.TuMediaImagesSidebar\n        ]);\n\n}(window.angular));\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services: {}});\n\n    App.services.TuMediaImagesService = function ($resource, $q, $log, constants, TuMediaService) {\n        var service = {\n                triggerChange: 0\n            },\n            maxImages = 48;\n        service.getImageModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/image/:imageId', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        service.getImagesOrderingModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/imagesOrder', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        /**\n         * Save Image\n         *\n         * @param institutionId\n         * @param image\n         * @returns {*}\n         */\n        service.saveImage = function (institutionId, image) {\n            var imageModel = service.getImageModel(),\n                imageSubmit = service.formatImage(image);\n            if (angular.isDefined(imageSubmit.id) && imageSubmit.id !== 'temporary') {\n                // update image\n                return imageModel.update(\n                    {id: institutionId, imageId: image.id},\n                    {\n                        name: imageSubmit.name,\n                        description: imageSubmit.description,\n                        thumbnailUrl: imageSubmit.thumbnailUrl,\n                        url: imageSubmit.url,\n                        orderType: imageSubmit.orderType,\n                        assignedTo: imageSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return true;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else {\n                // create new image\n                return imageModel.save(\n                    {id: institutionId},\n                    {\n                        name: imageSubmit.name,\n                        description: imageSubmit.description,\n                        url: imageSubmit.url,\n                        orderType: imageSubmit.orderType,\n                        assignedTo: imageSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.insertedId;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        /**\n         * Save image order.\n         *\n         * @param {string} id - Institution TU profile mongo ID\n         * @param {Object} images\n         * @returns {Promise}\n         */\n        service.saveOrder = function (id, images) {\n            var institutionModel = service.getImagesOrderingModel();\n            return institutionModel.update(\n                {id: id},\n                {\n                    'images': service.formatForOrdering(images)\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.formatForOrdering = function (items) {\n            var formattedItems = [];\n            angular.forEach(items, function (item) {\n                formattedItems.push({\n                    'id': item.id,\n                    'orderType': item.orderType\n                });\n            });\n\n            return formattedItems;\n        };\n\n        /**\n         * Delete image.\n         *\n         * @param institutionId\n         * @param image\n         * @returns {*}\n         */\n        service.deleteImage = function (institutionId, image) {\n            service.setHasErrors(false);\n            var imageModel = service.getImageModel();\n            return imageModel.delete(\n                {id: institutionId, imageId: image.id}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set Image Uploading in progress.\n         *\n         * @param {Boolean} value\n         */\n        service.setImageUploadingInProgress = function (value) {\n            service.imageUploadingInProgress = value;\n        };\n\n\n        /**\n         * Get Image Uploading in progress.\n         *\n         * @return {Boolean}\n         */\n        service.getImageUploadingInProgress = function () {\n            return service.imageUploadingInProgress;\n        };\n\n        /**\n         * Set selected image.\n         *\n         * @param item\n         */\n        service.setSelectedImage = function (item) {\n            service.selectedImage = item;\n        };\n\n        /**\n         * Get selected image\n         *\n         * @returns {*}\n         */\n        service.getSelectedImage = function () {\n            return service.selectedImage;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerChange = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerChange = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Set image items.\n         *\n         * @param items\n         * @param transform\n         */\n        service.setImageItems = function (items, transform) {\n            if (!angular.isDefined(transform)) {\n                transform = true;\n            }\n            if (transform) {\n                angular.forEach(items, function (value, key) {\n                    items[key][TuMediaService.typeOverview()] = false;\n                    items[key][TuMediaService.typeUndergraduate()] = false;\n                    items[key][TuMediaService.typePostgraduate()] = false;\n                    angular.forEach(items[key].assignedTo, function (aValue) {\n                        if (aValue === TuMediaService.typeOverview()) {\n                            items[key][TuMediaService.typeOverview()] = true;\n                        } else if (aValue === TuMediaService.typeUndergraduate()) {\n                            items[key][TuMediaService.typeUndergraduate()] = true;\n                        } else if (aValue === TuMediaService.typePostgraduate()) {\n                            items[key][TuMediaService.typePostgraduate()] = true;\n                        }\n                    });\n                    /**\n                     * Set initial order\n                     * @type {{master: number, ug: number, pg: number}}\n                     */\n                    if (items[key].orderType === null) {\n                        items[key].orderType = {\n                            'master': 0,\n                            'ug': 0,\n                            'pg': 0\n                        };\n                    }\n                    var orderOverview = 0;\n                    var orderUndergraduate = 0;\n                    var orderPostgraduate = 0;\n                    if (angular.isDefined(items[key].orderType)) {\n                        if (angular.isDefined(items[key].orderType[TuMediaService.typeOverview()])) {\n                            orderOverview = items[key].orderType[TuMediaService.typeOverview()];\n                        }\n                        if (angular.isDefined(items[key].orderType[TuMediaService.typeUndergraduate()])) {\n                            orderUndergraduate = items[key].orderType[TuMediaService.typeUndergraduate()];\n                        }\n                        if (angular.isDefined(items[key].orderType[TuMediaService.typePostgraduate()])) {\n                            orderPostgraduate = items[key].orderType[TuMediaService.typePostgraduate()];\n                        }\n                    }\n                    items[key].orderType = {\n                        'master': orderOverview,\n                        'ug': orderUndergraduate,\n                        'pg': orderPostgraduate\n                    };\n                    if (angular.isDefined(items[key]._id)) {\n                        items[key].id = items[key]._id;\n                    }\n                    delete items[key].assignedTo;\n                    delete items[key]._id;\n                });\n            }\n\n            service.imageItems = items;\n        };\n\n        /**\n         * Get image items.\n         *\n         * @returns {*}\n         */\n        service.getImageItems = function () {\n            return service.imageItems;\n        };\n\n        /**\n         * Get image item.\n         * @param {int} defaultValue\n         */\n        service.getItemImage = function (defaultValue) {\n            if (angular.isUndefined(defaultValue)) {\n                defaultValue = 0;\n            }\n            var orderTypes = {};\n            orderTypes[TuMediaService.typeOverview()] = defaultValue;\n            orderTypes[TuMediaService.typeUndergraduate()] = defaultValue;\n            orderTypes[TuMediaService.typePostgraduate()] = defaultValue;\n\n            return {\n                'id': '',\n                'name': '',\n                'description': '',\n                'master': true,\n                'ug': true,\n                'pg': true,\n                'orderType': orderTypes,\n                'url': ''\n            };\n        };\n\n        /**\n         * Reset image item.\n         *\n         * @param item\n         * @returns {*}\n         */\n        service.resetItem = function (item) {\n            item.master = true;\n            item.ug = true;\n            item.pg = true;\n            item.name = '';\n            item.description = '';\n\n            return item;\n        };\n\n        /**\n         * Format images.\n         *\n         * @param images\n         * @returns {*}\n         */\n        service.formatImages = function (images) {\n            angular.forEach(images, function (value, key) {\n                images[key] = service.formatImage(value);\n            });\n\n            return images;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} image\n         * @returns {Object}\n         */\n        service.formatImage = function (image) {\n            image.assignedTo = [];\n            if (image.master) {\n                image.assignedTo.push('master');\n            }\n            if (image.ug) {\n                image.assignedTo.push('ug');\n            }\n            if (image.pg) {\n                image.assignedTo.push('pg');\n            }\n            // remove data we don't want to send.\n            if (angular.isDefined(image.id) && parseInt(image.id, 10) === 0) {\n                delete image.id;\n            }\n            delete image.master;\n            delete image.ug;\n            delete image.pg;\n            delete image.order;\n\n            return image;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function (isHighlighted) {\n            service.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function () {\n            return service.isHighlighted;\n        };\n\n        service.coreId = function (coreId) {\n            service.coreId = coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function (type) {\n            service.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function () {\n            return service.type;\n        };\n\n        /**\n         * Replace item by item id\n         *\n         * @param key\n         */\n        service.replaceByKey = function (key) {\n            angular.forEach(service.getImageItems(), function(itemValue, itemKey) {\n                if(itemValue.id === key) {\n                    service.getImageItems()[itemKey] = service.getSelectedImage();\n                }\n            });\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerReset = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        service.getTriggerReset = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * UploadedImagesCount object, contains {master:count, ug: count, pg: count}\n         *\n         * @param {Object} uploadedImagesCount\n         */\n        service.setUploadedImagesCount = function (uploadedImagesCount) {\n            service.uploadedImagesCount = uploadedImagesCount;\n        };\n\n        service.getUploadedImagesCount = function () {\n            return service.uploadedImagesCount;\n        };\n\n        service.getMaxImages = function () {\n            return maxImages;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuMediaImagesService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TuMediaService',\n            App.services.TuMediaImagesService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmProfileMediaService = function() {\n        var service = {\n            types: {\n                master: 'master'\n            }\n        };\n\n        service.typeOverview = function() {\n            return service.types.master;\n        };\n\n\n\n        /**\n         * Get TU profile subtypes.\n         *\n         * @returns {array}\n         */\n        service.getTypes = function() {\n            return [\n                service.typeOverview()\n            ];\n        };\n\n        service.isValidType = function(item) {\n            var scopeTypes = service.getTypes(),\n                valid = false;\n            for (var typesIndex = 0; typesIndex < scopeTypes.length; typesIndex++) {\n                if (item[scopeTypes[typesIndex]]) {\n                    valid = true;\n                }\n            }\n\n            return valid;\n        };\n\n        /**\n         * Validate profile subtype.\n         *\n         * @param {Object} list\n         * @returns {true|Object}\n         */\n        service.validateTypes = function(list) {\n            for (var i = 0; i < list.length; i++) {\n                // if invalid type\n                if (!service.isValidType(list[i])) {\n                    // return invalid item\n                    return list[i];\n                }\n            }\n\n            return true;\n        };\n\n        /**\n         * Searches the object for a given value and returns the first corresponding key if successful.\n         *\n         * @param {Object} haystack\n         * @param {String} needle\n         * @param {null|String}column\n         * @returns {boolean|int} - returns the key for needle if it is found in the array, FALSE otherwise.\n         */\n        service.objectSearch = function(haystack, needle, column) {\n            column = column || 'id';\n            for (var i = 0; i < haystack.length; i++) {\n                if (haystack[i] && haystack[i][column] && haystack[i][column] === needle) {\n                    return i;\n                }\n            }\n            return false;\n        };\n\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmMediaService', [\n            App.services.TmProfileMediaService\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmProfileMedia = function(\n        $scope,\n        constants,\n        InstitutionFactory,\n        TmProfileFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        controller.devMode = constants.dev;\n        controller.upgradeEmailsTo = constants.emails.upgradeTu;\n        $scope.isMediaReloading = true;\n\n        controller.isImagesTabActive = function () {\n            var selectedMediaTabId = TmProfileFactory.getSelectedMediaSubTabId();\n            return selectedMediaTabId === 1 || selectedMediaTabId === null;\n        };\n\n        controller.isVideosTabActive = function () {\n            return TmProfileFactory.isMediaVideosSubTabSelected();\n        };\n\n        controller.isBrochuresTabActive = function () {\n            return TmProfileFactory.isMediaBrochuresSubTabSelected();\n        };\n\n        controller.isSocialMediaTabActive = function () {\n            return TmProfileFactory.isMediaSocialSubTabSelected();\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, InstitutionFactory.isAdvanced, function (newValue, oldValue) {\n                if (oldValue !== newValue) {\n                    $scope.isAdvanced = newValue;\n                }\n            });\n            \n            // watch for active institution changes changes\n            WatchService.create($scope, InstitutionFactory.getId, function (visible) {\n                $scope.isMediaReloading = !visible;\n            });\n        };\n\n        controller.isRightSidePanelActive = function () {\n            // media tab is active\n            if (TmProfileFactory.isMediaTabSelected()) {\n                return true;\n            }\n\n            return false;\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isMediaTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileMediaController', [\n            '$scope',\n            'constants',\n            'InstitutionFactory',\n            'TmProfileFactory',\n            'WatchService',\n            App.controllers.TmProfileMedia\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaCommonSidebar = function(\n        $scope,\n        $resource,\n        $location,\n        constants,\n        TmProfileFactory,\n        InstitutionFactory,\n        TmMediaService,\n        TmMediaVideosService,\n        TmMediaBrochuresService,\n        TmMediaSocialMediasService,\n        TmMediaImagesService\n    ) {\n        if (angular.isUndefined($scope.tabId)) {\n            TmProfileFactory.setSelectedMediaSubTabId(1);\n        }\n\n        $scope.setSelected = function(tabId) {\n            if ($scope.tabId !== tabId) {\n                $scope.tabId = tabId;\n                TmProfileFactory.setSelectedMediaSubTabId(tabId);\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        $scope.getSelected = function() {\n            return TmProfileFactory.getSelectedMediaSubTabId();\n        };\n\n        $scope.getGeneralCounter = function() {\n            var totalCount = 0;\n            var videoItems = TmMediaVideosService.getVideoItems();\n            if (angular.isArray(videoItems)) {\n                totalCount += videoItems.length;\n            }\n            var brochureItems = TmMediaBrochuresService.getBrochureItems();\n            if (angular.isArray(brochureItems)) {\n                totalCount += brochureItems.length;\n            }\n            var socialMediaItems = TmMediaSocialMediasService.getSocialMediaItems();\n            if (angular.isArray(socialMediaItems)) {\n                totalCount += socialMediaItems.length;\n            }\n\n            var imageItems = TmMediaImagesService.getImageItems();\n            if (angular.isArray(imageItems)) {\n                totalCount += imageItems.length;\n            }\n\n            return totalCount;\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaCommonSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            'constants',\n            'TmProfileFactory',\n            'InstitutionFactory',\n            'TmMediaService',\n            'TmMediaVideosService',\n            'TmMediaBrochuresService',\n            'TmMediaSocialMediasService',\n            'TmMediaImagesService',\n            App.controllers.TmMediaCommonSidebar\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaImages = function (\n        $scope,\n        constants,\n        Lightbox,\n        TmProfileFactory,\n        NotifierFactory,\n        TmMediaImagesService,\n        TmMediaService,\n        ModalService,\n        $filter,\n        orderBy,\n        AuthenticationService,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TmMediaImagesService.coreId = 0;\n        $scope.imageItems = [];\n        $scope.itemImage = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = TmMediaService.typeOverview();\n        // assign defaults for uploadedImagesCount per type\n        $scope.uploadedImagesCount = {};\n        $scope.uploadedImagesCount[TmMediaService.typeOverview()] = 0;\n        // maximum images allowed per type, displayed in view\n        controller.maxImages = TmMediaImagesService.getMaxImages();\n        controller.dropZoneImageInstance = null;\n        TmMediaImagesService.setType(TmMediaService.typeOverview());\n\n        /**\n         * Sortable options.\n         */\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            start: function () {\n                controller.initialList = [];\n                angular.copy($scope.imageItems, controller.initialList);\n            },\n            update: function (e, ui) {\n                var validateItems = true;\n                if (true !== validateItems) {\n                    ui.item.sortable.cancel();\n                }\n            },\n            stop: function() {\n                var validateItems = true;\n                if (true === validateItems) {\n                    var assignedOrder = 1;\n                    // change images order\n                    for (var index = 0; index < $scope.imageItems.length; index++) {\n                            $scope.imageItems[index].orderType[$scope.type] = assignedOrder;\n                            assignedOrder++;\n                    }\n\n                    $scope.sortableOptions.disabled = false;\n                    TmMediaImagesService.saveOrder(TmMediaImagesService.coreId, $scope.imageItems)\n                        .then(function(success) {\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Success!' : 'Failure!',\n                                'Image Order Save'\n                            );\n                            TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage());\n                        })\n                        .finally(function() {\n                            $scope.sortableOptions.disabled = false;\n                            TmMediaImagesService.setImageItems($scope.imageItems);\n                        });\n                } else {\n                    NotifierFactory.show(\n                        'error',\n                        'Failure!',\n                        'Invalid items in image list'\n                    );\n                    TmMediaImagesService.setSelectedImage(validateItems);\n                    TmMediaImagesService.displayIsValidType = false;\n\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Assigns selected image.\n         *\n         * @param {Object} item\n         */\n        $scope.selectImage = function (item) {\n            if (angular.isDefined(item) && item.id !== 'temporary') {\n                TmMediaImagesService.setHasErrors(false);\n                TmMediaImagesService.displayIsValidType = false;\n                $scope.itemImage = TmMediaImagesService.getItemImage();\n                if (angular.isDefined(item)) {\n                    TmMediaImagesService.setSelectedImage(item);\n                } else {\n                    TmMediaImagesService.setHasErrors(true);\n                    TmMediaImagesService.setSelectedImage($scope.itemImage);\n                }\n            }\n        };\n\n        /**\n         * Returns selected image.\n         *\n         * @returns {Object}\n         */\n        $scope.selectedItem = function () {\n            return TmMediaImagesService.getSelectedImage();\n        };\n\n        /**\n         * Delete image action handler.\n         *\n         * @param item\n         */\n        $scope.deleteImage = function (item) {\n            if (TmMediaImagesService.getSubmitInProgress()) {\n                return false;\n            }\n            if (angular.isDefined($scope.item)) {\n                $scope.item.thumbnailUrl = null;\n            }\n            if (angular.isDefined(item) && item.id !== 'temporary') {\n                var itemName = angular.isDefined(item.name) && item.name !== null ? ': ' + item.name : '';\n                var modalOptions = {\n                    closeButtonText: 'No',\n                    actionButtonText: 'Yes',\n                    headerText: 'Delete Image' + itemName,\n                    bodyText: 'Are you sure you wish to delete this image?',\n                };\n                ModalService.show({}, modalOptions).then(function () {\n                    TmMediaImagesService.deleteImage(TmMediaImagesService.coreId, item)\n                        .then(function (success) {\n                            TmMediaImagesService.getSubmitInProgress(false);\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Successfully!' : 'Failure!',\n                                'Image Deleted'\n                            );\n                            if (success) {\n                                TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage());\n                                $scope.imageItems.splice(TmMediaService.objectSearch($scope.imageItems, item.id), 1);\n                                TmMediaImagesService.setImageItems($scope.imageItems);\n                                var assignedOrder = 1;\n                                for (var index = 0; index < $scope.imageItems.length; index++) {\n                                    if ($scope.imageItems[index][$scope.type]) {\n                                        assignedOrder++;\n                                    }\n                                }\n                                controller.recalculateImages();\n                            }\n                        });\n                });\n            } else {\n                TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage(0));\n            }\n        };\n\n        /**\n         * Returns selected image id.\n         *\n         * @returns {string}\n         */\n        $scope.selectedItemId = function () {\n            if (TmMediaImagesService.getSelectedImage()) {\n                return TmMediaImagesService.getSelectedImage().id;\n            }\n        };\n\n        /**\n         * Recalculates number of images for each type.\n         */\n        controller.recalculateImages = function () {\n            $scope.imageItems = orderBy($scope.imageItems, 'orderType.' + $scope.type, false);\n            $scope.uploadedImagesCount.master = 0;\n            angular.forEach(TmMediaImagesService.getImageItems(), function () {\n                $scope.uploadedImagesCount.master++;\n            });\n            TmMediaImagesService.uploadedImagesCount = $scope.uploadedImagesCount;\n            controller.setOptionsMaxFiles();\n        };\n\n        /**\n         * DropZone init function.\n         */\n        controller.dropZoneImageInit = function () {\n            controller.dropZoneImageInstance = this;\n            controller.setOptionsMaxFiles();\n        };\n\n        /**\n         * DropZone options url function.\n         *\n         * @returns {string}\n         */\n\n        controller.getUploadUrl = function () {\n            controller.setOptionsMaxFiles();\n            return constants.api.institutions.url + '/v1/tm-profile/' + TmProfileFactory.getId() + '/images';\n        };\n\n        controller.setOptionsMaxFiles = function () {\n            if (controller.dropZoneImageInstance !== null) {\n                controller.dropZoneImageInstance.options.maxFiles = TmMediaImagesService.getMaxImages() - $scope.uploadedImagesCount[$scope.type];\n            }\n        };\n\n        /**\n         * Uploading Image\n         *\n         * @params {Object} item\n         */\n        controller.uploadImage = function (item) {\n            var imageItem = angular.copy(item);\n            TmMediaImagesService.displayIsValidType = false;\n            TmMediaImagesService.setHasErrors(false);\n            var actionName = 'Added';\n            if (imageItem.id !== 'temporary') {\n                actionName = 'Updated';\n            }\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                TmMediaImagesService.setHasErrors(true);\n\n                return false;\n            }\n            // upload is slow so we will display a notification, can be removed if we implement rabbitmq\n            if (imageItem.id === 'temporary') {\n                NotifierFactory.show(\n                    'success',\n                    'Image upload is processing, please wait...',\n                    ''\n                );\n            }\n            TmMediaImagesService.setImageUploadingInProgress(true);\n            TmMediaImagesService.saveImage(TmProfileFactory.getId(), imageItem)\n                .then(function (success) {\n                    TmMediaImagesService.setImageUploadingInProgress(false);\n                    if (success) {\n                        if (imageItem.id === 'temporary') {\n                            item.id = success;\n                            var imageItems = TmMediaImagesService.getImageItems();\n                            imageItems.unshift(item);\n                            TmMediaImagesService.setImageItems(angular.copy(imageItems));\n                        }\n                        TmMediaImagesService.setSelectedImage(item);\n                        TmMediaImagesService.setHasErrors(false);\n                        $scope.selectedImageBeforeChanges = item;\n                        TmMediaImagesService.setHighlighted(true);\n                        TmMediaImagesService.displayIsValidType = false;\n                    }\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Add a title, description and click Update' : 'Failure!',\n                        success ? ' Image '+ actionName + ' Successfully!' : ' Image '+ actionName + 'Failure!'\n                    );\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TmMediaImagesService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * DropZone success handler.\n         *\n         * @param file\n         * @param response\n         */\n        controller.handleImageSuccess = function (file, response) {\n            // remove previously uploaded image from dropzone instance\n            controller.dropZoneImageInstance.removeAllFiles();\n            var item = TmMediaImagesService.getItemImage(0);\n            if (angular.isDefined(response.status) && response.status &&\n                angular.isDefined(response.path) && response.path\n            ) {\n                item.id = 'temporary';\n                item.thumbnailUrl = response.path;\n                item.url = response.path;\n                $scope.item = item;\n                controller.uploadImage(item);\n                controller.setOptionsMaxFiles();\n            } else {\n                var message = 'Bad response, please try again later';\n                if (response !== null && response.hasOwnProperty('code')) {\n                    message = response.message;\n                }\n                NotifierFactory.show(\n                    'error',\n                    message,\n                    'Error!'\n                );\n            }\n            $scope.$apply();\n        };\n\n        /**\n         * DropZone error handler.\n         *\n         * @param file\n         * @param response\n         */\n        controller.handleImageError = function (file, response) {\n            // remove previously uploaded image from dropzone instance\n            controller.dropZoneImageInstance.removeAllFiles();\n            var message = response;\n            if (file.accepted && file.status === 'error') {\n                message = 'Upload error, please try again later';\n            }\n            if (response.status === 'error') {\n                message = response.message;\n            }\n            controller.setOptionsMaxFiles();\n            if (file.size > $scope.imageConfig.dropzone.maxFilesize * 1000 * 1000) {\n                message = $scope.imageConfig.dropzone.dictFileTooBig;\n            }\n            NotifierFactory.show(\n                'error',\n                message\n            );\n            $scope.$apply();\n        };\n\n        /**\n         * DropZone configuration.\n         */\n        $scope.imageConfig = {\n            // http://www.dropzonejs.com/#configuration-options\n            dropzone: {\n                url: controller.getUploadUrl(),\n                maxFilesize: 0.4,\n                parallelUploads: 1,\n                autoProcessQueue: true,\n                addRemoveLinks: false,\n                previewsContainer: null,\n                clickable: '.upload-image',\n                init: controller.dropZoneImageInit,\n                acceptedFiles: 'image/jpeg,image/pjpeg,image/jpeg,image/pjpeg',\n                dictFileTooBig: \"Uploaded Image is greater than the limit. Please upload less than 400KB.\",\n                dictMaxFilesExceeded: \"Profiles have reached the limit. Please delete an image and try again\",\n                dictInvalidFileType: \"Uploaded image has incorrect format. Please upload images in jpg, jpeg format.\",\n                headers: AuthenticationService.getAuthorizationHeader()\n            },\n            // http://www.dropzonejs.com/#event-list\n            eventHandlers: {\n                success: controller.handleImageSuccess,\n                error: controller.handleImageError\n            }\n        };\n\n        $scope.isSelected = function () {\n            return $scope.selectedItem() && $scope.selectedItem().id === '' ||\n                $scope.isTemporary();\n        };\n\n        $scope.isTemporary = function () {\n            return $scope.selectedItem() && $scope.selectedItem().id === 'temporary';\n        };\n\n        /**\n         * get image uploading in progress\n         *\n         * @returns {boolean}\n         */\n        $scope.getImageUploadingInProgress = function () {\n            return TmMediaImagesService.getImageUploadingInProgress();\n        };\n\n        $scope.openLightboxModal = function (index) {\n            Lightbox.openModal($scope.imageItems, index);\n        };\n\n        controller.initWatches = function () {\n            /**\n             * Assign profile data\n             */\n            WatchService.create($scope, TmProfileFactory.getData, function (profileData) {\n                if (!profileData || !profileData.id) {\n                    return;\n                }\n                angular.copy(profileData.images, $scope.imageItems);\n                TmMediaImagesService.coreId = profileData.id;\n                TmMediaImagesService.setImageItems($scope.imageItems);\n                controller.recalculateImages();\n                $scope.imageItems = orderBy($scope.imageItems, 'orderType.' + $scope.type, false);\n                TmMediaImagesService.setSelectedImage($scope.imageItems[0]);\n            });\n\n            /**\n             * Assign image items on change\n             */\n            WatchService.create($scope, TmMediaImagesService.getImageItems, function (newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.imageItems = newValue;\n                    controller.recalculateImages();\n                }\n            });\n\n            /**\n             * Re-filter array on trigger call.\n             */\n            WatchService.create($scope, TmMediaImagesService.getTriggerChange, function () {\n                if (angular.isDefined($scope.selectedItemId()) && $scope.selectedItemId().length > 0) {\n                    TmMediaImagesService.replaceByKey($scope.selectedItemId());\n                }\n                var assignedOrder = 1;\n                // change images order\n                for (var index = 0; index < $scope.imageItems.length; index++) {\n                    if ($scope.imageItems[index][$scope.type]) {\n                        $scope.imageItems[index].orderType[$scope.type] = assignedOrder;\n                        assignedOrder++;\n                    }\n                }\n                controller.recalculateImages();\n                $scope.item = TmMediaImagesService.getItemImage(0);\n            });\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaImagesController', [\n            '$scope',\n            'constants',\n            'Lightbox',\n            'TmProfileFactory',\n            'NotifierFactory',\n            'TmMediaImagesService',\n            'TmMediaService',\n            'ModalService',\n            '$filter',\n            'orderByFilter',\n            'AuthenticationService',\n            'WatchService',\n            App.controllers.TmMediaImages\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaImagesSidebar = function(\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TmProfileFactory,\n        TmMediaImagesService,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        controller.uploadedImagesCount = {};\n        $scope.hasErrors = true;\n        TmMediaImagesService.displayIsValidType = false;\n        TmMediaImagesService.setHasErrors(false);\n\n        /**\n         * Save form.\n         *\n         * @param item\n         * @returns {boolean}\n         */\n        $scope.saveImageForm = function(item) {\n            if (!$scope.forms.formImage ||\n                !$scope.forms.formImage.$valid ||\n                TmMediaImagesService.getSubmitInProgress()\n            ) {\n                return false;\n            }\n            var imageItem = angular.copy(item);\n            TmMediaImagesService.setHasErrors(false);\n            var actionName = 'Added';\n            if (imageItem.id !== 'temporary') {\n                actionName = 'Updated';\n            }\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                $scope.setHasErrors(true);\n\n                return false;\n            }\n            if (!$scope.forms.formImage || !$scope.forms.formImage.$valid) {\n                NotifierFactory.show(\n                    'error',\n                    'Error: Please fill in all required fields',\n                    actionName + ' Image'\n                );\n\n                return false;\n            }\n            // upload is slow so we will display a notification, can be removed if we implement rabbitmq\n            if (imageItem.id === 'temporary') {\n                NotifierFactory.show(\n                    'success',\n                    'Image upload is processing, please wait...',\n                    ''\n                );\n            }\n\n            TmMediaImagesService.setSubmitInProgress(true);\n            TmMediaImagesService.saveImage(TmMediaImagesService.coreId, imageItem)\n                .then(function(success) {\n                    TmMediaImagesService.setSubmitInProgress(false);\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        ' Image ' + actionName\n                    );\n                    if (success) {\n                        TmMediaImagesService.setSelectedImage(item);\n                        TmMediaImagesService.setHasErrors(false);\n                        $scope.selectedImageBeforeChanges = item;\n                    }\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TmMediaImagesService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * Check if newly assigned tick boxes are not hitting the limits.\n         *\n         * @param {Object} imageItem\n         * @param {Object} item\n         * @returns {Object}\n         */\n        controller.checkAssigned = function(imageItem, item) {\n            // is action allowed\n            var actionAllowed = true;\n            // Emulate result\n            var result = null;\n            if (imageItem.id === 'temporary') {\n                result = angular.copy(TmMediaImagesService.getImageItems());\n                result.unshift(item);\n            } else {\n                result = angular.copy(TmMediaImagesService.getImageItems());\n                angular.forEach(result, function(itemValue, itemKey) {\n                    if (itemValue.id === item.id) {\n                        result[itemKey] = item;\n                    }\n                });\n            }\n            // Recalculate new usages\n            controller.uploadedImagesCount.master = 0;\n            angular.forEach(result, function(value) {\n                if (value.master) {\n                    controller.uploadedImagesCount.master++;\n                }\n            });\n            // Check if new usages are allowed value\n            if (item.master && controller.uploadedImagesCount.master > TmMediaImagesService.getMaxImages()) {\n                item.master = false;\n                imageItem.master = false;\n                controller.assignError('overview');\n            }\n            return { actionAllowed: actionAllowed, imageItem: imageItem, item: item };\n        };\n\n        controller.assignError = function(type) {\n            NotifierFactory.show(\n                'error',\n                'Please delete an image and try again',\n                type + ' profile has reached the limit '\n            );\n        };\n\n        /**\n         * Clear item.\n         *\n         * @param item\n         */\n        $scope.clearImageForm = function(item) {\n            if (TmMediaImagesService.getSubmitInProgress()) {\n                return false;\n            }\n            if (angular.isDefined(item)) {\n                $scope.itemImage = item;\n            } else {\n                $scope.itemImage = TmMediaImagesService.getItemImage();\n            }\n\n            if ($scope.itemImage.id === 'temporary') {\n                TmMediaImagesService.setSelectedImage(TmMediaImagesService.getItemImage(0));\n            } else {\n                $scope.itemImage = TmMediaImagesService.resetItem($scope.itemImage);\n                TmMediaImagesService.setSelectedImage($scope.itemImage);\n            }\n            $scope.setDisplayIsValidType(false);\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedImage = function() {\n            return TmMediaImagesService.getSelectedImage();\n        };\n\n        /**\n         * Get image items.\n         *\n         * @returns {*}\n         */\n        $scope.getImageItems = function() {\n            return TmMediaImagesService.getImageItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        $scope.getHasErrors = function() {\n            return TmMediaImagesService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function(value) {\n            TmMediaImagesService.setHasErrors(value);\n        };\n\n        $scope.type = function() {\n            return TmMediaImagesService.getType();\n        };\n\n        $scope.setDisplayIsValidType = function(value) {\n            TmMediaImagesService.displayIsValidType = value;\n        };\n\n        $scope.getDisplayIsValidType = function() {\n            return TmMediaImagesService.displayIsValidType;\n        };\n\n        $scope.submitInProgress = function ()\n        {\n            return TmMediaImagesService.getSubmitInProgress();\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function() {\n            return $scope.selectedImage && $scope.selectedImage.id !== 'temporary' ? true : false;\n        };\n\n        /**\n         * get image uploading in progress\n         *\n         * @returns {boolean}\n         */\n        $scope.getImageUploadingInProgress = function() {\n            return TmMediaImagesService.getImageUploadingInProgress();\n        };\n\n        controller.initWatches = function() {\n            WatchService.create($scope, TmMediaImagesService.getSelectedImage, function(selectedImage) {\n                $scope.selectedImageBeforeChanges = angular.copy(selectedImage);\n                $scope.selectedImage = angular.copy(selectedImage);\n            });\n\n            WatchService.create($scope, TmMediaImagesService.getHasErrors, function(newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.hasErrors = newValue;\n                }\n            });\n\n            WatchService.create($scope, TmMediaImagesService.getTriggerReset, function(newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.selectedImage = angular.copy($scope.selectedImageBeforeChanges);\n                }\n            });\n\n            WatchService.create($scope, TmMediaImagesService.getHighlighted, function(newValue) {\n                if (newValue) {\n                    $scope.isHighlighted = newValue;\n                    $timeout(function() {\n                        TmMediaImagesService.setHighlighted(false);\n                        $scope.isHighlighted = false;\n                    }, 200);\n                }\n            });\n\n            WatchService.create($scope, TmProfileFactory.getSelectedMediaSubTabId, function(tabId) {\n                if (tabId === 1) {\n                    $timeout(function() {\n                        TmMediaImagesService.setHighlighted(true);\n                    }, 200);\n                }\n            });\n        };\n\n        controller.init = function() {\n            controller.initWatches();\n        };\n\n        // listen to images tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isMediaTabSelected, function(isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaImagesSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'TmMediaImagesService',\n            'WatchService',\n            App.controllers.TmMediaImagesSidebar\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmMediaImages = function($resource, $q, $log, constants, TmMediaService) {\n        var serviceMediaImages = this;\n        var service = {},\n            maxImages = 48;\n        serviceMediaImages.triggerChange = 0;\n        serviceMediaImages.submitInProgress = false;\n\n        service.getImageModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/image/:imageId', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getImagesOrderingModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/imagesOrder', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Save Image\n         *\n         * @param institutionId\n         * @param image\n         * @returns {*}\n         */\n        service.saveImage = function(institutionId, image) {\n            var imageModel = service.getImageModel(),\n                imageSubmit = service.formatImage(image);\n            if (angular.isDefined(imageSubmit.id) && imageSubmit.id !== 'temporary') {\n                // update image\n                return imageModel.update({ id: institutionId, imageId: image.id }, {\n                    name: imageSubmit.name,\n                    description: imageSubmit.description,\n                    thumbnailUrl: imageSubmit.thumbnailUrl,\n                    url: imageSubmit.url,\n                    orderType: imageSubmit.orderType,\n                    assignedTo: imageSubmit.assignedTo\n                }).$promise.then(function(data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return true;\n                }, function(error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else {\n                // create new image\n                return imageModel.save({ id: institutionId }, {\n                    name: imageSubmit.name,\n                    description: imageSubmit.description,\n                    url: imageSubmit.url,\n                    assignedTo: imageSubmit.assignedTo\n                }).$promise.then(function(data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.insertedId;\n                }, function(error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        /**\n         * Save image order.\n         *\n         * @param {string} id - Institution TU profile mongo ID\n         * @param {Object} images\n         * @returns {Promise}\n         */\n        service.saveOrder = function(id, images) {\n            var institutionModel = service.getImagesOrderingModel();\n            return institutionModel.update({ id: id }, {\n                'images': service.formatForOrdering(images)\n            }).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.formatForOrdering = function(items) {\n            var formattedItems = [];\n            angular.forEach(items, function(item) {\n                formattedItems.push({\n                    'id': item.id,\n                    'orderType': item.orderType\n                });\n            });\n\n            return formattedItems;\n        };\n\n        /**\n         * Delete image.\n         *\n         * @param institutionId\n         * @param image\n         * @returns {*}\n         */\n        service.deleteImage = function(institutionId, image) {\n            service.setHasErrors(false);\n            var imageModel = service.getImageModel();\n            return imageModel.delete({ id: institutionId, imageId: image.id }).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set Image Uploading in progress.\n         *\n         * @param {Boolean} value\n         */\n        service.setImageUploadingInProgress = function(value) {\n            serviceMediaImages.imageUploadingInProgress = value;\n        };\n\n\n        /**\n         * Get Image Uploading in progress.\n         *\n         * @return {Boolean}\n         */\n        service.getImageUploadingInProgress = function() {\n            return serviceMediaImages.imageUploadingInProgress;\n        };\n\n        /**\n         * Set selected image.\n         *\n         * @param item\n         */\n        service.setSelectedImage = function(item) {\n            serviceMediaImages.selectedImage = item;\n        };\n\n        /**\n         * Get selected image\n         *\n         * @returns {*}\n         */\n        service.getSelectedImage = function() {\n            return serviceMediaImages.selectedImage;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerChange = function(triggerChange) {\n            serviceMediaImages.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerChange = function() {\n            return serviceMediaImages.triggerChange;\n        };\n\n        /**\n         * Set image items.\n         *\n         * @param items\n         * @param transform\n         */\n        service.setImageItems = function(items, transform) {\n            if (!angular.isDefined(transform)) {\n                transform = true;\n            }\n            if (transform) {\n                angular.forEach(items, function(value, key) {\n                    items[key][TmMediaService.typeOverview()] = false;\n                    angular.forEach(items[key].assignedTo, function(aValue) {\n                        if (aValue === TmMediaService.typeOverview()) {\n                            items[key][TmMediaService.typeOverview()] = true;\n                        }\n                    });\n                    /**\n                     * Set initial order\n                     * @type {{master: number, ug: number, pg: number}}\n                     */\n                    if (items[key].orderType === null) {\n                        items[key].orderType = {\n                            'master': 0\n                        };\n                    }\n                    var orderOverview = 0;\n                    if (angular.isDefined(items[key].orderType)) {\n                        if (angular.isDefined(items[key].orderType[TmMediaService.typeOverview()])) {\n                            orderOverview = items[key].orderType[TmMediaService.typeOverview()];\n                        }\n                    }\n                    items[key].orderType = {\n                        'master': orderOverview\n                    };\n                    if (angular.isDefined(items[key]._id)) {\n                        items[key].id = items[key]._id;\n                    }\n                    delete items[key].assignedTo;\n                    delete items[key]._id;\n                });\n            }\n\n            serviceMediaImages.imageItems = items;\n        };\n\n        /**\n         * Get image items.\n         *\n         * @returns {*}\n         */\n        service.getImageItems = function() {\n            return serviceMediaImages.imageItems;\n        };\n\n        /**\n         * Get image item.\n         * @param {int} defaultValue\n         */\n        service.getItemImage = function(defaultValue) {\n            if (angular.isUndefined(defaultValue)) {\n                defaultValue = 0;\n            }\n            var orderTypes = {};\n            orderTypes[TmMediaService.typeOverview()] = defaultValue;\n\n            return {\n                'id': '',\n                'name': '',\n                'description': '',\n                'master': true,\n                'orderType': orderTypes,\n                'url': ''\n            };\n        };\n\n        /**\n         * Reset image item.\n         *\n         * @param item\n         * @returns {*}\n         */\n        service.resetItem = function(item) {\n            item.master = true;\n            item.name = '';\n            item.description = '';\n\n            return item;\n        };\n\n        /**\n         * Format images.\n         *\n         * @param images\n         * @returns {*}\n         */\n        service.formatImages = function(images) {\n            angular.forEach(images, function(value, key) {\n                images[key] = service.formatImage(value);\n            });\n\n            return images;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} image\n         * @returns {Object}\n         */\n        service.formatImage = function(image) {\n            image.assignedTo = [];\n            if (image.master) {\n                image.assignedTo.push('master');\n            }\n            // remove data we don't want to send.\n            if (angular.isDefined(image.id) && parseInt(image.id, 10) === 0) {\n                delete image.id;\n            }\n            delete image.master;\n            delete image.order;\n\n            return image;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function(hasErrors) {\n            serviceMediaImages.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function() {\n            return serviceMediaImages.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function(isHighlighted) {\n            serviceMediaImages.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function() {\n            return serviceMediaImages.isHighlighted;\n        };\n\n        service.coreId = function(coreId) {\n            serviceMediaImages.coreId = coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function(type) {\n            serviceMediaImages.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function() {\n            return serviceMediaImages.type;\n        };\n\n        /**\n         * Replace item by item id\n         *\n         * @param key\n         */\n        service.replaceByKey = function(key) {\n            var imageItems = [];\n            angular.copy(service.getImageItems(), imageItems);\n            angular.forEach(imageItems, function(itemValue, itemKey) {\n                if (itemValue.id === key) {\n                    imageItems[itemKey] = service.getSelectedImage();\n                }\n            });\n            service.setImageItems(imageItems);\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerReset = function(triggerChange) {\n            serviceMediaImages.triggerChange = triggerChange;\n        };\n\n        service.getTriggerReset = function() {\n            return serviceMediaImages.triggerChange;\n        };\n\n        /**\n         * Submit is in progress.\n         *\n         * @param submitInProgress\n         */\n        service.setSubmitInProgress = function(submitInProgress) {\n            serviceMediaImages.submitInProgress = submitInProgress;\n        };\n\n        service.getSubmitInProgress = function() {\n            return serviceMediaImages.submitInProgress;\n        };\n\n        /**\n         * UploadedImagesCount object, contains {master:count, ug: count, pg: count}\n         *\n         * @param {Object} uploadedImagesCount\n         */\n        service.setUploadedImagesCount = function(uploadedImagesCount) {\n            serviceMediaImages.uploadedImagesCount = uploadedImagesCount;\n        };\n\n        service.getUploadedImagesCount = function() {\n            return serviceMediaImages.uploadedImagesCount;\n        };\n\n        service.getMaxImages = function() {\n            return maxImages;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmMediaImagesService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TmMediaService',\n            App.services.TmMediaImages\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaSocialMedias = function(\n        $scope,\n        constants,\n        TmProfileFactory,\n        NotifierFactory,\n        TmMediaSocialMediasService,\n        TmMediaService,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TmMediaSocialMediasService.coreId = 0;\n        $scope.socialMediaItems = TmMediaSocialMediasService.socialMediaItems();\n        $scope.itemSocialMedia = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = $scope.socialMediaItems[0];\n\n        TmMediaSocialMediasService.setType($scope.type);\n        WatchService.create($scope, TmProfileFactory.getData, function(newValue) {\n            if (newValue !== null) {\n                TmMediaSocialMediasService.coreId = newValue.id;\n                $scope.socialMediaItems = TmMediaSocialMediasService.processInput(newValue.socialMedia);\n                TmMediaSocialMediasService.setSelectedSocialMedia(TmMediaSocialMediasService.flattenArray(newValue.socialMedia));\n            }\n        });\n\n        WatchService.create($scope, TmMediaSocialMediasService.getSocialMediaItems, function(newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.socialMediaItems = newValue;\n            }\n        });\n\n        WatchService.create($scope, TmMediaSocialMediasService.getChanges, function(newValue) {\n            if (angular.isDefined(newValue)) {\n                $scope.socialMediaItems[$scope.type] = TmMediaSocialMediasService.flattenArray(newValue, true);\n            }\n        });\n\n        /**\n         * Filter change.\n         *\n         * @param type\n         */\n        $scope.filter = function(type) {\n            return type;\n        };\n\n        /**\n         * Select social media.\n         *\n         * @param {string} type\n         */\n        $scope.selectSocialMedia = function(type) {\n            $scope.type = type;\n            TmMediaSocialMediasService.setType(type);\n            TmMediaSocialMediasService.setTriggerChange(Math.random()); // reset right column changes\n            if (!($scope.socialMediaItems[$scope.type].master || $scope.socialMediaItems[$scope.type].ug || $scope.socialMediaItems[$scope.type].pg)) {\n                TmMediaSocialMediasService.setHighlighted(true);\n            }\n        };\n\n        $scope.selectedItem = function() {\n            return TmMediaSocialMediasService.getSelectedSocialMedia();\n        };\n\n        $scope.typeOverview = function() {\n            return TmMediaService.typeOverview();\n        };\n\n        $scope.typeUndergraduate = function() {\n            return TmMediaService.typeUndergraduate();\n        };\n\n        $scope.typePostgraduate = function() {\n            return TmMediaService.typePostgraduate();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaSocialMediasController', [\n            '$scope',\n            'constants',\n            'TmProfileFactory',\n            'NotifierFactory',\n            'TmMediaSocialMediasService',\n            'TmMediaService',\n            'WatchService',\n            App.controllers.TmMediaSocialMedias\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaSocialMediasSidebar = function(\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TmProfileFactory,\n        TmMediaSocialMediasService,\n        WatchService,\n        UrlService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        $scope.hasErrors = false;\n        // $scope.invalidCheckboxes = [];\n        $scope.invalidFields = [];\n        TmMediaSocialMediasService.displayTypesValid = false;\n\n        controller.onKeyUp = function ($event, type, index) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value;\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                $scope.selectedSocialMedia[type][index].url = url;\n            }\n        };\n\n        /**\n         * Reset Invalid Url\n         *\n         * @params {Integer} index\n         */\n        $scope.resetInvalidField = function(index) {\n            $scope.invalidFields[index] = false;\n        };\n\n        /**\n         * Reset Invalid Checkboxes\n         *\n         * @params {Integer} index\n         */\n        $scope.resetInvalidCheckbox = function(index) {\n            if ($scope.invalidCheckboxes[index]) {\n                $scope.invalidCheckboxes[index] = false;\n            }\n        };\n\n\n        controller.urlPattern = UrlService.getPattern();\n\n        /**\n         * Save form.\n         *\n         * @returns {boolean}\n         */\n        $scope.saveSocialMediaForm = function() {\n            $scope.invalidFields = [];\n            var invalidItems = [];\n            var socialMediaItem = TmMediaSocialMediasService.formatSocialMedia(\n                angular.copy($scope.selectedSocialMedia[$scope.type()])\n            );\n            if (angular.isArray(socialMediaItem) && socialMediaItem.length > 0) {\n                invalidItems = TmMediaSocialMediasService.socialMediaValidation(angular.copy($scope.selectedSocialMedia[$scope.type()]));\n                if (typeof invalidItems === 'undefined') {\n                    invalidItems = TmMediaSocialMediasService.socialMediaFormValidation($scope.forms.formSocialMedia);\n                }\n            }\n            TmMediaSocialMediasService.displayTypesValid = false;\n            TmMediaSocialMediasService.setHasErrors(false);\n\n            if ($scope.submitInProgress || !$scope.forms.formSocialMedia || !$scope.forms.formSocialMedia.$valid || (invalidItems && invalidItems.length > 0)) {\n                // $scope.invalidCheckboxes = [];\n                $scope.hasErrors = true;\n                angular.forEach(invalidItems, function(item) {\n                    if (item.invalid) {\n                        $scope.invalidCheckboxes[item.index] = item.invalid || false;\n                    } else if (item.invalidUrl) {\n                        $scope.invalidFields[item.index] = item.invalidUrl || false;\n                    }\n                });\n                return false;\n            }\n\n            $scope.hasErrors = false;\n            $scope.invalidFields = [];\n            // $scope.invalidCheckboxes = [];\n            $scope.submitInProgress = true;\n            var actionName = $scope.isEditMode($scope.type()) ? 'Updated' : 'Added';\n            TmMediaSocialMediasService.saveSocialMedia(TmMediaSocialMediasService.coreId, socialMediaItem)\n                .then(function(success) {\n                    $scope.submitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        'Social Media ' + actionName + ' (' + $scope.type() + ')'\n                    );\n                    if (success) {\n                        $scope.selectedSocialMediaBeforeChanges = angular.copy($scope.selectedSocialMedia);\n                        TmMediaSocialMediasService.setChanges(socialMediaItem);\n                    }\n                });\n        };\n\n        /**\n         * Clear social media item.\n         */\n        $scope.clearSocialMediaForm = function() {\n            $scope.selectedSocialMedia[$scope.type()][0].master = true;\n            $scope.selectedSocialMedia[$scope.type()][0].url = '';\n            $scope.invalidFields = [];\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedSocialMedia = function() {\n            return TmMediaSocialMediasService.getSelectedSocialMedia();\n        };\n\n        /**\n         * Get socialMedia items.\n         *\n         * @returns {*}\n         */\n        $scope.getSocialMediaItems = function() {\n            return TmMediaSocialMediasService.getSocialMediaItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean}\n         */\n        $scope.getHasErrors = function() {\n            return TmMediaSocialMediasService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function(value) {\n            TmMediaSocialMediasService.setHasErrors(value);\n        };\n\n        $scope.type = function() {\n            return TmMediaSocialMediasService.getType();\n        };\n\n        $scope.setDisplayTypesValidation = function(value) {\n            TmMediaSocialMediasService.displayTypesValid = value;\n        };\n\n        $scope.getDisplayTypesValidation = function() {\n            return TmMediaSocialMediasService.displayTypesValid;\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function(type) {\n            return $scope.selectedSocialMedia && $scope.selectedSocialMedia[type] ? true : false;\n        };\n\n        controller.initWatches = function() {\n            WatchService.create($scope, TmMediaSocialMediasService.getSelectedSocialMedia, function(selectedSocialMedia) {\n                if (selectedSocialMedia) {\n                    $scope.selectedSocialMediaBeforeChanges = selectedSocialMedia;\n                    $scope.selectedSocialMedia = angular.copy(selectedSocialMedia);\n                    // $scope.checkCheckboxes();\n                }\n            });\n\n            WatchService.create($scope, TmMediaSocialMediasService.getTriggerChange, function() {\n                if (angular.isDefined($scope.selectedSocialMediaBeforeChanges)) {\n                    $scope.selectedSocialMedia = angular.copy($scope.selectedSocialMediaBeforeChanges);\n                    // $scope.checkCheckboxes();\n                }\n                $scope.invalidFields = [];\n                // $scope.invalidCheckboxes = [];\n            });\n\n            //watch for social media type changes\n            WatchService.create($scope, TmMediaSocialMediasService.getType, function(socialMediaType) {\n                if (socialMediaType) {\n                    controller.selectedSocialMediaUrl = TmMediaSocialMediasService.getSelectedSocialMediaUrl(socialMediaType);\n                }\n            });\n\n            WatchService.create($scope, TmMediaSocialMediasService.getHighlighted, function(newValue) {\n                if (newValue) {\n                    $scope.isHighlighted = newValue;\n                    $timeout(function() {\n                        TmMediaSocialMediasService.setHighlighted(false);\n                        $scope.isHighlighted = false;\n                    }, 200);\n                }\n            });\n\n            WatchService.create($scope, TmProfileFactory.getSelectedMediaSubTabId, function(tabId) {\n                if (tabId === 3) {\n                    $timeout(function() {\n                        TmMediaSocialMediasService.setHighlighted(true);\n                    }, 200);\n                } else {\n                    $scope.invalidFields = [];\n                    // $scope.invalidCheckboxes = [];\n                }\n            });\n        };\n\n        controller.init = function() {\n            controller.initWatches();\n        };\n\n        // listen to social media tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isMediaTabSelected, function(isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaSocialMediasSidebar', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'TmMediaSocialMediasService',\n            'WatchService',\n            'UrlService',\n            App.controllers.TmMediaSocialMediasSidebar\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmMediaSocialMediasService = function ($resource, $q, $log, constants, TmMediaService, UrlService) {\n        var service = {};\n        var imageUrl = '/images/media/media-social-media.png';\n        var defaultName = '';\n        var socialMediaItems = [\n            'facebook',\n            'youtube',\n            'linkedin',\n            'twitter',\n            'other'\n        ];\n\n        service.getSocialMediaModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/social-media/:socialMediaId', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getInstitutionModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Save SocialMedia\n         *\n         * @param institutionId\n         * @param socialMedia\n         * @returns {*}\n         */\n        service.saveSocialMedia = function (institutionId, socialMedia) {\n            var socialMediaModel = service.getSocialMediaModel();\n\n            return socialMediaModel.update({ id: institutionId, socialMediaId: service.getType() },\n                socialMedia\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set selected socialMedia.\n         *\n         * @param {Object} item\n         */\n        service.setSelectedSocialMedia = function (item) {\n            service.selectedSocialMedia = item;\n        };\n\n        /**\n         * Get selected socialMedia\n         *\n         * @returns {Object}\n         */\n        service.getSelectedSocialMedia = function () {\n            return service.selectedSocialMedia;\n        };\n\n        /**\n         * Trigger change.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerChange = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger change value\n         *\n         * @returns {boolean}\n         */\n        service.getTriggerChange = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Get socialMedia items.\n         *\n         * @returns {Object}\n         */\n        service.getSocialMediaItems = function () {\n            return service.socialMediaItems;\n        };\n\n        service.setSocialMediaItems = function (items) {\n            service.socialMediaItems = items;\n        };\n\n        /**\n         * Get socialMedia item.\n         */\n        service.getItemSocialMedia = function () {\n            return {\n                'id': '',\n                'name': defaultName,\n                'description': '',\n                'master': true,\n                'url': '',\n                'imageUrl': imageUrl\n            };\n        };\n\n        /**\n         * get selected social media url.\n         *\n         * @param {String} type\n         * @returns {String}\n         */\n        service.getSelectedSocialMediaUrl = function (type) {\n            switch (type) {\n                case 'facebook':\n                    return 'https://www.facebook.com/universityrankings';\n                case 'youtube':\n                    return 'https://www.youtube.com/topuniversities';\n                case 'linkedin':\n                    return 'https://www.linkedin.com/company/qs';\n                case 'twitter':\n                    return 'https://twitter.com/worlduniranking';\n                default:\n                    return 'http://www.yourwebsite.com';\n            }\n        };\n\n        /**\n         * Reset socialMedia item.\n         *\n         * @returns {Object}\n         * @param item\n         */\n        service.resetItem = function (item) {\n            item.master = true;\n            item.url = '';\n            item.name = defaultName;\n            item.imageUrl = imageUrl;\n\n            return item;\n        };\n\n        /**\n         * Format socialMedias.\n         *\n         * @param socialMedias\n         * @returns {Object}\n         */\n        service.formatSocialMedias = function (socialMedias) {\n            angular.forEach(socialMedias, function (value, key) {\n                socialMedias[key] = service.formatSocialMedia(value);\n            });\n\n            return socialMedias;\n        };\n\n        /**\n         * Validate Social Media data\n         *\n         * @param {Object} socialMediaItem\n         * @returns {Object}\n         */\n        service.socialMediaValidation = function (socialMediaItem) {\n            var invalidItems = [];\n            angular.forEach(socialMediaItem, function (item, key) {\n                if ((item.url !== \"\") && !(item.master)) {\n                    socialMediaItem[key].url = \"\";\n                } else if ((item.url !== \"\") && !(item.master)) {\n                    invalidItems.push({\n                        invalid: true,\n                        index: key\n                    });\n                } else if (((item.url === \"\") || (item.url === undefined)) && (item.master)) {\n                    invalidItems.push({\n                        invalidUrl: true,\n                        index: key\n                    });\n                }\n                else if (!(item.url.match(UrlService.getPattern())) && (item.master || item.pg || item.ug)){\n                    invalidItems.push({\n                        invalidUrl: true,\n                        index: key\n                    });\n                }\n\n            });\n            if (invalidItems.length > 0) {\n                return invalidItems;\n            }\n        };\n\n        service.socialMediaFormValidation = function (socialMediaItem) {\n            var invalidItems = [];\n            if (angular.isDefined(socialMediaItem)) {\n                angular.forEach(socialMediaItem.$error.url, function (error) {\n                    var key = error.$name.charAt(error.$name.length - 1);\n                    invalidItems.push({\n                        invalidUrl: true,\n                        index: key\n                    });\n                });\n            }\n\n            return invalidItems;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} socialMediaItem\n         * @returns {Object}\n         */\n        service.formatSocialMedia = function (socialMediaItem) {\n            var output = [];\n\n            angular.forEach(socialMediaItem, function (item, key) {\n                if ((item.master) && item.url !== \"\") { // item is set to profile, we'll save it\n                    var tmpOutput = {};\n                    tmpOutput.url = item.url;\n                    tmpOutput.assignedTo = [];\n                    if (item.master) {\n                        tmpOutput.assignedTo.push('master');\n                    }\n                    output.push(tmpOutput);\n                }\n            });\n            return output;\n        };\n\n        service.setChanges = function (changes) {\n            service.changes = changes;\n        };\n\n        service.getChanges = function () {\n            return service.changes;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function (isHighlighted) {\n            service.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function () {\n            return service.isHighlighted;\n        };\n\n        service.coreId = function (coreId) {\n            service.coreId = coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function (type) {\n            service.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function () {\n            return service.type;\n        };\n\n        service.socialMediaItems = function () {\n            return socialMediaItems;\n        };\n\n        service.getSocialMediaObject = function () {\n            var socialMedia = {};\n            angular.forEach(socialMediaItems, function (mediaType) {\n                socialMedia[mediaType] = {};\n                angular.forEach(TmMediaService.getTypes(), function (profileType) {\n                    socialMedia[mediaType][profileType] = false;\n                });\n            });\n\n            return socialMedia;\n        };\n\n        service.assignData = function (inputData, socialMedia) {\n            angular.forEach(inputData, function (mediaType, mediaTypeValue) {\n                angular.forEach(mediaType, function () {\n                    socialMedia[mediaTypeValue][TmMediaService.typeOverview()] = true;\n                });\n            });\n\n            return socialMedia;\n        };\n\n        service.processInput = function (inputData) {\n            var socialMedia = service.getSocialMediaObject();\n            socialMedia = service.assignData(inputData, socialMedia);\n\n            return socialMedia;\n        };\n\n        /**\n         * Flattens inputData for left column\n         *\n         * @param {Object} inputData\n         * @param {boolean} forType\n         * @returns {*}\n         */\n        service.flattenArray = function (inputData, forType) {\n            if (angular.isUndefined(forType)) {\n                forType = false;\n            }\n            var typeMaster = TmMediaService.typeOverview();\n\n            if (forType) {\n                var outputData = {};\n\n                angular.forEach(inputData, function (inputDataValue, inputDataKey) {\n                    if (angular.isDefined(inputDataValue.assignedTo)) {\n                        angular.forEach(inputData[inputDataKey].assignedTo, function (assignedType) {\n                            if (assignedType === typeMaster) {\n                                outputData[typeMaster] = true;\n                            }\n                        });\n                    }\n                });\n\n                inputData = outputData;\n            } else {\n                angular.forEach(socialMediaItems, function (mediaType) {\n                    if (angular.isDefined(inputData) && angular.isDefined(inputData[mediaType])) {\n                        angular.forEach(inputData[mediaType], function (objectData, dataKey) {\n                            inputData[mediaType][dataKey][typeMaster] = true;\n                            inputData[mediaType][dataKey].display = true;\n                            if (angular.isDefined(inputData[mediaType][dataKey].assignedTo)) {\n                                angular.forEach(inputData[mediaType][dataKey].assignedTo, function (assignedType) {\n                                    if (assignedType === typeMaster) {\n                                        inputData[mediaType][dataKey][typeMaster] = true;\n                                    }\n                                });\n                                delete (inputData[mediaType][dataKey].assignedTo);\n                            }\n                        });\n                        if (inputData[mediaType].length === 0) {\n                            inputData[mediaType] = [];\n                            inputData[mediaType].push(service.getEmpty(true, true));\n                        }\n                    } else {\n                        if (angular.isUndefined(inputData) || angular.isArray(inputData)) {\n                            inputData = {};\n                        }\n                        inputData[mediaType] = [];\n                        inputData[mediaType].push(service.getEmpty(true, true));\n                    }\n                });\n            }\n\n            return inputData;\n        };\n\n        /**\n         *\n         * @param {boolean} initialValue\n         * @param {boolean} displayValue\n         * @returns {{url: string, display: boolean, master: boolean, ug: boolean, pg: boolean}}\n         */\n        service.getEmpty = function (initialValue, displayValue) {\n            return {\n                'url': '',\n                'display': displayValue,\n                'master': initialValue\n            };\n        };\n\n        service.resetDataForType = function (data, type) {\n            angular.forEach(data, function (dataValue, dataKey) {\n                if (dataKey === type) {\n                    angular.forEach(data[dataKey], function (dataSubValue, dataSubKey) {\n                        data[dataKey][dataSubKey].master = false;\n                        data[dataKey][dataSubKey].url = '';\n                    });\n                }\n            });\n\n            return data;\n        };\n\n        service.assignNewData = function (values, type, currentlySelected) {\n            var outputValues = angular.copy(values);\n            angular.forEach(values, function (objectData, valueKey) {\n                if (angular.isDefined(objectData.assignedTo)) {\n                    outputValues[valueKey][TmMediaService.typeOverview()] = false;\n                    outputValues[valueKey][TmMediaService.typeUndergraduate()] = false;\n                    outputValues[valueKey][TmMediaService.typePostgraduate()] = false;\n                    angular.forEach(objectData.assignedTo, function (assignedType) {\n                        outputValues[valueKey][assignedType] = true;\n                    });\n                    delete (outputValues[valueKey].assignedTo);\n                }\n            });\n            var copySelected = angular.copy(currentlySelected);\n            angular.forEach(copySelected, function (mediaType, mediaTypeKey) {\n                if (mediaTypeKey === type) {\n                    copySelected[mediaTypeKey] = outputValues;\n                }\n            });\n\n            return copySelected;\n        };\n\n        service.applyUpdate = function (type, values) {\n            var currentlySelected = service.getSelectedSocialMedia();\n\n            return service.assignNewData(values, type, currentlySelected);\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmMediaSocialMediasService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TmMediaService',\n            'UrlService',\n            App.services.TmMediaSocialMediasService\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers: {}});\n\n    App.controllers.TmMediaBrochures = function (\n        $scope,\n        constants,\n        TmProfileFactory,\n        NotifierFactory,\n        TmMediaBrochuresService,\n        TmMediaService,\n        ModalService,\n        $filter,\n        orderBy,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        TmMediaBrochuresService.coreId = 0;\n        $scope.brochureItems = [];\n        $scope.itemBrochure = {};\n        $scope.displayLocationDeletePopup = true;\n        $scope.type = TmMediaService.typeOverview();\n\n        TmMediaBrochuresService.setType(TmMediaService.typeOverview());\n\n        WatchService.create($scope, TmProfileFactory.getData, function (newValue) {\n            if (newValue !== null) {\n                TmMediaBrochuresService.setSelectedBrochure(TmMediaBrochuresService.getItemBrochure());\n                angular.copy(newValue.brochures, $scope.brochureItems);\n                TmMediaBrochuresService.coreId = newValue.id;\n                TmMediaBrochuresService.setBrochureItems($scope.brochureItems);\n                $scope.filteredBrochureItems = $filter('filter')($scope.brochureItems, {master: true});\n                $scope.filteredBrochureItems = orderBy($scope.filteredBrochureItems, 'orderType.' + $scope.type, false);\n            }\n        });\n\n        WatchService.create($scope, TmMediaBrochuresService.getBrochureItems, function (newValue, oldValue) {\n            if (!angular.equals(oldValue, newValue)) {\n                $scope.brochureItems = newValue;\n            }\n        });\n\n        WatchService.create($scope, TmMediaBrochuresService.getTriggerChange, function () {\n            if (angular.isDefined($scope.selectedItemId()) && $scope.selectedItemId().length > 0) {\n                TmMediaBrochuresService.replaceByKey($scope.selectedItemId());\n            }\n            var selectedBrochure = TmMediaBrochuresService.getSelectedBrochure();\n            $scope.filter('master');\n        });\n\n        $scope.sortableOptions = {\n            disabled: false,\n            'ui-floating': false,\n            start: function () {\n                controller.initialList = [];\n                angular.copy($scope.filteredBrochureItems, controller.initialList);\n            },\n            update: function (e, ui) {\n                var validateItems = TmMediaService.validateTypes($scope.brochureItems);\n                if (true !== validateItems) {\n                    ui.item.sortable.cancel();\n                }\n            },\n            stop: function () {\n                var validateItems = TmMediaService.validateTypes($scope.brochureItems);\n                if (true === validateItems) {\n                    var assignedOrder = 1;\n                    // change brochures order\n                    for (var index = 0; index < $scope.filteredBrochureItems.length; index++) {\n                        if ($scope.filteredBrochureItems[index][$scope.type]) {\n                            $scope.filteredBrochureItems[index].orderType[$scope.type] = assignedOrder;\n                            assignedOrder++;\n                        }\n                    }\n\n                    $scope.sortableOptions.disabled = false;\n                    TmMediaBrochuresService.saveOrder(TmMediaBrochuresService.coreId, $scope.brochureItems)\n                        .then(function (success) {\n                            NotifierFactory.show(\n                                success ? 'success' : 'error',\n                                success ? 'Success!' : 'Failure!',\n                                'Brochure Order Save'\n                            );\n                            TmMediaBrochuresService.setSelectedBrochure(TmMediaBrochuresService.getItemBrochure());\n                        })\n                        .finally(function () {\n                            $scope.sortableOptions.disabled = false;\n                        });\n                } else {\n                    NotifierFactory.show(\n                        'error',\n                        'Failure!',\n                        'Invalid items in brochure list'\n                    );\n                    TmMediaBrochuresService.setSelectedBrochure(validateItems);\n                    TmMediaBrochuresService.displayTypesValid = true;\n\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Filter change.\n         *\n         * @param type\n         */\n        $scope.filter = function (type) {\n            var validateItems = TmMediaService.validateTypes($scope.brochureItems);\n            if (true === validateItems) {\n                $scope.type = type;\n                var params = {};\n                params[type] = true;\n                $scope.filteredBrochureItems = $filter('filter')($scope.brochureItems, params);\n                $scope.filteredBrochureItems = orderBy($scope.filteredBrochureItems, 'orderType.' + type, false);\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in brochure list'\n                );\n                TmMediaBrochuresService.setSelectedBrochure(validateItems);\n                TmMediaBrochuresService.displayTypesValid = true;\n\n                return false;\n            }\n        };\n\n        /**\n         * Select brochure.\n         *\n         * @param {Object} item\n         */\n        $scope.selectBrochure = function (item) {\n            item = angular.copy(item);\n            var validateItems = TmMediaService.validateTypes($scope.brochureItems);\n            if (true === validateItems) {\n                TmMediaBrochuresService.setHasErrors(false);\n                TmMediaBrochuresService.displayTypesValid = false;\n                $scope.itemBrochure = TmMediaBrochuresService.getItemBrochure();\n                if (angular.isDefined(item)) {\n                    TmMediaBrochuresService.setSelectedBrochure(item);\n                } else {\n                    TmMediaBrochuresService.setHasErrors(false);\n                    TmMediaBrochuresService.setHighlighted(true);\n                    TmMediaBrochuresService.setSelectedBrochure($scope.itemBrochure);\n                }\n                TmMediaBrochuresService.setTriggerReset(Math.random());\n            } else {\n                NotifierFactory.show(\n                    'error',\n                    'Failure!',\n                    'Invalid items in brochure list'\n                );\n                TmMediaBrochuresService.setSelectedBrochure(validateItems);\n                TmMediaBrochuresService.displayTypesValid = true;\n\n                return false;\n            }\n        };\n\n        $scope.selectedItem = function () {\n            return TmMediaBrochuresService.getSelectedBrochure();\n        };\n\n        $scope.selectedItemId = function () {\n            return TmMediaBrochuresService.getSelectedBrochure().id;\n        };\n\n        /**\n         * Delete brochure.\n         *\n         * @param item\n         */\n        $scope.deleteBrochure = function (item) {\n            var itemName = angular.isDefined(item.name) && item.name !== null ? ': ' + item.name : '';\n            var modalOptions = {\n                closeButtonText: 'No',\n                actionButtonText: 'Yes',\n                headerText: 'Delete Brochure' + itemName + ' ?',\n                bodyText: 'Are you sure you wish to delete this brochure?',\n            };\n            ModalService.show({}, modalOptions).then(function (result) {\n                TmMediaBrochuresService.deleteBrochure(TmMediaBrochuresService.coreId, item)\n                    .then(function (success) {\n                        $scope.submitInProgress = false;\n                        NotifierFactory.show(\n                            success ? 'success' : 'error',\n                            success ? 'Success!' : 'Failure!',\n                            'Delete Brochure'\n                        );\n                        if (success) {\n                            TmMediaBrochuresService.setSelectedBrochure(TmMediaBrochuresService.getItemBrochure());\n                            $scope.brochureItems.splice(TmMediaService.objectSearch($scope.brochureItems, item.id), 1);\n                            $scope.filteredBrochureItems.splice(TmMediaService.objectSearch($scope.filteredBrochureItems, item.id), 1);\n\n\n                            var assignedOrder = 1;\n                            for (var index = 0; index < $scope.filteredBrochureItems.length; index++) {\n                                if ($scope.filteredBrochureItems[index][$scope.type]) {\n                                    $scope.filteredBrochureItems[index].orderType[$scope.type] = assignedOrder;\n                                    assignedOrder++;\n                                }\n                            }\n                            $scope.filteredBrochureItems = orderBy($scope.filteredBrochureItems, 'orderType.' + $scope.type, false);\n                        }\n                    });\n            });\n        };\n\n        $scope.typeOverview = function () {\n            return TmMediaService.typeOverview();\n        };\n\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaBrochuresController', [\n            '$scope',\n            'constants',\n            'TmProfileFactory',\n            'NotifierFactory',\n            'TmMediaBrochuresService',\n            'TmMediaService',\n            'ModalService',\n            '$filter',\n            'orderByFilter',\n            'WatchService',\n            App.controllers.TmMediaBrochures\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.TmMediaBrochuresSidebar = function (\n        $scope,\n        $resource,\n        $location,\n        $timeout,\n        constants,\n        NotifierFactory,\n        TmProfileFactory,\n        TmMediaBrochuresService,\n        TmMediaService,\n        WatchService,\n        UrlService,\n        ObjectService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n        $scope.hasErrors = true;\n        TmMediaBrochuresService.displayTypesValid = false;\n        TmMediaBrochuresService.setHasErrors(false);\n\n        controller.onKeyUp = function ($event) {\n            if ($event.keyCode === 13) {\n                return;\n            }\n            var url = $event.target.value,\n                variableName = $event.target.getAttribute('ng-model');\n\n            if (url && url.length > 5 && (url.indexOf('http') !== 0 || url.indexOf('http') === -1)) {\n                url = UrlService.prependHttp(url);\n                if (variableName) {\n                    ObjectService.set($scope, variableName, url);\n                }\n            }\n        };\n\n        controller.urlPattern = UrlService.getPattern();\n\n        /**\n         * Save brochure form.\n         *\n         * @param item\n         * @returns {boolean}\n         */\n        $scope.saveBrochureForm = function (item) {\n            var brochureItem = angular.copy(item);\n            TmMediaBrochuresService.displayTypesValid = false;\n            TmMediaBrochuresService.setHasErrors(false);\n            $scope.isInvalidTitle = false;\n            $scope.isInvalidUrl = false;\n            var actionName = 'Added';\n            if (brochureItem.id.length > 0) {\n                actionName = 'Updated';\n            }\n            if (!TmMediaService.isValidType(item)) {\n                TmMediaBrochuresService.displayTypesValid = true;\n            }\n            if (!angular.isDefined(item.name) || !(angular.isDefined(item.name) && item.name.length > 0)) {\n                $scope.isInvalidTitle = true;\n            }\n            if (!angular.isDefined(item.url) || !(angular.isDefined(item.url) && item.url.length > 0)) {\n                $scope.isInvalidUrl = true;\n            }\n            if ($scope.isInvalidTitle || $scope.isInvalidUrl || TmMediaBrochuresService.displayTypesValid) {\n                $scope.setHasErrors(true);\n                return false;\n            }\n            if (!(item.url.match(controller.urlPattern))) {\n                $scope.isInvalidUrl = true;\n                $scope.setHasErrors(true);\n                return false;\n            }\n            if ($scope.submitInProgress || !$scope.forms.formBrochure || !$scope.forms.formBrochure.$valid\n            ) {\n                NotifierFactory.show(\n                    'error',\n                    'Error: Please fill in all required fields',\n                    actionName + ' Brochure'\n                );\n\n                return false;\n            }\n            $scope.submitInProgress = true;\n            TmMediaBrochuresService.saveBrochure(TmMediaBrochuresService.coreId, brochureItem)\n                .then(function (success) {\n                    $scope.submitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Successfully!' : 'Failure!',\n                        'Brochure ' + actionName\n                    );\n                    if (success) {\n                        if (brochureItem.id.length === 0) {\n                            item.id = success;\n                            TmMediaBrochuresService.getBrochureItems().unshift(item);\n                            TmMediaBrochuresService.setSelectedBrochure(item);\n                            $scope.selectedBrochure = angular.copy(TmMediaBrochuresService.getSelectedBrochure());\n                        }\n\n                        TmMediaBrochuresService.setSelectedBrochure(item);\n                        TmMediaBrochuresService.setHasErrors(false);\n                        $scope.selectedBrochureBeforeChanges = item;\n                    }\n                    /**\n                     * Tell other controllers to apply filter on changes\n                     */\n                    TmMediaBrochuresService.setTriggerChange(Math.random());\n                });\n        };\n\n        /**\n         * Clear item.\n         *\n         * @param item\n         */\n        $scope.clearBrochureForm = function (item) {\n            if (angular.isDefined(item)) {\n                $scope.itemBrochure = item;\n            } else {\n                $scope.itemBrochure = TmMediaBrochuresService.getItemBrochure();\n            }\n\n            $scope.itemBrochure = TmMediaBrochuresService.resetItem($scope.itemBrochure);\n            TmMediaBrochuresService.setSelectedBrochure($scope.itemBrochure);\n            $scope.setDisplayTypesValidation(false);\n            delete $scope.isInvalidTitle;\n            delete $scope.isInvalidUrl;\n        };\n\n        /**\n         * Get selected item.\n         *\n         * @returns {*}\n         */\n        $scope.getSelectedBrochure = function () {\n            return TmMediaBrochuresService.getSelectedBrochure();\n        };\n\n        /**\n         * Get brochure items.\n         *\n         * @returns {*}\n         */\n        $scope.getBrochureItems = function () {\n            return TmMediaBrochuresService.getBrochureItems();\n        };\n\n        /**\n         * Get has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        $scope.getHasErrors = function () {\n            return TmMediaBrochuresService.getHasErrors();\n        };\n\n        $scope.setHasErrors = function (value) {\n            TmMediaBrochuresService.setHasErrors(value);\n        };\n\n        $scope.setIsInvalidTitle = function (value) {\n            $scope.isInvalidTitle = value;\n        };\n\n        $scope.setIsInvalidUrl = function (value) {\n            $scope.isInvalidUrl = value;\n        };\n\n        $scope.type = function () {\n            return TmMediaBrochuresService.getType();\n        };\n\n        $scope.setDisplayTypesValidation = function (value) {\n            TmMediaBrochuresService.displayTypesValid = value;\n        };\n\n        $scope.getDisplayTypesValidation = function () {\n            return TmMediaBrochuresService.displayTypesValid;\n        };\n\n        /**\n         * Is edit mode?\n         *\n         * @returns {boolean}\n         */\n        $scope.isEditMode = function () {\n            return $scope.selectedBrochure && $scope.selectedBrochure.id ? true : false;\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, TmMediaBrochuresService.getSelectedBrochure, function (selectedBrochure) {\n                $scope.isInvalidUrl = false;\n                $scope.isInvalidTitle = false;\n                $scope.selectedBrochureBeforeChanges = angular.copy(selectedBrochure);\n                $scope.selectedBrochure = selectedBrochure;\n            });\n\n            WatchService.create($scope, TmMediaBrochuresService.getHasErrors, function (newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.hasErrors = newValue;\n                }\n            });\n\n            WatchService.create($scope, TmMediaBrochuresService.getTriggerReset, function (newValue, oldValue) {\n                if (!angular.equals(oldValue, newValue)) {\n                    $scope.selectedBrochure = angular.copy($scope.selectedBrochureBeforeChanges);\n                }\n            });\n\n            WatchService.create($scope, TmMediaBrochuresService.getHighlighted, function (newValue) {\n                if (newValue) {\n                    $scope.isHighlighted = newValue;\n                    $timeout(function () {\n                        TmMediaBrochuresService.setHighlighted(false);\n                        $scope.isHighlighted = false;\n                    }, 200);\n                }\n            });\n\n            WatchService.create($scope, TmProfileFactory.getSelectedMediaSubTabId, function (tabId) {\n                if (tabId === 4) {\n                    $timeout(function () {\n                        TmMediaBrochuresService.setHighlighted(true);\n                    }, 200);\n                } else {\n                    delete $scope.isInvalidTitle;\n                    delete $scope.isInvalidUrl;\n                    delete TmMediaBrochuresService.displayTypesValid;\n                }\n            });\n\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isMediaTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmMediaBrochuresSidebarController', [\n            '$scope',\n            '$resource',\n            '$location',\n            '$timeout',\n            'constants',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'TmMediaBrochuresService',\n            'TmMediaService',\n            'WatchService',\n            'UrlService',\n            'ObjectService',\n            App.controllers.TmMediaBrochuresSidebar\n        ]);\n\n} (window.angular));\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services: {}});\n\n    App.services.TmMediaBrochuresService = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        TmMediaService,\n        TmMediaVideosService\n    ) {\n        var service = {};\n        service.triggerChange = 0;\n\n        service.getBrochureModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/brochure/:brochureId', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        service.getBrochuresOrderingModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/brochuresOrder', null, {\n                update: {method: 'PATCH'}\n            });\n        };\n\n        /**\n         * Save Brochure\n         *\n         * @param institutionId\n         * @param brochure\n         * @returns {*}\n         */\n        service.saveBrochure = function (institutionId, brochure) {\n            var brochureModel = service.getBrochureModel(),\n                brochureSubmit = service.formatBrochure(brochure);\n            if (angular.isDefined(brochureSubmit.id) && brochureSubmit.id.length > 0) {\n                // update brochure\n                return brochureModel.update(\n                    {id: institutionId, brochureId: brochure.id},\n                    {\n                        name: brochureSubmit.name,\n                        url: brochureSubmit.url,\n                        orderType: brochureSubmit.orderType,\n                        assignedTo: brochureSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return true;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            } else {\n                // create new brochure\n                return brochureModel.save(\n                    {id: institutionId, brochureId: brochureSubmit.id},\n                    {\n                        name: brochureSubmit.name,\n                        url: brochureSubmit.url,\n                        orderType: brochureSubmit.orderType,\n                        assignedTo: brochureSubmit.assignedTo\n                    }\n                ).$promise.then(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    return data.insertedId;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    return false;\n                });\n            }\n        };\n\n        /**\n         * Save brochure order.\n         *\n         * @param {string} id - Institution TU profile mongo ID\n         * @param {Object} brochures\n         * @returns {Promise}\n         */\n        service.saveOrder = function (id, brochures) {\n            var institutionModel = service.getBrochuresOrderingModel();\n\n            return institutionModel.update(\n                {id: id},\n                {'brochures': TmMediaVideosService.formatForOrdering(brochures)}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Delete brochure.\n         *\n         * @param institutionId\n         * @param brochure\n         * @returns {*}\n         */\n        service.deleteBrochure = function (institutionId, brochure) {\n            service.setHasErrors(false);\n            var brochureModel = service.getBrochureModel();\n            return brochureModel.delete(\n                {id: institutionId, brochureId: brochure.id}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Set selected brochure.\n         *\n         * @param item\n         */\n        service.setSelectedBrochure = function (item) {\n            service.selectedBrochure = item;\n        };\n\n        service.replaceByKey = function (key) {\n            angular.forEach(service.getBrochureItems(), function(itemValue, itemKey) {\n                if(itemValue.id === key) {\n                    service.getBrochureItems()[itemKey] = service.getSelectedBrochure();\n                }\n            });\n        };\n\n        /**\n         * Get selected brochure\n         *\n         * @returns {*}\n         */\n        service.getSelectedBrochure = function () {\n            return service.selectedBrochure;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerChange = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerChange = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Trigger filter.\n         *\n         * @param triggerChange\n         */\n        service.setTriggerReset = function (triggerChange) {\n            service.triggerChange = triggerChange;\n        };\n\n        /**\n         * Get trigger filter value\n         *\n         * @returns {*}\n         */\n        service.getTriggerReset = function () {\n            return service.triggerChange;\n        };\n\n        /**\n         * Set brochure items.\n         *\n         * @param items\n         * @param transform\n         */\n        service.setBrochureItems = function (items, transform) {\n            if (!angular.isDefined(transform)) {\n                transform = true;\n            }\n            if (transform) {\n                var typeMaster = TmMediaService.typeOverview();\n\n                angular.forEach(items, function (value, key) {\n                    items[key][typeMaster] = true;\n                    angular.forEach(items[key].assignedTo, function (aValue) {\n                        if (aValue === typeMaster) {\n                            items[key][typeMaster] = true;\n                        }\n                    });\n                    /**\n                     * Set initial order\n                     * @type {{master: number, ug: number, pg: number}}\n                     */\n                    if (items[key].orderType === null) {\n                        items[key].orderType = {\n                            'master': 0\n                        };\n                    }\n                    var orderOverview = 0;\n                    if (angular.isDefined(items[key].orderType)) {\n                        if (angular.isDefined(items[key].orderType[typeMaster])) {\n                            orderOverview = items[key].orderType[typeMaster];\n                        }\n                    }\n                    items[key].orderType = {\n                        'master': orderOverview\n                    };\n                    if (angular.isDefined(items[key]._id)) {\n                        items[key].id = items[key]._id;\n                    }\n                    delete items[key].assignedTo;\n                    delete items[key]._id;\n                });\n            }\n\n            service.brochureItems = items;\n        };\n\n        /**\n         * Get brochure items.\n         *\n         * @returns {*}\n         */\n        service.getBrochureItems = function () {\n            return service.brochureItems;\n        };\n\n        /**\n         * Get brochure item.\n         */\n        service.getItemBrochure = function () {\n            var orderTypes = {};\n            orderTypes[TmMediaService.typeOverview()] = 0;\n            return {\n                'id': '',\n                'name': '',\n                'description': '',\n                'master': true,\n                'orderType': orderTypes,\n                'url': '',\n                'imageUrl': null\n            };\n        };\n\n        /**\n         * Reset brochure item.\n         *\n         * @param item\n         * @returns {*}\n         */\n        service.resetItem = function (item) {\n            item.master = true;\n            item.url = '';\n            item.name = '';\n            item.imageUrl = null;\n\n            return item;\n        };\n\n        /**\n         * Format brochures.\n         *\n         * @param brochures\n         * @returns {*}\n         */\n        service.formatBrochures = function (brochures) {\n            angular.forEach(brochures, function (value, key) {\n                brochures[key] = service.formatBrochure(value);\n            });\n\n            return brochures;\n        };\n\n        /**\n         * Format to match db data.\n         *\n         * @param {Object} brochure\n         * @returns {Object}\n         */\n        service.formatBrochure = function (brochure) {\n            brochure.assignedTo = [];\n            if (brochure.master) {\n                brochure.assignedTo.push('master');\n            }\n            /**\n             * Remove data we don't want to send.\n             */\n            if (angular.isDefined(brochure.id) && parseInt(brochure.id, 10) === 0) {\n                delete brochure.id;\n            }\n            delete brochure.master;\n            delete brochure.order;\n\n            return brochure;\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        /**\n         * Sets is highlighted.\n         *\n         * @param {boolean} isHighlighted\n         */\n        service.setHighlighted = function (isHighlighted) {\n            service.isHighlighted = isHighlighted;\n        };\n\n        /**\n         * Gets is Highlighted.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHighlighted = function () {\n            return service.isHighlighted;\n        };\n\n        service.coreId = function (coreId) {\n            service.coreId = coreId;\n        };\n\n        /**\n         * Set type.\n         *\n         * @returns {*}\n         */\n        service.setType = function (type) {\n            service.type = type;\n        };\n\n        /**\n         * Get type.\n         *\n         * @returns {*}\n         */\n        service.getType = function () {\n            return service.type;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmMediaBrochuresService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'TmMediaService',\n            'TmMediaVideosService',\n            App.services.TmMediaBrochuresService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.tuProfilePublish = function (\n        $scope,\n        constants,\n        PublishService,\n        InstitutionFactory,\n        TuProfileFactory,\n        TuProfileHistoryLogFactory,\n        UserFactory,\n        WebSocketsService,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.subscribedTo = [];\n        $scope.institutionData = {};\n        $scope.sections = {};\n        $scope.institutionId = null;\n\n        /**\n         * Actions to do when publishing is triggered.\n         *\n         * @param {Object} section\n         */\n        $scope.handlePublish = function (section) {\n            section.publishDisabled = true;\n            section.status = constants.publishStatus.pending;\n            section.statusMessage = '';\n            PublishService.publish($scope.institutionId, section.type).then(function (response) {\n                controller.publishCallback(section, response);\n            });\n        };\n\n        /**\n         * Publishing callback.\n         *\n         * @param {Object} section\n         * @param {Object} response\n         * @returns {boolean}\n         */\n        controller.publishCallback = function (section, response) {\n            if (!response || !angular.isDefined(response.feedId)) {\n                section.status = constants.publishStatus.failure;\n                return false;\n            }\n            PublishService.setStatus(constants.publishStatus.pending);\n            section.feedId = response.feedId;\n            section.status = constants.publishStatus.pending;\n        };\n\n        /**\n         * Subscribe to all available publishes\n         */\n        controller.publishSubscribe = function() {\n            angular.forEach($scope.sections, function (section) {\n                var subscribeType = $scope.institutionId + section.type;\n                if (controller.subscribedTo.indexOf(subscribeType) === -1) {\n                    controller.subscribedTo.push(subscribeType);\n                    WebSocketsService.subscribe(subscribeType, 'PublishStatus' + subscribeType, function (response) {\n                        controller.sectionPublishStatusCallback(section, response);\n                    });\n                }\n            });\n        };\n\n        controller.sectionPublishStatusCallback = function (section, response) {\n            section.publishDisabled = true;\n            var status = response && response.status || constants.publishStatus.failure;\n            section.status = status;\n            switch (status) {\n                case constants.publishStatus.failure:\n                    section.publishDisabled = false;\n                    section.statusMessage = PublishService.convertErrorMessage(\n                        response.statusMessage,\n                        UserFactory.isClient()\n                    );\n                    TuProfileHistoryLogFactory.setReload(true);\n                    break;\n                case constants.publishStatus.success:\n                    section.publishDisabled = false;\n                    section.statusMessage = response.statusMessage;\n                    // Update nodeId\n                    section.viewDisabled = !response.nodeId;\n                    section.url = constants.drupal.tu.url + '/node/' + response.nodeId;\n                    TuProfileHistoryLogFactory.setReload(true);\n                    if (section.type === 'master') {\n                        controller.updateStarsSection(response);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        /**\n         * Updates stars section based on master section\n         *\n         * @param {array} response\n         */\n        controller.updateStarsSection = function (response) {\n            for (var i = 0; i < $scope.sections.length; i++) {\n                if ($scope.sections[i].type === 'stars') {\n                    $scope.sections[i].viewDisabled = !response.nodeId;\n                    $scope.sections[i].url = constants.drupal.tu.url + '/node/' + response.nodeId;\n                }\n            }\n        };\n\n        /**\n         * Handle publish statuses response.\n         *\n         * @param {Promise.Object} publishStatus\n         */\n        controller.publishStatusCallback = function (publishStatus) {\n            angular.forEach($scope.sections, function(section) {\n                section.publishDisabled = true;\n                if (angular.isDefined(publishStatus[section.type])) {\n                    section.status = publishStatus[section.type].status;\n                    if (section.status.length === 0 ||\n                        section.status === constants.publishStatus.success ||\n                        section.status === constants.publishStatus.failure\n                    ) {\n                        section.publishDisabled = false;\n                    }\n                    section.statusMessage = PublishService.convertErrorMessage(\n                        publishStatus[section.type].message,\n                        UserFactory.isClient()\n                    );\n                }\n            });\n        };\n\n        /**\n         * Initialize watches.\n         */\n        controller.initWatches = function () {\n            // watch for active institution changes\n            WatchService.create($scope, InstitutionFactory.getData, function (newValue) {\n                if (newValue) {\n                    $scope.institutionData = newValue;\n                    $scope.institutionId = newValue.id;\n                    $scope.sections = PublishService.getSections(!UserFactory.isClient(), $scope.institutionData);\n                    controller.publishSubscribe($scope.sections);\n                    // get publishing statuses\n                    PublishService.getPublishStatus($scope.institutionId).then(function (response) {\n                        controller.publishStatusCallback(response);\n                    });\n                }\n            });\n        };\n\n        /**\n         * @constructor\n         */\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to publish tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isPublishTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfilePublishController', [\n            '$scope',\n            'constants',\n            'TuProfilePublishService',\n            'InstitutionFactory',\n            'TuProfileFactory',\n            'TuProfileHistoryLogFactory',\n            'UserFactory',\n            'WebSocketsService',\n            'WatchService',\n            App.controllers.tuProfilePublish\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tuProfilePublishLogs = function (\n        $scope,\n        PublishService,\n        InstitutionFactory,\n        TuProfileFactory,\n        TuProfileHistoryLogFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.updatePublishLogs = function () {\n            PublishService.getPublishLogs(InstitutionFactory.getId()).then(function (response) {\n                $scope.publishLogs = response;\n            });\n        };\n\n        $scope.fetchingPublishLog = function () {\n            return false;\n        };\n        controller.getPublishStatusMapped = function (status) {\n            return PublishService.getPublishStatusMapped(status);\n        };\n\n        controller.initWatches = function () {\n            // watch for active institution changes\n            WatchService.create($scope, InstitutionFactory.getData, function (newValue) {\n                if (newValue) {\n                    controller.updatePublishLogs();\n                }\n            });\n\n            WatchService.create($scope, TuProfileHistoryLogFactory.isReloadRequired, function (newValue) {\n                if (newValue) {\n                    TuProfileHistoryLogFactory.setReload(false);\n                    controller.updatePublishLogs();\n                }\n            });\n\n            WatchService.create($scope, PublishService.getStatus, function (value) {\n                if(value){\n                    controller.updatePublishLogs();\n                }\n            });\n        };\n\n        /**\n         * @constructor\n         */\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to public tab visibility changes\n        WatchService.create($scope, TuProfileFactory.isPublishTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfilePublishLogsController', [\n            '$scope',\n            'TuProfilePublishService',\n            'InstitutionFactory',\n            'TuProfileFactory',\n            'TuProfileHistoryLogFactory',\n            'WatchService',\n            App.controllers.tuProfilePublishLogs\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tuProfileResubscribe = function (\n        $scope,\n        TuProfileResubscribeService,\n        InstitutionFactory,\n        TuProfileFactory,\n        UserFactory,\n        NotifierFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false,\n            displayResubscribeBannerDays = 31;\n\n        controller.profileId = '';\n        controller.expiresDate = '';\n        controller.isAdvanced = false;\n        controller.displayResubscribeForm = false;\n        controller.inProgress = false;\n        /**\n         * Data used in resubscribe form\n         * @type {{comments: string, name: string, email: string, to: string, subject: string}}\n         */\n        controller.formData = {\n            'comments': '',\n            'name': '',\n            'email': '',\n            'to': 'tusupport@qs.com',\n            'subject': 'I would like more information about Resubscribing an Advance Profile'\n        };\n\n        /**\n         * Re-init form data\n         */\n        controller.initFormData = function () {\n            controller.formData.comments = '';\n        };\n\n        /**\n         * Resubscribe button click\n         */\n        controller.resubscribeClick = function () {\n            controller.initFormData();\n            controller.displayResubscribeForm = !controller.displayResubscribeForm;\n        };\n\n        /**\n         * Cancel button click\n         */\n        controller.cancelClick = function () {\n            controller.initFormData();\n            controller.resubscribeClick();\n        };\n\n        controller.createCallback = function (response) {\n            if (response) {\n                controller.initFormData();\n                controller.resubscribeClick();\n            }\n            controller.inProgress = false;\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Request sent successfully!' : 'Request sending failed!',\n                'Resubscribe Request'\n            );\n        };\n\n        /**\n         * Submit form button click\n         */\n        controller.submitClick = function () {\n            controller.inProgress = true;\n            TuProfileResubscribeService.create(\n                controller.profileId,\n                controller.formData.comments,\n                controller.formData.name,\n                controller.formData.email\n            ).then(controller.createCallback);\n        };\n\n        /**\n         * Check if we should show the resubscribe button\n         * Button should display when subscription expires in less than 1 month\n         *\n         * @returns {boolean}\n         */\n        controller.showResubscribeButton = function () {\n            // calculate if subscription expires in less than one month\n            if (controller.expiresDate) {\n                var expiresDate, todayDate, daysLeft, leftMs;\n                expiresDate = new Date(parseInt(controller.expiresDate, 10));\n                todayDate = new Date();\n                leftMs = expiresDate.getTime() - todayDate.getTime();\n                daysLeft = Math.ceil(Math.abs(leftMs)) / (1000 * 3600 * 24);\n\n                return leftMs > 0 ? daysLeft < displayResubscribeBannerDays : false;\n            }\n\n            return false;\n        };\n\n        /**\n         * Init watches\n         */\n        controller.initWatches = function () {\n            // watch for active institution changes\n            WatchService.create($scope, TuProfileFactory.getData, function (newValue) {\n                controller.profileId = newValue && newValue.id ? newValue.id : '';\n            });\n            WatchService.create($scope, InstitutionFactory.getData, function (newValue) {\n                if (newValue){\n                    controller.isAdvanced = InstitutionFactory.isTuAdvanced();\n                    controller.expiresDate = angular.isDefined(newValue.subscriptions.tu) ? newValue.subscriptions.tu.endDate : '';\n                    controller.formData.name = UserFactory.getFullName();\n                    controller.formData.email = UserFactory.getUserName();\n                }\n            });\n        };\n\n        /**\n         * @constructor\n         */\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        /**\n         * listen to publish tab visibility changes\n         */\n        WatchService.create($scope, TuProfileFactory.isPublishTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TuProfileResubscribeController', [\n            '$scope',\n            'TuProfileResubscribeService',\n            'InstitutionFactory',\n            'TuProfileFactory',\n            'UserFactory',\n            'NotifierFactory',\n            'WatchService',\n            App.controllers.tuProfileResubscribe\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TuProfileResubscribeService = function (\n        $resource,\n        $log,\n        constants\n    ) {\n        var service = {\n            deferred : {}\n        };\n\n        /**\n         * Get resubscribe API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getResubscribeModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-profile/:id/resubscribe-request');\n        };\n\n        /**\n         * Send resubscribe email.\n         *\n         * @param {String} profileId\n         * @param {String} comments\n         * @param {String} fromName\n         * @param {String} fromEmail\n         * @returns {Promise}\n         */\n        service.create = function(profileId, comments, fromName, fromEmail) {\n            comments = (typeof comments === 'undefined') ? '' : comments;\n            fromName = (typeof fromName === 'undefined') ? '' : fromName;\n            fromEmail = (typeof fromEmail === 'undefined') ? '' : fromEmail;\n            return service.getResubscribeModel().save(\n                {id: profileId},\n                {\n                    comments: comments,\n                    name: fromName,\n                    email: fromEmail\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuProfileResubscribeService', [\n            '$resource',\n            '$log',\n            'constants',\n            App.services.TuProfileResubscribeService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TuProfilePublishService = function (\n        $resource,\n        $q,\n        $log,\n        constants\n    ) {\n        var service = {\n            deferred : {},\n            isStatus: null,\n            publishStatus: {\n                failure : 'failure',\n                success: 'success',\n                progress: 'progress',\n                pending: 'pending'\n            }\n        };\n\n        /**\n         * Get departments upgrade API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getPublishModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-feed/publish/:id/:type');\n        };\n\n        service.getPublishStatusModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-feed/publish-status/:id');\n        };\n\n        service.getLogsModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tu-feed/publish-logs/:id?sorting[createdAt]=desc&fieldName=type,status,createdAt,createdByFullName');\n        };\n\n        service.getNodeId = function (institutionData, nodeType) {\n            return institutionData &&\n            institutionData.nids &&\n            institutionData.nids[nodeType] ? institutionData.nids[nodeType] : null;\n        };\n\n        /**\n         *\n         * @param {bool} qsUser\n         * @param {Object} institutionData\n         * @returns {Array}\n         */\n        service.getSections = function (qsUser, institutionData) {\n            qsUser = qsUser || false;\n            var tuUrl = constants.drupal.tu.url,\n                masterNid = service.getNodeId(institutionData, 'master'),\n                ugNid = service.getNodeId(institutionData, 'ug'),\n                pgNid = service.getNodeId(institutionData, 'pg'),\n                status = service.getNodeId(institutionData, 'status'),\n                institutionCoreId = institutionData.coreId,\n                sections = [\n                {\n                    type: 'master',\n                    name: 'Overview',\n                    url: tuUrl + '/node/' + masterNid,\n                    feedPreviewUrl: constants.api.institutions.url + '/v1/tu-feed/core-id/' + institutionCoreId + '/master',\n                    viewDisabled: !masterNid\n                },\n                {\n                    type: 'ug',\n                    name: 'Undergraduate',\n                    url: tuUrl + '/node/' + ugNid,\n                    feedPreviewUrl: constants.api.institutions.url + '/v1/tu-feed/core-id/' + institutionCoreId + '/ug',\n                    viewDisabled: !ugNid\n                },\n                {\n                    type: 'pg',\n                    name: 'Postgraduate',\n                    url: tuUrl + '/node/' + pgNid,\n                    feedPreviewUrl: constants.api.institutions.url + '/v1/tu-feed/core-id/' + institutionCoreId + '/pg',\n                    viewDisabled: !pgNid\n                }\n            ];\n            if (qsUser) {\n                sections.push({\n                    type: 'stars',\n                    name: 'QS Stars',\n                    publishDisabled: false,\n                    viewDisabled: !masterNid,\n                    url: tuUrl + '/node/' + masterNid\n                });\n            }\n\n            return sections;\n        };\n\n        /**\n         *\n         * @param {String} institutionId\n         * @param {String} profileType\n         * @returns {Promise.*}\n         */\n        service.publish = function (institutionId, profileType) {\n            if (!institutionId || !profileType) {\n                var deferred = $q.defer();\n                deferred.resolve(false);\n                return deferred.promise;\n            }\n\n            return service.getPublishModel().get(\n                {\n                    id: institutionId,\n                    type: profileType\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data.toJSON();\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get publish logs.\n         *\n         * @param {String} institutionId\n         * @returns {Promise.*}\n         */\n        service.getPublishLogs = function (institutionId) {\n            if (!institutionId) {\n                var deferred = $q.defer();\n                deferred.resolve(false);\n                return deferred.promise;\n            }\n\n            return service.getLogsModel().get({\n                id: institutionId\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getPublishStatus = function (institutionId) {\n            return service.getPublishStatusModel().get(\n                {\n                    id: institutionId\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.convertErrorMessage = function (errorMessage, isClient) {\n            if (!isClient) {\n                return errorMessage;\n            }\n            if (\n                errorMessage.indexOf('Could not resolve host') !== -1 ||\n                errorMessage.indexOf('Gateway Time-out') !== -1 ||\n                errorMessage.indexOf('Connection timed out') !== -1\n            ) {\n                return 'Unable to publish to Topuniversities.com due to technical reasons. Please try again later.';\n            }\n            switch (errorMessage) {\n                case '':\n                case null:\n                    return null;\n                case 'Missing basic overview':\n                case 'Missing advanced overview':\n                    return 'Missing overview';\n                default:\n                    return 'Please contact tuonlinesupport@qs.com';\n            }\n        };\n        /**\n         * Get publish status mapping\n         *\n         * @param {string} status\n         * @returns {string}\n         */\n        service.getPublishStatusMapped = function (status) {\n            switch (status) {\n                case service.publishStatus.failure:\n                    return 'Failed';\n                case service.publishStatus.progress:\n                    return 'Progress';\n                case service.publishStatus.pending:\n                    return 'Pending';\n                default:\n                    return 'Published';\n            }\n        };\n\n        service.setStatus = function (status) {\n            service.isStatus = status;\n        };\n        service.getStatus = function() {\n            return service.isStatus;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TuProfilePublishService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.TuProfilePublishService\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tmProfile = function(\n        $scope,\n        $rootScope,\n        $location,\n        $state,\n        constants,\n        TmProfileService,\n        NotifierFactory,\n        TmProfileFactory,\n        InstitutionFactory,\n        UserFactory,\n        TuProfileFactory,\n        TuProfileService,\n        TmProfileProgramsService,\n        TmProfileOverviewService,\n        TmProfileOverviewHistoryLogFactory,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        controller.showFaqHistory = false;\n        controller.showOverviewHistory = false;\n        controller.isLoadMoreHistoryLogsInProgress = false;\n        controller.upgradeInProgress = false;\n        controller.maxFaqItems = TmProfileOverviewService.maxFaqItems;\n\n        $scope.tmIsAdvanced = false;\n        $scope.upgradeEmailsTo = constants.emails.upgradeTm;\n        $scope.activeTab = TmProfileFactory.getOverviewTabId();\n        $scope.institutionDataLoaded = false;\n        $scope.profileDataLoaded = false;\n        $scope.tmProfile = {};\n        $scope.upgradeRequest = {};\n        $scope.upgradeProgramRequest = {};\n        $scope.deleteRequest = {};\n        $scope.tmProfileBeforeChanges = {};\n        $scope.forms = {};\n        $scope.showUpgradeForm = false;\n        $scope.showHistory = false;\n        $scope.showDeleteForm = false;\n        $scope.showProgramSubscribeForm = false;\n\n        /**\n         * Is all data loaded?\n         *\n         * @returns {boolean}\n         */\n        controller.loadInProgress = function() {\n            return $scope.institutionDataLoaded && $scope.profileDataLoaded ? false : true;\n        };\n\n        // load TU profile data\n        controller.loadTmProfileData = function(coreId) {\n            TmProfileService.getTmProfileData(coreId).then(function(data) {\n                $scope.profileDataLoaded = true;\n                $scope.tmProfile = data;\n                TmProfileFactory.setData(data);\n                $scope.tmProfileBeforeChanges = angular.copy(data);\n\n                $scope.$broadcast(constants.events.institutionTmProfileChanges);\n            });\n        };\n\n        controller.isRightSidePanelActive = function() {\n            // publish tab is active\n            if (TmProfileFactory.isPublishTabSelected()) {\n                TmProfileFactory.setUpgradeFormVisibility(false);\n                return true;\n            }\n            // upgrade form is visible\n            if (\n                ($scope.showUpgradeForm || $scope.showUpgradeProgramRequest) &&\n                (\n                    TmProfileFactory.isOverviewTabSelected() ||\n                    TmProfileFactory.isProgramsTabSelected() ||\n                    TmProfileFactory.isMediaTabSelected()\n                )\n            ) {\n                return true;\n            }\n            // overview tab and history block is active\n            if (TmProfileFactory.isOverviewTabSelected() && controller.showOverviewHistory) {\n                TmProfileFactory.setUpgradeFormVisibility(false);\n                return true;\n            }\n\n            // FAQ history logs are open under overview tab\n            if (TmProfileFactory.isOverviewTabSelected() && controller.showFaqHistory) {\n                TmProfileFactory.setUpgradeFormVisibility(false);\n                return true;\n            }\n\n            // programs tab is active and edit or add form is active\n            if (TmProfileFactory.isProgramsTabSelected() && ($scope.showProgramEditForm || $scope.showProgramAddForm)) {\n                return true;\n            }\n\n            // media tab is active\n            if (TmProfileFactory.isMediaTabSelected()) {\n                TmProfileFactory.setUpgradeFormVisibility(false);\n                return true;\n            }\n            if (TmProfileFactory.isProgramsTabSelected() && $scope.showDeleteForm) {\n                return true;\n            }\n            return false;\n        };\n\n        $scope.isMediaTabActive = function() {\n            return TmProfileFactory.isMediaTabSelected();\n        };\n\n        $scope.isPublishTabActive = function () {\n            return TmProfileFactory.isPublishTabSelected();\n        };\n\n        /**\n         * Toggle upgrade form.\n         */\n        controller.toggleUpgradeForm = function() {\n            TmProfileFactory.setUpgradeFormVisibility();\n            if (TmProfileFactory.isUpgradeFormVisible($scope.activeTab)) {\n                TmProfileOverviewHistoryLogFactory.setOverviewVisible(false);\n            }\n        };\n\n        /**\n         * Toggle upgrade form.\n         */\n        controller.toggleUpgradeProgramForm = function() {\n            TmProfileFactory.setProgramUpgradeFormVisibility();\n        };\n\n        controller.handleCloseDeleteForm = function () {\n            TmProfileFactory.setProgramEditFormVisibility(true);\n        };\n\n        controller.handleSendDeleteRequestClick = function () {\n            controller.deleteRequestInProgress = true;\n            TmProfileProgramsService.deleteRequest(\n                $scope.deleteRequest.program.id,\n                $scope.deleteRequest.comments\n            ).then(controller.deleteCallback);\n        };\n\n        controller.deleteCallback = function (response) {\n            controller.deleteRequestInProgress = false;\n\n            // show notification about program submit status\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Deleted successfully!' : 'Delete failed!',\n                'Delete Program'\n            );\n\n            if (response) {\n                // close edit mode\n                TmProfileFactory.setProgramEditFormVisibility(false);\n                // reload datagrid or remove program in it\n                TmProfileFactory.announceProgramDeletion($scope.deleteRequest.program.id);\n            }\n        };\n\n        /**\n         * Actions to do on upgrade form submit.\n         *\n         * @returns {boolean}\n         */\n        controller.handleUpgradeClick = function() {\n            if (!$scope.forms.upgradeProfile ||\n                !$scope.forms.upgradeProfile.$valid ||\n                !$scope.tmProfile.id ||\n                !$scope.upgradeRequest\n            ) {\n                return false;\n            }\n            controller.upgradeInProgress = true;\n            var comments = $scope.upgradeRequest.comments || null;\n            TmProfileService.sendUpgradeRequest($scope.tmProfile.id, comments).then(function(success) {\n                controller.upgradeInProgress = false;\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Inquiry sent successfully!' : 'Processing inquiry failed!',\n                    'Upgrade To Advanced'\n                );\n                if (success) {\n                    $scope.upgradeRequest.comments = null;\n                    controller.toggleUpgradeForm();\n                }\n            });\n        };\n\n        controller.handleProgramUpgradeRequestClick = function() {\n            TmProfileProgramsService.upgrade(\n                TmProfileFactory.getProgram().id,\n                $scope.upgradeRequest.comments\n            ).then(controller.upgradeCallback);\n        };\n\n        controller.upgradeCallback = function (success) {\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Upgrade request successfully sent!' : 'Upgrade request failed!',\n                'Basic Program'\n            );\n            TmProfileFactory.setProgramUpgradeFormVisibility(false);\n        };\n\n        controller.handleLoadMoreHistoryLogs = function() {\n            TmProfileOverviewHistoryLogFactory.loadMore();\n        };\n\n        controller.closeHistoryLogs = function () {\n            TmProfileOverviewHistoryLogFactory.closeAll();\n            controller.overviewLog = {};\n        };\n\n        controller.isMoreLogsAvailable = function() {\n            if (controller.overviewLog && controller.overviewLog.totalMatching) {\n                return TmProfileOverviewHistoryLogFactory.getLimit() < controller.overviewLog.totalMatching;\n            }\n            return false;\n        };\n\n        controller.isFaqHistoryLogsVisibleWatch = function (isVisible, wasVisible) {\n            isVisible = isVisible || false;\n            controller.showFaqHistory = isVisible;\n            if (!isVisible && wasVisible) {\n                controller.overviewLog = {};\n                TmProfileOverviewHistoryLogFactory.setLimit(null);\n            }\n        };\n\n        controller.isOverviewHistoryLogsVisibleWatch = function (isVisible, wasVisible) {\n            isVisible = isVisible || false;\n            controller.showOverviewHistory = isVisible;\n            if (!isVisible && wasVisible) {\n                controller.overviewLog = {};\n                TmProfileOverviewHistoryLogFactory.setLimit(null);\n            }\n        };\n\n        controller.getHistoryLogsDataWatch = function (data) {\n            controller.overviewLog = data;\n        };\n\n        controller.isHistoryLogsLoadMoreInProgressWatch = function (isInProgress) {\n            controller.isLoadMoreHistoryLogsInProgress = isInProgress;\n        };\n\n        controller.activeTabWatch = function (tabId) {\n            // store active tab id\n            TmProfileFactory.setSelectedTabId(tabId);\n            // close all left side panels\n            TmProfileFactory.closeRightSidePanels();\n           // controller.overviewLog = null;\n            //TmProfileOverviewHistoryLogFactory.setLimit(1);\n        };\n\n        controller.getCoreIdWatch = function (coreId) {\n            if (coreId) {\n                // close all left side panels\n                TmProfileFactory.closeRightSidePanels();\n\n                if (InstitutionFactory.isEmpty()) {\n                    return false;\n                }\n                $scope.institutionDataLoaded = true;\n                $scope.institutionId = InstitutionFactory.getId();\n                $scope.institutionData = InstitutionFactory.getData();\n                $scope.tmIsAdvanced = InstitutionFactory.isTmAdvanced();\n                // check if TM is not enabled, redirect qs user to default client page.\n                if (!InstitutionFactory.isTmSubscribed() && !UserFactory.isClient()) {\n                    $location.path(constants.defaultClientPage);\n\n                    return false;\n                }\n\n                controller.showProgramStasTab = InstitutionFactory.isAdvancedProgram();\n                if (InstitutionFactory.isTmSubscribed() && !UserFactory.noAccess($state.current.name)) {\n                    controller.loadTmProfileData(InstitutionFactory.getCoreId());\n                } else {\n                    // if user doesn't have access, empty previously loaded data\n                    $scope.profileDataLoaded = true;\n                    TmProfileFactory.setData(null);\n                }\n            }\n        };\n\n        controller.initWatches = function () {\n            // watch for delete form visibility changes\n            WatchService.create($scope, function () {\n                return TmProfileFactory.isProgramUpgradeFormVisible($scope.activeTab);\n            }, function(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.upgradeRequest = {\n                        comments: null,\n                        program: TmProfileFactory.getProgram(),\n                        name: UserFactory.getFullName(),\n                        email: UserFactory.getUserName()\n                    };\n                    $scope.showUpgradeProgramRequest = newValue;\n                }\n            });\n\n            // watch for upgrade form visibility changes\n            WatchService.create($scope, function () {\n                return TmProfileFactory.isUpgradeFormVisible($scope.activeTab);\n            }, function(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.upgradeRequest = {\n                        name: UserFactory.getFullName(),\n                        email: UserFactory.getUserName(),\n                        comments: null\n                    };\n                    $scope.showUpgradeForm = newValue;\n                }\n            });\n\n            // watch for delete form visibility changes\n            WatchService.create($scope, function () {\n                return TmProfileFactory.isDeleteFormVisible($scope.activeTab);\n            }, function(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.deleteRequest = {\n                        comments: null,\n                        program: TmProfileFactory.getProgram(),\n                        name: UserFactory.getFullName(),\n                        email: UserFactory.getUserName()\n                    };\n                    $scope.showDeleteForm = newValue;\n                }\n            });\n\n            // watch for program edit form visibility changes\n            WatchService.create($scope, function () {\n                return TmProfileFactory.isProgramEditFormVisible($scope.activeTab);\n            }, function(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.showProgramEditForm = newValue;\n                }\n            });\n\n            // watch for program add form visibility changes\n            WatchService.create($scope, function () {\n                return TmProfileFactory.isProgramAddFormVisible($scope.activeTab);\n            }, function(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    TmProfileFactory.setReadOnly(false);\n                    $scope.showProgramAddForm = newValue;\n                }\n            });\n\n            // listen to active profile tab changes\n            WatchService.create($scope, 'activeTab', controller.activeTabWatch);\n            // watch for overview history logs visibility changes\n            WatchService.create($scope, TmProfileOverviewHistoryLogFactory.isFaqVisible, controller.isFaqHistoryLogsVisibleWatch);\n            // watch for FAQ history logs visibility changes\n            WatchService.create($scope, TmProfileOverviewHistoryLogFactory.isOverviewVisible, controller.isOverviewHistoryLogsVisibleWatch);\n            // watch for history logs data changes\n            WatchService.create($scope, TmProfileOverviewHistoryLogFactory.getLogs, controller.getHistoryLogsDataWatch);\n            // watch for history logs loading progress\n            WatchService.create($scope, TmProfileOverviewHistoryLogFactory.isLoadMoreInProgress, controller.isHistoryLogsLoadMoreInProgressWatch);\n            // watch for institution changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, controller.getCoreIdWatch);\n            WatchService.create($scope, InstitutionFactory.isTmAdvanced, function (newValue) {\n                $scope.tmIsAdvanced = newValue;\n            });\n\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        controller.destruct = function() {\n            TmProfileFactory.reset();\n            $scope.showDepartmentEditForm = false;\n            $scope.showDepartmentAddForm = false;\n            $scope.showProgramEditForm = false;\n            $scope.showDProgramAddForm = false;\n        };\n\n\n        controller.init = function() {\n            controller.initWatches();\n            TmProfileFactory.setProgramUpgradeFormVisibility(false);\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileController', [\n            '$scope',\n            '$rootScope',\n            '$location',\n            '$state',\n            'constants',\n            'TmProfileService',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'InstitutionFactory',\n            'UserFactory',\n            'TuProfileFactory',\n            'TuProfileService',\n            'TmProfileProgramsService',\n            'TmProfileOverviewService',\n            'TmProfileOverviewHistoryLogFactory',\n            'WatchService',\n            App.controllers.tmProfile\n        ]);\n\n}(window.angular));\n\n(function (angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmProfile = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        InstitutionsService,\n        InstitutionFactory\n    ) {\n        var service = {\n            deferred: {},\n            status: {\n                approved: 'approved',\n                pendingDeletion: 'pending-deletion',\n                editApproved: 'edit-approved',\n                pendingApprove: 'requested',\n                pendingEdit: 'pending-edit'\n            },\n            cache: {}\n        };\n\n        service.getProfileModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/core-id/:id', null, {\n                update: {\n                    method: 'PATCH'\n                },\n                get: {\n                    cancellable: true\n                }\n            });\n        };\n\n        /**\n         * Get TM profile upgrade requests end point.\n         *\n         * @returns {$resource}\n         */\n        service.getUpgradeRequestModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/upgrade-request');\n        };\n\n        service.getProgramTypesList = function () {\n            return [\n                { value: 'omba', label: 'Online MBA/Distance learning' },\n                { value: 'pt', label: 'Part time MBA' },\n                { value: 'ft', label: 'Full time MBA' },\n                { value: 'emba', label: 'Executive MBA' }\n            ];\n        };\n\n        service.getFeesRangesList = function () {\n            return [\n                { value: '', label: 'N/A' },\n                { value: '<20000 USD', label: '<20000 USD' },\n                { value: '20000 - 30000 USD', label: '20000 - 30000 USD' },\n                { value: '30000 - 40000 USD', label: '30000 - 40000 USD' },\n                { value: '40000 - 50000 USD', label: '40000 - 50000 USD' },\n                { value: '50000 - 60000 USD', label: '50000 - 60000 USD' },\n                { value: '60000 - 70000 USD', label: '60000 - 70000 USD' },\n                { value: '70000 - 80000 USD', label: '70000 - 80000 USD' },\n                { value: '80000 - 90000 USD', label: '80000 - 90000 USD' },\n                { value: '90000 - 100000 USD', label: '90000 - 100000 USD' },\n                { value: '100000 - 110000 USD', label: '100000 - 110000 USD' },\n                { value: '110000 - 120000 USD', label: '110000 - 120000 USD' },\n                { value: '>120000 USD', label: '>120000 USD' }\n            ];\n        };\n\n        service.getLengthList = function () {\n            var list = [{ value: '', label: 'N/A' }];\n            for (var i = 1; i <= 40; i++) {\n                list.push({\n                    value: i + ' months', label: i + ' months'\n                });\n            }\n            return list;\n        };\n\n        service.getPercentList = function () {\n            var list = [{ value: '', label: 'N/A' }];\n            for (var i = 0; i <= 100; i++) {\n                list.push({\n                    value: i, label: i + ' %'\n                });\n            }\n\n            return list;\n        };\n\n        service.getYearList = function (startYear, endYear) {\n            var list = [{ value: '', label: 'N/A' }];\n            for (var i = startYear; i <= endYear; i++) {\n                list.push({\n                    value: i, label: i + ' years'\n                });\n            }\n\n            return list;\n        };\n\n        service.getMonthsList = function () {\n            var count = 0,\n                months = [],\n                name;\n            while (count < 12) {\n                name = moment().month(count++).format(\"MMMM\");\n                months.push({ value: name, label: name });\n            }\n            return months;\n        };\n\n        service.getAccreditationsList = function () {\n            return [\n                { value: '', label: 'N/A' },\n                { value: 'AACSB', label: 'AACSB' },\n                { value: 'ACBSP', label: 'ACBSP' },\n                { value: 'ACQUIN', label: 'ACQUIN' },\n                { value: 'AMBA', label: 'AMBA' },\n                { value: 'BPS', label: 'BPS' },\n                { value: 'CIM', label: 'CIM' },\n                { value: 'CIPD', label: 'CIPD' },\n                { value: 'EPAS', label: 'EPAS' },\n                { value: 'EQUIS', label: 'EQUIS' },\n                { value: 'FIBAA', label: 'FIBAA' },\n                { value: 'IACBE', label: 'IACBE' },\n                { value: 'ISO', label: 'ISO' },\n                { value: 'MSA', label: 'MSA' },\n                { value: 'NASPAA', label: 'NASPAA' },\n                { value: 'NEASC', label: 'NEASC' },\n                { value: 'NVAO', label: 'NVAO' },\n                { value: 'SIMT', label: 'SIMT' },\n                { value: 'ZEVA', label: 'ZEVA' }\n            ];\n        };\n\n        service.getProgramStatusList = function () {\n            return [\n                { value: 'requested', label: 'Requested (New)' },\n                { value: 'pending-edit', label: 'Pending (Edit)' },\n                { value: 'pending-deletion', label: 'Pending (Deletion)' },\n                { value: service.status.approved, label: 'Approved' },\n                { value: 'edit-approved', label: 'Edited-Approved' },\n            ];\n        };\n\n\n        service.isProgramApproved = function (status) {\n            return status === service.status.approved;\n        };\n\n        service.isProgramPendingDeletion = function (status) {\n            return status === service.status.pendingDeletion;\n        };\n\n        service.isProgramPendingApprove = function (status) {\n            return status === service.status.pendingApprove;\n        };\n\n        service.isProgramPendingEdit = function (status) {\n            return status === service.status.pendingEdit;\n        };\n\n        service.isProgramEditApproved = function (status) {\n            return status === service.status.editApproved;\n        };\n\n        service.getCampusesKeyValuePairs = function (useCache, coreId) {\n            useCache = useCache || false;\n            coreId = coreId || InstitutionFactory.getCoreId();\n            var campusList = [],\n                cacheKey = 'getCampusesList:' + coreId,\n                deferred = null;\n\n            if (useCache && service.cache[cacheKey]) {\n                deferred = $q.defer();\n                deferred.resolve(service.cache[cacheKey]);\n                return deferred.promise;\n            }\n\n            return service.getCampuses(useCache, coreId).then(function (campuses) {\n                angular.forEach(campuses, function (campus) {\n                    campusList.push({\n                        value: campus.id,\n                        label: campus.name\n                    });\n                });\n                return campusList;\n            });\n        };\n\n        service.clearCache = function () {\n            service.cache = [];\n        };\n\n        service.getCampuses = function (useCache, coreId) {\n            useCache = useCache || false;\n            var campuses = [],\n                cacheKey = 'getCampuses:' + coreId,\n                deferred = null;\n            if (useCache) {\n                deferred = $q.defer();\n                if (service.cache[cacheKey]) {\n                    deferred.resolve(service.cache[cacheKey]);\n                    return deferred.promise;\n                } else if (InstitutionFactory.getCoreId() === coreId) {\n                    service.cache[cacheKey] = InstitutionFactory.getCampusData();\n                    deferred.resolve(service.cache[cacheKey]);\n                    return deferred.promise;\n                }\n            }\n            return InstitutionsService.getInstitutionData(coreId, ['campus']).then(function (data) {\n                if (data.results && data.results[0] && data.results[0].campus) {\n                    campuses = data.results[0].campus;\n                    service.cache[cacheKey] = campuses;\n                    if (InstitutionFactory.getCoreId() === coreId) {\n                        InstitutionFactory.setCampuses(campuses);\n                    }\n                }\n\n                return campuses;\n            });\n        };\n\n        service.getTmProfileData = function (coreId) {\n            if (!coreId) {\n                var deferred = $q.defer();\n                deferred.resolve(false);\n                return deferred.promise;\n            }\n            if (constants.dev) {\n                var startTime = new Date().getTime(),\n                    endTime;\n            }\n\n            return service.getProfileModel().get({\n                id: coreId\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                return data.toJSON();\n            }, function (error) {\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getSpecialisationsList = function () {\n            // process already running\n            if (!service.deferred.getSpecialisationsList) {\n                service.deferred.getSpecialisationsList = $q.defer();\n            } else {\n                return service.deferred.getSpecialisationsList.promise;\n            }\n            var deferred = service.deferred.getSpecialisationsList;\n\n            // check if data exists in cache\n            if (service.specialisationsList) {\n                deferred.resolve(service.specialisationsList);\n            } else {\n                var Api = $resource(constants.api.institutions.url + '/v1/list/specialisations');\n                Api.get(function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.specialisationsList = data.results;\n                    deferred.resolve(service.specialisationsList);\n                    deferred = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.specialisationsList = [];\n                    deferred.resolve(service.specialisationsList);\n                    deferred = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        /**\n         * Send TM profile upgrade request.\n         *\n         * @param {String} tuProfileId\n         * @param {String|null} comments\n         * @returns {Promise}\n         */\n        service.sendUpgradeRequest = function (tmProfileId, comments) {\n            if (!tmProfileId) {\n                throw 'Missing Required';\n            }\n\n            var Api = service.getUpgradeRequestModel();\n            return Api.save({ id: tmProfileId }, {\n                comments: comments\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmProfileService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'InstitutionsService',\n            'InstitutionFactory',\n            App.services.TmProfile\n        ]);\n\n} (window.angular, window.moment));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { factories: {} });\n\n    App.factories.TmProfile = function(\n        TmProfileOverviewHistoryLogFactory\n    ) {\n        var data = {},\n            program = {},\n            backend = false,\n            readOnly = false,\n            selectedTabId = null,\n            selectedMediaSubTabId = null,\n            upgradeFormVisible = false,\n            deletedProgramId = null,\n            directoryVal = false,\n            updatedProgramId = null,\n            programAddFormVisible = false,\n            programEditFormVisible = false,\n            programSubscribeFormVisible = false,\n            deleteFormVisible = false,\n            programUpgradeFormVisible = false,\n            programBeforeChanges = {},\n            newProgram = false,\n            programsDatagridReload = false,\n            isUpgraded = false,\n            profileTabs = {\n                overview: 0,\n                programs: 1,\n                media: 2,\n                publish: 3,\n                programStats: 4\n            },\n            mediaTabs = {\n                images: 1,\n                video: 2,\n                social: 3,\n                brochures: 4\n            },\n            activeOverviewSubTabs = {\n                'overview': true,\n                'faq': false\n            };\n\n        return {\n            setData: function(newData) {\n                data = newData;\n            },\n            getData: function() {\n                return data;\n            },\n            getProfileTabs : function () {\n                return profileTabs;\n            },\n            setBackend: function (isBackend) {\n                backend = isBackend;\n            },\n            isBackend: function () {\n                return !!backend;\n            },\n            setReadOnly: function (isReadOnly) {\n                readOnly = isReadOnly;\n            },\n            isReadOnly: function () {\n                return !!readOnly;\n            },\n            reset: function() {\n                data = {};\n                program = {};\n                newProgram = false;\n                selectedMediaSubTabId = null;\n                selectedTabId = null;\n            },\n            getId: function() {\n                return data !== null && data.id || '';\n            },\n            getProgram: function() {\n                return program;\n            },\n            setProgram: function (selectedProgram) {\n                program = selectedProgram;\n            },\n            getProgramId: function () {\n                return program && program.id ? program.id : null;\n            },\n            setSelectedTabId: function(newSelectedTabId) {\n                selectedTabId = newSelectedTabId;\n            },\n            isProgramsTabSelected: function() {\n                return (typeof selectedTabId !== 'undefined') && selectedTabId === profileTabs.programs;\n            },\n            isStatsTabSelected: function() {\n                return (typeof selectedTabId !== 'undefined') && selectedTabId === profileTabs.programStats;\n            },\n            isPublishTabSelected: function() {\n                return (typeof selectedTabId !== 'undefined') && selectedTabId === profileTabs.publish;\n            },\n            isOverviewTabSelected: function() {\n                return (typeof selectedTabId !== 'undefined') && selectedTabId === profileTabs.overview;\n            },\n            isMediaTabSelected: function() {\n                return (typeof selectedTabId !== 'undefined') && selectedTabId === profileTabs.media;\n            },\n            getOverviewTabId: function() {\n                return profileTabs.overview;\n            },\n            setActiveOverviewSubTabs : function (newSubTabs) {\n                if (angular.isDefined(newSubTabs)) {\n                    if (angular.equals(0, newSubTabs)) {\n                        activeOverviewSubTabs.overview = true;\n                    }\n                    if (angular.equals(1, newSubTabs)) {\n                        activeOverviewSubTabs.overview = false;\n                    }\n                }\n            },\n            getActiveOverviewSubTabs : function () {\n                return activeOverviewSubTabs;\n            },\n            isMediaImagesSubTabSelected: function() {\n                return (typeof selectedMediaSubTabId !== 'undefined') && selectedMediaSubTabId === mediaTabs.images;\n            },\n            isMediaVideosSubTabSelected: function() {\n                return (typeof selectedMediaSubTabId !== 'undefined') && selectedMediaSubTabId === mediaTabs.video;\n            },\n            isMediaSocialSubTabSelected: function() {\n                return (typeof selectedMediaSubTabId !== 'undefined') && selectedMediaSubTabId === mediaTabs.social;\n            },\n            isMediaBrochuresSubTabSelected: function() {\n                return (typeof selectedMediaSubTabId !== 'undefined') && selectedMediaSubTabId === mediaTabs.brochures;\n            },\n            getSelectedMediaSubTabId: function() {\n                return selectedMediaSubTabId;\n            },\n            setSelectedMediaSubTabId: function(newSelectedSubTabId) {\n                selectedMediaSubTabId = newSelectedSubTabId;\n            },\n            setMediaImagesSubTabSelected: function() {\n                selectedMediaSubTabId = mediaTabs.images;\n            },\n            announceNewProgram: function (newProgramId) {\n                newProgram = newProgramId;\n            },\n            hasNewProgram: function () {\n                return newProgram;\n            },\n            announceProgramDeletion: function (newProgramId) {\n                deletedProgramId = newProgramId;\n            },\n            hasDeletedProgram: function () {\n                return !!deletedProgramId;\n            },\n            clearDeletedProgram: function () {\n                deletedProgramId = null;\n            },\n            announceProgramUpdate: function (newProgramId) {\n                updatedProgramId = newProgramId;\n            },\n            hasUpdatedProgram: function () {\n                return !!updatedProgramId;\n            },\n            clearProgramUpdate: function () {\n                updatedProgramId = null;\n            },\n            isRightSidePanelActive: function () {\n                return programEditFormVisible || programAddFormVisible || deleteFormVisible || programUpgradeFormVisible;\n            },\n            setProgramBeforeChanges: function (programInstance) {\n                programBeforeChanges = programInstance;\n            },\n            getProgramBeforeChanges: function () {\n                return programBeforeChanges;\n            },\n            setUpgradeSubscription: function (val) {\n                isUpgraded = val;\n            },\n            isUpgradedSubscriptions: function () {\n                return isUpgraded;\n            },\n\n            /**\n             * Set program edit form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setProgramEditFormVisibility: function (visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !programEditFormVisible;\n                }\n                programEditFormVisible = visibility;\n\n                programAddFormVisible = false;\n                programSubscribeFormVisible = false;\n                upgradeFormVisible = false;\n                deleteFormVisible = false;\n                programUpgradeFormVisible = false;\n                TmProfileOverviewHistoryLogFactory.closeAll();\n            },\n            isProgramEditFormVisible: function (activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n                return (activeTab === profileTabs.programs) && programEditFormVisible;\n            },\n            getProgramEditFormVisibility: function () {\n                return programEditFormVisible;\n            },\n            /**\n             * Set new program form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setProgramAddFormVisibility: function(visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !programAddFormVisible;\n                }\n                programAddFormVisible = visibility;\n\n                programEditFormVisible = false;\n                programSubscribeFormVisible = false;\n                upgradeFormVisible = false;\n                deleteFormVisible = false;\n                programUpgradeFormVisible = false;\n                TmProfileOverviewHistoryLogFactory.closeAll();\n            },\n            /**\n             * Is new program form visible?\n             *\n             * @param {Integer} activeTab\n             * @returns {boolean}\n             */\n            isProgramAddFormVisible: function(activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n\n                return (activeTab === profileTabs.programs) && programAddFormVisible;\n            },\n\n            /**\n             * Set subscribe form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            setProgramSubscribeFormVisibility: function(visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !programSubscribeFormVisible;\n                }\n                programSubscribeFormVisible = visibility;\n            },\n\n            getProgramSubscribeFormVisibility: function() {\n                return programSubscribeFormVisible;\n            },\n\n            /**\n             * Get new program form visibility.\n             *\n             * @param {boolean|null} visibility\n             */\n            getProgramAddFormVisibility: function() {\n                return programAddFormVisible;\n            },\n            setUpgradeFormVisibility: function(visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !upgradeFormVisible;\n                }\n                upgradeFormVisible = visibility;\n\n                programEditFormVisible = false;\n                programAddFormVisible = false;\n                deleteFormVisible = false;\n                programUpgradeFormVisible = false;\n                //TmProfileOverviewHistoryLogFactory.closeAll();\n\n            },\n            isUpgradeFormVisible: function(activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n\n                return (\n                    activeTab === profileTabs.programs ||\n                    activeTab === profileTabs.media ||\n                    activeTab === profileTabs.overview\n                 ) && upgradeFormVisible;\n            },\n            setDeleteFormVisibility: function(visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !deleteFormVisible;\n                }\n                deleteFormVisible = visibility;\n\n                programEditFormVisible = false;\n                programAddFormVisible = false;\n                upgradeFormVisible = false;\n                programUpgradeFormVisible = false;\n                TmProfileOverviewHistoryLogFactory.closeAll();\n            },\n            isDeleteFormVisible: function(activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n\n                return activeTab === profileTabs.programs && deleteFormVisible;\n            },\n            setProgramUpgradeFormVisibility: function(visibility) {\n                if (typeof visibility === 'undefined') {\n                    visibility = !programUpgradeFormVisible;\n                }\n                programUpgradeFormVisible = visibility;\n\n                programEditFormVisible = false;\n                programAddFormVisible = false;\n                upgradeFormVisible = false;\n                deleteFormVisible = false;\n                TmProfileOverviewHistoryLogFactory.closeAll();\n            },\n            isProgramUpgradeFormVisible: function(activeTab) {\n                if (typeof activeTab === 'undefined') {\n                    return false;\n                }\n\n                return activeTab === profileTabs.programs && programUpgradeFormVisible;\n            },\n            closeRightSidePanels: function () {\n                // close history logs\n                TmProfileOverviewHistoryLogFactory.closeAll();\n                // close upgrade form\n                upgradeFormVisible = false;\n                // close program edit form\n                programEditFormVisible = false;\n                // close program add form\n                programAddFormVisible = false;\n            },\n            resetProgramsDatagridReload: function () {\n                programsDatagridReload = false;\n            },\n            requestProgramsDatagridReload: function() {\n                programsDatagridReload = true;\n            },\n            isProgramsDatagridReload: function () {\n                return programsDatagridReload;\n            },\n            setDirectory: function(newVal){\n                directoryVal = newVal;\n            },\n            isDirectory: function(){\n                return directoryVal;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('TmProfileFactory', [\n            'TmProfileOverviewHistoryLogFactory',\n            App.factories.TmProfile\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.TmProfileHistoryLog = function () {\n        var data = {},\n            limit = 1,\n            profileType = null,\n            inProgress = false,\n            loadMoreInProgress = false,\n            visible = false,\n            reload = false,\n            isAdvanced = false,\n            triggeredBy = null;\n\n        return {\n            getData: function () {\n                return data;\n            },\n            setData: function (newData) {\n                data = newData;\n            },\n            setLogLimit: function (logLimit) {\n                if (!logLimit || logLimit < 1 || typeof logLimit === 'undefined') {\n                    logLimit = 1;\n                }\n                limit = logLimit;\n            },\n            getLogLimit: function () {\n                return limit;\n            },\n            setProfileType: function (newProfileType) {\n                profileType = newProfileType;\n            },\n            getProfileType: function () {\n                return profileType;\n            },\n            isInProgress: function () {\n                return inProgress;\n            },\n            setInProgress: function (status) {\n                inProgress = status;\n            },\n            isLoadMoreInProgress: function () {\n                return loadMoreInProgress;\n            },\n            setLoadMoreInProgress: function (status) {\n                loadMoreInProgress = status;\n            },\n            isVisible: function () {\n                return visible;\n            },\n            setTriggeredBy: function (trigger) {\n                triggeredBy = trigger;\n            },\n            shouldBeVisible: function (trigger) {\n                if (triggeredBy === trigger) {\n                    triggeredBy = null;\n                    return false;\n                }\n                return true;\n            },\n            resetTriggeredBy: function () {\n                triggeredBy = '';\n            },\n            setAdvanced: function (advanced) {\n                isAdvanced = advanced;\n            },\n            isAdvanced: function () {\n                return isAdvanced;\n            },\n            setReload: function(triggerReload) {\n                reload = triggerReload;\n            },\n            isReloadRequired: function() {\n                return reload;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('TmProfileHistoryLogFactory', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.factories.TmProfileHistoryLog\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.tmProfileResubscribe = function (\n        $scope,\n        TmProfileResubscribeService,\n        InstitutionFactory,\n        TmProfileFactory,\n        UserFactory,\n        NotifierFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false,\n            displayResubscribeBannerDays = 31;\n\n        controller.profileId = '';\n        controller.expiresDate = '';\n        controller.isAdvanced = false;\n        controller.displayResubscribeForm = false;\n        controller.inProgress = false;\n        /**\n         * Data used in resubscribe form\n         * @type {{comments: string, name: string, email: string, to: string, subject: string}}\n         */\n        controller.formData = {\n            'comments': '',\n            'name': '',\n            'email': '',\n            'to': 'tmsupport@qs.com',\n            'subject': 'I would like more information about Resubscribing an Advance Profile'\n        };\n\n        /**\n         * Re-init form data\n         */\n        controller.initFormData = function () {\n            controller.formData.comments = '';\n        };\n\n        /**\n         * Resubscribe button click\n         */\n        controller.resubscribeClick = function () {\n            controller.initFormData();\n            controller.displayResubscribeForm = !controller.displayResubscribeForm;\n        };\n\n        /**\n         * Cancel button click\n         */\n        controller.cancelClick = function() {\n            controller.initFormData();\n            controller.resubscribeClick();\n        };\n\n        controller.createCallback = function(response) {\n            if (response) {\n                controller.initFormData();\n                controller.resubscribeClick();\n            }\n            controller.inProgress = false;\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Request sent successfully!' : 'Request sending failed!',\n                'Resubscribe Request'\n            );\n        };\n\n        /**\n         * Submit form button click\n         */\n        controller.submitClick = function () {\n            controller.inProgress = true;\n            TmProfileResubscribeService.create(\n                controller.profileId,\n                controller.formData.comments,\n                controller.formData.name,\n                controller.formData.email\n            ).then(controller.createCallback);\n        };\n\n        /**\n         * Check if we should show the resubscribe button\n         * Button should display when subscription expires in less than 1 month\n         *\n         * @returns {boolean}\n         */\n        controller.showResubscribeButton = function () {\n            // calculate if subscription expires in less than one month\n            if (controller.expiresDate) {\n                var expiresDate, todayDate, daysLeft, leftMs;\n                expiresDate = new Date(parseInt(controller.expiresDate, 10));\n                todayDate = new Date();\n                leftMs = expiresDate.getTime() - todayDate.getTime();\n                daysLeft = Math.ceil(Math.abs(leftMs)) / (1000 * 3600 * 24);\n\n                return leftMs > 0 ? daysLeft < displayResubscribeBannerDays : false;\n            }\n\n            return false;\n        };\n\n        /**\n         * Init watches\n         */\n        controller.initWatches = function () {\n            // watch for active institution changes\n            WatchService.create($scope, TmProfileFactory.getData, function (newValue) {\n                if (newValue !== null) {\n                    controller.profileId = newValue.id;\n                }\n            });\n            WatchService.create($scope, InstitutionFactory.getData, function (newValue) {\n                controller.isAdvanced = InstitutionFactory.isTmAdvanced();\n                if (newValue !== null) {\n                    controller.expiresDate = angular.isDefined(newValue.subscriptions.tm) ? newValue.subscriptions.tm.endDate : '';\n                }\n                controller.formData.name = UserFactory.getFullName();\n                controller.formData.email = UserFactory.getUserName();\n            });\n        };\n\n        /**\n         * @constructor\n         */\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        /**\n         * listen to publish tab visibility changes\n         */\n        WatchService.create($scope, TmProfileFactory.isPublishTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileResubscribeController', [\n            '$scope',\n            'TmProfileResubscribeService',\n            'InstitutionFactory',\n            'TmProfileFactory',\n            'UserFactory',\n            'NotifierFactory',\n            'WatchService',\n            App.controllers.tmProfileResubscribe\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.TmProfileResubscribeService = function (\n        $resource,\n        $log,\n        constants\n    ) {\n        var service = {\n            deferred : {}\n        };\n\n        /**\n         * Get resubscribe API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getResubscribeModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-profile/:id/resubscribe-request');\n        };\n\n        /**\n         * Send resubscribe email.\n         *\n         * @param {String} profileId\n         * @param {String} comments\n         * @param {String} fromName\n         * @param {String} fromEmail\n         * @returns {Promise}\n         */\n        service.create = function(profileId, comments, fromName, fromEmail) {\n            comments = (typeof comments === 'undefined') ? '' : comments;\n            fromName = (typeof fromName === 'undefined') ? '' : fromName;\n            fromEmail = (typeof fromEmail === 'undefined') ? '' : fromEmail;\n            return service.getResubscribeModel().save(\n                {id: profileId},\n                {\n                    comments: comments,\n                    name: fromName,\n                    email: fromEmail\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmProfileResubscribeService', [\n            '$resource',\n            '$log',\n            'constants',\n            App.services.TmProfileResubscribeService\n        ]);\n\n}(window.angular));\n\n(function (angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tmProfilePrograms = function (\n        $scope,\n        $rootScope,\n        $state,\n        constants,\n        uiGridConstants,\n        NotifierFactory,\n        TmProfileFactory,\n        InstitutionFactory,\n        UserFactory,\n        TmProfileProgramsService,\n        TmProfileService,\n        InstitutionsService,\n        InstitutionsListService,\n        WatchService,\n        GridService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.isDatagridReloading = true;\n        controller.isDatagridRendered = false;\n        controller.devMode = constants.dev;\n        controller.programsPackage = [\n            { value: 'false', label: 'Basic' },\n            { value: 'true', label: 'Advanced' }\n        ];\n        $scope.isAdvanced = false;\n        controller.institution = {};\n\n        controller.paginationOptions = GridService.getColumnsFilters(\n            constants.gridNameSpaces.programsTmGridFilters,\n            []\n        );\n\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            constants.gridNameSpaces.programsTmGridVisibility\n        );\n\n        controller.handleDatagridRowClick = function (program) {\n            TmProfileFactory.setProgramUpgradeFormVisibility(false);\n            if ($scope.selectedProgramId === program.id) {\n                $scope.selectedProgramId = null;\n                TmProfileFactory.setProgramEditFormVisibility(false);\n                TmProfileFactory.setProgram({});\n            } else {\n                $scope.selectedProgramId = program.id;\n                TmProfileFactory.setProgramEditFormVisibility(true);\n                TmProfileFactory.setProgram(program);\n                TmProfileFactory.setReadOnly(\n                    TmProfileService.isProgramPendingDeletion(program.status) || program.advanced\n                );\n            }\n        };\n\n        controller.handleDatagridFiltersChanges = function (grid) {\n            GridService.resetConditions($scope.gridApi.grid.columns);\n            angular.forEach($scope.gridApi.grid.columns, function (column) {\n                if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                    if (\n                        column.filters[0].type === uiGridConstants.filter.SELECT &&\n                        typeof column.filters[0].term === 'object' &&\n                        column.filters[0].term !== null &&\n                        typeof column.filters[0].term.value !== 'undefined'\n                    ) {\n                        column.filters[0].term = column.filters[0].term.value;\n                    } else if (column.filters[0].term !== null &&\n                        typeof column.filters[0].term !== 'undefined') {\n                        GridService.applyFilters(column);\n                    }\n                }\n\n                var filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                    controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                }\n            });\n\n            GridService.storeColumnsFilters(\n                constants.gridNameSpaces.programsTmGridFilters,\n                controller.paginationOptions\n            );\n        };\n\n        controller.isClient = function () {\n            return UserFactory.isClient();\n        };\n\n        controller.reloadDatagrid = function () {\n            var coreId = InstitutionFactory.getCoreId();\n            if (!coreId) {\n                return false;\n            }\n            controller.isDatagridReloading = true;\n            return TmProfileProgramsService.getAllProgramsByCoreId(coreId).then(controller.handleProgramsListResponse);\n        };\n\n        /**\n         * Actions to do when add program button is clicked.\n         */\n        controller.handleAddProgramClick = function () {\n            $scope.selectedProgramId = null;\n            TmProfileFactory.setProgramAddFormVisibility();\n            TmProfileFactory.setProgram({});\n        };\n\n        controller.getProgramsToDelete = function () {\n            var programsIds = [];\n            if ($scope.programsToDelete) {\n                angular.forEach($scope.programsToDelete, function (remove, id) {\n                    if (remove) {\n                        programsIds.push(id);\n                    }\n                });\n            }\n\n            return programsIds;\n        };\n\n        controller.handleProgramsListResponse = function (response) {\n            controller.isDatagridReloading = false;\n            if (angular.isDefined($scope.gridOptions)) {\n                $scope.gridOptions.data = response;\n                $scope.gridOptions.minRowsToShow = response && response.length < 50 ? response.length : 50;\n            }\n            // if the program is selected, set program from response\n            if ($scope.selectedProgramId) {\n                angular.forEach($scope.gridOptions.data, function (item) {\n                    if (angular.equals(item.id, $scope.selectedProgramId)) {\n                        TmProfileFactory.setProgram(item);\n                        TmProfileFactory.setReadOnly(!!item.advanced);\n                    }\n                });\n            }\n        };\n\n        controller.linkSubscriptions = function (coreId) {\n            InstitutionsService.getInstitutionData(coreId).then(function (data) {\n                var institutionData = data && data.results ? data.results[0] : null;\n                if (institutionData.linkedWithAdvancedPrograms) {\n                    InstitutionsListService.getAllSubscriptions(coreId).then(function (res) {\n                        res.forEach(function (item) {\n                            controller.institution = angular.copy(institutionData);\n                            if (item >= institutionData.subscriptions.tm.endDate) {\n                                controller.institution.subscriptions.tm.endDate = item;\n                            }\n                            InstitutionsListService.saveSubscription(controller.institution).then(function (success) {\n                                if (success) {\n                                    // check if subscription data is in the past or in the future\n                                    if (controller.institution.subscriptions) {\n                                        angular.forEach(controller.institution.subscriptions, function (subscription) {\n                                            if (subscription.subscribed &&\n                                                subscription.advanced &&\n                                                subscription.endDate < moment().format('x')\n                                            ) {\n                                                subscription.advanced = false;\n                                            }\n                                            if (subscription.subscribed &&\n                                                subscription.advanced &&\n                                                subscription.startDate > moment().format('x')\n                                            ) {\n                                                subscription.advanced = false;\n                                            }\n                                        });\n                                    }\n                                    // reset institution edit instance\n                                    $scope.institutionBeforeChanges = angular.copy(controller.institution);\n                                    InstitutionsListService.appendSubscriptionsData([controller.institution]);\n                                    // check if current active institution is same as edited one\n                                    var currentCoreId = controller.institution.coreId;\n                                    if (currentCoreId) {\n                                        var activeCoreId = InstitutionFactory.getCoreId();\n                                        if (activeCoreId && currentCoreId === activeCoreId) {\n                                            InstitutionFactory.setSubscriptions(angular.copy(controller.institution.subscriptions));\n                                        }\n                                    }\n\n                                }\n                            });\n                        });\n                    });\n                }\n            });\n        };\n\n\n        /**\n         * Actions to do when program is deleted.\n         * @param {Boolean} deleted\n         */\n        controller.hasDeletedProgramsWatch = function (deleted) {\n            if (deleted) {\n                // reload datagrid\n                controller.initDataGrid(false);\n                // reset deletion trigger\n                TmProfileFactory.clearDeletedProgram();\n                // unselect selected program\n                $scope.selectedProgramId = null;\n            }\n        };\n\n        /**\n         * Actions to do when program is updated.\n         * @param {Boolean} updated\n         */\n        controller.hasUpdatedProgramWatch = function (updated) {\n            if (updated) {\n                // reload datagrid\n                controller.initDataGrid(false);\n                // reset update trigger\n                TmProfileFactory.clearProgramUpdate();\n            }\n        };\n\n        /**\n         * Actions to do when right hand panel visibility changes.\n         * @param {Boolean} active\n         */\n        controller.isRightSidePanelActiveWatch = function (active) {\n            if (!active) {\n                $scope.selectedProgramId = null;\n            }\n        };\n\n        /**\n         * Actions to do on Core ID changes.\n         * @param {Number|null} coreId\n         */\n        controller.getCoreIdWatch = function (coreId) {\n            if (coreId) {\n                $scope.selectedProgramId = null;\n                // use cache as institution data should be loaded already\n                controller.initDataGrid(true);\n                controller.linkSubscriptions(coreId);\n            }\n        };\n\n        /**\n         * Actions to do when new program is added.\n         * @param {Boolean} added\n         */\n        controller.hasNewProgramWatch = function (added) {\n            if (added) {\n                $scope.selectedProgramId = added;\n                controller.initDataGrid(false);\n            }\n        };\n\n        /**\n         * Actions to do when new program is upgraded.\n         * @param {Boolean} added\n         */\n        controller.hasNewProgramUpgradeWatch = function (upgraded) {\n            if (upgraded) {\n                var core_id = InstitutionFactory.getCoreId();\n                controller.linkSubscriptions(core_id);\n            }\n        };\n\n        /**\n         * Actions to do when datagrid reload is requested.\n         * @param {Boolean} reload\n         */\n        controller.isProgramsDatagridReloadWatch = function (reload) {\n            if (reload) {\n                controller.initDataGrid(false);\n                TmProfileFactory.resetProgramsDatagridReload();\n            }\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(constants.gridNameSpaces.programsTmGridVisibility);\n            if (columnsVisibility) {\n                angular.forEach($scope.gridOptions.columnDefs, function (column, key) {\n                    if (columnsVisibility[column.field] === true &&\n                        column.visible === false\n                    ) {\n                        $scope.gridOptions.columnDefs[key].filter.term = null;\n                    }\n                });\n            }\n\n            controller.columnsVisibility = GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs);\n            GridService.storeColumnsVisibility(\n                constants.gridNameSpaces.programsTmGridVisibility,\n                controller.columnsVisibility\n            );\n        };\n\n        controller.initWatches = function () {\n            // listen to core ID changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, controller.getCoreIdWatch);\n            // listen to deleted programs announcements\n            WatchService.create($scope, TmProfileFactory.hasDeletedProgram, controller.hasDeletedProgramsWatch);\n            // listen to programs updates announcements\n            WatchService.create($scope, TmProfileFactory.hasUpdatedProgram, controller.hasUpdatedProgramWatch);\n            // listen to datagrid reload requests\n            WatchService.create($scope, TmProfileFactory.isProgramsDatagridReload, controller.isProgramsDatagridReloadWatch);\n            // listen to right side panel visibility changes\n            WatchService.create($scope, TmProfileFactory.isRightSidePanelActive, controller.isRightSidePanelActiveWatch);\n            // listen to new programs\n            WatchService.create($scope, TmProfileFactory.hasNewProgram, controller.hasNewProgramWatch);\n            // listen to new program upgrade\n            WatchService.create($scope, TmProfileFactory.isUpgradedSubscriptions, controller.hasNewProgramUpgradeWatch);\n\n            $rootScope.$on(constants.events.logout, controller.destruct);\n        };\n\n        controller.initDataGrid = function (useCache) {\n            var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n                selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html',\n                coreId = InstitutionFactory.getCoreId();\n            if (!coreId) {\n                return false;\n            }\n            controller.isDatagridReloading = true;\n            TmProfileService.getCampusesKeyValuePairs(useCache).then(function (campusesList) {\n                controller.campusesList = campusesList;\n                $scope.gridOptions = {\n                    enableSorting: true,\n                    exporterMenuCsv: false,\n                    enableGridMenu: true,\n                    showGridFooter: true,\n                    selectedItems: $scope.selectedProgramId,\n                    enableFiltering: true,\n                    enableColumnResize: true,\n                    enableFullRowSelection: true,\n                    enableRowSelection: true,\n                    multiSelect: false,\n                    enableRowHeaderSelection: false,\n                    rowTemplate: '/scripts/components/profiles/tm/programs/datagrid/rowTemplate.html',\n                    columnDefs: [{\n                        displayName: 'Advanced',\n                        field: 'advanced',\n                        enableSorting: true,\n                        enableFiltering: true,\n                        enableColumnResizing: false,\n                        cellTemplate: '/scripts/components/profiles/tm/programs/datagrid/advancedCellTemplate.html',\n                        maxWidth: 108,\n                        filter: {\n                            type: uiGridConstants.filter.SELECT,\n                            selectOptions: controller.programsPackage,\n                            term: GridService.getFilterByField(controller.paginationOptions, 'advanced')\n                        },\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'advanced', true),\n                        filterHeaderTemplate: selectTemplate\n                    }, {\n                        displayName: 'Program Name',\n                        field: 'name',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'name', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'name', '')\n                        }\n                    }, {\n                        displayName: 'Program Type',\n                        field: 'type',\n                        filter: {\n                            type: uiGridConstants.filter.SELECT,\n                            selectOptions: TmProfileService.getProgramTypesList(),\n                            term: GridService.getFilterByField(controller.paginationOptions, 'type')\n                        },\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'type', true),\n                        filterHeaderTemplate: selectTemplate,\n                        cellTemplate: selectCellTemplate\n                    }, {\n                        enableFiltering: true, // @todo allow filtering by campus\n                        displayName: 'Campus',\n                        field: 'campus',\n                        filter: {\n                            type: uiGridConstants.filter.SELECT,\n                            selectOptions: controller.campusesList,\n                            term: GridService.getFilterByField(controller.paginationOptions, 'campus')\n                        },\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'campus', true),\n                        filterHeaderTemplate: selectTemplate,\n                        cellTemplate: '/scripts/components/tmDirectory/datagrid/campusCellTemplate.html'\n                    }, {\n                        displayName: 'Status',\n                        filter: {\n                            type: uiGridConstants.filter.SELECT,\n                            selectOptions: TmProfileService.getProgramStatusList(),\n                            term: GridService.getFilterByField(controller.paginationOptions, 'status')\n                        },\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'status', true),\n                        field: 'status',\n                        maxWidth: 130,\n                        filterHeaderTemplate: selectTemplate,\n                        cellTemplate: selectCellTemplate\n                    }],\n                    onRegisterApi: function (gridApi) {\n                        var columnsVisibilityBeforeChanges = angular.copy($scope.gridOptions.columnDefs);\n                        $scope.gridApi = gridApi;\n                        gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                            controller.handleDatagridRowClick(row.entity);\n                        });\n                        gridApi.core.on.rowsRendered($scope, function () {\n                            controller.isDatagridRendered = true;\n                        });\n                        gridApi.core.on.filterChanged($scope, function () {\n                            controller.handleDatagridFiltersChanges(this.grid);\n                        });\n                        gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n                        // reset columns visibility\n                        GridService.resetExtend(columnsVisibilityBeforeChanges, $scope.gridOptions.columnDefs);\n                    }\n                };\n                if (InstitutionFactory.isTmSubscribed() && !UserFactory.noAccess($state.current.name)) {\n                    TmProfileProgramsService.getAllProgramsByCoreId(coreId).then(controller.handleProgramsListResponse);\n                }\n            });\n        };\n\n        controller.destruct = function () {\n            alreadyInitialised = false;\n        };\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to departments tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isProgramsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            } else if (alreadyInitialised && isActive && !wasActive) {\n                $scope.selectedProgramId = null;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileProgramsController', [\n            '$scope',\n            '$rootScope',\n            '$state',\n            'constants',\n            'uiGridConstants',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'InstitutionFactory',\n            'UserFactory',\n            'TmProfileProgramsService',\n            'TmProfileService',\n            'InstitutionsService',\n            'InstitutionsListService',\n            'WatchService',\n            'UiGridService',\n            App.controllers.tmProfilePrograms\n        ]);\n\n} (window.angular, window.moment));\n\n(function(angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmProfileProgramsService = function(\n        $resource,\n        $q,\n        $log,\n        constants,\n        RequestsQueueService,\n        TmProfileService\n    ) {\n        var service = {\n            deferred: {},\n            hasErrors: false\n        };\n\n        /**\n         * Get programs list API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getProgramsListModel = function() {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/tm-programs?filter[parentInstitutionCoreId]==:coreId&page=1&limit=500&sorting[createdAt]=desc',\n                {},\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        /**\n         * Get programs update API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpdateModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/tm-program/:id', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Get programs create API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getCreateModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/tm-program');\n        };\n\n        /**\n         * Get programs downgrade API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getDowngradeModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-program/:id/downgrade');\n        };\n\n        /**\n         * Get programs upngrade API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getUpgradeModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-program/:id/upgrade', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function(hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function() {\n            return service.hasErrors;\n        };\n\n        /**\n         * Update program.\n         *\n         * @param {Object} program\n         * @returns {Promise}\n         */\n        service.update = function(program) {\n            // @todo validate data\n            return service.getUpdateModel().update({id: program.id}, program).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Delete program.\n         *\n         * @param {Number} id\n         * @returns {Promise}\n         */\n        service.delete = function(id) {\n            // @todo validate data\n            return service.getUpdateModel().delete({id: id}).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.deleteRequest = function(id, comments) {\n            // @todo validate data\n            return service.getUpdateModel().delete({id: id, comments: comments}).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Create program.\n         *\n         * @param {Object} program\n         * @returns {Promise}\n         */\n        service.create = function(program) {\n            // @todo validate data\n            return service.getCreateModel().save(null, program).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Downgrade advanced program.\n         *\n         * @param {Number} id  - program ID\n         * @returns {Promise}\n         */\n        service.downgrade = function(id) {\n            // @todo validate data\n            return service.getDowngradeModel().get({id: id}).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Upgrade to advanced program.\n         *\n         * @param {String} id\n         * @param {String|null} comments\n         * @param {String|null} startDate\n         * @param {String|null} endDate\n         * @returns {Promise.<TResult>}\n         */\n        service.upgrade = function(id, comments, startDate, endDate) {\n            var dataRequest = {};\n            if (startDate) {\n                dataRequest.startDate = startDate;\n            }\n            if (endDate) {\n                dataRequest.endDate = endDate;\n            }\n            if (comments) {\n                dataRequest.comments = comments;\n            }\n            // @todo validate data\n            return service.getUpgradeModel().update({id: id}, dataRequest).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data.insertedCoreId ? data.insertedCoreId : true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n\n        /**\n         * Get all programs by parent institution Core Id\n         *\n         * @param {Number} coreId\n         * @returns {Promise.<TResult>}\n         */\n        service.getAllProgramsByCoreId = function(coreId) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(),\n                    endTime;\n            }\n            return service.getProgramsListModel().get({\n                coreId: coreId\n            }).$promise.then(function(data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                return (data.results);\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        /**\n         * Get programs list.\n         * @todo check if used\n         * @param {Object} params\n         * @returns {Promise}\n         */\n        service.getAllPrograms = function(params) {\n            var coreId = params.parameters().coreId;\n            if (constants.dev) {\n                var startTime = new Date().getTime(),\n                    endTime;\n            }\n\n            // cancel currently running requests\n            RequestsQueueService.cancelAll('getAllPrograms');\n\n            var Api = service.getProgramsListModel().get(params.url(), { coreId: coreId });\n\n            // add new request to the queue\n            RequestsQueueService.add(Api, 'getAllPrograms');\n\n            return Api.$promise.then(function(data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('getAllPrograms');\n\n                params.total(data.totalFiltered);\n                params.totalEntries = data.totalMatching;\n\n                return (data.results);\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        service.getTmpCampusId = function () {\n            return 'tmp_' + moment();\n        };\n\n        service.isTmpCampusId = function (id) {\n            return id.indexOf('tmp_') === 0;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmProfileProgramsService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'RequestsQueueService',\n            'TmProfileService',\n            App.services.TmProfileProgramsService\n        ]);\n\n}(window.angular, window.moment));\n\n(function (angular, moment) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tmProfileProgramForm = function (\n        $scope,\n        $state,\n        constants,\n        $uibModal,\n        NotifierFactory,\n        CampusesService,\n        TmProfileFactory,\n        InstitutionFactory,\n        TmProfileProgramsService,\n        UserFactory,\n        InstitutionsListService,\n        TmProfileService,\n        InstitutionsService,\n        LoginService,\n        ModalService,\n        TmProfileProgramValidationService,\n        WatchService,\n        TmDirectoryService,\n        UiSelectService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.programDescriptionWordLimit = 200;\n        controller.typesList = TmProfileService.getProgramTypesList();\n        controller.feesRangesList = TmProfileService.getFeesRangesList();\n        controller.monthsList = TmProfileService.getMonthsList();\n        controller.accreditationsList = TmProfileService.getAccreditationsList();\n        controller.lengthList = TmProfileService.getLengthList();\n        controller.percentList = TmProfileService.getPercentList();\n        controller.yearList1850 = TmProfileService.getYearList(18, 50);\n        controller.yearList020 = TmProfileService.getYearList(0, 20);\n        controller.offerScholarshipsList = UiSelectService.getYesNoOptions();\n        controller.isNewCampus = false;\n        controller.isEditCampus = false;\n        controller.campusSubmitInProgress = false;\n        controller.programSubmitInProgress = false;\n        controller.downgradeInProgress = false;\n        controller.upgradeInProgress = false;\n        controller.addInProgress = false;\n        controller.deleteInProgress = false;\n        controller.editInProgress = false;\n        controller.forms = {};\n        controller.newCampus = {\n            autoGenerate: false,\n        };\n        controller.oldCampus = {};\n        controller.newProgram = {};\n        controller.program = {};\n        controller.oldProgramCampuses = [];\n        controller.isBackend = false;\n        controller.isReadOnly = false;\n        controller.subscription = {};\n        controller.institution = null;\n        controller.programCampuses = [];\n        controller.isDirectory = false;\n        controller.submitted = false;\n        controller.campusSubmitted = false;\n        controller.campusesWithChanges = [];\n        controller.campusesFullList = [];\n        controller.isSchoolUser = null;\n        controller.tmSupportEmail = constants.support.tm;\n        $scope.showResubscribeBanner = false;\n        $scope.showSubscriptionForm = false;\n        $scope.showEdiProgramForm = true;\n        $scope.datePickerTm = {\n            date: {\n                startDate: null,\n                endDate: null\n            },\n            options: {\n                ranges: {\n                    '6 months from today': [moment(), moment().add(6, 'months')],\n                    '12 months from today': [moment(), moment().add(12, 'months')]\n                },\n                eventHandlers: {\n                    'apply.daterangepicker': function (ev) {\n                        $scope.handleDateRangePickerApplyClick(ev);\n                    },\n                },\n                opens: 'left',\n                alwaysShowCalendars: true\n            }\n        };\n\n        $scope.handleDateRangePickerApplyClick = function (element) {\n            if (!element.model.startDate) {\n                element.model.startDate = moment();\n            }\n            if (!element.model.endDate) {\n                element.model.endDate = moment();\n            }\n            controller.subscription.startDate = element.model.startDate.format('x');\n            controller.subscription.endDate = element.model.endDate.format('x');\n        };\n        $scope.specialisationsList = [];\n        controller.programHistory = {};\n        controller.isDirectory = false;\n        controller.submitted = false;\n        controller.campusSubmitted = false;\n\n        controller.isAddMode = function () {\n            // @todo replace with factory\n            return !!$scope.showProgramAddForm;\n        };\n\n        controller.isEditMode = function () {\n            // @todo replace with factory\n            return !!$scope.showProgramEditForm;\n        };\n\n        controller.isValidName = function () {\n            return TmProfileProgramValidationService.isValidName(\n                controller.isAddMode() ? controller.forms.addProgramDetailsForm : controller.forms.editProgramDetailsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidType = function () {\n            return TmProfileProgramValidationService.isValidType(\n                controller.isAddMode() ? controller.forms.addProgramDetailsForm : controller.forms.editProgramDetailsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidDescription = function () {\n            return TmProfileProgramValidationService.isValidDescription(\n                controller.isAddMode() ? controller.forms.addProgramDetailsForm : controller.forms.editProgramDetailsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidCampusAssigned = function () {\n            return !controller.submitted || TmProfileProgramValidationService.isValidCampusAssigned(\n                controller.isAddMode() ? controller.forms.addProgramDetailsForm : controller.forms.editProgramDetailsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValid = function (isAdvanced) {\n            return TmProfileProgramValidationService.isValid(\n                controller.isAddMode() ? controller.forms.addProgramDetailsForm : controller.forms.editProgramDetailsForm,\n                controller.isAddMode() ? controller.forms.addProgramStatsForm : controller.forms.editProgramStatsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program,\n                isAdvanced\n            );\n        };\n\n        controller.isValidStats = function () {\n            return TmProfileProgramValidationService.isValidStats(\n                controller.isAddMode() ? controller.forms.addProgramStatsForm : controller.forms.editProgramStatsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidDetails = function () {\n            return TmProfileProgramValidationService.isValidDetails(\n                controller.isAddMode() ? controller.forms.addProgramDetailsForm : controller.forms.editProgramDetailsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidAddCampus = function () {\n            return TmProfileProgramValidationService.isValidCampus(\n                controller.forms.addCampusForm,\n                controller.newCampus\n            );\n        };\n\n        controller.isValidEditCampus = function () {\n            return TmProfileProgramValidationService.isValidCampus(\n                controller.forms.editCampusForm,\n                controller.oldCampus\n            );\n        };\n\n        controller.isValidAverageGmat = function () {\n            return TmProfileProgramValidationService.isValidAverageGmat(\n                controller.isAddMode() ? controller.forms.addProgramStatsForm : controller.forms.editProgramStatsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidClassSize = function () {\n            return TmProfileProgramValidationService.isValidClassSize(\n                controller.isAddMode() ? controller.forms.addProgramStatsForm : controller.forms.editProgramStatsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidAverageSalaryAfterGraduation = function () {\n            return TmProfileProgramValidationService.isValidAverageSalaryAfterGraduation(\n                controller.isAddMode() ? controller.forms.addProgramStatsForm : controller.forms.editProgramStatsForm,\n                controller.isAddMode() ? controller.newProgram : controller.program\n            );\n        };\n\n        controller.isValidCampusName = function () {\n            return TmProfileProgramValidationService.isValidCampusName(\n                controller.isEditCampus ? controller.forms.editCampusForm : controller.forms.addCampusForm,\n                controller.isEditCampus ? controller.oldCampus : controller.newCampus\n            );\n        };\n\n        controller.isValidCampusCountry = function () {\n            return TmProfileProgramValidationService.isValidCampusCountry(\n                controller.isEditCampus ? controller.forms.editCampusForm : controller.forms.addCampusForm,\n                controller.isEditCampus ? controller.oldCampus : controller.newCampus\n            );\n        };\n\n        controller.isValidCampusAddressLine1 = function () {\n            return TmProfileProgramValidationService.isValidCampusAddressLine1(\n                controller.isEditCampus ? controller.forms.editCampusForm : controller.forms.addCampusForm,\n                controller.isEditCampus ? controller.oldCampus : controller.newCampus\n            );\n        };\n\n        controller.isValidCampusCity = function () {\n            return TmProfileProgramValidationService.isValidCampusCity(\n                controller.isEditCampus ? controller.forms.editCampusForm : controller.forms.addCampusForm,\n                controller.isEditCampus ? controller.oldCampus : controller.newCampus\n            );\n        };\n\n        controller.setValid = function (fieldName, stats, campus) {\n            controller.submitted = null;\n            if (campus) {\n                controller.campusSubmitted = null;\n            }\n            if (controller.isAddMode()) {\n                if (fieldName) {\n                    if (stats) {\n                        controller.forms.addProgramStatsForm[fieldName].$setPristine();\n                    } else if (campus) {\n                        if (controller.isEditCampus) {\n                            controller.forms.editCampusForm[fieldName].$setPristine();\n                        } else {\n                            controller.forms.addCampusForm[fieldName].$setPristine();\n                        }\n                    } else {\n                        controller.forms.addProgramDetailsForm[fieldName].$setPristine();\n                    }\n                } else {\n                    if (controller.forms.addProgramDetailsForm) {\n                        controller.forms.addProgramDetailsForm.$setPristine();\n                    }\n                    if (controller.forms.addProgramStatsForm) {\n                        controller.forms.addProgramStatsForm.$setPristine();\n                    }\n                }\n            } else {\n                if (fieldName) {\n                    if (stats) {\n                        controller.forms.editProgramStatsForm[fieldName].$setPristine();\n                    } else if (campus) {\n                        if (controller.isEditCampus) {\n                            controller.forms.editCampusForm[fieldName].$setPristine();\n                        } else {\n                            controller.forms.addCampusForm[fieldName].$setPristine();\n                        }\n                    } else {\n                        controller.forms.editProgramDetailsForm[fieldName].$setPristine();\n                    }\n                } else {\n                    if (controller.forms.editProgramStatsForm) {\n                        controller.forms.editProgramDetailsForm.$setPristine();\n                    }\n                    if (controller.forms.editProgramStatsForm) {\n                        controller.forms.editProgramStatsForm.$setPristine();\n                    }\n                }\n            }\n        };\n\n        /**\n         * Actions to do when add campus button is clicked.\n         */\n        controller.handleAddCampusClick = function () {\n            // toggle new campus status\n            controller.isNewCampus = !controller.isNewCampus;\n            controller.isEditCampus = false;\n            // reset new campus\n            controller.newCampus = {\n                displayInFrontEnd: true\n            };\n            // reset forms validation\n            if (controller.forms.addCampusForm) {\n                controller.forms.addCampusForm.$setPristine();\n                controller.forms.addCampusForm.name.$setPristine();\n                controller.forms.addCampusForm.country.$setPristine();\n                controller.forms.addCampusForm.addressLine1.$setPristine();\n                controller.forms.addCampusForm.city.$setPristine();\n            }\n        };\n\n        /**\n         * Actions to do when cancel button is clicked in edit campus form.\n         */\n        controller.handleCancelCampusClick = function () {\n            // toggle edit campus form\n            controller.isEditCampus = !controller.isEditCampus;\n        };\n\n        /**\n         * Actions to do when new campus is submitted.\n         *\n         * @returns {boolean}\n         */\n        controller.handleNewCampusSubmit = function () {\n            controller.campusSubmitted = true;\n            controller.forms.addCampusForm.$setDirty();\n            controller.forms.addCampusForm.name.$setDirty();\n            controller.forms.addCampusForm.country.$setDirty();\n            controller.forms.addCampusForm.addressLine1.$setDirty();\n            controller.forms.addCampusForm.city.$setDirty();\n\n            // validate campus data\n            if (controller.campusSubmitInProgress ||\n                !controller.forms.addCampusForm ||\n                !controller.isValidAddCampus()\n            ) {\n                return false;\n            }\n            controller.campusSubmitInProgress = true;\n\n            controller.newCampus.id = TmProfileProgramsService.getTmpCampusId();\n            if (controller.newCampus.primary || !controller.program.primaryCampusId) {\n                // mark campus as primary\n                controller.program.primaryCampusId = controller.newCampus.id;\n                // mark all other programs as not primary\n                angular.forEach(controller.programCampuses, function (campus) {\n                    campus.primary = false;\n                });\n            }\n            if (!controller.program.campus) {\n                controller.program.campus = [];\n            }\n            // assign new program to program\n            if (controller.isAddMode()) {\n                controller.newProgram.campus.push(controller.newCampus.id);\n            } else {\n                controller.program.campus.push(controller.newCampus.id);\n            }\n            // store new campus in program campuses list\n            controller.programCampuses.push(controller.newCampus);\n            // add new campus to campuses list\n            controller.campusesList.push({\n                value: controller.newCampus.id,\n                label: controller.newCampus.name\n            });\n            // close add campus form\n            controller.handleAddCampusClick();\n\n            controller.campusSubmitInProgress = false;\n        };\n\n        /**\n         * Actions to do when campus is updated.\n         *\n         * @returns {boolean}\n         */\n        controller.handleUpdateCampus = function () {\n            controller.campusSubmitted = true;\n            controller.forms.editCampusForm.$setDirty();\n            controller.forms.editCampusForm.name.$setDirty();\n            controller.forms.editCampusForm.country.$setDirty();\n            controller.forms.editCampusForm.addressLine1.$setDirty();\n            controller.forms.editCampusForm.city.$setDirty();\n\n            // validate campus data\n            if (controller.campusSubmitInProgress ||\n                !controller.forms.editCampusForm ||\n                !controller.isValidEditCampus()\n            ) {\n                return false;\n            }\n            controller.campusSubmitInProgress = true;\n            if (controller.oldCampus.primary) {\n                controller.program.primaryCampusId = controller.oldCampus.id;\n            }\n            var i = 0, total = controller.programCampuses.length;\n            for (i; i < total; i++) {\n                if (controller.programCampuses[i].id === controller.oldCampus.id) {\n                    controller.programCampuses[i] = angular.copy(controller.oldCampus);\n                    break;\n                }\n            }\n            i = 0;\n            total = controller.campusesList.length;\n            for (i; i < total; i++) {\n                if (controller.campusesList[i].value === controller.oldCampus.id) {\n                    controller.campusesList[i] = {\n                        value: controller.oldCampus.id,\n                        label: controller.oldCampus.name\n                    };\n                    break;\n                }\n            }\n            // close add campus form\n            controller.handleCancelCampusClick();\n            controller.campusSubmitInProgress = false;\n        };\n\n        /**\n         * Is campus form visible?\n         *\n         * @returns {boolean|*}\n         */\n        controller.isCampusFormVisible = function () {\n            return controller.isNewCampus;\n        };\n\n        /**\n         * Is edit campus form visible?\n         *\n         * @returns {boolean|*}\n         */\n        controller.isEditCampusFormVisible = function () {\n            return controller.isEditCampus;\n        };\n\n        controller.showStatistics = function () {\n            return !controller.isValidStats() && controller.submitted;\n        };\n\n        controller.showDetails = function () {\n            return !controller.isValidDetails() && controller.submitted;\n        };\n\n        controller.showCampus = function () {\n            return !controller.isValidCampusAssigned() && controller.submitted;\n        };\n\n        /**\n         * Actions to do when new program create button is clicked.\n         *\n         * @returns {boolean}\n         */\n        controller.handleProgramCreateClick = function () {\n            controller.submitted = true;\n            controller.forms.addProgramDetailsForm.$setDirty();\n            controller.forms.addProgramDetailsForm.name.$setDirty();\n            controller.forms.addProgramDetailsForm.type.$setDirty();\n            controller.forms.addProgramDetailsForm.description.$setDirty();\n            controller.forms.addProgramStatsForm.$setDirty();\n            controller.forms.addProgramStatsForm.avgGmat.$setDirty();\n            controller.forms.addProgramStatsForm.classSize.$setDirty();\n            controller.forms.addProgramStatsForm.avgSalaryAfterGraduation.$setDirty();\n\n            // validate program data\n            if (controller.programSubmitInProgress ||\n                !controller.forms.addProgramDetailsForm ||\n                !controller.forms.addProgramStatsForm ||\n                !controller.isValid()\n            ) {\n                return false;\n            }\n            controller.programSubmitInProgress = true;\n            controller.newProgram.parentInstitutionCoreId = InstitutionFactory.getCoreId();\n            controller.newProgram.primaryCampusId = controller.program.primaryCampusId;\n\n            // create new program\n            TmProfileProgramsService.create(controller.newProgram).then(controller.createCallback);\n        };\n\n        /**\n         * Actions to do when create request is finished.\n         *\n         * @param {Object} response\n         */\n        controller.createCallback = function (response) {\n            if (response && response.insertedId) {\n                controller.totalProcessedCampuses = 0;\n                controller.createdProgram = angular.copy(controller.newProgram);\n                var institutionId = controller.institutionId || InstitutionFactory.getId(),\n                    hasTmp = false,\n                    campusData,\n                    campusId,\n                    newCampusId,\n                    isTmp;\n                controller.createdProgram.id = response.insertedId;\n                // create/update campuses\n                angular.forEach(controller.programCampuses, function (campus) {\n                    campusData = angular.copy(campus);\n                    campusId = angular.copy(campus.id);\n                    isTmp = TmProfileProgramsService.isTmpCampusId(campusId);\n                    if (isTmp) {\n                        hasTmp = true;\n                        delete campusData.id;\n                        campusData.primary = false;\n                    }\n                    if (isTmp || controller.campusesWithChanges.indexOf(campusId) !== -1) {\n                        InstitutionsListService.saveCampus(institutionId, campusData).then(function (response) {\n                            controller.totalProcessedCampuses++;\n                            if (isTmp) {\n                                newCampusId = response.insertedId;\n\n                                // delete temporary ID\n                                delete controller.createdProgram.campus[\n                                    controller.createdProgram.campus.indexOf(campusId)\n                                ];\n                                // assign new real campus ID\n                                controller.createdProgram.campus.push(newCampusId);\n                                if (controller.createdProgram.primaryCampusId === campusId) {\n                                    controller.createdProgram.primaryCampusId = newCampusId;\n                                }\n\n                                angular.forEach(controller.campusesList, function (item) {\n                                    if (item.value === campus.id) {\n                                        item.value = newCampusId;\n                                    }\n                                });\n                                campus.id = newCampusId;\n                                TmProfileService.clearCache();\n                                InstitutionFactory.addCampus(campus);\n                            }\n                            // if all program campuses were updated/created\n                            if (controller.programCampuses.length === controller.totalProcessedCampuses) {\n                                // filter out empty campuses\n                                controller.createdProgram.campus = controller.createdProgram.campus.filter(function (item) {\n                                    return item !== null;\n                                });\n                                // update program\n                                controller.createdProgram.skipStatus = true;\n                                TmProfileProgramsService.update(controller.createdProgram).then(controller.newProgramUpdateCallback);\n                            }\n                        });\n                    } else {\n                        controller.totalProcessedCampuses++;\n                    }\n                });\n                if (!hasTmp && !controller.campusesWithChanges.length) {\n                    controller.newProgramUpdateCallback(true);\n                    // update program\n                    //TmProfileProgramsService.update(controller.createdProgram).then(controller.newProgramUpdateCallback);\n                }\n            } else {\n                controller.newProgramUpdateCallback(false);\n            }\n        };\n\n        controller.newProgramUpdateCallback = function (success) {\n            controller.programSubmitInProgress = false;\n            controller.setValid();\n            // show notification about program submit status\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? (UserFactory.isClient() ? 'Request sent' : 'Created successfully!') : 'Saving failed!',\n                'New Program'\n            );\n            if (success) {\n                // reset add form fields\n                controller.initForms();\n                // announce that new program was added\n                TmProfileFactory.announceNewProgram(controller.createdProgram.id);\n                TmProfileFactory.setProgramEditFormVisibility(true);\n                // set new program as active\n                TmProfileFactory.setProgram(controller.createdProgram);\n            }\n        };\n\n        /**\n         * Actions to do when program update button is clicked.\n         *\n         * @returns {boolean}\n         */\n        controller.handleProgramEditClick = function () {\n            controller.submitted = true;\n            controller.forms.editProgramDetailsForm.$setDirty();\n            controller.forms.editProgramDetailsForm.name.$setDirty();\n            controller.forms.editProgramDetailsForm.description.$setDirty();\n            controller.forms.editProgramStatsForm.$setDirty();\n            controller.forms.editProgramStatsForm.avgGmat.$setDirty();\n            controller.forms.editProgramStatsForm.classSize.$setDirty();\n            controller.forms.editProgramStatsForm.avgSalaryAfterGraduation.$setDirty();\n\n            // validate program data\n            if (controller.editInProgress ||\n                !controller.forms.editProgramDetailsForm ||\n                !controller.forms.editProgramStatsForm ||\n                !controller.isValid()\n            ) {\n                return false;\n            }\n            controller.editInProgress = true;\n            controller.totalProcessedCampuses = 0;\n            var institutionId = controller.institutionId || InstitutionFactory.getId(),\n                hasTmp = false;\n            angular.forEach(controller.programCampuses, function (campus) {\n                var campusData = angular.copy(campus),\n                    isTmp = TmProfileProgramsService.isTmpCampusId(campus.id);\n                if (isTmp) {\n                    hasTmp = true;\n                    delete campusData.id;\n                    campusData.primary = false;\n                }\n                if (isTmp || controller.campusesWithChanges.indexOf(campus.id) !== -1) {\n                    InstitutionsListService.saveCampus(institutionId, campusData).then(function (response) {\n                        controller.totalProcessedCampuses++;\n                        if (TmProfileProgramsService.isTmpCampusId(campus.id)) {\n                            // delete temporary ID\n                            delete controller.program.campus[controller.program.campus.indexOf(campus.id)];\n                            // assign real new campus ID\n                            controller.program.campus.push(response.insertedId);\n                            if (controller.program.primaryCampusId === campus.id) {\n                                controller.program.primaryCampusId = response.insertedId;\n                            }\n                        }\n                        // if all program campuses were updated/created\n                        if (controller.programCampuses.length === controller.totalProcessedCampuses) {\n                            // filter out empty campuses\n                            controller.program.campus = controller.program.campus.filter(function (item) {\n                                return item !== null;\n                            });\n                            // update program\n                            TmProfileProgramsService.update(controller.program).then(controller.updateCallback);\n                        }\n                    });\n                } else {\n                    controller.totalProcessedCampuses++;\n                }\n            });\n            if (!hasTmp && !controller.campusesWithChanges.length) {\n                // update program\n                TmProfileProgramsService.update(controller.program).then(controller.updateCallback);\n            }\n        };\n\n        /**\n         * Actions to do when update request is finished.\n         *\n         * @param {Object} response\n         */\n        controller.updateCallback = function (response) {\n            // show notification about program submit status\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? (UserFactory.isClient() ? 'Request sent successfully!' : 'Approved successfully!') : 'Update failed!',\n                'Edit Program'\n            );\n\n            if (response) {\n                // close edit mode\n                TmProfileFactory.setProgramEditFormVisibility(false);\n                // reload datagrid or update program in it\n                TmProfileFactory.announceProgramUpdate(controller.program.id);\n            }\n            controller.editInProgress = false;\n        };\n\n        controller.handleDeleteClick = function () {\n            if (UserFactory.isClient()) {\n                TmProfileFactory.setDeleteFormVisibility();\n            } else {\n                var modalOptions = {\n                    closeButtonText: 'Cancel',\n                    actionButtonText: 'Delete',\n                    actionButtonClass: 'danger',\n                    headerText: 'Program Deletion',\n                    bodyText: 'Are you sure you wish to delete \"' + controller.program.name + '\" program?',\n                };\n                ModalService.show({}, modalOptions).then(function () {\n                    controller.deleteInProgress = true;\n                    TmProfileProgramsService.delete(controller.program.id).then(controller.deleteCallback);\n                });\n            }\n        };\n\n        controller.deleteCallback = function (response) {\n            controller.deleteInProgress = false;\n\n            // show notification about program submit status\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Deleted successfully!' : 'Delete failed!',\n                'Delete Program'\n            );\n\n            if (response) {\n                // close edit mode\n                TmProfileFactory.setProgramEditFormVisibility(false);\n                // reload datagrid or remove program in it\n                TmProfileFactory.announceProgramDeletion(controller.program.id);\n            }\n        };\n\n        /**\n         * Actions to do when add program is clicked.\n         */\n        controller.closeAddProgramForm = function () {\n            TmProfileFactory.setProgramAddFormVisibility(false);\n        };\n\n        /**\n         * Actions to do when edit program is clicked.\n         */\n        controller.closeEditProgramForm = function () {\n            TmProfileFactory.setProgramEditFormVisibility(false);\n            $scope.showEdiProgramForm = true;\n            $scope.showSubscriptionForm = false;\n            TmProfileFactory.setProgram({});\n            controller.subscription.startDate = null;\n            controller.subscription.endDate = null;\n        };\n\n        /**\n         * Actions to do when edit program is clicked.\n         */\n        controller.closeSubscribeProgramForm = function () {\n            TmProfileFactory.setProgramEditFormVisibility(true);\n            $scope.showSubscriptionForm = false;\n            $scope.showEdiProgramForm = true;\n            controller.subscription.startDate = null;\n            controller.subscription.endDate = null;\n        };\n\n        controller.allowUpgrade = function () {\n            return !controller.program.advanced && !controller.isReadOnly;\n        };\n\n        controller.allowDowngrade = function () {\n            return !UserFactory.isClient() && controller.program.advanced;\n        };\n\n        controller.allowDelete = function () {\n            return !controller.program.advanced && (\n                (UserFactory.isClient() && !controller.isReadOnly) || !UserFactory.isClient()\n            );\n        };\n\n        controller.allowUpdate = function () {\n            return !controller.isReadOnly;\n        };\n\n        controller.allowLoginAs = function () {\n            return controller.program.advanced;\n        };\n\n        controller.isAllowedToLogin = function () {\n            return (UserFactory.isClient() &&\n                UserFactory.isAllowedToLogin(controller.program.institutionCoreId)) ||\n                !UserFactory.isClient();\n        };\n\n        controller.handleLoginAsClick = function () {\n            LoginService.getTuProfilesRedirect({ coreId: controller.program.institutionCoreId });\n            controller.closeEditProgramForm();\n        };\n\n        controller.isUndefined = function (value) {\n            return (typeof value === 'undefined');\n        };\n\n        controller.getEditTitle = function () {\n            return UserFactory.isClient() ?\n                (controller.program.advanced ? 'Request to Edit Advanced Program' : 'Request to Edit Basic Program') :\n                (controller.program.advanced ? 'Edit Advanced Program' : 'Edit Basic Program');\n        };\n\n        controller.getSubscriptionTitle = function () {\n            return UserFactory.isClient() ?\n                (controller.program.advanced ? 'Request to Edit Advanced Program' : 'Request to Edit Basic Program') :\n                (controller.program.advanced ? 'Edit Advanced Program' : 'Upgrade to Advanced Program');\n        };\n\n        controller.getEditButtonTitle = function () {\n            return UserFactory.isClient() ? 'Send' : 'Update';\n        };\n\n        controller.getDeleteButtonTitle = function () {\n            return UserFactory.isClient() ?\n                (controller.program.advanced ? 'Request to Delete Advanced Program' : 'Request to Delete Basic Program') : 'Delete';\n        };\n\n        controller.getUpgradeButtonTitle = function () {\n            return UserFactory.isClient() ? 'Request to Upgrade to Advanced Program' : 'Upgrade to Advanced Program';\n        };\n\n        controller.getAllSubscriptionsCallback = function (tmSubscription) {\n            var modalOptions = {\n                closeButtonText: 'Cancel',\n                headerText: 'Current Subscription(s)',\n                institutionCoreId: controller.program.institutionCoreId,\n                tmSubscription: tmSubscription,\n                showContent: function () {\n                    return !!(tmSubscription &&\n                        tmSubscription.startDate &&\n                        tmSubscription.advanced &&\n                        tmSubscription.subscribed);\n                },\n                completeDowngradeClick: function () {\n                    this.close();\n                    if (\n                        modalOptions.tmSubscription &&\n                        modalOptions.tmSubscription.startDate &&\n                        modalOptions.tmSubscription.advanced &&\n                        modalOptions.tmSubscription.subscribed\n                    ) {\n                        $state.go('staff.institutions.list', { coreId: controller.program.institutionCoreId });\n                    } else {\n                        TmProfileProgramsService.downgrade(controller.program.id).then(controller.downgradeCallback);\n                    }\n                }\n            }, modalDefaults = {\n                backdrop: true,\n                keyboard: true,\n                modalFade: true,\n                templateUrl: '/scripts/components/profiles/tm/programs/modalDowngradeProgramView.html'\n            };\n            ModalService.show(modalDefaults, modalOptions);\n            controller.downgradeInProgress = false;\n        };\n\n        controller.handleDowngradeClick = function () {\n            // disable downgrade button while loading subscriptions\n            controller.downgradeInProgress = true;\n            // load program subscriptions\n            InstitutionsListService.getTmSubscriptions(controller.program.institutionCoreId).then(controller.getAllSubscriptionsCallback);\n        };\n\n        controller.downgradeCallback = function (success) {\n            controller.downgradeInProgress = false;\n            TmProfileService.getCampusesKeyValuePairs(\n                false,\n                InstitutionFactory.getCoreId()\n            ).then(function (campusesList) {\n                controller.campusesList = campusesList;\n            }).then(function () {\n                // get campuses full details\n                TmProfileService.getCampuses(\n                    false,\n                    InstitutionFactory.getCoreId()\n                ).then(function (campuses) {\n                    controller.campusesFullList = campuses;\n                    controller.programCampuses = [];\n                    if (controller.program.campus && controller.campusesList) {\n                        var total = campuses.length,\n                            i;\n                        angular.forEach(controller.program.campus, function (campusId) {\n                            i = 0;\n                            for (i; i < total; i++) {\n                                if (campusId === campuses[i].id) {\n                                    controller.programCampuses.push(campuses[i]);\n                                    break;\n                                }\n                            }\n                        });\n                    }\n                });\n            }).then(function () {\n                // reload data grid\n                TmProfileFactory.requestProgramsDatagridReload();\n            }).then(function () {\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Downgraded successfully!' : 'Downgrade failed!',\n                    'Advanced Program'\n                );\n            });\n        };\n\n        controller.handleUpgradeClick = function () {\n            if (UserFactory.isClient()) {\n                TmProfileFactory.setProgramUpgradeFormVisibility(true);\n            } else {\n                TmProfileFactory.setProgramSubscribeFormVisibility(true);\n            }\n        };\n\n        /**\n         * Actions to do when save button is clicked in subscription panel.\n         */\n        controller.handleUpgradeSubmit = function () {\n            TmProfileProgramsService.upgrade(\n                controller.program.id,\n                null,\n                controller.subscription.startDate,\n                controller.subscription.endDate\n            ).then(controller.upgradeCallback);\n        };\n\n        controller.upgradeCallback = function (success) {\n            controller.upgradeInProgress = false;\n            // show edit mode\n            TmProfileFactory.setProgramSubscribeFormVisibility(false);\n            // mark program as advanced for QS users\n            if (success) {\n                TmProfileFactory.setReadOnly(true);\n                controller.program.advanced = true;\n                if (!isNaN(success)) {\n                    controller.program.institutionCoreId = success;\n                }\n                TmProfileFactory.setProgram(controller.program);\n                TmProfileFactory.setUpgradeSubscription(true);\n                // reload datagrid\n                TmProfileFactory.requestProgramsDatagridReload();\n            }\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Upgraded successfully!' : 'Upgrade failed!',\n                'Basic Program'\n            );\n        };\n\n        /**\n         * Handle campus edit click.\n         *\n         * @param {Number} id\n         * @returns {boolean}\n         */\n        controller.editCampus = function (id) {\n            if (typeof id === 'undefined' || !controller.programCampuses.length || !controller.programCampuses[id]) {\n                return false;\n            }\n            controller.oldProgramCampuses = angular.copy(controller.programCampuses);\n            controller.oldCampus = controller.oldProgramCampuses[id];\n            controller.oldCampus.primary = controller.oldCampus.id === controller.program.primaryCampusId;\n            controller.isEditCampus = true;\n            controller.isNewCampus = false;\n            controller.campusesWithChanges.push(controller.programCampuses[id].id);\n        };\n\n        controller.isProgramSubmitDisabled = function () {\n            return controller.isEditCampus ||\n                controller.isNewCampus ||\n                controller.editInProgress ||\n                controller.addInProgress;\n        };\n\n        controller.getCampusById = function (campusId) {\n            var total = controller.campusesFullList.length,\n                i = 0;\n            for (i; i < total; i++) {\n                if (campusId === controller.campusesFullList[i].id) {\n                    return controller.campusesFullList[i];\n                }\n            }\n        };\n\n        controller.clearTmpCampuses = function (campusId) {\n            angular.forEach(controller.campusesList, function (campus, key) {\n                if (TmProfileProgramsService.isTmpCampusId(campus.value)) {\n                    if (campusId) {\n                        if (campusId === campus.value) {\n                            controller.campusesList[key] = null;\n                        }\n                    } else {\n                        controller.campusesList[key] = null;\n                    }\n                }\n            });\n            if (controller.campusesList) {\n                controller.campusesList = controller.campusesList.filter(function (item) {\n                    return !!item;\n                });\n            }\n        };\n\n        controller.resetCampusList = function (campusId) {\n            var campusObject;\n            angular.forEach(controller.campusesList, function (campus) {\n                if (campusId) {\n                    if (campusId === campus.value) {\n                        campusObject = controller.getCampusById(campus.value);\n                        campus.label = campusObject.name;\n                    }\n                } else {\n                    campusObject = controller.getCampusById(campus.value);\n                    campus.label = campusObject.name;\n                }\n            });\n        };\n\n        controller.newProgramCampusWatch = function (selectedCampusesIds) {\n            if (controller.isAddMode()) {\n                controller.programCampusWatch(selectedCampusesIds);\n            }\n        };\n\n        controller.existingProgramCampusWatch = function (selectedCampusesIds) {\n            if (controller.isEditMode()) {\n                controller.programCampusWatch(selectedCampusesIds);\n            }\n        };\n\n        controller.programCampusWatch = function (selectedCampusesIds) {\n            var existingIds = [],\n                index,\n                campus;\n            if (selectedCampusesIds && selectedCampusesIds.length) {\n                // walk threw already assigned campuses\n                angular.forEach(controller.programCampuses, function (campus, index) {\n                    // if its in the submitted list\n                    if (selectedCampusesIds.indexOf(campus.id) !== -1) {\n                        existingIds.push(campus.id);\n                    } else {\n                        if (controller.program.primaryCampusId === controller.programCampuses[index].id) {\n                            controller.program.primaryCampusId = null;\n                        }\n                        controller.programCampuses[index] = null;\n                        controller.clearTmpCampuses(campus.id);\n                        if (!TmProfileProgramsService.isTmpCampusId(campus.id)) {\n                            controller.resetCampusList(campus.id);\n                        }\n                    }\n                });\n                controller.programCampuses = controller.programCampuses.filter(function (item) {\n                    return !!item;\n                });\n\n                // walk threw selected campuses ids\n                angular.forEach(selectedCampusesIds, function (campusId) {\n                    index = existingIds.indexOf(campusId);\n                    campus = controller.getCampusById(campusId);\n                    // if campus is not already assigned\n                    if (campus && index === -1) {\n                        controller.programCampuses.push(campus);\n                    }\n                });\n                // remove deleted campuses\n                controller.programCampuses = controller.programCampuses.filter(function (item) {\n                    return !!item;\n                });\n\n                var totalAssignedCampuses = controller.programCampuses.length;\n                // if assigned cmapuses list is not empty & no promary campus\n                if (totalAssignedCampuses && !controller.program.primaryCampusId) {\n                    // mark last campus as primary\n                    controller.program.primaryCampusId = controller.programCampuses[totalAssignedCampuses - 1].id;\n                }\n            } else {\n                // clear program campuses list\n                controller.programCampuses = [];\n                controller.program.primaryCampusId = null;\n                controller.clearTmpCampuses();\n                controller.resetCampusList();\n            }\n            controller.isEditCampus = false;\n        };\n\n        controller.programHistoryCallback = function (data) {\n            if (!angular.equals('{}', data)) {\n                controller.programHistory = data;\n                // make arrays comma separated string\n                angular.forEach(controller.programHistory, function (item, key) {\n                    if (angular.isArray(item)) {\n                        if (key === 'specialisations') {\n                            var humanReadable = [];\n                            angular.forEach(item, function (itemValue) {\n                                angular.forEach(controller.specialisationsList, function (specListItem) {\n                                    if (angular.equals(specListItem.handle, itemValue)) {\n                                        humanReadable.push(specListItem.name);\n                                    }\n                                });\n                            });\n                            if (item.length === 0) {\n                                humanReadable.push('No previous value');\n                            }\n                            controller.programHistory[key] = humanReadable.join(', ');\n                        } else {\n                            controller.programHistory[key] = item.join(', ');\n                            if (item.length === 0) {\n                                controller.programHistory[key] = 'No previous value';\n                            }\n                        }\n                    }\n                    if (angular.isObject(item)) {\n                        angular.forEach(item, function (subItem, subKey) {\n                            if (angular.isArray(subItem)) {\n                                controller.programHistory[key][subKey] = subItem.join(', ');\n                                if (subItem.length === 0) {\n                                    controller.programHistory[key][subKey] = 'No previous value';\n                                }\n                            } else if (angular.isString(subItem) && subItem.length === 0) {\n                                controller.programHistory[key][subKey] = 'No previous value';\n                            }\n                        });\n                    }\n                    // transform shorthands to human readable format\n                    if (key === 'type') {\n                        angular.forEach(controller.typesList, function (typeListItem) {\n                            if (angular.equals(typeListItem.value, item)) {\n                                controller.programHistory[key] = typeListItem.label;\n                            }\n                        });\n                    }\n                });\n            }\n        };\n\n        controller.loadProgramCampuses = function () {\n            // get institution campuses id & name pairs\n            TmProfileService.getCampusesKeyValuePairs(\n                controller.isDirectory || controller.programInstitutionCoreId === InstitutionFactory.getCoreId(),\n                controller.programInstitutionCoreId\n            ).then(function (campusesList) {\n                controller.campusesList = campusesList;\n                var exists;\n                angular.forEach(controller.program.campus, function (assignedCampus, key) {\n                    exists = false;\n                    angular.forEach(controller.campusesList, function (availableCampus) {\n                        if (availableCampus.value === assignedCampus) {\n                            exists = true;\n                        }\n                    });\n                    if (!exists) {\n                        delete controller.program.campus[key];\n                    }\n                });\n                if (controller.program.campus) {\n                    controller.program.campus = controller.program.campus.filter(function (item) {\n                        return typeof item !== 'undefined';\n                    });\n                }\n            }).then(function () {\n                // get campuses full details\n                TmProfileService.getCampuses(\n                    controller.isDirectory || controller.programInstitutionCoreId === InstitutionFactory.getCoreId(),\n                    controller.programInstitutionCoreId\n                ).then(function (campuses) {\n                    controller.campusesFullList = campuses;\n                    controller.programCampuses = [];\n                    if (controller.program.campus && controller.campusesList) {\n                        var total = campuses.length,\n                            i;\n                        angular.forEach(controller.program.campus, function (campusId) {\n                            i = 0;\n                            for (i; i < total; i++) {\n                                if (campusId === campuses[i].id) {\n                                    controller.programCampuses.push(campuses[i]);\n                                    break;\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n        };\n\n        /**\n         * Action to do when active program changes.\n         * @param {Object} program\n         */\n        controller.getProgramWatch = function (program) {\n            controller.isEditCampus = false;\n            controller.isNewCampus = false;\n            if (!program ||\n                (!controller.isAddMode() && !controller.isEditMode()) ||\n                (controller.isEditMode() && typeof (program) !== 'undefined' && angular.equals({}, program))\n            ) {\n                return;\n            }\n            controller.program = angular.copy(program);\n            controller.isProgramAdvanced = program.advanced;\n            controller.programInstitutionCoreId = controller.program.advanced ? controller.program.institutionCoreId : (\n                controller.program.parentInstitutionCoreId || InstitutionFactory.getCoreId()\n            );\n            if (!controller.isProgramAdvanced) {\n                controller.loadProgramCampuses();\n            }\n\n            if (controller.program.coreId && controller.isSchoolUser === false) {\n                TmDirectoryService.getProgramHistory(controller.program.coreId).then(\n                    controller.programHistoryCallback\n                );\n            }\n        };\n\n        controller.changeValidateRange = function (targetVar, target, min, max) {\n            if (controller[targetVar].stats === null) {\n                controller[targetVar].stats = {};\n            }\n            if (!controller[targetVar].stats.hasOwnProperty(target) ||\n                typeof controller[targetVar].stats[target] === 'undefined'\n            ) {\n                controller[targetVar].stats[target] = min;\n            }\n\n            if (controller[targetVar].stats[target] < min) {\n                controller[targetVar].stats[target] = min;\n            }\n            if (controller[targetVar].stats[target] > max) {\n                controller[targetVar].stats[target] = max;\n            }\n        };\n\n        controller.formVisibilityWatch = function (isVisible, wasVisible) {\n            if (isVisible && !wasVisible) {\n                controller.initForms();\n                controller.setValid();\n                controller.program.primaryCampusId = null;\n            }\n        };\n\n        /**\n         * Get cordinates add campus\n         */\n        controller.autoGenerateCordinates = function () {\n            if (controller.newCampus.autoGenerate) {\n                CampusesService.getCoordinatesByCampus(controller.newCampus).then(\n                    controller.getCoordinatesByCampusCallback\n                );\n            }\n        };\n\n        /**\n         * Get coordinates callback.\n         *\n         * @param {Array }response\n         */\n        controller.getCoordinatesByCampusCallback = function (response) {\n            if (response) {\n                if (angular.isArray(response) && !angular.isObject(response[0]) && !angular.isObject(response[1])) {\n                    controller.newCampus.latitude = response[0];\n                    controller.newCampus.longitude = response[1];\n                    controller.coordinatesUpdated('success', 'Coordinates updated!');\n                } else {\n                    controller.coordinatesUpdated('warning', 'Address not found!');\n                }\n            } else {\n                controller.coordinatesUpdated('error', 'Error requesting coordinates!');\n            }\n        };\n\n        /**\n         * Get cordinates edit campus\n         */\n        controller.autoGenerateCordinatesEdit = function () {\n            if (controller.oldCampus.autoGenerate) {\n                CampusesService.getCoordinatesByCampus(controller.oldCampus).then(\n                    controller.getCoordinatesByEditCampusCallback\n                );\n            }\n        };\n\n        /**\n         * Get coordinates callback.\n         *\n         * @param {Array }response\n         */\n        controller.getCoordinatesByEditCampusCallback = function (response) {\n            if (response) {\n                if (angular.isArray(response) && !angular.isObject(response[0]) && !angular.isObject(response[1])) {\n                    controller.oldCampus.latitude = response[0];\n                    controller.oldCampus.longitude = response[1];\n                    controller.coordinatesUpdated('success', 'Coordinates updated!');\n                } else {\n                    controller.coordinatesUpdated('warning', 'Address not found!');\n                }\n            } else {\n                controller.coordinatesUpdated('error', 'Error requesting coordinates!');\n            }\n        };\n\n        /**\n         * Displays a message based on success\n         *\n         * @param {boolean} success\n         * @param {string} message\n         */\n        controller.coordinatesUpdated = function (success, message) {\n            NotifierFactory.show(\n                success,\n                message,\n                'Address Search'\n            );\n        };\n\n\n        controller.initForms = function () {\n            controller.newProgram = {\n                parentInstitutionCoreId: null,\n                campus: [],\n                specialisations: []\n            };\n            controller.newCampus = {};\n        };\n\n        controller.initWatches = function () {\n            // listen to new program form visibility changes\n            WatchService.create($scope, TmProfileFactory.getProgramAddFormVisibility, controller.formVisibilityWatch);\n            // listen to program edit form visibility changes\n            WatchService.create($scope, TmProfileFactory.getProgramEditFormVisibility, controller.formVisibilityWatch);\n\n            WatchService.create($scope, TmProfileFactory.getProgramSubscribeFormVisibility, function (isVisible, wasVisible) {\n                if (isVisible && !wasVisible) {\n                    $scope.showEdiProgramForm = false;\n                    $scope.showSubscriptionForm = true;\n                } else {\n                    $scope.showEdiProgramForm = true;\n                    $scope.showSubscriptionForm = false;\n                }\n            });\n            // listen to active program changes\n            WatchService.create($scope, TmProfileFactory.getProgram, controller.getProgramWatch);\n\n            WatchService.create($scope, TmProfileFactory.isReadOnly, function (isReadOnly) {\n                controller.isReadOnly = isReadOnly;\n            });\n\n            WatchService.create($scope, TmProfileFactory.isDirectory, function (isDirectory) {\n                controller.isDirectory = isDirectory;\n            });\n            // listen to new program campuses changes\n            WatchService.create($scope, function () {\n                return controller.newProgram.campus;\n            }, controller.newProgramCampusWatch);\n\n            WatchService.create($scope, function () {\n                return controller.program.campus;\n            }, controller.existingProgramCampusWatch);\n\n            //listen to auto generate switch state\n            WatchService.create($scope, function () {\n                return controller.newCampus.autoGenerate;\n            }, controller.autoGenerateCordinates);\n\n            //listen to auto generate switch state on edit form\n            WatchService.create($scope, function(){return controller.oldCampus.autoGenerate;}, function(newValue, oldValue) {\n                if (typeof(newValue) !== \"undefined\" && typeof(oldValue) !== \"undefined\") {\n                    controller.autoGenerateCordinatesEdit();\n                }\n            });\n\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n\n            // load specialisations list\n            TmProfileService.getSpecialisationsList().then(function (list) {\n                controller.specialisationsList = list;\n            });\n\n            // load countries list\n            InstitutionsListService.getCountries().then(function (list) {\n                controller.countryList = list;\n            });\n\n            controller.isSchoolUser = UserFactory.isClient();\n        };\n\n        // listen to programs tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isProgramsTabSelected, function (isActive, wasActive) {\n            if (!isActive) {\n                return false;\n            }\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n            controller.initForms();\n        });\n\n        WatchService.create($scope, TmProfileFactory.isBackend, function (isBackend) {\n            controller.isBackend = isBackend;\n            if (!alreadyInitialised && isBackend) {\n                controller.init();\n                controller.initForms();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileProgramFormController', [\n            '$scope',\n            '$state',\n            'constants',\n            '$uibModal',\n            'NotifierFactory',\n            'CampusesService',\n            'TmProfileFactory',\n            'InstitutionFactory',\n            'TmProfileProgramsService',\n            'UserFactory',\n            'InstitutionsListService',\n            'TmProfileService',\n            'InstitutionsService',\n            'LoginService',\n            'ModalService',\n            'TmProfileProgramValidationService',\n            'WatchService',\n            'TmDirectoryService',\n            'UiSelectService',\n            App.controllers.tmProfileProgramForm\n        ]);\n\n} (window.angular, window.moment));\n\n(function(angular) {\n    \"use strict\";\n\n    function TmProgramValidation() {\n        var service = {};\n\n        function isNotEmpty (form, programObject, fieldName) {\n            return !!(\n                form && (form.$pristine || (form[fieldName] && form[fieldName].$pristine)) || (\n                    programObject && programObject[fieldName] && programObject[fieldName].trim().length\n                )\n            );\n        }\n\n        function isFloat(n) {\n            return Number(n) === n && n % 1 !== 0;\n        }\n\n        function isValidStatsRange(form, programObject, fieldName, min, max) {\n            if (form && (form.$pristine || (form[fieldName] && form[fieldName].$pristine))) {\n                return true;\n            } else if (programObject &&\n                programObject.stats &&\n                programObject.stats[fieldName]\n            ) {\n                var value = programObject.stats[fieldName];\n                if (isNaN(value) || isFloat(value) || String(value).indexOf('.') !== -1) {\n                    return false;\n                }\n                value = parseInt(value, 10);\n                return value >= min && value <= max;\n            }\n            return true;\n        }\n\n        service.isValidName = function (form, programObject) {\n            return isNotEmpty(form, programObject, 'name');\n        };\n\n        service.isValidCampusName = function (form, programObject) {\n            return isNotEmpty(form, programObject, 'name');\n        };\n\n        service.isValidCampusCountry = function (form, programObject) {\n            return isNotEmpty(form, programObject, 'country');\n        };\n\n        service.isValidCampusAddressLine1 = function (form, programObject) {\n            return isNotEmpty(form, programObject, 'addressLine1');\n        };\n\n        service.isValidCampusCity = function (form, programObject) {\n            return isNotEmpty(form, programObject, 'city');\n        };\n\n        service.isValidType = function (form, programObject) {\n            return isNotEmpty(form, programObject, 'type');\n        };\n\n        service.isValidDescription = function (form, programObject) {\n            return isNotEmpty(form, programObject, 'description');\n        };\n\n        service.isValidCampusAssigned = function (form, programObject) {\n            return form && form.$pristine || (programObject && programObject.campus && programObject.campus.length);\n        };\n\n        service.isValidAverageGmat = function (form, programObject) {\n            return isValidStatsRange(form, programObject, 'avgGmat', 400, 800);\n        };\n\n        service.isValidClassSize = function (form, programObject) {\n            return isValidStatsRange(form, programObject, 'classSize', 1, 2000);\n        };\n\n        service.isValidAverageSalaryAfterGraduation = function (form, programObject) {\n            return isValidStatsRange(form, programObject, 'avgSalaryAfterGraduation', 0, 200000);\n        };\n\n        service.isValid = function (form, statsForm, programObject, isAdvanced) {\n            isAdvanced = typeof isAdvanced === 'undefined' ? false: isAdvanced;\n            return service.isValidDetails(form, programObject) &&\n                service.isValidStats(statsForm, programObject) &&\n                (\n                    (!isAdvanced && service.isValidCampusAssigned(form, programObject)) ||\n                    isAdvanced\n                );\n        };\n\n        service.isValidDetails = function (form, programObject) {\n            return service.isValidName(form, programObject) &&\n                service.isValidType(form, programObject) &&\n                service.isValidDescription(form, programObject);\n        };\n\n        service.isValidStats = function (form, programObject) {\n            return service.isValidAverageGmat(form, programObject) &&\n                service.isValidClassSize(form, programObject) &&\n                service.isValidAverageSalaryAfterGraduation(form, programObject);\n        };\n\n        service.isValidCampus = function (form, programObject) {\n            return service.isValidCampusName(form, programObject) &&\n                service.isValidCampusCountry(form, programObject) &&\n                service.isValidCampusAddressLine1(form, programObject) &&\n                service.isValidCampusCity(form, programObject);\n        };\n\n        return service;\n    }\n\n    angular\n        .module('qsHub')\n        .service('TmProfileProgramValidationService', [\n            TmProgramValidation\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.tmProfilePublish = function (\n        $scope,\n        constants,\n        PublishService,\n        InstitutionFactory,\n        TmProfileFactory,\n        TmProfileHistoryLogFactory,\n        UserFactory,\n        WebSocketsService,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.subscribedTo = [];\n        $scope.institutionData = {};\n        $scope.sections = {};\n        $scope.institutionId = null;\n\n        /**\n         * Actions to do when publishing is triggered.\n         *\n         * @param {object} section\n         * @param {string} publishProgramsBasic\n         * @param {string} publishProgramsAdvanced\n         */\n        $scope.handlePublish = function (section, publishProgramsBasic, publishProgramsAdvanced) {\n            section.publishDisabled = true;\n            section.status = constants.publishStatus.pending;\n            section.statusMessage = '';\n            var publishBasicPrograms = publishProgramsBasic ? 'yes' : 'no';\n            var publishAdvancedPrograms = publishProgramsAdvanced ? 'yes' : 'no';\n            PublishService.publish($scope.institutionId, publishBasicPrograms, publishAdvancedPrograms).then(function (response) {\n                controller.publishCallback(section, response);\n            });\n        };\n\n        /**\n         * Returns whether to disable the profile or not based on type\n         *\n         * @returns {Boolean}\n         */\n        controller.isProfileEnabled = function () {\n            return !InstitutionFactory.isTmEnabled();\n        };\n\n        /**\n         * Publishing callback.\n         *\n         * @param {Object} section\n         * @param {Object} response\n         * @returns {boolean}\n         */\n        controller.publishCallback = function (section, response) {\n            if (!response || !angular.isDefined(response.feedId)) {\n                section.status = constants.publishStatus.failure;\n\n                return false;\n            }\n            PublishService.setStatus(constants.publishStatus.pending);\n            section.feedId = response.feedId;\n            section.status = constants.publishStatus.pending;\n        };\n\n        /**\n         * Check is section is for TM\n         *\n         * @param {string} type\n         * @returns {Boolean}\n         */\n        $scope.isTm = function (type) {\n            return type === 'tm';\n        };\n\n        /**\n         * Check if institution has advanced programs to publish or not\n         *\n         * @returns {Boolean}\n         */\n        $scope.institutionHasAdvancedPrograms = function() {\n            return $scope.institutionData.typeId === constants.typeId.topLevelInstitutionId ||\n                    $scope.institutionData.typeId === constants.typeId.clientDepartmentId;\n        };\n\n\n        /**\n         * Subscribe to all available publishes.\n         *\n         */\n        controller.publishSubscribe = function() {\n            angular.forEach($scope.sections, function (section) {\n                var subscribeType = $scope.institutionId + 'tm';\n                if (controller.subscribedTo.indexOf(subscribeType) === -1) {\n                    controller.subscribedTo.push(subscribeType);\n                    WebSocketsService.subscribe(subscribeType, 'PublishStatus' + subscribeType, function (response) {\n                        controller.sectionPublishStatusCallback(section, response);\n                    });\n                }\n            });\n        };\n\n        /**\n         * Actions to do when status changes\n         *\n         * @param {Object} section\n         * @param {Object} response\n         */\n        controller.sectionPublishStatusCallback = function (section, response) {\n            section.publishDisabled = true;\n            var status = response && response.status || constants.publishStatus.failure;\n            section.status = status;\n            switch (status) {\n                case constants.publishStatus.failure:\n                case constants.publishStatus.success:\n                    section.publishDisabled = false;\n                    section.statusMessage = response.statusMessage;\n                    TmProfileHistoryLogFactory.setReload(true);\n                    break;\n                default:\n                    break;\n            }\n            if (status === constants.publishStatus.success) {\n                // Update nodeId\n                section.viewDisabled = !response.nodeId;\n                section.url = constants.drupal.tm.url + '/node/' + response.nodeId;\n            }\n        };\n\n        /**\n         * Handle publish statuses response.\n         *\n         * @param {Promise.Object} publishStatus\n         */\n        controller.publishStatusCallback = function (publishStatus) {\n            angular.forEach($scope.sections, function(section) {\n                section.publishDisabled = true;\n                if (publishStatus.hasOwnProperty('tm') && angular.isDefined(publishStatus.tm)) {\n                    section.status = publishStatus.tm.status;\n                    section.statusMessage = publishStatus.tm.message;\n                    if (section.status.length === 0 ||\n                        section.status === constants.publishStatus.success ||\n                        section.status === constants.publishStatus.failure\n                    ) {\n                        section.publishDisabled = false;\n                    }\n                }\n            });\n        };\n\n        /**\n         * Initialize watches.\n         */\n        controller.initWatches = function () {\n            // watch for active institution changes\n            WatchService.create($scope, InstitutionFactory.getData, function (newValue) {\n                if (newValue) {\n                    $scope.institutionData = newValue;\n                    $scope.institutionId = newValue.id;\n                    $scope.sections = PublishService.getSections(!UserFactory.isClient(), $scope.institutionData);\n                    controller.publishSubscribe();\n                    // get publishing statuses\n                    PublishService.getPublishStatus($scope.institutionId).then(function (response) {\n                        controller.publishStatusCallback(response);\n                    });\n                }\n            });\n        };\n\n        /**\n         * @constructor\n         */\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to publish tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isPublishTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfilePublishController', [\n            '$scope',\n            'constants',\n            'TmProfilePublishService',\n            'InstitutionFactory',\n            'TmProfileFactory',\n            'TmProfileHistoryLogFactory',\n            'UserFactory',\n            'WebSocketsService',\n            'WatchService',\n            App.controllers.tmProfilePublish\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.tmProfilePublishLogs = function (\n        $scope,\n        $state,\n        PublishService,\n        InstitutionFactory,\n        TmProfileFactory,\n        TmProfileHistoryLogFactory,\n        UserFactory,\n        WatchService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        /**\n         * Get TM logs\n         */\n        controller.updatePublishLogs = function () {\n            PublishService.getPublishLogs(InstitutionFactory.getId()).then(function (response) {\n                $scope.publishLogs = response;\n            });\n        };\n\n        /**\n         * Get status of fetching TM logs\n         */\n        $scope.fetchingPublishLog = function () {\n            return false;\n        };\n\n        /**\n         * Init watches\n         */\n        controller.initWatches = function () {\n            // watch for active institution changes\n            WatchService.create($scope, InstitutionFactory.getData, function (newValue) {\n                if (newValue) {\n                    if (InstitutionFactory.isTmSubscribed() && !UserFactory.noAccess($state.current.name)) {\n                        controller.updatePublishLogs();\n                    } else {\n                        $scope.publishLogs = null;\n                    }\n                }\n            });\n\n            WatchService.create($scope, TmProfileHistoryLogFactory.isReloadRequired, function (newValue) {\n                if (newValue) {\n                    if (InstitutionFactory.isTmSubscribed() && !UserFactory.noAccess($state.current.name)) {\n                        TmProfileHistoryLogFactory.setReload(false);\n                        controller.updatePublishLogs();\n                    } else {\n                        $scope.publishLogs = null;\n                    }\n                }\n            });\n\n            WatchService.create($scope, PublishService.getStatus, function(value) {\n                if(value){\n                    controller.updatePublishLogs();\n                }\n            });\n        };\n\n        /**\n         * @constructor\n         */\n        controller.init = function () {\n            controller.initWatches();\n        };\n\n        // listen to public tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isPublishTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfilePublishLogsController', [\n            '$scope',\n            '$state',\n            'TmProfilePublishService',\n            'InstitutionFactory',\n            'TmProfileFactory',\n            'TmProfileHistoryLogFactory',\n            'UserFactory',\n            'WatchService',\n            App.controllers.tmProfilePublishLogs\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmProfilePublishService = function (\n        $resource,\n        $q,\n        $log,\n        constants,\n        InstitutionService\n    ) {\n        var service = {\n            deferred: {},\n            isStatus: null\n        };\n\n        /**\n         * Get publish TM publish API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getPublishModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-feed/publish/:id/include-basic/:basic/include-advanced/:advanced');\n        };\n\n        /**\n         * Get publish status TM API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getPublishStatusModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-feed/publish-status/:id');\n        };\n\n        /**\n         * Get publish logs TM API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getLogsModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-feed/publish-logs/:id?sorting[createdAt]=desc&fieldName=type,status,createdAt,createdByFullName');\n        };\n\n        /**\n         * Gets the node id for the current institution\n         *\n         * @param {object} institutionData\n         * @param {string} nodeType\n         * @returns {unresolved}\n         */\n        service.getNodeId = function (institutionData, nodeType) {\n            return institutionData &&\n                institutionData.nids &&\n                institutionData.nids[nodeType] ? institutionData.nids[nodeType] : null;\n        };\n\n        /**\n         *\n         * @param {bool} qsUser\n         * @param {Object} institutionData\n         * @returns {Array}\n         */\n        service.getSections = function (qsUser, institutionData) {\n            qsUser = qsUser || false;\n            var tmUrl = constants.drupal.tm.url,\n                nodeId = service.getNodeId(institutionData, 'tm'),\n                institutionCoreId = institutionData.coreId,\n                sections = [\n                    {\n                        type: institutionData.typeId !== constants.typeId.advancedProgramId ? 'tm' : 'advanced-program-profile',\n                        name: 'MBA',\n                        url: tmUrl + '/node/' + nodeId,\n                        feedPreviewUrl: constants.api.institutions.url + '/v1/tm-feed/core-id/' + institutionCoreId,\n                        viewDisabled: !InstitutionService.isTmViewingEnabled(institutionData),\n                        publishProgramsBasic: true,\n                        publishProgramsAdvanced: false\n                    }\n                ];\n            return sections;\n        };\n\n        /**\n         *\n         * @param {String} institutionId\n         * @param publishBasicPrograms\n         * @param publishAdvancedPrograms\n         * @returns {Promise.*}\n         */\n        service.publish = function (institutionId, publishBasicPrograms, publishAdvancedPrograms) {\n            if (!institutionId || !publishBasicPrograms || !publishAdvancedPrograms) {\n                var deferred = $q.defer();\n                deferred.resolve(false);\n                return deferred.promise;\n            }\n\n            return service.getPublishModel().get(\n                {\n                    id: institutionId,\n                    basic: publishBasicPrograms,\n                    advanced: publishAdvancedPrograms\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data.toJSON();\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        /**\n         * Get publish logs.\n         *\n         * @param {String} institutionId\n         * @returns {Promise.*}\n         */\n        service.getPublishLogs = function (institutionId) {\n            if (!institutionId) {\n                var deferred = $q.defer();\n                deferred.resolve(false);\n                return deferred.promise;\n            }\n\n            return service.getLogsModel().get({\n                id: institutionId\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getPublishStatus = function (institutionId) {\n            return service.getPublishStatusModel().get(\n                {\n                    id: institutionId\n                }\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.setStatus = function (statusValue) {\n            service.isStatus = statusValue;\n        };\n        \n        service.getStatus = function() {\n            return service.isStatus;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmProfilePublishService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            'InstitutionService',\n            App.services.TmProfilePublishService\n        ]);\n\n} (window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tmProfileProgramStats = function (\n        $scope,\n        constants,\n        NotifierFactory,\n        TmProfileFactory,\n        InstitutionFactory,\n        UserFactory,\n        TmProfileService,\n        TmProfileProgramStatsService,\n        TmProfileProgramValidationService,\n        WatchService,\n        UiSelectService\n    ) {\n        var controller = this,\n            alreadyInitialised = false;\n\n        controller.devMode = constants.dev;\n        controller.feesRangesList = TmProfileService.getFeesRangesList();\n        controller.monthsList = TmProfileService.getMonthsList();\n        controller.accreditationsList = TmProfileService.getAccreditationsList();\n        controller.lengthList = TmProfileService.getLengthList();\n        controller.isSchoolUser = UserFactory.isClient();\n        controller.forms = {};\n        controller.editInProgress = false;\n        controller.percentList = TmProfileService.getPercentList();\n        controller.yearList1850 = TmProfileService.getYearList(18, 50);\n        controller.yearList020 = TmProfileService.getYearList(0, 20);\n        controller.offerScholarshipsList = UiSelectService.getYesNoOptions();\n\n        $scope.stats = {};\n        $scope.specialisations = [];\n        $scope.program = {};\n\n        controller.getEditButtonTitle = function () {\n            return UserFactory.isClient() ? 'Request Edit Advanced Program' : 'Update';\n        };\n\n        controller.handleUpdateClick = function () {\n            controller.forms.addProgramStatsForm.$setDirty();\n            controller.forms.addProgramStatsForm.avgGmat.$setDirty();\n            controller.forms.addProgramStatsForm.classSize.$setDirty();\n            controller.forms.addProgramStatsForm.avgSalaryAfterGraduation.$setDirty();\n\n            // validate program data\n            if (controller.editInProgress ||\n                !controller.forms.addProgramStatsForm ||\n                !controller.isValid()\n            ) {\n                return false;\n            }\n\n            controller.editInProgress = true;\n            controller.programStatisticObject = {\n                'stats': $scope.stats,\n                'specialisations': $scope.specialisations\n            };\n            TmProfileProgramStatsService.update($scope.programId, controller.programStatisticObject).then(controller.updateCallback);\n        };\n\n        controller.isValid = function () {\n            return controller.isValidAverageGmat() &&\n                controller.isValidClassSize() &&\n                controller.isValidAverageSalaryAfterGraduation();\n        };\n\n        controller.setValid = function (fieldName, stats) {\n            if (controller.forms.addProgramStatsForm) {\n                if (fieldName) {\n                    if (stats) {\n                        controller.forms.addProgramStatsForm[fieldName].$setPristine();\n                    }\n                } else {\n                    controller.forms.addProgramStatsForm.$setPristine();\n                }\n            }\n        };\n\n        controller.updateCallback = function (response) {\n            NotifierFactory.show(\n                response ? 'success' : 'error',\n                response ? 'Updated successfully!' : 'Update failed!',\n                'Edit Program'\n            );\n            controller.editInProgress = false;\n        };\n\n        controller.isValidAverageGmat = function () {\n            return TmProfileProgramValidationService.isValidAverageGmat(\n                controller.forms.addProgramStatsForm,\n                $scope.program\n            );\n        };\n\n        controller.isValidClassSize = function () {\n            return TmProfileProgramValidationService.isValidClassSize(\n                controller.forms.addProgramStatsForm,\n                $scope.program\n            );\n        };\n\n        controller.isValidAverageSalaryAfterGraduation = function () {\n            return TmProfileProgramValidationService.isValidAverageSalaryAfterGraduation(\n                controller.forms.addProgramStatsForm,\n                $scope.program\n            );\n        };\n\n        controller.getCoreIdWatch = function (coreId) {\n            if (!coreId) {\n                return false;\n            }\n            TmProfileProgramStatsService.getStats(coreId).then(function (data) {\n                $scope.program = data;\n                $scope.stats = data.stats;\n                if (data.hasOwnProperty('specialisations') &&\n                    angular.isArray(data.specialisations) &&\n                    data.specialisations.length > 0\n                ) {\n                    $scope.specialisations = data.specialisations;\n                }\n                $scope.programId = data.id;\n                angular.forEach(TmProfileService.getProgramStatusList(), function (item) {\n                    if (item.value === data.status) {\n                        data.status = item.label;\n                    }\n                });\n            });\n        };\n\n        controller.initWatches = function () {\n            WatchService.create($scope, InstitutionFactory.getCoreId, controller.getCoreIdWatch);\n        };\n\n        controller.init = function () {\n            controller.initWatches();\n\n            // load specialisations list\n            TmProfileService.getSpecialisationsList().then(function (list) {\n                controller.specialisationsList = list;\n            });\n        };\n\n        // listen to programs statistics tab visibility changes\n        WatchService.create($scope, TmProfileFactory.isStatsTabSelected, function (isActive, wasActive) {\n            // if not already initialized and tab is active\n            if (!alreadyInitialised && isActive && !wasActive) {\n                controller.init();\n                alreadyInitialised = true;\n            }\n        });\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmProfileProgramStatsController', [\n            '$scope',\n            'constants',\n            'NotifierFactory',\n            'TmProfileFactory',\n            'InstitutionFactory',\n            'UserFactory',\n            'TmProfileService',\n            'TmProfileProgramStatsService',\n            'TmProfileProgramValidationService',\n            'WatchService',\n            'UiSelectService',\n            App.controllers.tmProfileProgramStats\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { services: {} });\n\n    App.services.TmProfileProgramsStatsService = function(\n        $resource,\n        $log,\n        constants\n    ) {\n        var service = {};\n\n        service.getFetchModel = function() {\n            return $resource(\n                constants.api.institutions.url + '/v1/list/tm-programs?filter[institutionCoreId]==:coreId&page=1&limit=1',\n                {},\n                {\n                    get: {\n                        cancellable: true\n                    }\n                }\n            );\n        };\n\n        /**\n         * Get programs create API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getStatsModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/tm-program/:id/stats', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        /**\n         * Get program statistics by its institution Core Id.\n         *\n         * @param {Number} coreId\n         * @returns {Promise.<TResult>}\n         */\n        service.getStats = function (coreId) {\n            if (!coreId) {\n                throw 'Missing Required';\n            }\n            return service.getFetchModel().get({coreId: coreId}).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data.results ? {\n                        id: data.results[0].id,\n                        stats: data.results[0].stats,\n                        specialisations: data.results[0].specialisations,\n                        coreId: data.results[0].coreId,\n                        institutionCoreId: data.results[0].institutionCoreId,\n                        nodeId: data.results[0].nodeId,\n                        status: data.results[0].status\n                } : {};\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return {};\n            });\n        };\n\n        /**\n         * Update program statistics.\n         *\n         * @param {String} id\n         * @param {Object} stats\n         * @returns {Promise.<TResult>}\n         */\n        service.update = function (id, stats) {\n            if (!id) {\n                throw 'Missing Required';\n            }\n            return service.getStatsModel().update({id: id}, stats).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmProfileProgramStatsService', [\n            '$resource',\n            '$log',\n            'constants',\n            App.services.TmProfileProgramsStatsService\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, { controllers: {} });\n\n    App.controllers.tmDirectory = function (\n        $scope,\n        $timeout,\n        constants,\n        uiGridConstants,\n        uiGridExporterConstants,\n        uiGridExporterService,\n        TmProfileService,\n        TmDirectoryService,\n        TmProfileProgramsService,\n        InstitutionsListService,\n        TmDirectoryFactory,\n        TmProfileFactory,\n        NotifierFactory,\n        InstitutionFactory,\n        GridService,\n        WatchService,\n        TimeService\n    ) {\n        var controller = this;\n        controller.isDatagridRendered = false;\n        controller.showInfoBlock = false;\n        controller.showProgramEditForm = false;\n        controller.editInProgress = false;\n        controller.defaultPaginationOptions = {\n            page: 1,\n            limit: 25\n        };\n        controller.paginationOptions = GridService.getColumnsFilters(\n            constants.gridNameSpaces.tmDirectoryGridFilters,\n            []\n        );\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            constants.gridNameSpaces.tmDirectoryGridVisibility\n        );\n        controller.sendEmailToClient = true;\n        controller.programStatus = null;\n        controller.TmProfileProgramFormController = null;\n        $scope.selectedProgramId = null;\n\n        controller.closeEditForm = function () {\n            TmDirectoryFactory.setEditMode(false);\n            controller.showInfoBlock = false;\n            controller.toggleDatagridSettings();\n            $scope.selectedProgramId = null;\n            TmProfileFactory.setDirectory(false);\n        };\n\n        controller.handleDeleteAndPublishClick = function () {\n            TmDirectoryService.delete(\n                $scope.selectedProgramId,\n                true,\n                controller.sendEmailToClient\n            ).then(function (success) {\n                // close right side panel\n                controller.closeEditForm();\n                // show notification\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Deleted successfully! Publishing is in the queue.' : 'Deletion failed!',\n                    'Program Deletion & Publishing'\n                );\n                // reload datagrid\n                controller.reloadDatagrid();\n            });\n        };\n\n        controller.getFormTitle = function () {\n            if (TmProfileService.isProgramPendingApprove(controller.programStatus)) {\n                return 'Requested (New)';\n            }\n            if (TmProfileService.isProgramPendingEdit(controller.programStatus)) {\n                return 'Requested (Edit)';\n            }\n            if (TmProfileService.isProgramPendingDeletion(controller.programStatus)) {\n                return 'Pending (Deletion)';\n            }\n            return 'Edit Program';\n        };\n\n        controller.handleCancelDeletionClick = function () {\n            TmDirectoryService.revertStatus(\n                $scope.selectedProgramId,\n                controller.sendEmailToClient\n            ).then(function (success) {\n                // close right side panel\n                controller.closeEditForm();\n                // show notification\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Status reverted successfully!' : 'Status revert failed!',\n                    'Program Status Revert'\n                );\n                // reload datagrid\n                controller.reloadDatagrid();\n            });\n        };\n\n        controller.handleProgramApproveClick = function (TmProfileProgramFormController, publish) {\n            controller.publish = publish || false;\n\n            controller.TmProfileProgramFormController = TmProfileProgramFormController;\n            controller.TmProfileProgramFormController.submitted = true;\n            controller.TmProfileProgramFormController.forms.editProgramDetailsForm.$setDirty();\n            controller.TmProfileProgramFormController.forms.editProgramDetailsForm.name.$setDirty();\n            controller.TmProfileProgramFormController.forms.editProgramDetailsForm.type.$setDirty();\n            controller.TmProfileProgramFormController.forms.editProgramDetailsForm.description.$setDirty();\n            controller.TmProfileProgramFormController.forms.editProgramStatsForm.$setDirty();\n            controller.TmProfileProgramFormController.forms.editProgramStatsForm.avgGmat.$setDirty();\n            controller.TmProfileProgramFormController.forms.editProgramStatsForm.classSize.$setDirty();\n            controller.TmProfileProgramFormController.forms.editProgramStatsForm.avgSalaryAfterGraduation.$setDirty();\n\n            // validate program data\n            if (controller.editInProgress ||\n                !controller.TmProfileProgramFormController.forms.editProgramDetailsForm ||\n                !controller.TmProfileProgramFormController.forms.editProgramStatsForm ||\n                !controller.TmProfileProgramFormController.isValid(controller.isProgramAdvanced)\n            ) {\n                return false;\n            }\n            controller.editInProgress = true;\n            controller.totalProcessedCampuses = 0;\n\n            if (controller.isAdvancedProgram) {\n                // update program\n                TmDirectoryService.approve(\n                    controller.TmProfileProgramFormController.program,\n                    controller.publish,\n                    controller.sendEmailToClient\n                ).then(controller.approveCallback);\n            } else {\n                var institutionCoreId = controller.TmProfileProgramFormController.programInstitutionCoreId,\n                    hasTmp = false;\n                angular.forEach(controller.TmProfileProgramFormController.programCampuses, function (campus) {\n                    var campusData = angular.copy(campus),\n                        isTmp = TmProfileProgramsService.isTmpCampusId(campus.id);\n                    if (isTmp) {\n                        hasTmp = true;\n                        delete campusData.id;\n                    }\n                    if (isTmp || controller.TmProfileProgramFormController.campusesWithChanges.indexOf(campus.id) !== -1) {\n                        InstitutionsListService.saveCampus(institutionCoreId, campusData).then(function (response) {\n                            controller.totalProcessedCampuses++;\n                            if (TmProfileProgramsService.isTmpCampusId(campus.id)) {\n                                // delete temporary ID\n                                delete controller.TmProfileProgramFormController.program.campus[controller.TmProfileProgramFormController.program.campus.indexOf(campus.id)];\n                                // assign real new campus ID\n                                controller.TmProfileProgramFormController.program.campus.push(response.insertedId);\n                                if (controller.TmProfileProgramFormController.program.primaryCampusId === campus.id) {\n                                    controller.TmProfileProgramFormController.program.primaryCampusId = response.insertedId;\n                                }\n                                if (institutionCoreId === InstitutionFactory.getCoreId()) {\n                                    campus.id = response.insertedId;\n                                    InstitutionFactory.addCampus(campus);\n                                }\n                            }\n                            // if all program campuses were updated/created\n                            if (controller.TmProfileProgramFormController.programCampuses.length === controller.totalProcessedCampuses) {\n                                // filter out empty campuses\n                                controller.TmProfileProgramFormController.program.campus = controller.TmProfileProgramFormController.program.campus.filter(function (item) {\n                                    return item !== null;\n                                });\n                                // update program\n                                TmDirectoryService.approve(\n                                    controller.TmProfileProgramFormController.program,\n                                    publish,\n                                    controller.sendEmailToClient\n                                ).then(controller.approveCallback);\n                            }\n                        });\n                    } else {\n                        controller.totalProcessedCampuses++;\n                    }\n                });\n                if (!hasTmp && !controller.TmProfileProgramFormController.campusesWithChanges.length) {\n                    // update program\n                    TmDirectoryService.approve(\n                        controller.TmProfileProgramFormController.program,\n                        controller.publish,\n                        controller.sendEmailToClient\n                    ).then(controller.approveCallback);\n                }\n            }\n        };\n\n        /**\n         * Actions to do when update request is finished.\n         *\n         * @param {Object} response\n         */\n        controller.approveCallback = function (response) {\n            // close right side panel\n            controller.closeEditForm();\n            var succeed = 'success',\n                publishMessage = 'Approved successfully! Publishing is in the queue.';\n            if (controller.publish && angular.isObject(response)) {\n                var publishSuccess = response.published;\n                succeed = publishSuccess ? succeed : 'warning';\n                publishMessage = publishSuccess ? publishMessage : 'Edit approved successfully, but unable to publish. Parent institution needs to be published first';\n            }\n            // show notification about program submit status\n            NotifierFactory.show(\n                response ? succeed : 'error',\n                response ? (\n                    controller.publish ? publishMessage : 'Approved successfully!'\n                ) : 'Approving failed!',\n                controller.publish ? 'Program Approve & Publishing' : 'Program Approve',\n                succeed === 'warning'\n            );\n            controller.editInProgress = false;\n            // reload datagrid\n            controller.reloadDatagrid();\n            if (response) {\n                TmProfileService.clearCache();\n            }\n        };\n\n        controller.reloadDatagrid = function () {\n            controller.getPage();\n        };\n\n        controller.handleDatagridRowClick = function (program) {\n            if (TmProfileService.isProgramPendingApprove(program.status) || TmProfileService.isProgramPendingEdit(program.status)) {\n                controller.approveButtonTitle = 'Approve';\n            }\n            else {\n                controller.approveButtonTitle = 'Update';\n            }\n            TmProfileFactory.setDirectory(true);\n            if (controller.TmProfileProgramFormController) {\n                controller.TmProfileProgramFormController.submitted = false;\n            }\n            // another program selected\n            if ($scope.selectedProgramId && program.id !== $scope.selectedProgramId) {\n                TmDirectoryFactory.setEditMode(true);\n            } else if (!$scope.selectedProgramId && program.id) {\n                TmDirectoryFactory.setEditMode(true);\n                $scope.showProgramAddForm = false;\n                $scope.showProgramEditForm = true;\n            } else {\n                TmDirectoryFactory.setEditMode(false);\n                $scope.showProgramAddForm = false;\n                $scope.showProgramEditForm = false;\n            }\n            controller.showInfoBlock = TmDirectoryFactory.isEditMode();\n\n            controller.toggleDatagridSettings();\n            $scope.selectedProgramId = controller.showInfoBlock ? program.id : null;\n            controller.programStatus = program.status;\n            controller.isProgramAdvanced = program.advanced;\n            controller.showProgramEditForm = controller.showInfoBlock;\n            controller.pendingDeletion = TmProfileService.isProgramPendingDeletion(program.status);\n            controller.approved = TmProfileService.isProgramApproved(program.status) ||\n                TmProfileService.isProgramEditApproved(program.status);\n            controller.readOnly = controller.pendingDeletion;\n            controller.sendEmailToClient = !controller.approved;\n            TmProfileFactory.setProgram(angular.copy(program));\n            TmProfileFactory.setReadOnly(controller.readOnly);\n        };\n\n        controller.toggleDatagridSettings = function () {\n            // toggle grid menu\n            $scope.gridOptions.enableGridMenu = !controller.showInfoBlock;\n            // toggle columns resize\n            $scope.gridOptions.enableColumnResizing = !controller.showInfoBlock;\n            // toggle grid pagination\n            $scope.gridOptions.enablePaginationControls = !controller.showInfoBlock;\n        };\n\n        controller.getSortColumn = function (column) {\n            return (column.name || column.field).replace('AsString', '');\n        };\n\n        controller.handleGridFiltersChanges = function () {\n            var sortKeys = [],\n                latestSortKey,\n                filterColumn;\n            angular.forEach($scope.gridApi.grid.columns, function (column) {\n                if (typeof column.filters !== 'undefined' && typeof column.filters[0].term !== 'undefined') {\n                    if (\n                        column.filters[0].type === uiGridConstants.filter.SELECT &&\n                        typeof column.filters[0].term === 'object' &&\n                        column.filters[0].term !== null &&\n                        typeof column.filters[0].term.value !== 'undefined'\n                    ) {\n                        column.filters[0].term = column.filters[0].term.value;\n                    }\n                }\n                if (typeof column.sort.priority !== 'undefined') {\n                    sortKeys[column.sort.priority] = controller.getSortColumn(column);\n                }\n            });\n\n            if (sortKeys.length > 1) {\n                latestSortKey = sortKeys.pop();\n                angular.forEach($scope.gridApi.grid.columns, function (column) {\n                    if (typeof column.sort.priority !== 'undefined' &&\n                        controller.getSortColumn(column) !== latestSortKey\n                    ) {\n                        column.sort = {};\n                    }\n                });\n            }\n\n            controller.paginationOptions = angular.copy(controller.defaultPaginationOptions);\n            angular.forEach($scope.gridApi.grid.columns, function (column) {\n                if (\n                    typeof column.filters !== 'undefined' &&\n                    column.filters[0].term !== 'undefined' &&\n                    column.filters[0].term !== ''\n                ) {\n                    filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                    controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                }\n                if (typeof column.sort.direction !== 'undefined') {\n                    controller.paginationOptions['sorting[' + controller.getSortColumn(column) + ']'] = column.sort.direction;\n                }\n            });\n\n            GridService.storeColumnsFilters(\n                constants.gridNameSpaces.tmDirectoryGridFilters,\n                controller.paginationOptions\n            );\n\n            if (angular.isDefined($scope.filterTimeout)) {\n                $timeout.cancel($scope.filterTimeout);\n            }\n            $scope.filterTimeout = $timeout(function () {\n                controller.getPage();\n            }, 500);\n        };\n\n        controller.getPage = function () {\n            return TmDirectoryService.getAllPrograms(\n                angular.merge({}, controller.paginationOptions, controller.defaultPaginationOptions)\n            ).then(function (response) {\n                if (!$scope.gridOptions) {\n                    $scope.gridOptions = {};\n                }\n                $scope.gridOptions.totalItems = response.totalMatching;\n                $scope.gridOptions.data = response.results;\n                $scope.gridOptions.minRowsToShow = response.totalFiltered.length < 25 ? response.totalFiltered : 25;\n            });\n        };\n\n        var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n            selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html';\n        controller.initDataGrid = function () {\n            controller.getPage().then(function () {\n                $scope.gridOptions = angular.extend({}, $scope.gridOptions, {\n                    enableSorting: true,\n                    exporterMenuCsv: true,\n                    exporterMenuAllData: false,\n                    exporterMenuPdf: false,\n                    enableGridMenu: true,\n                    showGridFooter: false,\n                    selectedItems: $scope.selectedProgramId,\n                    enableFiltering: true,\n                    useExternalFiltering: true,\n                    enableColumnResize: true,\n                    enableFullRowSelection: true,\n                    enableRowSelection: true,\n                    multiSelect: false,\n                    enableRowHeaderSelection: false,\n                    paginationPageSizes: [25, 50, 100],\n                    paginationPageSize: 25,\n                    useExternalPagination: true,\n                    useExternalSorting: true,\n                    exporterCsvFilename: 'tm-directory-export.' + TimeService.now() + '.csv',\n                    gridMenuCustomItems: [\n                        {\n                            title: ' Export all data as csv',\n                            action: function () {\n                                return TmDirectoryService.getAllPrograms(\n                                    angular.merge({}, controller.paginationOptions, {\n                                        page: 1,\n                                        limit: 250000\n                                    })\n                                ).then(function (response) {\n                                    var exportColumnHeaders = uiGridExporterService.getColumnHeaders(\n                                        $scope.gridApi.grid,\n                                        uiGridExporterConstants.VISIBLE\n                                    ),\n                                        exportData = TmDirectoryService.getCsvData(\n                                            $scope.gridApi.grid.columns,\n                                            response.results\n                                        ),\n                                        csvContent = uiGridExporterService.formatAsCsv(\n                                            exportColumnHeaders,\n                                            exportData,\n                                            $scope.gridOptions.exporterCsvColumnSeparator\n                                        );\n                                    uiGridExporterService.downloadFile(\n                                        $scope.gridOptions.exporterCsvFilename,\n                                        csvContent,\n                                        $scope.gridOptions.exporterOlderExcelCompatibility\n                                    );\n                                });\n                            },\n                            order: 210\n                        }\n                    ],\n                    rowTemplate: '/scripts/components/profiles/tm/programs/datagrid/rowTemplate.html',\n                    columnDefs: [\n                        {\n                            displayName: 'ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'coreIdAsString', true),\n                            field: 'coreIdAsString',\n                            maxWidth: 80,\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'coreIdAsString', '')\n                            }\n                        },\n                        {\n                            displayName: 'Name',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'name', true),\n                            field: 'name',\n                            name: 'nameLowerCase',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'name', '')\n                            }\n                        },\n                        {\n                            displayName: 'Type',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'type', true),\n                            field: 'type',\n                            filter: {\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: TmProfileService.getProgramTypesList(),\n                                term: GridService.getFilterByField(controller.paginationOptions, 'type')\n                            },\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Advanced',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'advanced', true),\n                            field: 'advanced',\n                            filter: {\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: [\n                                    { value: true, label: 'Yes' },\n                                    { value: false, label: 'No' }\n                                ],\n                                term: GridService.getFilterByField(controller.paginationOptions, 'advanced')\n                            },\n                            maxWidth: 100,\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        },\n                        {\n                            displayName: 'Institution ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'institutionCoreIdAsString', true),\n                            field: 'institutionCoreIdAsString',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'institutionCoreIdAsString')\n                            }\n                        },\n                        {\n                            displayName: 'Institution Name',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'institutionName', true),\n                            field: 'institutionName',\n                            name: 'institutionNameLowerCase',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'institutionName')\n                            }\n                        },\n                        {\n                            displayName: 'Parent Institution ID',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'parentInstitutionCoreIdAsString', true),\n                            field: 'parentInstitutionCoreIdAsString',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'parentInstitutionCoreIdAsString')\n                            }\n                        },\n                        {\n                            displayName: 'Parent Institution Name',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'parentInstitutionName', true),\n                            field: 'parentInstitutionName',\n                            name: 'parentInstitutionNameLowerCase',\n                            filter: {\n                                term: GridService.getFilterByField(controller.paginationOptions, 'parentInstitutionName')\n                            }\n                        },\n                        {\n                            displayName: 'Status',\n                            visible: GridService.getVisibilityByField(controller.columnsVisibility, 'status', true),\n                            filter: {\n                                type: uiGridConstants.filter.SELECT,\n                                selectOptions: TmProfileService.getProgramStatusList(),\n                                term: GridService.getFilterByField(controller.paginationOptions, 'status')\n                            },\n                            field: 'status',\n                            maxWidth: 130,\n                            filterHeaderTemplate: selectTemplate,\n                            cellTemplate: selectCellTemplate\n                        }\n                    ],\n                    onRegisterApi: function (gridApi) {\n                        var columnsVisibilityBeforeChanges = angular.copy($scope.gridOptions.columnDefs);\n                        $scope.gridApi = gridApi;\n                        gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                            controller.handleDatagridRowClick(row.entity);\n                        });\n                        gridApi.core.on.rowsRendered($scope, function () {\n                            controller.isDatagridRendered = true;\n                        });\n                        // actions to do on active page changes\n                        gridApi.pagination.on.paginationChanged($scope, function (newPage, limit) {\n                            controller.defaultPaginationOptions.page = newPage;\n                            controller.defaultPaginationOptions.limit = limit;\n                            controller.getPage();\n                        });\n                        // actions to do on filters changes\n                        $scope.gridApi.core.on.filterChanged($scope, controller.handleGridFiltersChanges);\n                        // actions to do on visible columns changes\n                        $scope.gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n                        // actions to do on sort order changes\n                        $scope.gridApi.core.on.sortChanged($scope, controller.handleGridFiltersChanges);\n                        // reset columns visibility\n                        GridService.resetExtend(columnsVisibilityBeforeChanges, $scope.gridOptions.columnDefs);\n                        \n                    }\n                });\n            });\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(constants.gridNameSpaces.tmDirectoryGridVisibility),\n                reload = false;\n\n            if (columnsVisibility) {\n                angular.forEach($scope.gridOptions.columnDefs, function (column, key) {\n                    if (columnsVisibility[column.field] === true &&\n                        column.visible === false\n                    ) {\n                        $scope.gridOptions.columnDefs[key].filter.term = null;\n                        controller.paginationOptions['filter[' + column.field + ']'] = null;\n                        reload = true;\n                    }\n                });\n            }\n\n            controller.columnsVisibility = GridService.getGridColumnsVisibility($scope.gridOptions.columnDefs);\n            GridService.storeColumnsVisibility(\n                constants.gridNameSpaces.tmDirectoryGridVisibility,\n                controller.columnsVisibility\n            );\n            if (reload) {\n                controller.getPage();\n            }\n        };\n\n        controller.init = function () {\n            controller.initDataGrid();\n            TmProfileFactory.setBackend(true);\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('TmDirectoryController', [\n            '$scope',\n            '$timeout',\n            'constants',\n            'uiGridConstants',\n            'uiGridExporterConstants',\n            'uiGridExporterService',\n            'TmProfileService',\n            'TmDirectoryService',\n            'TmProfileProgramsService',\n            'InstitutionsListService',\n            'TmDirectoryFactory',\n            'TmProfileFactory',\n            'NotifierFactory',\n            'InstitutionFactory',\n            'UiGridService',\n            'WatchService',\n            'TimeService',\n            App.controllers.tmDirectory\n        ]);\n\n} (window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.tmDirectory = function (\n        $resource,\n        $q,\n        $log,\n        constants\n    ) {\n        var service = {\n            tmProgramHistory: null,\n            deferred : {\n                getTmProgramHistory: null\n            }\n        };\n\n        /**\n         * Get programs list API endpoint.\n         *\n         * @returns {$resource}\n         */\n        service.getProgramsListModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/list/tm-programs', null, {\n                get: {\n                    cancellable : true\n                }\n            });\n        };\n\n        service.getProgramStatusRevertModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/admin/tm-program/:id/revert-status');\n        };\n\n        service.getUpdateModel = function() {\n            return $resource(constants.api.institutions.url + '/v1/admin/tm-program/:id', null, {\n                update: { method: 'PATCH' }\n            });\n        };\n\n        service.getProgramHistoryModel = function () {\n            return $resource(constants.api.institutions.url + '/v1/tm-program-history/:id');\n        };\n\n        service.revertStatus = function (id, sendEmailToClient) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(),\n                    endTime;\n            }\n            return service.getProgramStatusRevertModel().get({\n                id: id,\n                sendEmailToClient: sendEmailToClient\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n                return data;\n            }, function (error) {\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.delete = function(id, publish, sendEmailToClient) {\n            publish = publish || false;\n            sendEmailToClient = sendEmailToClient || false;\n            // @todo validate data\n            return service.getUpdateModel().delete({\n                id: id,\n                publish: publish,\n                sendEmailToClient: sendEmailToClient\n            }).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.approve = function(program, publish, sendEmailToClient) {\n            publish = publish || false;\n            sendEmailToClient = sendEmailToClient || false;\n            // @todo validate data\n            return service.getUpdateModel().update({\n                id: program.id,\n                publish: publish,\n                sendEmailToClient: sendEmailToClient\n            }, program).$promise.then(function(data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                if (publish && angular.isDefined(data.published)) {\n                    return {\n                        published : data.published\n                    };\n                }\n                return true;\n            }, function(error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getAllPrograms = function (params) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(),\n                    endTime;\n            }\n            var hasSorting = false;\n            if (params) {\n                for (var key in params) {\n                    if (key.indexOf('sorting') !== -1) {\n                        hasSorting = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasSorting) {\n                params['sorting[createdAt]'] = 'desc';\n            }\n\n            return service.getProgramsListModel().get(params).$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n\n                return data;\n            }, function (error) {\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n\n                return false;\n            });\n        };\n\n        service.getCsvData = function (columns, rows) {\n            var data = [],\n                cellValue,\n                extractedRow;\n\n            rows.forEach(function (row) {\n                extractedRow = [];\n                columns.forEach(function (gridCol) {\n                    if (gridCol.visible &&\n                        gridCol.colDef.exporterSuppressExport !== true\n                    ) {\n                        cellValue = '';\n                        if (gridCol.colDef.field && row[gridCol.colDef.field]) {\n                            cellValue = row[gridCol.colDef.field];\n                        }\n                        var extractedField = {\n                            value: cellValue\n                        };\n                        extractedRow.push(extractedField);\n                    }\n                });\n\n                data.push(extractedRow);\n            });\n\n            return data;\n        };\n\n        service.getProgramHistory = function (id) {\n            // process already running\n            if (!service.deferred.getTmProgramHistory) {\n                service.deferred.getTmProgramHistory = $q.defer();\n            } else {\n                return service.deferred.getTmProgramHistory.promise;\n            }\n            var deferred = service.deferred.getTmProgramHistory;\n\n            if (service.tmProgramHistory) {\n                deferred.resolve(service.tmProgramHistory);\n            } else {\n                service.getProgramHistoryModel().get(\n                    {id: id}, function (data) {\n                    if (constants.dev) {\n                        $log.log('success, got data: ', data);\n                    }\n                    service.tmProgramHistory = data;\n                    deferred.resolve(service.tmProgramHistory);\n                    // reset data\n                    deferred = null;\n                    service.tmProgramHistory = null;\n                    service.deferred.getTmProgramHistory = null;\n                }, function (error) {\n                    //@todo log error\n                    if (constants.dev) {\n                        $log.log('request failed' + error);\n                    }\n                    service.tmProgramHistory = [];\n                    deferred.resolve(service.tmProgramHistory);\n                    // reset data\n                    deferred = null;\n                    service.tmProgramHistory = null;\n                    service.deferred.getTmProgramHistory = null;\n                });\n            }\n\n            return deferred.promise;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('TmDirectoryService', [\n            '$resource',\n            '$q',\n            '$log',\n            'constants',\n            App.services.tmDirectory\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {factories:{}});\n\n    App.factories.TmDirectory = function () {\n        var editMode,\n            addMode;\n        return {\n            isEditMode: function () {\n                return !!editMode;\n            },\n            setEditMode: function (enabled) {\n                editMode = enabled;\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .factory('TmDirectoryFactory', [\n            App.factories.TmDirectory\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.contactsList = function (\n        $scope,\n        constants,\n        ContactsService,\n        InstitutionsUsersFactory,\n        InstitutionFactory,\n        WatchService\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n\n        controller.getCoreIdWatch = function (coreId) {\n            if (coreId) {\n                ContactsService.getDepartmentsCoreIds(coreId).then(function (departmentsCoreIds) {\n                    departmentsCoreIds.push(coreId);\n                    InstitutionsUsersFactory.setRequestFilters({\n                        'filter[primaryInstitutionCoreId][]': departmentsCoreIds\n                    });\n                });\n            }\n        };\n\n        controller.initWatches = function () {\n            // listen to active institution changes\n            WatchService.create($scope, InstitutionFactory.getCoreId, controller.getCoreIdWatch);\n        };\n\n        /**\n         * Class constructor.\n         */\n        controller.$onInit = function () {\n            controller.initWatches();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('ContactsListController', [\n            '$scope',\n            'constants',\n            'ContactsService',\n            'InstitutionsUsersFactory',\n            'InstitutionFactory',\n            'WatchService',\n            App.controllers.contactsList\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.Contacts = function (\n        $log,\n        constants,\n        RequestsQueueService,\n        InstitutionsListService\n    ) {\n        var service = {};\n\n        /**\n         * Get institution departments core IDs.\n         *\n         * @param {int} parentInstitutionCoreId\n         * @returns {Promise.<Array>}\n         */\n        service.getDepartmentsCoreIds = function (parentInstitutionCoreId) {\n            if (constants.dev) {\n                var startTime = new Date().getTime(), endTime;\n            }\n\n            // cancel currently running requests\n            RequestsQueueService.cancelAll('getDepartmentsCoreIds');\n\n            var Api = InstitutionsListService.getInstitutionListModel().get({\n                'filter[parentCoreId]': '=' + parentInstitutionCoreId,\n                'filter[typeId][]': [constants.typeId.clientDepartmentId, constants.typeId.advancedProgramId],\n                'columns[]': 'coreId'\n            });\n\n            // add new request to the queue\n            RequestsQueueService.add(Api, 'getDepartmentsCoreIds');\n\n            return Api.$promise.then(function (data) {\n                if (constants.dev) {\n                    endTime = new Date().getTime();\n                    $log.log('success, got data: ', data, 'in ' + (endTime - startTime) + ' ms');\n                }\n\n                // cancel currently running requests\n                RequestsQueueService.cancelAll('getDepartmentsCoreIds');\n                return service.formatList(data.results);\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                } else {\n                    return [];\n                }\n            });\n        };\n\n        service.formatList = function (list) {\n            var formattedList = [];\n            angular.forEach(list, function (value) {\n                if (value && value.coreId) {\n                    formattedList.push(value.coreId);\n                }\n            });\n            return formattedList;\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('ContactsService', [\n            '$log',\n            'constants',\n            'RequestsQueueService',\n            'InstitutionsListService',\n            App.services.Contacts\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.institutionsUsersListClone = function (\n        $scope,\n        $resource,\n        $timeout,\n        constants,\n        uiGridConstants,\n        InstitutionsUsersListService,\n        UsersListService,\n        NotifierFactory,\n        InstitutionsUsersListFactory,\n        InstitutionsUsersFactory,\n        WatchService,\n        UserTypesService,\n        PasswordService,\n        GridService,\n        UserFactory\n    ) {\n        var controller = this;\n        controller.devMode = constants.dev;\n        controller.defaultFilters = {\n            lastLoginAtRange: {\n                startDate: null,\n                endDate: null\n            }\n        };\n        controller.showDatagrid = false;\n        controller.grid = {};\n        controller.defaultPaginationOptions = {\n            page: 1,\n            limit: constants.datagrid.contacts.defaultRowsNumber\n        };\n        controller.paginationOptions = GridService.getColumnsFilters(\n            constants.gridNameSpaces.contactsGridFilters,\n            []\n        );\n        controller.columnsVisibility = GridService.getColumnsVisibility(\n            constants.gridNameSpaces.contactsGridVisibility\n        );\n        controller.isDatagridReloading = false;\n        controller.isDatagridRendered = false;\n        controller.rolesBeforeChanges = [];\n\n        $scope.user = {};\n        $scope.newUser = {};\n        $scope.newUserPanelNotClosed = false;\n        $scope.userBeforeChanges = {};\n        $scope.forms = {};\n        $scope.filterActive = true;\n        $scope.disabledInstitutionsUserListSubTabs = {\n            'personalDetails' : false,\n            'permissions' : true,\n            'institutions' : true\n        };\n        $scope.filters = null;\n        $scope.columnsBeforeHide = [];\n        $scope.visible = {};\n\n        controller.hasWriteAccess = UserFactory.hasInstitutionsUsersAccess();\n        controller.userTypes = UserTypesService.getUserTypes();\n        controller.initSelectedItem = function () {\n            $scope.selectedItem = {};\n            $scope.selectedItem.selectedOptionType = controller.userTypes[1];\n        };\n        controller.initSelectedItem();\n        controller.contactTypesList = [];\n\n        InstitutionsUsersListService.getContactTypes().then(function(contactTypes) {\n            controller.contactTypes = contactTypes;\n            angular.forEach(contactTypes, function (item) {\n                controller.contactTypesList.push({\n                    value: item.handle,\n                    label: item.name\n                });\n            });\n        });\n        InstitutionsUsersListService.getRoles().then(function(rolesList) {\n            controller.rolesList = rolesList;\n        });\n        InstitutionsUsersListService.getSections().then(function(sectionsList) {\n            controller.sectionsList = sectionsList;\n        });\n\n        $scope.handleLastLoginAtDateRange = function (event) {\n            if (event.model.startDate && event.model.endDate) {\n                controller.grid.options.columnDefs[7].filters[0].term = event.model.startDate.format('x');\n                controller.grid.options.columnDefs[7].filters[1].term = event.model.endDate.format('x');\n            }\n        };\n\n        controller.handleGridVisibleChanges = function () {\n            var columnsVisibility = GridService.getColumnsVisibility(constants.gridNameSpaces.contactsGridVisibility),\n                reload = false;\n\n            if (columnsVisibility && $scope.filterActive) {\n                angular.forEach(controller.grid.options.columnDefs, function(column, key) {\n                    if (columnsVisibility[column.field] === true &&\n                        column.visible === false\n                    ) {\n                        controller.grid.options.columnDefs[key].filter.term = null;\n                        controller.paginationOptions['filter[' + controller.convertVisibleColumnsField(column.field) + ']'] = null;\n                        reload = true;\n                        if (column.field === 'lastLoginAt') {\n                            delete controller.grid.options.columnDefs[key].filters[0].term;\n                            $scope.filters.lastLoginAtRange = {\n                                startDate: null,\n                                endDate: null\n                            };\n                            controller.paginationOptions['filter[' + column.field + ']'] = $scope.filters.lastLoginAtRange;\n                        }\n                    }\n                });\n            }\n            if ($scope.filterActive) {\n                controller.columnsVisibility = GridService.getGridColumnsVisibility(controller.grid.options.columnDefs);\n                GridService.storeColumnsVisibility(\n                    constants.gridNameSpaces.contactsGridVisibility,\n                    controller.columnsVisibility\n                );\n            }\n            if (reload) {\n                controller.getPage();\n            }\n        };\n\n        controller.handleGridFiltersChanges = function () {\n            controller.paginationOptions = angular.copy(controller.defaultPaginationOptions);\n            var filterColumn, sortColumn;\n            angular.forEach ($scope.gridApi.grid.columns, function(column) {\n                filterColumn = column.filters[0].column ? column.filters[0].column : column.field;\n                if (column.field === 'lastLoginAt') {\n                    if (\n                        typeof column.filters !== 'undefined' &&\n                        typeof column.filters[0].term !== 'undefined' &&\n                        typeof column.filters[1].term !== 'undefined'\n                    ) {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = {\n                            startDate: column.filters[0].term && isNaN(column.filters[0].term) ?\n                                column.filters[0].term.format('x') : column.filters[0].term,\n                            endDate: column.filters[1].term && isNaN(column.filters[1].term) ?\n                                column.filters[1].term.format('x') : column.filters[1].term\n                        };\n                    } else {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = null;\n                    }\n                } else if ((column.field === 'contactTypesAsString' ||\n                    column.field === 'contactTypes.handle') &&\n                    typeof column.filters !== 'undefined' &&\n                    column.filters[0].term !== 'undefined' &&\n                    column.filters[0].term &&\n                    column.filters[0].term.value\n                ) {\n                    controller.paginationOptions['filter[contactTypes.handle]'] = column.filters[0].term.value;\n                } else {\n                    if (typeof column.filters !== 'undefined' && column.filters[0].term !== 'undefined') {\n                        controller.paginationOptions['filter[' + filterColumn + ']'] = column.filters[0].term;\n                    }\n                }\n                if (typeof column.sort.direction !== 'undefined') {\n                    sortColumn = column.sort.column ? column.sort.column : column.field;\n                    controller.paginationOptions['sorting[' + sortColumn + ']'] = column.sort.direction;\n                }\n            });\n\n            if (controller.paginationOptions[\"filter[lastLoginAt]\"] === null) {\n                controller.paginationOptions[\"filter[lastLoginAt]\"] = $scope.filters.lastLoginAtRange;\n            }\n            if (controller.paginationOptions[\"filter[lastLoginAt]\"].startDate === null) {\n                controller.paginationOptions[\"filter[lastLoginAt]\"].endDate = null;\n                $scope.filters.lastLoginAtRange = {\n                    startDate: null,\n                    endDate: null\n                };\n            }\n            angular.forEach(controller.paginationOptions, function (value, key) {\n                if (key === 'filter[contactTypesAsString]') {\n                    controller.paginationOptions['filter[contactTypes.handle]'] = value;\n                    delete controller.paginationOptions['filter[contactTypesAsString]'];\n                }\n            });\n            GridService.storeColumnsFilters(\n                constants.gridNameSpaces.contactsGridFilters,\n                controller.paginationOptions\n            );\n\n            if (angular.isDefined($scope.filterTimeout)) {\n                $timeout.cancel($scope.filterTimeout);\n            }\n            $scope.filterTimeout = $timeout(function () {\n                controller.getPage();\n            }, 500);\n        };\n\n        /**\n         * Actions to do when datagrid row is clicked.\n         *\n         * @param {object} user\n         */\n        $scope.handleDatagridRowClick = function (user) {\n            PasswordService.setHasErrors(true);\n            $scope.disabledInstitutionsUserListSubTabs.permissions = false;\n            $scope.disabledInstitutionsUserListSubTabs.institutions = false;\n            if ($scope.selectedUserId === user.id) {\n                $scope.selectedUserId = null;\n                $scope.showInfoBlock = false;\n                $scope.filterActive = true;\n                InstitutionsUsersListFactory.resetActiveUserId();\n                controller.toggleColumns(false);\n            } else { //edit mode\n                $scope.selectedUserId = user.id;\n                $scope.showInfoBlock = true;\n                $scope.filterActive = false;\n\n                $scope.user = angular.copy(user);\n                $scope.userBeforeChanges = user;\n                $scope.user = UsersListService.updateRolesWithAll($scope.user, controller.rolesList);\n                $scope.user = UsersListService.updateSectionsAndPages($scope.user, controller.rolesList);\n\n                controller.rolesBeforeChanges = [];\n                for (var role in user.roles) {\n                    if (user.roles[role]) {\n                        controller.rolesBeforeChanges[role] = true;\n                    }\n                }\n\n                InstitutionsUsersListFactory.setActiveUserId($scope.selectedUserId);\n                controller.toggleColumns(true);\n            }\n        };\n\n        controller.updateInDatagrid = function ()\n        {\n            controller.reloadDatagrid();\n        };\n\n        /**\n         * Toggle datagrid columns visibility.\n         *\n         * @param {boolean} hide\n         */\n        controller.toggleColumns = function (hide) {\n            if (!controller.grid.options) {\n                return;\n            }\n            if (hide) {\n                angular.forEach(controller.grid.options.columnDefs, function (column) {\n                    if (angular.isDefined(column.visible) && column.visible === true) {\n                        $scope.columnsBeforeHide.push(column);\n                    }\n                    $scope.visible[column.field] = column.visible;\n                });\n                // hide all columns except name\n                angular.forEach(controller.grid.options.columnDefs, function (column) {\n                    column.visible = column.field === 'email';\n                });\n                $scope.filterActive = false;\n            } else {\n                // show columns visible before hide\n                angular.forEach($scope.columnsBeforeHide, function (column) {\n                    column.visible = true;\n                });\n                $scope.columnsBeforeHide = [];\n\n                $scope.$broadcast(constants.events.closingInstitutionsUsers);\n                $scope.filterActive = true;\n            }\n\n            controller.grid.options.enableGridMenu = !hide;\n            controller.grid.options.enableColumnMenus = !hide;\n            controller.grid.options.enableColumnResizing = !hide;\n            controller.grid.options.enablePaginationControls = !hide;\n        };\n\n        /**\n         * Reset user form.\n         */\n        $scope.handleResetClick = function () {\n            $scope.user = angular.copy($scope.userBeforeChanges);\n        };\n\n        /**\n         * Actions to do when deactivation is triggered.\n         *\n         * @param {Object} user\n         * @returns {boolean}\n         */\n        $scope.handleDeactivateClick = function (user) {\n            if (!user || !user.id || $scope.deactivateInProgress) {\n                return false;\n            }\n            $scope.deactivateInProgress = true;\n            InstitutionsUsersListService.deactivate(user.id).then(controller.deactivationCallback);\n        };\n\n        /**\n         * Handle activate click\n         *\n         * @param {object} user\n         * @returns {Boolean}\n         */\n        $scope.handleActivateClick = function (user) {\n            if (!user.id || $scope.activateInProgress) {\n                return false;\n            }\n            $scope.activateInProgress = true;\n            InstitutionsUsersListService.activate(user.id).then(controller.activationCallback);\n        };\n\n        controller.deactivationCallback = function (success)\n        {\n            $scope.user.active = success ? false : true;\n            if (success) {\n                $scope.userBeforeChanges.active = $scope.user.active;\n                // update user data in datagrid\n                controller.updateInDatagrid($scope.userBeforeChanges);\n            }\n            $scope.deactivateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Deactivated successfully!' : 'Deactivation failed!',\n                'Deactivation'\n            );\n        };\n\n        controller.activationCallback = function (success)\n        {\n            $scope.user.active = success ? true : false;\n            if (success) {\n                $scope.userBeforeChanges.active = $scope.user.active;\n                // update user data in datagrid\n                controller.updateInDatagrid($scope.userBeforeChanges);\n            }\n            $scope.activateInProgress = false;\n\n            NotifierFactory.show(\n                success ? 'success' : 'error',\n                success ? 'Activated successfully!' : 'Activation failed!',\n                'Activation'\n            );\n        };\n\n        $scope.handleNewUserResponse = function (response) {\n            if (response.hasOwnProperty('insertedId') && response.insertedId.length > 0) {\n                $scope.user.id = response.insertedId;\n                $scope.user.active = true;\n                angular.copy($scope.user, $scope.userBeforeChanges);\n                // switch tab after user add\n                $scope.activeTab = 1;\n                $scope.disabledInstitutionsUserListSubTabs.permissions = false;\n                $scope.disabledInstitutionsUserListSubTabs.institutions = false;\n                angular.copy($scope.user, $scope.newUser);\n                $scope.selectedUserId = $scope.user.id;\n                $scope.newUserPanelNotClosed = true;\n                // reload datagrid\n                controller.reloadDatagrid();\n            }\n        };\n\n        /**\n         * Store user data.\n         */\n        $scope.handlePersonalDetailsSubmit = function () {\n            $scope.forms.personalDetailsForm.firstname.$setDirty();\n            $scope.forms.personalDetailsForm.lastname.$setDirty();\n            $scope.forms.personalDetailsForm.email.$setDirty();\n            PasswordService.setHasErrors(\n                $scope.user.id ||\n                !!$scope.forms.personalDetailsForm.password.$viewValue ? true : false\n            );\n            var newUser = typeof $scope.user.id === 'undefined';\n            if (\n                $scope.personalDetailsSubmitInProgress ||\n                !$scope.forms.personalDetailsForm ||\n                !$scope.forms.personalDetailsForm.$valid||\n                !PasswordService.isValid($scope.forms.personalDetailsForm, $scope.user) ||\n                !PasswordService.getHasErrors()\n            ) {\n                return false;\n            }\n\n            // if is new user and the password is not set or setting password for existing user\n            if (\n                (newUser && !PasswordService.isPasswordValid($scope.user.password)) ||\n                (!newUser && typeof $scope.user.password !== 'undefined' && !PasswordService.isPasswordValid($scope.user.password))\n            ) {\n                NotifierFactory.show(\n                    'error',\n                    'Please set a valid password'\n                );\n\n                return false;\n            }\n            $scope.personalDetailsSubmitInProgress = true;\n            InstitutionsUsersListService.savePersonalDetails($scope.user).then(function (response) {\n                var message = 'Personal Details',\n                    success = false;\n                if (response) {\n                    success = !response.error;\n                    if (!success) {\n                        if (response.hasOwnProperty('message') && response.message.length) {\n                            message = response.message;\n                        }\n                    } else {\n                        $scope.user.primaryInstitutionCoreId = null;\n                        $scope.user.fullname = InstitutionsUsersListService.getFullName($scope.user);\n                        if (response.hasOwnProperty('insertedId') && response.insertedId.length) {\n                            $scope.user.id = response.insertedId;\n                            $scope.user.active = true;\n                            angular.copy($scope.user, $scope.userBeforeChanges);\n                            // switch tab after user add\n                            $scope.activeTab = 1;\n                            $scope.disabledInstitutionsUserListSubTabs.permissions = false;\n                            $scope.disabledInstitutionsUserListSubTabs.institutions = false;\n                            angular.copy($scope.user, $scope.newUser);\n                            $scope.selectedUserId = $scope.user.id;\n                        }\n                        //reset personalDetailsForm\n                        controller.resetPersonalDetailsForm();\n                    }\n\n                    if (success && $scope.user.contactTypes) {\n                        InstitutionsUsersListService.getContactTypes().then(function(contactTypesList) {\n                            if (!contactTypesList) {\n                                return false;\n                            }\n                            var contactTypeNames = [],\n                                contactTypeName = null;\n\n                            for (var contactType in $scope.user.contactTypes) {\n                                if ($scope.user.contactTypes[contactType].assigned) {\n                                    contactTypeName = UsersListService.getContactTypeNameByHandle(\n                                        contactType, contactTypesList\n                                    );\n                                    contactTypeNames.push(contactTypeName);\n                                }\n                            }\n                            $scope.user.contactTypesAsString = contactTypeNames.join(', ');\n                        });\n                    }\n                    if (success) {\n                        delete $scope.user.password;\n                        // update original user object with changes\n                        $scope.userBeforeChanges = angular.copy($scope.user);\n                        // reload  datagrid\n                        controller.reloadDatagrid();\n                    }\n                    $scope.personalDetailsSubmitInProgress = false;\n                    NotifierFactory.show(\n                        success ? 'success' : 'error',\n                        success ? 'Saved successfully!' : 'Saving failed!',\n                        message\n                    );\n\n\n                }\n            });\n        };\n\n        $scope.handlePermissionsSubmit = function () {\n            $scope.permissionsSubmitInProgress = true;\n            InstitutionsUsersListService.savePermissions($scope.user).then(function (success) {\n                $scope.permissionsSubmitInProgress = false;\n                $scope.userBeforeChanges = angular.copy($scope.user);\n                controller.rolesBeforeChanges = [];\n                for (var role in $scope.user.roles) {\n                    if ($scope.user.roles[role]) {\n                        controller.rolesBeforeChanges[role] = true;\n                    }\n                }\n                if (success) {\n                    controller.updateInDatagrid($scope.user);\n                }\n                NotifierFactory.show(\n                    success ? 'success' : 'error',\n                    success ? 'Saved successfully!' : 'Saving failed!',\n                    'Permissions'\n                );\n            });\n        };\n\n        $scope.handlePrimaryContactTypeClick = function (handle) {\n            $scope.user.contactTypes[handle].assigned = true;\n        };\n\n        $scope.handleContactTypeClick = function (handle) {\n            if ($scope.user.contactTypes[handle] &&\n                $scope.user.contactTypes[handle].primary &&\n                !$scope.user.contactTypes[handle].assigned\n            ) {\n                $scope.user.contactTypes[handle].primary = false;\n            }\n        };\n\n        $scope.handleAssignedContactTypeClick = function (handle) {\n            if ($scope.user.contactTypes[handle].assigned === false) {\n                $scope.user.contactTypes[handle].primary = false;\n            }\n        };\n\n        $scope.handleRoleClick = function (clickedRole) {\n            if ($scope.user.roles.custom || typeof clickedRole === 'undefined') {\n                return;\n            }\n\n            $scope.user.accessTo = {};\n            var clickedRoleAssigned = $scope.user.roles[clickedRole.roleHandle],\n                parentRoleClicked = clickedRole.all,\n                childrenRolesHandles = UsersListService.getChildrenRoles(clickedRole.groupHandle, controller.rolesList),\n                parentRoleHandle = null;\n\n            // if role is assigned\n            if (clickedRoleAssigned) {\n                // if its parent role\n                if (parentRoleClicked) {\n                    // assign children roles to a user\n                    if (childrenRolesHandles) {\n                        angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                            $scope.user.roles[childrenRoleHandle] = true;\n                        });\n                    }\n                } else {\n                    if (childrenRolesHandles) {\n                        // Select parent if all children were selected\n                        var allDepartments = true;\n                        angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                            if ($scope.user.roles[childrenRoleHandle] === false ||\n                                $scope.user.roles[childrenRoleHandle] === undefined\n                            ) {\n                                allDepartments = false;\n                                return;\n                            }\n                        });\n                        if (allDepartments) {\n                            parentRoleHandle = UsersListService.getParentRoleHandle(clickedRole.groupHandle, controller.rolesList);\n                            if (parentRoleHandle) {\n                                $scope.user.roles[parentRoleHandle] = true;\n                            }\n                        }\n                    }\n                }\n            } else {\n                if (!parentRoleClicked) {\n                    // Uncheck parent if it was selected when unselecting one children\n                    parentRoleHandle = UsersListService.getParentRoleHandle(clickedRole.groupHandle, controller.rolesList);\n                    if (parentRoleHandle) {\n                        $scope.user.roles[parentRoleHandle] = false;\n                    }\n                } else {\n                    // check if all children where selected to select the parent\n                    if (childrenRolesHandles) {\n                        angular.forEach(childrenRolesHandles, function (childrenRoleHandle) {\n                            $scope.user.roles[childrenRoleHandle] = false;\n                        });\n                    }\n                }\n            }\n            // Update sections and pages based on the new roles\n            $scope.user = UsersListService.updateSectionsAndPages($scope.user, controller.rolesList);\n        };\n\n        $scope.activateCustomRole = function () {\n            if (!angular.isDefined($scope.user.roles)) {\n                $scope.user.roles = {};\n            }\n            $scope.user.roles.custom = true;\n        };\n\n        /**\n         * Actions to do when column is clicked under visible columns dropdown.\n         */\n        $scope.handleColumnClick = function () {\n            var columnsVisibility = {};\n            angular.forEach($scope.columns, function (column) {\n                columnsVisibility[column.field] = column.show;\n            });\n            InstitutionsUsersListService.storeColumnsVisibility(columnsVisibility);\n        };\n\n        controller.handleAddInstitutionsUserClick = function () {\n            controller.resetPersonalDetailsForm();\n            $scope.selectedUserId = null;\n            $scope.user = {};\n            InstitutionsUsersListFactory.resetActiveUserId();\n            // set personal details tab as active\n            $scope.activeTab = 0;\n            $scope.disabledInstitutionsUserListSubTabs.permissions = true;\n            $scope.disabledInstitutionsUserListSubTabs.institutions = true;\n            // trigger edit mode\n            controller.toggleColumns(true);\n            $scope.showInfoBlock = true;\n        };\n        controller.resetPersonalDetailsForm = function () {\n            //reset personalDetailsForm\n            if ($scope.forms.personalDetailsForm) {\n                $scope.forms.personalDetailsForm.$setPristine();\n            }\n        };\n\n        controller.handleEditCloseClick = function () {\n            controller.toggleColumns(false);\n            $scope.showInfoBlock = false;\n            $scope.selectedUserId = null;\n            $scope.activeTab = 0;\n            $scope.filterActive = true;\n        };\n\n        /**\n         * Apply datagrid columns visibility from browser cache.\n         */\n        controller.loadDatagridColumnsVisibility = function () {\n            var columnsVisibility = InstitutionsUsersListService.getColumnsVisibility();\n            if (columnsVisibility) {\n                angular.forEach($scope.columns, function (column) {\n                    if (columnsVisibility[column.field] !== 'undefined') {\n                        column.show = columnsVisibility[column.field] ? true : false;\n                    }\n                });\n            }\n        };\n\n        controller.reloadDatagrid = function () {\n            controller.getPage();\n        };\n\n        controller.getPage = function() {\n            controller.isDatagridReloading = true;\n            return InstitutionsUsersListService.getAllUsers(\n                angular.merge({}, controller.paginationOptions, controller.defaultPaginationOptions, $scope.filters)\n            ).then(function(response) {\n                controller.grid.options.totalItems = response.totalMatching;\n                controller.grid.options.data = response.results;\n                controller.grid.options.minRowsToShow = response.totalFiltered;\n                controller.isDatagridReloading = false;\n                controller.showDatagrid = true;\n            });\n        };\n\n        controller.reloadDatagrid = function () {\n            controller.getPage();\n        };\n\n        controller.initDataGridOptions = function () {\n            var selectTemplate = '/scripts/shared/ui-grid/templates/selectFilterHeaderTemplate.html',\n                selectCellTemplate = '/scripts/shared/ui-grid/templates/selectCellTemplate.html',\n                dateCellTemplate = '/scripts/shared/ui-grid/templates/dateCellTemplate.html';\n            controller.grid.options = {\n                data: [],\n                enableSorting: true,\n                exporterMenuCsv: false,\n                enableGridMenu: true,\n                showGridFooter: false,\n                selectedItems: $scope.selectedUserId,\n                enableFiltering: true,\n                enableColumnResize: true,\n                enableFullRowSelection: true,\n                enableRowSelection: true,\n                multiSelect: false,\n                enableRowHeaderSelection: false,\n                paginationPageSizes: [constants.datagrid.contacts.defaultRowsNumber, 50, 100],\n                paginationPageSize: constants.datagrid.contacts.defaultRowsNumber,\n                useExternalPagination: true,\n                useExternalSorting: true,\n                useExternalFiltering: true,\n                rowTemplate: '/scripts/components/users/list/institutions/datagrid/rowTemplate.html',\n                columnDefs: [\n                    {\n                        displayName: 'Email',\n                        field: 'email',\n                        visible: true, //GridService.getVisibilityByField(controller.columnsVisibility, 'email', true),\n                        cellFilter: 'lowercase',\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'email', '')\n                        }\n                    },\n                    {\n                        displayName: 'Fullname',\n                        field: 'fullname',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'fullname', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'fullname', '')\n                        }\n                    },\n                    {\n                        displayName: 'Position',\n                        field: 'position',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'position', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'position', '')\n                        }\n                    },\n                    {\n                        displayName: 'Phone',\n                        field: 'phone',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'phone', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'phone', '')\n                        }\n                    },\n                    {\n                        displayName: 'Primary Institution Core Id',\n                        field: 'primaryInstitutionCoreIdAsString',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'primaryInstitutionCoreIdAsString', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'primaryInstitutionCoreIdAsString', '')\n                        }\n                    },\n                    {\n                        displayName: 'Primary Institution',\n                        field: 'primaryInstitutionName',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'primaryInstitutionName', true),\n                        filter: {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'primaryInstitutionName', '')\n                        }\n                    },\n                    {\n                        displayName: 'Contact Types',\n                        filter: {\n                            type: uiGridConstants.filter.SELECT,\n                            selectOptions: controller.contactTypesList,\n                            term: GridService.getFilterByField(controller.paginationOptions, 'contactTypes.handle', null)\n                        },\n                        field: 'contactTypesAsString',\n                        maxWidth: 130,\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'contactTypes.handle', true),\n                        filterHeaderTemplate: selectTemplate\n                    },\n                    {\n                        displayName: 'Last Login',\n                        field: 'lastLoginAt',\n                        filterCellFiltered: true,\n                        filters:[\n                            {\n                                visible: true,\n                                condition: uiGridConstants.filter.GREATER_THAN\n                            },\n                            {\n                                condition: uiGridConstants.filter.LESS_THAN\n                            }\n                        ],\n                        filter : {\n                            term: GridService.getFilterByField(controller.paginationOptions, 'lastLoginAt', ''),\n                            applyTextFilter: controller.applyDateFilter('lastLoginAt', '')\n                        },\n                        cellTemplate: dateCellTemplate,\n                        filterHeaderTemplate: '/scripts/components/users/list/institutions/datagrid/dateFilterHeaderTemplate.html',\n                        visible: GridService.getVisibilityByField(controller.columnsVisibility, 'lastLoginAt', true)\n                    }\n                ],\n                onRegisterApi : function (gridApi) {\n                    $scope.gridApi = gridApi;\n                    gridApi.selection.on.rowSelectionChanged($scope, function (row) {\n                        $scope.handleDatagridRowClick(row.entity);\n                    });\n                    gridApi.core.on.rowsRendered($scope, function () {\n                        controller.isDatagridRendered = true;\n                    });\n                    gridApi.core.on.filterChanged($scope, controller.handleGridFiltersChanges);\n                    gridApi.core.on.rowsVisibleChanged($scope, controller.handleGridVisibleChanges);\n\n                    gridApi.pagination.on.paginationChanged($scope, function (newPage, limit) {\n                        controller.defaultPaginationOptions.page = newPage;\n                        controller.defaultPaginationOptions.limit = limit;\n                        controller.getPage();\n                    });\n                    $scope.gridApi.core.on.sortChanged($scope, controller.handleGridFiltersChanges);\n                }\n            };\n            // This is needed to add 'x' icon in date field when prepopulating dates\n            var lastLogin = GridService.getFilterByField(controller.paginationOptions, 'lastLoginAt', '');\n            if (lastLogin !== null && controller.paginationOptions[\"filter[lastLoginAt]\"] !== null) {\n                if (angular.isDefined(lastLogin) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"]) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"].startDate) &&\n                    angular.isDefined(controller.paginationOptions[\"filter[lastLoginAt]\"].endDate)\n                ) {\n                    controller.grid.options.columnDefs[7].filters[0].term = controller.paginationOptions[\"filter[lastLoginAt]\"].startDate;\n                    controller.grid.options.columnDefs[7].filters[1].term = controller.paginationOptions[\"filter[lastLoginAt]\"].endDate;\n                }\n            }\n        };\n\n        /**\n         * Populates input text field for date field\n         *\n         * @param {string} filterName\n         * @param {mixed} defaultValue\n         */\n        controller.applyDateFilter = function (filterName, defaultValue) {\n            var filter = GridService.getFilterByField(controller.paginationOptions, filterName, defaultValue);\n            if (angular.isDefined(filter) &&\n                filter !== null\n            ) {\n                if (angular.isDefined(filter.startDate) &&\n                    angular.isDefined(filter.endDate)\n                ) {\n                    if (filter.startDate !== null &&\n                        filter.startDate !== null\n                    ) {\n                        controller.defaultFilters.lastLoginAtRange = {\n                            startDate: parseInt(filter.startDate, 10),\n                            endDate: parseInt(filter.endDate, 10)\n                        };\n                    } else {\n                        controller.defaultFilters.lastLoginAtRange = {\n                            startDate: null,\n                            endDate: null\n                        };\n                    }\n                }\n            }\n        };\n\n        controller.initDataGrid = function () {\n            controller.getPage().then(function() {\n                InstitutionsUsersListService.getContactTypesFilter().then(function (options) {\n                    var list = [];\n                    angular.forEach(options, function (option) {\n                        list.push({\n                            value: option.id,\n                            label: option.title\n                        });\n                    });\n                    controller.grid.options.columnDefs[6].filter.selectOptions = list;\n                });\n            });\n        };\n\n        controller.convertVisibleColumnsField = function (value) {\n            switch (value) {\n                case 'contactTypesAsString':\n                    return 'contactTypes.handle';\n                default:\n                    return value;\n            }\n        };        \n\n        controller.isValidFirstName = function () {\n            return PasswordService.isValidFirstName($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.isValidLastName = function () {\n            return PasswordService.isValidLastName($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.isValidEmail = function () {\n            return PasswordService.isValidEmail($scope.forms.personalDetailsForm, $scope.user);\n        };\n\n        controller.setValid = function (fieldName) {\n            return PasswordService.setValid($scope.forms.personalDetailsForm, fieldName);\n        };\n\n        controller.initWatches = function () {\n            // listen to active institution changes\n            WatchService.create($scope,\n                InstitutionsUsersFactory.getRequestFilters,\n                function (filters) {\n                    if (filters) {\n                        $scope.filters = angular.extend({}, controller.defaultFilters, filters);\n                        // reset request filters\n                        InstitutionsUsersFactory.resetRequestFilters();\n                        // initialise datagrid\n                        controller.getPage();\n                    }\n                }\n            );\n\n            // listen to active profile tab changes\n            WatchService.create($scope, 'activeTab', function (newValue) {\n                InstitutionsUsersListFactory.setSelectedTabId(newValue);\n            });\n\n            $scope.$on(constants.events.institutionsUserPrimaryInstitutionChanges, function () {\n                $scope.userBeforeChanges = angular.copy($scope.user);\n                controller.updateInDatagrid($scope.user);\n            });\n        };\n\n        /**\n         * Class constructor.\n         */\n        controller.$onInit = function () {\n            controller.initDataGridOptions();\n            controller.initWatches();\n            controller.loadDatagridColumnsVisibility();\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .controller('InstitutionsUsersListCloneController', [\n            '$scope',\n            '$resource',\n            '$timeout',\n            'constants',\n            'uiGridConstants',\n            'InstitutionsUsersListService',\n            'UsersListService',\n            'NotifierFactory',\n            'InstitutionsUsersListFactory',\n            'InstitutionsUsersFactory',\n            'WatchService',\n            'UserTypesService',\n            'PasswordService',\n            'UiGridService',\n            'UserFactory',\n            App.controllers.institutionsUsersListClone\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services: {}});\n\n    App.services.Password = function (\n        $resource,\n        $log,\n        constants\n    ) {\n        var service = {};\n\n        service.getPasswordModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/password-reset/:requestId', null, {\n                update:  { method: 'PATCH' }\n            });\n        };\n\n        service.create = function (email) {\n            var CreateModel = service.getPasswordModel();\n            return CreateModel.save(\n                {email: email}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.update = function (id, password) {\n            var CreateModel = service.getPasswordModel();\n            return CreateModel.update(\n                {requestId: id},\n                {password: password}\n            ).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return false;\n            });\n        };\n\n        service.getPasswordValidator = function () {\n            return [\n                {name: 'Minimum 8 characters', status: false}, // 0\n                {name: 'Maximum 32 characters', status: false}, // 1\n                {name: 'Lowercase letter (a-z)', status: false}, // 2\n                {name: 'Uppercase letter (A-Z)', status: false}, // 3\n                {name: 'Number (0-9)', status: false}, // 4\n                {name: 'Special characters', status: false}, // 5\n                {name: 'Both passwords match', status: false} // 6\n            ];\n        };\n\n        service.validatePassword = function (password) {\n            if (!angular.isDefined(password) || password === null) {\n                return false;\n            }\n            var validationItems = service.getPasswordValidator().splice(\n                0, service.getPasswordValidator().length - 1\n            ), pattern = null;\n            // 0\n            if (password.length > 7\n            ) {\n                validationItems[0].status = true;\n            }\n            // 1\n            if (password.length < 33 &&\n                password.length > 0\n            ) {\n                validationItems[1].status = true;\n            }\n            // 2\n            pattern = new RegExp(/(?=.*?[a-z])/);\n            if (pattern.test(password)\n            ) {\n                validationItems[2].status = true;\n            }\n            // 3\n            pattern = new RegExp(/(?=.*?[A-Z])/);\n            if (pattern.test(password)\n            ) {\n                validationItems[3].status = true;\n            }\n            // 4\n            pattern = new RegExp(/(?=.*?[0-9])/);\n            if (pattern.test(password)\n            ) {\n                validationItems[4].status = true;\n            }\n            // 5\n            pattern = new RegExp(/(?=.*?[\\s\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\£\\¬\\€])/);\n            if (pattern.test(password)\n            ) {\n                validationItems[5].status = true;\n            }\n\n            return validationItems;\n        };\n\n        service.isPasswordValid = function (password) {\n            if (angular.isUndefined(password) || password === null || password.length === 0) {\n                return false;\n            }\n            var validationItems = service.validatePassword(password), invalidCount = 0;\n            angular.forEach(validationItems, function (item) {\n                if (!item.status) {\n                    invalidCount++;\n                }\n            });\n\n            return invalidCount === 0;\n        };\n        \n        /**\n         * Sets has errors flag.\n         *\n         * @param {boolean} hasErrors\n         */\n        service.setHasErrors = function (hasErrors) {\n            service.hasErrors = hasErrors;\n        };\n\n        /**\n         * Gets has errors flag.\n         *\n         * @returns {boolean|*}\n         */\n        service.getHasErrors = function () {\n            return service.hasErrors;\n        };\n\n        function isNotEmpty (form, userObj, fieldName) {\n            return !!(\n                form &&\n                (\n                    form.$pristine ||\n                    (form[fieldName] && form[fieldName].$pristine)\n                ) ||\n                (userObj && userObj[fieldName] && userObj[fieldName].trim().length)\n            );\n        }\n\n        service.isValidFirstName = function (form, userObj, fieldName) {\n            fieldName = fieldName || 'firstname';\n            return isNotEmpty(form, userObj, fieldName);\n        };\n\n        service.isValidLastName = function (form, userObj, fieldName) {\n            fieldName = fieldName || 'lastname';\n            return isNotEmpty(form, userObj, fieldName);\n        };\n\n        service.isValidEmail = function (form, userObj) {\n            return isNotEmpty(form, userObj, 'email');\n        };\n\n        service.isValid = function (form, userObj) {\n            return service.isValidFirstName(form, userObj) &&\n                service.isValidLastName(form, userObj) &&\n                service.isValidEmail(form, userObj);\n        };\n\n        service.setValid = function (form, fieldName) {\n            if (fieldName) {\n                if (form && form[fieldName]) {\n                    form[fieldName].$setPristine();\n                }\n            } else {\n                form.$setPristine();\n            }\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('PasswordService', [\n            '$resource',\n            '$log',\n            'constants',\n            App.services.Password\n        ]);\n\n}(window.angular));\n\n(function(angular, socketIo) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {services:{}});\n\n    App.services.WebSockets = function ($rootScope, constants) {\n        var service = this,\n            subscribeEvent = 'subscribe',\n            hostname = constants.webSockets.host,\n            socket;\n        if (constants.webSockets.port && !isNaN(constants.webSockets.port)) {\n            hostname += ':' + constants.webSockets.port ;\n        }\n        socket = socketIo.connect(hostname);\n\n        /**\n         * Listen to event messages.\n         *\n         * @param {String} eventName\n         * @param {Function|null} callback\n         */\n        service.listen = function (eventName, callback) {\n            socket.on(eventName, function () {\n                if (callback) {\n                    var args = arguments;\n                    $rootScope.$apply(function () {\n                        callback.apply(socket, args);\n                    });\n                }\n            });\n        };\n\n        /**\n         * Send event message.\n         *\n         * @param {String} eventName\n         * @param {mixed} data\n         * @param {Function|null} callback\n         */\n        service.send =  function (eventName, data, callback) {\n            socket.emit(eventName, data, function () {\n                if (callback) {\n                    var args = arguments;\n                    $rootScope.$apply(function () {\n                        callback.apply(socket, args);\n                    });\n                }\n            });\n        };\n\n        /**\n         * Subscribe to a room.\n         *\n         * @param {String} room\n         * @param {String|null} eventName\n         * @param {Function|null} callback\n         */\n        service.subscribe = function (room, eventName, callback) {\n            service.send(subscribeEvent, room);\n            if (eventName) {\n                service.listen(eventName, callback);\n            }\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .factory('WebSocketsService', ['$rootScope', 'constants', App.services.WebSockets]);\n\n}(window.angular, io));\n(function(angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {controllers:{}});\n\n    App.controllers.masterPassword = function (\n        $interval,\n        MasterPasswordService\n    ) {\n        var controller = this,\n            timer;\n\n        controller.masterPassword = {\n            loaded: false, // master password was retrieved\n            ttl: 0, // master password time to live\n            enabled: false,\n            success: false,\n            expired: false,\n            password: null,\n            from: null,\n            to: null,\n            currentDate: new Date().getTime()\n        };\n\n        controller.timeLeftPercentage = function () {\n            return controller.isExpired() ? 0 : Math.round(\n                controller.secondsLeft() * 100 / controller.masterPassword.ttl\n            );\n        };\n\n        controller.getTime = function () {\n            return MasterPasswordService.getTime();\n        };\n\n        controller.secondsLeft = function () {\n            return !controller.masterPassword.to ? null : controller.masterPassword.to - controller.getTime();\n        };\n\n        controller.isExpired = function () {\n            return controller.secondsLeft() <= 0;\n        };\n\n        controller.getMasterPasswordCallback = function (response) {\n            controller.masterPassword.loaded = true;\n            if (\n                response &&\n                response.hasOwnProperty('password') &&\n                response.hasOwnProperty('createdAt') &&\n                response.hasOwnProperty('enabled') &&\n                response.hasOwnProperty('ttl')\n            ) {\n                controller.masterPassword.password = atob(response.password);\n                controller.masterPassword.enabled = response.enabled;\n                controller.masterPassword.ttl = response.ttl * 1000;\n                controller.masterPassword.from = new Date(response.createdAt);\n                controller.masterPassword.to = new Date(response.createdAt + controller.masterPassword.ttl);\n                controller.masterPassword.success = true;\n                controller.initTimers();\n            }\n        };\n\n        controller.updateTime = function () {\n            if (controller.isExpired()) {\n                $interval.cancel(timer);\n            }\n        };\n\n        controller.initTimers = function () {\n            if (!controller.isExpired()) {\n                // force view digest for timers to get updated\n                timer = $interval(controller.updateTime, 1000);\n            }\n        };\n\n        controller.getMasterPassword = function () {\n            // get master password data from API\n            MasterPasswordService.get().then(controller.getMasterPasswordCallback);\n        };\n\n        controller.init = function () {\n            controller.getMasterPassword();\n        };\n\n        controller.init();\n    };\n\n    angular\n        .module('qsHub')\n        .controller('MasterPasswordController', [\n            '$interval',\n            'MasterPasswordService',\n            App.controllers.masterPassword\n        ]);\n\n}(window.angular));\n\n(function (angular) {\n    \"use strict\";\n\n    var App = App || {};\n    App = angular.extend({}, App, {services: {}});\n\n    App.services.MasterPassword = function (\n        $resource,\n        $log,\n        constants\n    ) {\n        var service = {};\n\n        service.getMasterPasswordModel = function () {\n            return $resource(constants.api.usersPermissions.url + '/v1/master-password');\n        };\n\n        service.getTime = function () {\n            return new Date().getTime();\n        };\n\n        service.get = function () {\n            return service.getMasterPasswordModel().get({\n                'limit': 1\n            }).$promise.then(function (data) {\n                if (constants.dev) {\n                    $log.log('success, got data: ', data);\n                }\n                return data;\n            }, function (error) {\n                //@todo log error\n                if (constants.dev) {\n                    $log.log('request failed' + error);\n                }\n                return [];\n            });\n        };\n\n        return service;\n    };\n\n    angular\n        .module('qsHub')\n        .service('MasterPasswordService', [\n            '$resource',\n            '$log',\n            'constants',\n            App.services.MasterPassword\n        ]);\n\n}(window.angular));\n\n(function(angular) {\n    'use strict';\n\n    var App = App || {};\n    App = angular.extend({}, App, {directives:{}});\n\n    App.directives.selectOnClick = function ($window) {\n        return {\n            restrict: 'A',\n            link: function (scope, element) {\n                element.on('click', function () {\n                    if (!$window.getSelection().toString() && element[0].type === 'text') {\n                        this.setSelectionRange(0, this.value.length);\n                    }\n                });\n            }\n        };\n    };\n\n    angular\n        .module('qsHub')\n        .directive('selectOnClick', ['$window', App.directives.selectOnClick]);\n\n}(window.angular));\n"]}